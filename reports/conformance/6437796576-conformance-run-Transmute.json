{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5d41ad1c-e0f0-4648-b14d-71bb3f6a6f49",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45ff1362-76af-4858-917d-569acd8892fe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3dc96771-3861-42b2-b35c-270939b4b6a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6aae633-8db0-4fe3-be9e-bad22b72373c"
                }
              }
            ]
          },
          {
            "id": "623d7275-5297-49fe-ad83-286236c4f89f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dee07ecc-cb5a-43b3-b5b1-52ce2f29f155",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fb3f15dc-f629-41bf-a92c-4329fff6f481"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4f9283d8-2727-4110-9cc7-4addf6c2be70",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a8480a8f-2ead-4303-9cfb-f76194ee8b7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c4a4285-b16d-4451-93ad-8f698399f430",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d9d0a6b-5920-46ec-90c1-5f6cd85537e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04998e5f-7e39-44f2-bdf1-53a048f50a76"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55fc45c4-9aef-47ec-b284-4cdc7e19046b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a7ccb0e-4f8d-487b-a9c0-457aeaec8068"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c1bc642-cf44-4f9d-b335-47aabf4be0c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42d139f8-b1d9-421a-ba50-ffe5ea3fbee2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "237a1e7c-314d-4906-8677-b577ef195bdd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "302ab782-640e-4e4c-a238-efbb9d0bdc20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20c3c7dd-c678-4b88-aaf5-99e934e05137",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fde571a-304b-49c7-92a6-f24d274a7d76"
            }
          }
        ]
      },
      {
        "id": "718868c6-31a7-4e6b-8e7f-90c4ae5b3c3a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2e03400b-5bee-4bd3-b05e-4d9d2b097de6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6000c4a3-fae1-4b52-998c-5a2fdf523cce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e2628bd-c608-4814-9725-526538a91137",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec65905-8cbe-4466-8fe7-3c78ac8a24e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c5f8d28-57ab-4395-a16c-5f040aeace87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a84c6f-3abe-4575-93a5-a7be9a040e3c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba20f94-7055-4b11-a8d0-5a7a9134545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e69f010a-5ddb-4497-b853-abf540664c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001bc739-dc29-4913-b237-add399c1fc4e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5140f631-e13a-4342-a2f5-4fc788153f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79498830-258e-4b2a-b3a1-2124465dfa78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08917877-b32d-4970-b41c-e5c7c5eb64db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b426acc6-e828-4b95-b2de-d29e8789a063",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d388a1d-3f0d-4c94-ba01-e7bf4f05ea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c67da66d-3694-4618-9dcd-4143c361ed5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954f8ea-f4d4-46bb-8589-4161821160ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e441db90-0111-4bbe-835c-d2ddbfd0771b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c473dee-9c02-481f-ab8b-48b664c94dbe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffbcf7d3-2caa-4a5d-a1ac-54b34a356b93",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7645ec9a-e209-4ca6-b266-83c9784aa38d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "02104e33-9d76-4280-856d-45d8fd76bcbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e853740-265c-4d3b-b1db-ebf88881273f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "56441cfc-aeb8-4ea1-8565-ae27768f6d48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "275221ea-d535-40c4-be10-643b40a16a1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1573242-6d56-46a2-b3c6-957c7333437a"
            }
          }
        ]
      },
      {
        "id": "e32c14cf-c204-4592-9ee6-c5bb90328582",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9bf26590-a37e-4f81-96aa-17823636d3c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c023ff4d-9888-43f9-a4c0-c2cd138de1ec",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5c01ac44-74a9-4c96-84ec-6f2403280a63",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af8897e-9df4-4896-a37d-3b23feb3575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee3db2d-c7ae-4b5a-aacb-34c631153c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a4396a-defd-4640-afd8-fb2419949437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445f8a33-78a1-4573-b613-684e463c3f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74c9077-5a57-4542-bc41-9d206d485543",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a759f-083b-4ecf-b284-f4a5348cc185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8aa7730-0a10-4c44-a5d4-909879be4492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaad136d-ced6-44bd-87f3-9d2e4c6d76ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0dba2a1-c0db-4ac2-87ce-349853db5b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257315b5-9895-4627-bf53-21d1b008e778",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446d6457-0b67-4851-9e88-eecd766c2309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64a88ae-9452-474b-9e9d-e7ba6712c2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acde7748-b0ae-4173-b111-511d11c4f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67450d2e-fb31-4f49-ad81-a3c81ad75690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a2cd1-9a4a-4c7a-a6a3-c46c79da4504",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9149f201-a2d7-416e-923e-0bfca61fb8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f67eaf-b413-427b-b84e-dadd841a39c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a45ee9-e7b8-41e7-9585-0ff2867daf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f464a526-ee07-4299-b07b-c83b921e2582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec9cbd6-3078-479d-9c52-1dc27d82282d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da8ff71-d693-485f-a98a-a84648add87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1455ed-512b-4355-91da-d57952cf8d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea85d42c-9d65-4198-9c27-050bb7ffbb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b71032e0-fb05-47f2-b3ec-9468e610fee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca88115-9256-4ede-bcd7-9e1839bcf15b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b61dfe5-668d-43ca-b0ce-385be94c90a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326f8e96-f7a7-4001-9431-5c6ef5d47480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fa114a-218b-4b91-ac0a-d4227d4fce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "078a5569-2fb0-402e-9db5-337fc1d87fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01615ee7-6937-4e07-99c8-1d3a04bf7061",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371cdae-8942-43a3-a525-d7cbb3804f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00585bef-8f61-4067-b9c5-eaaace379183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e55108-6d2c-4426-bc11-802519220bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d9f9a2d-035d-4ec6-b0cc-c34149734494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb878b8a-f991-42f3-bbe9-066ecfba4088",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae06573-347f-4954-91c4-4ca0821b6a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f286fe3e-ee40-463d-ab24-b53fb6be72c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae0aa6-e370-4e4c-93aa-23db24e9a759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a131a9a1-f10b-44d0-a76c-b29246da28f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cfe8b0-93b5-4f6e-b5fc-38816b89b8ee",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2b825b-4d88-4809-ae23-9088db720388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0de6685-b3ac-4e3c-89f3-38a35523db76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca8375-263e-4afa-90a0-0e87cb7cb89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fbecda8-f215-42a7-98ec-da1cb15f61af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cdc3bd-b8e1-4c2b-8e97-f27dff03d033",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72764e3f-e523-44fa-837d-74f11a714a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ce4833-e17f-47e9-99e3-5ae0e92f9390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd77645-8b47-440b-8e2c-f6924815d5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5397e582-0771-4f28-9574-540f2ab2a221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc538ace-bbbd-4bbf-a5fc-084f3980cb98",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6eff3f-53ed-4634-bf58-6bc395140479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03832df-b781-4f33-8906-0e6c2f23debc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df92f1e-4605-46d3-a98e-d0de84364828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c87a3ce-f03f-4f00-9919-377d33055806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47a95ca-fc07-4e7c-af75-00a1de6b5f42",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9199f1fc-73c5-419d-b3c0-de52fcc7ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636d3c5c-162c-4596-a8ae-63c843c99f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bdb6bf-2f9a-4731-ace9-7e841e6dc947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1601fbdc-ab6c-461e-8771-1ae51f7192bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e428976-2f17-4660-9817-52c4f5776328",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18672733-fc17-4637-ae0d-16f27db7444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37889dc0-ab84-4399-b074-95efc853c2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2b1a93-75ae-4fc2-8ad0-64965bf56fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be0cf8d0-6d26-4de0-bf3e-e04ce973de90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a549ec-01ff-40c3-a3d8-3692abcd304c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5429175f-96f2-4f98-b7bf-c41c674b5e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38f7709-0a77-4076-a216-58041fe0cad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da839af-fdb6-44bb-a9bd-081cbe4c6083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "707cb6ef-bd04-4f55-8d5e-21dbb024bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd38f203-a725-45f2-9ec2-b7768fcbac15",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad79dbcd-f1eb-47b2-983c-50a297b2a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f40ca1-a9c0-4b42-9a59-0ec4cfc3c45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53706804-2767-4a64-b0ae-3a08df9f67d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f61d291-8ca1-4993-8428-16f54923b65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64157e0f-2d6d-4d58-be8f-ba8e54d771a7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f393204-fb9c-4c48-91db-57c7cb1604ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f5d149-9fde-4f64-a677-50e247bc5b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a2bb5-de5c-483b-a571-3697049864b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b521d275-b257-41af-a9c0-0ddb393aefa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc94cd0-1130-4f77-9e82-a1542aa84217",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a10ff2-204b-41b6-9293-10c6b14cea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7400181-bb42-4bd0-b8f7-5074fc2e37ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384fa515-48fd-4e6c-83fb-714a6ed4e244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8f8d467-fe4b-4626-a332-1be979d21cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0b519e-c87f-48cf-8717-e0b2c636b156",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3230ae-b619-475e-ac7f-e4a762211c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b7ad97-0bb3-4c8a-9167-e08f93765c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af33de1-17bb-46ca-8100-546d42b444b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "212ba49c-1b99-4a38-adaa-9c1a1753b41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46722e02-e06f-4a45-b027-21e7cda32e76",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f03453-eb2b-405a-995d-df4f4cab85a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5610e3e-928f-4919-963e-7bbee26233a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25604fc-454a-4214-9010-9fd75c9630fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5f3adb-57ff-4322-a104-c153b4866630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59051ace-abe9-4787-99f1-5984560d0e7d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6c8312-b34c-4c67-a77c-ad6463a3f638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc657e6-fff5-4ff4-b2c3-c609f345fa6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e16a02-86d5-49d1-b013-1237712fa147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "275f90dc-f252-4540-aae0-85d1cd7cc552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fd7f95-3ec8-431c-8699-c32d5ad288f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd7be17-a8e9-4592-b065-8659beb375a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdc3dfc-63af-4451-a2b8-7766b1dc717a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a09dc-c640-4e5c-84f7-b643b2cdb4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b08847f-ec53-4205-9f61-5fa596bf2b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3faf17-d8fa-48b1-9a65-415e2c0181ad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c563a97a-2804-477f-b795-392e01b03f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca6ed07-8952-4aad-9f82-c062eb4b18b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a3b611-8fbe-4a0c-9b8d-d5ffdc59fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f820ce-d5e3-47ad-97af-11abf506b4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adf69e5-3450-4897-8ca8-315367c271b1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1548f8b8-c45c-40bc-9794-e8bd2ddba809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bd9e16-b321-448c-a710-fe8b682d4c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef19f174-2c2a-4f6c-9f0a-15af5e9bbba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b90456f8-6850-4ab0-a7eb-5de977c86c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382c3957-9d11-4846-8e12-12026dca1d16",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ddef88-288e-4fe1-8527-9684d8f982e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c2835c-a5bf-4187-8ab1-2f75ab94dab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dd1dc0-3110-4321-b6a6-8ca7cd3976f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6aad54-d413-46cd-87f8-1b14c5f35671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2865218-725c-4ba2-b452-1d659eee8dd2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab952a3-70a2-4dcd-977c-98ee0ca97e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ecd8c6-86d2-4810-a91f-d0afcb433a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9269ca2a-9519-423f-91f9-28c7a3c8b9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed82b041-9628-4188-8809-46444261ee7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219515e9-4b63-4cac-a65c-0fc6972a9507",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87af66b6-c50b-4b50-bd68-46468800ad98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cdeb43-2dac-4117-8b61-fed51c489a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6169ff89-ee4d-4ca5-a0af-d1602ba9cb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef2dad5-bcb3-4718-8709-da39b6b1a00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4c77de-0232-4f53-b413-c24a89a3a941",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bd88b9-24d6-4ca4-8081-1152755472f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acf0c59-43e5-4cc8-9850-29b874e43b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d2dd09-db05-4dd1-9f5b-1776e1c8b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b52d1e-ac51-4d04-aeba-1459db0743a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d680a9-6074-4858-8206-65354fad76fc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9308143-1adb-48d3-96b1-0bbfceb16e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610a0017-f065-46b8-aea7-c625c850b1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbed682-97f4-4f71-a87e-d416f0fd148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a90ba31a-ad0b-47a9-b036-50704ea9d9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f558ecd5-0b44-4ff6-8b95-197e069a5b65",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145121d1-1a95-4110-954a-55e4d0cb3621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9392a92-7633-4838-b0c7-edd32fc97037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff895fd8-48b7-4905-80fd-1696e40afa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "875fc059-95f7-40d5-a636-d780e6c85eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c0dd1a-67a9-4c0f-a86d-28cb7c8146e2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7b01e5-0c11-4d90-afdc-2c2ba42fa5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b628cd2-d640-44ce-9afe-8243422936f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7b8469-0633-4c56-b982-22980a426c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f13934-f2d2-4e0e-88b0-d972903f2603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94a3d84-5949-4a28-bdfa-ff8631587617",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72e95c-5a1a-4417-a424-adba41133da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae59d998-498a-488e-9392-cd413b1ab451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9681a5c7-adfa-4a1b-af28-370b3536dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf3bdfe-5575-4470-8a93-ed92d851b278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89a0762-2c8a-45ca-a35d-5363d507ab18",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775b1215-f663-4ce1-8582-c6871e1e6053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cc179c-be88-49a5-b73b-ec8e3aeae01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a816e5de-a542-4735-9495-e76750876d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "838a10da-b030-4245-be22-0286a047f6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c2d638-6e75-488d-b5d8-e9531511ecbb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c60312-536b-415c-9efd-164e92e2e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ddbaec-87f7-4734-b5cc-591417443ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2afa75f-a58e-40e8-b345-efdaa4d528cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7484c65-6dd6-44ef-9a22-99fba58e3b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9a099b-40c4-419d-ab8b-513dfe478be8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e440a584-447a-46d3-91b1-f1389ad9fee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c044dd8-0e77-4dda-ab6e-0c86cd8657bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafff2d7-ddd2-407c-b44c-c5e22c9a98ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8e3b0d-d7e7-4273-9d9e-f44f62250919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2891e70a-c858-4bb5-a8ad-2737e22606e7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3853ffed-0763-4d1c-b722-2b0b6ba9ab45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742bb24b-a4d5-44dc-99fa-6f377aa1a5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e137f732-7d9b-4160-a6e2-516ab438ac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6a1dde-b63f-4897-9487-9676774f9c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050abaf5-b5d6-4b21-8c06-789bd4587e36",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1068fe4c-2f1e-4c74-a371-fad261484282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "365727c4-bcf8-4f58-9c72-472d8646be7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700f5f78-29c4-418b-8de2-18e75ba3f6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43555492-1fed-49d5-a2f5-5eef41376aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d30ba-6f82-4241-946f-2f93e92e357d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3beff6-e12a-4fef-8421-3a021bb589b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd685b7-ecf2-4039-a5c3-2eb788dedb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927ee2f6-5f7e-4b67-93b7-5473f02e30ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12f7287b-0e90-4cff-b87e-59c34446af96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aecfcd-95e3-466b-82ee-8e49abc4086d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5668100d-3a52-423b-8849-f7c023174076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02624fa-f301-4c70-858f-9a6d121c2b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944f691d-0bfc-4f7c-bc80-03a621600c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "332ceb52-8f38-42da-95e9-0c46b6d7103d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b5363c-9359-4fbc-8e3e-6c7933913bf2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733e7e57-53bb-45f9-884b-071985a9067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5774371a-eeb9-42c7-a5fa-02785f8cbc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15972ef3-2166-48d1-8d53-9fa289a701b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d27017e3-56fc-45b9-855f-bc26f2e84cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f52f25-da8e-41e3-8b6c-e549630d5e11",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e668a14-bd3f-4e4b-a05c-0a307e3154fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9faf04b-eacc-4b48-8ed3-53664e89cbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab0accd-ac68-4a15-b480-e2e955572c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6be5274d-ae9f-4f1e-aeea-7f938d08851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca2ab91-783f-4468-ac3b-12e0ddca7a40",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7383a150-7ead-43c8-96c3-452e67ebd99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ec0aa3-a718-4100-ab95-928853823a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d649a786-12e7-437f-b874-29d94d6b5b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85c97512-ed3a-4e57-9846-03f543f58d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e173be0-360c-48b6-b093-f50e9ac1796e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7348673-d748-476c-abc4-bc20fc4dc08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47a29f3-67df-4697-87ec-d982f84b51a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b649287b-9f5e-455d-92c9-3e4b004bb41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3a57bc6b-1a4f-4b0c-9e9f-7a2a445d8b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f31aaa3-beb0-4a65-8a5c-04b9704bbe96",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc575869-99fa-4edd-8e9f-a32966ad79b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83274704-066b-489c-b639-404ff1331756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a74d6fc-f0b0-4db7-991d-835aca8fd21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65848a66-a5e3-45b4-81ba-fad3deed341c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535d68ad-1f72-4830-9a03-dd6765a9328e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1188222-573f-4ab5-ba1f-d0ac0ea568c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1a51aa-308f-451a-a3fc-02564e033b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ee663-1211-47ae-aab2-62663a4ea717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "70381f9e-a117-4b59-a290-f6aae0cf1ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640221a3-d233-47e3-b065-b771975a799b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcb3fb9-5467-4b46-b887-9912fbeb4098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a758f7-f27b-41f3-b3aa-feb564b91a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe3618c-a842-4036-b684-c5ebbd633603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1586b7c8-a8db-4296-b17c-6d695d28ced3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e414f9b-c5e4-4f5a-9cf2-3000de0a77ab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf7e942-6496-46dd-99e7-a6e894cea876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2035e5d7-575d-48af-a60c-6fb4b69671c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f25ac16-6a76-4ab4-8656-7d1030638ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bd12a2-b001-499c-8cdf-991757ce38be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146550ca-9810-4445-ab3e-2d6a85e766e2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f1447e-02e4-4b15-9a57-309637ec6342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e567f0-e9ac-4064-bc70-599812c458aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70458437-b00e-4ee6-a5e7-404f7940fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac397686-17e7-4d2f-888e-ba6479968e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0aebfc-4a6d-45bd-839c-b3f24c8529c5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622bf54f-f784-4efb-b520-148c5794d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed32e053-2276-49d9-88cb-ba51ecbf70cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de82d66-908f-4e7c-9122-6cacea44e8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "251e55dc-fda8-4759-895d-3151b7cfda49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d6a5c4-40b6-4d45-bced-0c6beade0fb6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638945c0-6934-467d-8c5a-583706bb72c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485647e4-12f8-410c-9bdb-3734bd35b912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac240eb0-e924-4011-bd95-9d3d3c40dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf72fa9-4fd1-45b5-96c8-ffe61259f913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62784326-63aa-43f4-9a71-c3f0017889b4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5971a667-da42-46d2-86c8-94737afeb34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41002b7b-5d50-445b-bdc4-b3f5e47850e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9185d9-00c0-41fe-b6cf-0660494bb79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c54ea369-0131-4d7f-a42f-272e2b07ed63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b5f830-3460-4519-9578-6fb64c6486ae",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae82b88-862a-4ae0-95f4-26d8777f7819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a765cafb-5098-4fcb-80fd-bb18fdf4cf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a2e386-f5e4-4d65-aa12-9ae8ffea60b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "38074a6f-5b4c-420c-8bc2-0fda30ae683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcaa2aa-b592-4572-94a2-ecd2348c75a0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b72b49b-e212-411c-ad26-f3ae7e6988ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc3ca93-3103-4483-a897-2e540d9c2cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f790165d-25ba-4ff0-9d4d-ce00197fc5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fc9e59-e935-48a1-847d-e3064f48de1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80baae3-c3e7-4b89-83da-8865b585a805",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c787af59-dd11-4d2c-8601-ad114e28df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b642075-0ffb-4297-a389-42166564c462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43181c0a-2d84-40e1-99e8-aa09e2ff739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6dc261-1630-42c4-887b-739f1e13350c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e86fd0-e7d6-427c-8373-ad10ec8dfa63",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a11a32-bf83-4108-bdd3-9b882eab3841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a475959-9f95-4067-8791-876998490bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb69aeff-75c6-4a9c-80ef-1f09b18826db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a737d571-cedc-46eb-a395-209da763dd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a027a8ad-1e9d-4981-a796-8b24a9ad2d3d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba52ecc-af0c-4f37-bb98-2590540f178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3916c1-3aa0-4ed6-a19a-f2ce913f2975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbe951a-be32-4e4f-b31e-e622750a0ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c425ddc-2427-4dc0-8d87-b5102a7560c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358ece94-4f6f-4c56-bc27-b85b2fb7a90e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bd8269-649c-4a80-9d21-7f3dc2e80144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d3cf18-7cfb-4698-827c-b1c20396cab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b99fa2e-2780-4e15-9cfd-09436fe1b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf15ef6-c084-4f7c-8340-c38f3ed3b3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0561b9-9a70-4a90-b338-81be7d0226d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c92f7c-ee7b-4ec4-a13c-a444cc071f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde4c6b3-cc83-4db0-8b57-caf3108398c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49baeea-a50f-4025-951f-b822c49df56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "062409ba-f675-46e1-b1e9-409ff0e8759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79edb297-87e6-46df-b14f-990411d0bb00",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c577298-b8d4-4597-8957-b0324b41f38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c9b745-5ecc-43a9-b733-520380384c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528d08c3-c719-413f-aab5-7c8b3ac85d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d17fbf4d-1704-4caf-8677-dfb4c7848227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2341e291-103c-4df2-b661-42f7676a37c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe9e27e-8583-4dec-b9f2-997e2efbbee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a02513f-ca4d-435f-8eb2-70cf35cd43f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2dd23a-01ad-4d85-852d-95ff3b529e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22b477dd-ae2c-4762-8d4a-0cc995cfce27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e189f5-71d2-4b63-9e94-b134cb66429e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3672e530-1d37-4abe-95b8-a18c2f96c40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d792d4-207d-41f7-9fb7-41774a1104a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eb89ac-6755-4051-a80f-7416e9a677fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "492ed273-35d5-420b-b021-1db30fa2d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cf1701-9d3a-4f57-8809-6c768c8b71f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53568626-a8f7-4b43-a911-86e398bf9fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ac27f1-e662-4c32-b8bb-b6ec99e34a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a276841-5fca-43fa-8c3f-e3153d9470ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "875431bb-6875-4d72-bb58-0f70b97eddb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce413ddb-dd32-4c98-98bd-1b082616ce61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a839cc9a-4231-4ca3-9716-08973c50b5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c879f6e-55ed-448e-ae80-611e303bd06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de93cd31-aa28-4598-bb34-63ed32debdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0853995-ed63-4649-9390-e7d67a130806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31bcf57-e81f-4e99-9b54-8e6602ba60ec",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb125594-bce5-4dec-b15f-545a9b63adbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78caf8a0-1c53-4ffe-8f40-81fc3c95f2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179a46a-66e9-4003-886f-53afd752e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2f3be6-0009-4502-9cc1-d4181558f104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10341522-867a-4a22-99a7-94ed304aef78",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5733e511-1d02-4c70-9c70-44956f823095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072d77a4-c15d-43b3-a2e6-ae40674ec0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbbc221-9e00-45cf-b5a6-bec9b07fd1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4402f4-91ad-4e50-a5a8-bfc34a7af5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea58b68e-3306-4fda-9855-a367a06fa48d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a916738f-3ffc-4483-9eb8-cbe3c02248c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52384de-db8b-4545-a52c-cbc2034058bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbd355-5837-49b6-af6d-7cfeacdfe292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0735b024-a1e7-463c-91c4-b92daec71563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d79ac82-7e2d-4aa2-b541-f8e267ec7794",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d65100-3fc0-4d82-86fd-a3cbfbd7bab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef01801-7735-465e-b581-6edca74c967e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6506e7-7ea2-40e0-b412-f3b3dbe953dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a2eeb4-41a2-4f64-a3e0-b6794775c072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56051e48-1900-4d29-afff-c01824cf38f7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75a97b1-43b1-479d-9a75-e81087e7fd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb1c0df-323f-4320-88fb-4321cd4b84ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf49b00e-9594-46f2-ae40-f0dc182c6288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b96cc2-89ec-4280-af18-769d3f43ec5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58802e80-c2cc-4eac-babe-d8e792e646f5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d1ffdd-3033-42b8-89ea-876d8d4064e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c824cd8b-eb73-41a5-8751-d1700d3f8200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2404ed25-e1d8-40ab-9101-87bb38d55d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b6d1fb-b79e-4a97-9e2d-d11d7e0bfcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4b416d-b72d-4851-a565-a73dd4c5f211",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a756815c-3251-46a7-a961-e329e0ed74c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6beada8d-cd36-47e8-bea5-7c7af811d968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17981e1a-f84b-4741-b5ba-db435a21d8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c7af99-f40c-43f8-84a5-9979889bd0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b044c8d-1c46-46c0-bf95-1fb76cbde697",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010c0bf7-ce70-4ec2-b110-38652835e020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7113b0-4723-4e04-87cb-82459e15560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aae5138-5d45-4b59-8e43-ddef68338cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8256021-d57b-4839-81b1-6e4c1b04759f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d779e2-7814-4dff-95da-e7fc3a25159e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98de9b6-738b-42da-b143-6bcf7387d776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300af5b4-fb4a-43af-af64-df3da7ada37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e3cd27-965b-40bc-ae08-b9f9efb2651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f165df-e305-4dc4-8c77-b9b7158aa53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f1c880-440c-4211-a25c-119b545da519",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1884165-90fa-482d-8fc1-3dd1b6abf9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda42085-1576-4706-a738-31070649cd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ff644d-2bd1-4814-87f6-a19e2d887076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d322297-f079-4593-a9ea-73292168ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608785c7-11ec-410d-a951-ae188d133bb6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84e5cc4-6786-4140-b8ac-777f6e1e42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7dd0f50-7bd7-45f6-b315-b00f2ae49a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879aba34-ffb2-4027-9f01-8070ee4ef1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3577225-d261-4852-a743-fd37aa70f4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead54ec5-655e-4dbe-abdc-155d787901d6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb914f85-e7e6-4e53-ae9d-ff62f08dc530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d26a9f9-cd18-4e75-87d9-452e756a0670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac96854-014d-4d97-865b-947e22268627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e46b3f27-3ac5-413a-9676-220a6e296ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d820fdb-4668-4f20-8152-79e39b9f1796",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6799f8-b7d2-4c85-a294-5dd7a00a1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec02c4f-c2ac-4acb-8d43-ca1c7b823e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1ab748-f9f0-4528-8672-c4696e37c0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec3f6f3-89ad-49ab-8ef7-665ab43de4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb28f6b9-f470-4b3f-9fb2-6770be4ff618",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5787bd-90a5-4906-a220-5c20b391261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f885160-92b5-4e7f-ada1-cde917a1cd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1664441c-00f7-4448-9ffe-32f39857e631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0483f27-a534-4d06-bdb1-2c64df9aed06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c9421f-a3a3-4ee7-9fa4-f223d34b9393",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e221daa-e857-4c62-b90f-767de4ef8616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb136314-4c93-4300-a27c-0db79a41fbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924b0cc4-301f-4b2e-affa-eb64ebc95c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e554dc97-78bc-4038-bf63-a3a824fa232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d38cfc-a6a6-436f-889f-87aeb65d6913",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba7e128-09a3-43b5-a10e-1e0a2f1134f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16189b4d-dd5f-4ae3-8667-f744ac1e9fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4852d3-8a58-4693-84b6-8c82c929d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b5b11d-031d-456b-907e-0e8567464c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349924bd-88e0-4346-95f0-afb28cb2d7c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82231fb-8659-426b-97c3-087249262216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83e7fa0-1c62-4e2d-b01d-9c42224c79a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a50cac-680b-48db-a136-0579a3be06c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c43b61-e0e4-46fa-a376-251f81a592ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afc5565-33b2-44f8-9a3b-f0786194bbb3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b280621-936e-4db1-bf93-9c90b70b6556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05523ef-b82f-4825-bae4-80eab50eea0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334b6614-d21d-4695-99a6-febadfa30e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9df57de8-2966-41b7-87b5-fc89470725b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbbd863-2619-4628-916e-ca927e4c6b1b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91edeb17-bd09-4dfb-984b-f2003031ffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b4caf1-587b-4b40-bc1d-7a41108a9e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e768097-5ccb-475c-9284-d9c2fbf7e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5895b1f-454d-439b-ac30-e84a3284e11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4841aab0-0a9d-47dc-8db0-7b57ab24c452",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1706076-e029-4fae-ae75-2c023b6b5b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e7d3dd-8bb9-4e8e-892a-3ab46de84eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07618d34-84ea-4e21-b72b-f9e514daf2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "154951f5-add6-4821-8c91-6b14dc521468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e946b4a0-7148-4558-8230-d6b6efa62583",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e80c1-b256-4d71-a892-69f0c365398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9dd96f4-6969-49fc-bcb3-ef4137718890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10937dea-7943-4bec-a3b6-c40a3680009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8a2fa1-eaa3-4f97-bc62-43fe4d4b6f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e8a1b5-e543-49a0-87b5-e0ccbaf29574",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae4b1f0-8fc6-4c40-aaf8-8e1c281ddd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e4876f-0269-4a32-86f5-f02d01f2d2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4ea662-d383-40fa-ba12-c6a53bea47e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7e489e-5d8b-4502-8e24-eaf3c7c3625b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e21f7a-dcd4-4920-9633-90d2624a1920",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863cfe57-8fff-4f0b-8c74-da64c8a8eec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fea1ca-49eb-4a41-9346-b3b0fd2661b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a284d0-ba44-42f6-a9bc-b046c4122f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78f9043e-b7a0-4c20-a3a6-4bafb6041add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd56e951-5555-47bd-917d-51601a4ccd7e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f2eff-c60d-4efe-a5e1-864c8acee52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7d9fbd-bbcb-4180-b3d1-1664ba826fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2885b398-3fb9-48d0-a36d-82f2092f4c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f42779a-3aea-43f7-9087-ed36a430b361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bab5ab-c4f5-41d0-a882-a5395a089c50",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a7057b-4361-41eb-9cf6-bd8b44daae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75ad036-0b71-4744-8b73-7c8585d92842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e037b7-b487-49ad-9ca4-acb9e37adb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3ae35f-3265-48f9-9e0f-7d93cefe4ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de63cb5-1fc0-429e-8af3-0533d5a50338",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893926cb-a80c-4abb-a09c-8e23adb06289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f0dc2d-0923-49f6-845b-2a96ad0bb74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6130c6-1880-4bb9-be97-01183a0713bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aca3ac0b-3ad7-4f75-b97e-528d14c74608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f05a5a5-0818-4ce3-9509-bd7b60d7737d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d4749a-4644-4c01-b2ce-cf27dbaffa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8085df7e-17fa-4a40-bfa4-2db1edd69179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0952b45-3b4d-4901-b3e8-e8804bd2cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb96ef66-f2eb-41c9-9a8e-5b27db484985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6506be-ac54-4da2-b70c-02ce3329abf3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9302e3-bda3-485a-9509-65100c01ff57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d05073-0d58-455b-abce-c1124c9fd5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd29ee67-b517-458c-bbd7-74117160d902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d97065a-6cea-4ef1-be5b-b2a7bac29657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1663251b-7aa6-4d97-9728-704ac33f7fee",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b61bdd5-0517-47e5-a77f-e64657a15982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dc7298-bf59-4a57-82af-5f5db3e60cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4867284e-333a-4344-8917-28bf08485c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "929e1613-d682-41cd-bab9-d7984b66ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d66afaa-e582-4568-b7f3-b76650bb9496",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7338433c-d5fe-4a7a-a422-c013c76c12cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0180162-dae7-4fff-911a-cfd5c2660dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4e43c2-0422-40ae-9b78-ec4bc1773724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5bf70d-f869-4ffa-8842-5401bbac0016"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a879c33-4156-4fb0-a935-7fb019c43997",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db9c2905-9462-4746-8fdf-6f351055163a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f640a6ab-297a-4e0f-8b0a-5d6cdae88859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0e21ace-51b0-471b-82ea-aa827f4229e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4790cd1-e1cf-4b27-a556-87e887281a6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef3e9ca-48be-4191-9394-99f0e6a87c0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ea15c93-4525-496d-bf3e-7d7fe418125d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90c61075-afe2-43e1-83c1-cd63bcd2f1c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04c49d9a-1a34-4f1e-91bb-63620c13a94a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d1fc904-953e-4d5c-b3f1-8dda422564e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5004451-a932-4313-8d5a-ab5aaf96b935",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba13fc03-617e-4e8b-8228-e783e465953e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e7819f41-ee95-4b9a-9a10-47830452ddda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56769b53-8557-4354-a66b-6576090c113e"
                }
              }
            ]
          },
          {
            "id": "f73a5e64-ffaa-4223-8348-b3418d87908d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f93f6ccc-a17c-4575-a505-f1aef8493e99",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3516caee-caec-48bf-b9dd-f60e4c7a2f6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c4fb65d-ace2-4960-bc0c-7fe409a1a767"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b40313af-1df2-444e-a666-412d6f51f17f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1988791f-8a34-45f7-ae52-d0ee565d0f62"
                    }
                  }
                ]
              },
              {
                "id": "feb0bc49-7ea1-402a-95f2-397265f6e885",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a266abf6-2f96-4d14-b7c5-7c82f3c39e59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "494a2c02-213a-46f6-9b41-a975ec94f503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b059b0-a642-430b-874a-9b64c1b1d305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f26db99-8b2e-4011-8530-4f487e153598"
                    }
                  }
                ]
              },
              {
                "id": "680733cf-0652-4670-9529-9dcfa486012e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c33f5c7-0766-4a5a-ba67-21e227eb1a10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d6f33be-5aaa-4d30-8a9a-92225e373889"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2e8af6f-0410-4577-93b5-8f008d0ddbf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b47cdb3-4405-4683-8360-bec97655ac55"
                    }
                  }
                ]
              },
              {
                "id": "b99eac7b-175b-4193-9374-c55f11b756d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31cb5bd0-bb01-4f5f-9857-a98115d44843",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e93cbe5-c23f-46e7-ae51-1c76cbbd4a9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b70ffd54-f378-4759-a4b1-c1d945c5e91c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f2bcc07e-e95e-4b86-9670-fff860ec4eec"
                    }
                  }
                ]
              },
              {
                "id": "83ccf26b-0ddc-42d4-bc94-645f0fdf086a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f76e247c-7187-4a87-bc7c-d6ebdc91e3a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f585e5ac-774c-41b5-b183-05efb40e2acc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ef4f89a-156b-4e9c-89bb-26674f4bd71a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9e618fc7-93b5-46fa-84c9-e7c0de9c6047"
                    }
                  }
                ]
              },
              {
                "id": "aeba8664-816e-4660-9052-f0ee4b058f34",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56e9bb85-e75c-4264-9d44-0d1f44d1993e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a89d2c93-b50b-4745-86b0-6b59ed485a51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "043c69e3-ed8b-4580-8511-352d9b3198a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccbae64f-666a-458a-866d-871b8aeaf62e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ad70515-3ac1-45cf-9ebe-b31d01d9d4a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "240fcdf1-c6f5-4a76-969c-101ef9c130eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2efc8999-1e0b-4c56-9665-e9a41fc54924",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "481f280e-8697-41eb-beac-3652822c07c7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c9de98c-7480-47bf-a690-ed50b4f53465",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bd807626-faab-4226-993e-6ee0ceb36ee4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e0a79ed-ea7a-4a35-bf0e-6cda13fac644",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a115a08c-4629-46c8-93f3-3af596bd9651"
            }
          }
        ]
      },
      {
        "id": "899a7159-dd77-4c45-a1d3-2bd9e1519bdb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bf46ec15-9224-421b-833c-744f641d7852",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42327a45-7be2-4ed4-8ee6-06f5a9fa38e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a13acc5-ef8d-4b72-b49b-d685a6f85faf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62041796-3579-418a-afc1-1a49e6ae00dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3f6683-c0d3-4a4e-875e-9e0cf06fec43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30d0b29-d600-41d1-9c23-ed60fc5de46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "287bd282-ff79-476a-a2fc-33a796dd9caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196cb927-8220-4388-b97f-ad14b6d96a48",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c5324a-0029-4038-bfa5-160be4de99b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405e2943-b974-4110-84b6-1ace069a8e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a10aeea-452a-4133-9277-fdfb20ffbfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd862450-6ca3-4ee9-837d-11bc638331ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d7ef75-f4fc-4cec-98ec-915a7de945b7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283d19cf-3547-4952-855d-c7b0df4d86b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8235d1-0881-4e33-9aea-c4aa0ea8f190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a05bd0c-63b0-46d9-87ad-8523d84223e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "647290d4-b40b-46a6-ac49-833148472171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb878685-67e8-4936-a287-8791c0614a18",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0894add7-63d8-4893-81da-9f360aed9265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d68c7a1-cb65-4ad9-aa8a-c6752b28a085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d9ecbf-9aae-4b2a-8a14-13321fe66a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef411c3-540c-4f45-b25c-6969a2feec4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952ffe70-092c-4ed2-a978-68e6a7fb8dea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724f943b-1f8d-471b-9e4c-f7ddf695843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606bb958-ac02-4727-aa62-0fb0834ae1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1456ba61-aed6-4247-843a-e4e99c9f4bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fee3f99-b93a-46cc-840f-4031c909b23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b728081-1d0e-4a52-babd-54f27415d1b4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6042c0-7ff8-4e24-bfcb-a238de0c5681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babf968f-e455-4321-aaa9-63d307de89c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f369ab5e-72c4-4c57-a409-dfcad05c12fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cab28e8-444d-4d54-916e-ee1d1a472a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a6ffae-2da4-4989-aa2b-aa178f40e1f2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f97302-448e-4773-a21c-ef8f486df613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7408a69-b860-472a-b1a2-7b12ed135ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5f1198-a503-4f22-a4d1-a078d06e9b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "211dd4a2-d0e7-407f-9efa-19154da93d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e41150e-527b-4aef-8260-6ee766b75415",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034d298-e4dd-47f4-b97a-98973029acc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1cb165-a57c-410f-8919-9f75cfe8d1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2abe67-b570-4f7e-b872-78a8b86d1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "036f231f-5db9-499d-9dcc-0263bab7541e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a9816d-86a1-448e-88a5-78a861b10f29",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545c1599-8043-400d-8645-2b365b4f16f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34ac8c5-8274-45b5-99b2-405553a1af81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6098f3d6-523a-4846-9a6c-eb83e918ada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c07e607d-6243-4f1a-9475-ed7293f859f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b50bd26-45bd-4ba2-94fc-9179067a5884",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f763e1-0796-44bf-b875-9b06211eb4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85fd741-f715-43cf-a917-566f21364755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6213aea2-a06d-4397-b27f-597227cffc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e180c2fd-f6ef-43ae-bd1a-56e929477ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc60f3-83bb-478f-9c6f-32d9ab8448f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56fc7cf-d8e9-4921-954f-793fc1bf3f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7e04a7-55e0-4137-83fc-ead93b5ce288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c46199-11ff-44f8-ab43-a2b8d2b9940c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "520aa008-78e3-432e-8db6-0a7eb4495c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029073df-1dd4-4a19-b9bd-0ab078839d99",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed7bbc3-32fc-4c12-8ebd-1ef64de2f278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972e6d1c-55b3-4453-ab60-414b13248495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97df259-b437-4fff-b420-0f5708e2e05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31be05fa-3e4b-486a-929a-349abf56dccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8466b2f4-1cca-42b7-b7f2-47ef2aa423ed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73437f5-011c-4ed6-8dec-c216df73a6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c236594-8870-41aa-ad22-16f1b0955165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5cd64-67d6-42f8-b8ed-e39645c9a9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcaf7c1-688f-43fa-9b8b-e4a87c90227b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c87f361-d377-481a-8d4e-3a821acf0ec5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f094f05b-dbd6-4392-bf0a-5124f836467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c2eb33-916c-4313-8fb3-c03dfe81a036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277baa1d-57dc-40af-85ab-c03e97c892db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bc6d6d-e3c4-4387-b36c-a553f4f22d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5c8b63-9937-4048-8f6c-993e65cdacc0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b141c4-bebc-4f5e-8a2a-aca411329e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c59893-71ed-4ca6-8ccb-4ae9e205b3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e9e58-98c6-44b7-a524-97f85033ce26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "78a31933-b9bc-42a4-9b56-82023577b649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371bd0bc-3718-436f-b969-7c25bc64164a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd96eb7-3c20-4465-bf38-ac48e0da30b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482b2c7a-7dd3-4af4-b130-e407b7f3b465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7539de5f-972c-4a93-8faa-5b592230731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72b635e-6a54-4f19-ba3e-c706c9961f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c10c9f-0761-414f-94cc-676810934313",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691eaff0-b4cd-4ddf-8b34-78ea486654f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8a74e7-d0df-4c10-bf5d-b2572e0ea7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f3c109-1385-4b89-a216-6a35cef1626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab71fa8-011b-4dc4-866d-5d85c2b1b82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f1cdf-1d6c-46c3-bf39-63e3badb5757",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e083f-cca4-40b9-b11c-b9cbfc76552d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9f5bab-a30f-4110-8d5f-0dd8a54a0b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60873dbb-626c-41cc-9e6a-132c9bcf152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaaa3c33-a809-4fdd-aacb-778654bcf831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888cc228-cb76-4a40-bd57-21bb711bd320",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8e9471-18b8-4443-addb-0bc9fdf8cd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686b553d-7e80-4523-8f24-743f51be049a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9044cc81-cb72-4c12-92b3-5bce13a4ac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d756db-9613-4ad8-a80c-5d4f946c6b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cb4e83-c018-4b17-a3a5-c768ef7b343a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38470ede-49a2-43c8-827d-5ef44924a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cef72fc-1b44-442c-8b5d-c37c3f14c741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae76fb5c-8b63-4ac9-961d-2938df8fa49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8c3c91-adbf-463e-9d2a-6b937f12af98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea96bd03-cf31-4d57-8265-c9910d5d562d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf9af0e-4ec6-40c9-aab6-3d3e5fa77550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58134066-fbd8-4a94-91ad-5259b4083618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58d920e-c919-4257-843b-b40af2569776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "754d842b-fc64-4da1-8d00-8fab9c2ba9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b43eaf-4f39-4371-bdc3-a57be656d3dd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db25da05-dd12-4550-a9f6-52543b1eb644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed87cc25-1bfd-4536-aca4-ac42afae12c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297485c4-d23a-4d00-a310-bd50aae3cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58975664-48d2-43cd-a37a-282e31049ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2b0fd2-2d29-436f-8d6b-079e35460a14",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48fdde7-90da-4767-8fea-b6ba21c0e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7ede26-3b10-4622-98aa-4c7e0458c4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47cead6-2336-4fb8-87eb-8664bc596a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e89cae-e9b9-4aa2-80b6-64d4d8fc7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c78c3bb-d876-4623-a4b6-36b56d0e2578",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b3cee9-2967-489f-936e-9ccb5e3aa201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198f9494-5922-4dbd-85bd-d6648f5b6605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3171b3-34df-411f-9f14-6fadd1655205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa123d3-d5f3-4922-9bc4-a4c48dd93d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad362657-e796-46c4-8a7e-6c8833480e16",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23b2bc8-11de-4a97-a404-8130ebeacec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c067a64f-d298-4a21-b576-2a304afd1d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea949ff-5202-47b6-966e-ccebf85267b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4188ce0a-2e95-4f8f-95ff-d3b165dff59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b42e78d-b4ab-4df3-8e62-1c9103236a19",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03847da8-bab4-4f73-9928-9740c9acdc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0b4a8f-34a1-4efe-906d-14b7decf6434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b32b15-6af8-45e3-ac4f-86c1496b0d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72701971-ea5d-42af-98fc-e92928c436cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98c1f6d-fe4c-4b16-8d2d-051dac0952e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e9f887-8858-4781-8710-5549c96ba16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ab41bc-552b-407b-8caa-99968120b16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e86895d-7864-4720-9f82-a30019bf4938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873a9398-1444-4cf9-be36-15646b4a21b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0599e8c6-9828-43fd-8bbe-1eaa7e254310",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d457218a-cc65-40f0-a46b-3f1584297adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2933cf-607f-421f-9b58-df3dfe788208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7c5427-0553-4f49-940c-e8c8aaa19213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63145dd-334e-49c1-a119-132f11d37cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa06f6b4-c9a0-4bda-a538-de34ba567c26",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d428c7e8-8475-4f1b-96d6-f2300c711ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8366c91d-43b9-477d-ba9f-62b0021266ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd51114-123d-4b3c-8be8-6d7f9a116d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9266df-cce8-4afe-baca-f1537befc4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc8f5ed-111e-4088-a9c4-bcd3455b3e6f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08613015-a942-4570-a0b9-cc1a5266c5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9174d7fe-55c4-43ba-b59c-a1454446b28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67af5bfc-d6a7-4707-80fa-f4ac8e854590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85176c9-b14a-46a5-b242-81a96ecc7cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ec69ba-05ca-40a4-b86f-d60b84b389d6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d98563-b360-48e5-8119-232bd2325a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486cc610-44fa-44cf-bbc1-c900df2762d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a800e3e5-32d9-4d80-8187-64ed6ef37cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0c45ad-20ce-4648-b39f-7b02a98a8877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c41dc65-81cf-42f8-8194-e7b88f4762f6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0843d098-1d70-49e1-9c40-17a36c34104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0c7221-94ce-455e-9d27-688ee53ce6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ac8700-fadd-4a79-b729-659fe3b3ea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f920fa14-b9d6-49b7-b9f5-63a5f539b094"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2e6cced-ccb0-46b1-bd42-7be1e7ca837a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49aa8d5e-26dd-4ed6-86ba-65a453337eb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaacd7cd-2e90-4325-a5a4-86e4c6f41129",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "13ba7552-9151-488a-8ff3-7f51c843a2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8e4338-2485-443f-8602-4bab308ae477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ede79ab4-3f59-4062-b5b7-abecf0ee1405"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "028e912a-3c9a-42c3-b7c6-95174eb8d0ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2f37582-3ff9-4715-9450-c37a19860f9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37daa5b9-3201-48a1-ab1b-7d86297cbd80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa606549-31f0-4318-bfdb-ffe491903062"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5169f957-9dae-4090-a52f-05c9a93838e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5922cc4e-7f81-4532-957e-4015c847bff5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62491123-3a9b-4fe7-984e-29dae4c2e1f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec0a6e0c-5108-481a-a232-faac89778b60"
            }
          }
        ]
      },
      {
        "id": "a78d8daf-8e51-4228-b7fb-c4ea3970e45f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0e537d18-418f-445a-9cec-a4b763704936",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6585a7c3-1163-4da6-a8f7-ce0209e1a622",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f65a43b-3b4e-4d17-b6f0-b295d8f4d600",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5dfe7e-6acf-47c5-827c-e917141e6f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac518a02-d64a-408b-a630-b2ebe0c5b96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7189f45b-1dab-45b6-bc82-1315eb57bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57971574-3921-43aa-aa0c-1309e599c125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54109558-2f2b-449e-acf2-7d9ff22d130c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d42dff-efbc-4a6b-9765-ba22d1d6ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ae0ea3-6a61-49e7-a39f-e1013ce9ab5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc00e1d1-1266-49ef-a015-a9f187d5e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "daebe681-28f7-484c-9078-4e685f409a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6e1914-f691-4dc9-97a8-bee01000e2c9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf9bd2-4575-41fd-afcf-eb2479c2a850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d139b23e-bce7-4ba1-a0d4-15c2648dbeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe7040-93c9-4bb6-8736-ca79f1daebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaeeea55-df4a-4682-97d8-df9c4b6f2ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5a1da9-0372-449c-9b8e-80109c6e13e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94df8773-a4dc-4977-9314-e1d3b48bc1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe96fc1-bc41-4ff2-a0d7-7fe3ddb6b210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b9b9ec-9a53-482c-b66a-db7e49ded8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa61f2aa-1f13-46a9-8d58-525a74a2ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f034d882-2e93-4961-9122-0b123635f1ee",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3816b8-3645-41ad-8206-109d1dba2f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbb04eb-ee9e-413a-b067-13d72d90d386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a77f4e-1f51-46e1-81ee-8bf998795976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4edbbd14-e8aa-435f-80b3-0bf19cc683ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467ae26c-8f26-464f-815e-4f9d499b35d1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669a8d76-078a-4ea4-9cfb-798d06774003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b29f446-51c0-40d1-8f9c-7dae9903cb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342de943-e9b7-4aa2-b3be-39a83b33f52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf91519-421c-48ca-9cb8-3e5344828afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3420695-92d6-4e0a-b08e-50f6280b6c80",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ca8cf0-733a-4368-be59-cc14ee32f71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575000bf-0409-41e7-b50b-529f93a5d64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaf8413-1848-414e-8674-fee9fb95d9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfc6397-1d37-49ac-9e21-4b7b1c047050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ee2c76-b477-4a89-b20c-d466363394bd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd5de83-6223-47e5-8603-8b34ab0a9e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfee845-3711-4950-986e-c1602d4e9d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7760092f-a361-4744-bf8d-3ba119e5f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f3e41b-8ac9-43e4-a132-71599550b5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fc2da8-438f-485d-a740-7baee5283f6f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1563c06a-8aa5-4c3f-a94b-9b69fa127906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c78839-7499-42e3-9d1b-c1760d2d7e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a10a94e-c19c-4b1d-9c8d-d6d2648f0613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15682c7-978a-4494-aed9-6b8c283fe93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a948fdd-262a-4a2b-8fd9-0273cad046d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb1f46-535c-4060-a841-d4624fbfcfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24d7402-153c-404b-87eb-294e9f08fa07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5b3143-2941-4655-a5da-c6c79b02d22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75fb6843-d70e-4294-b94c-0e9f9bdc7037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfecbcb1-fd65-4f60-88a2-864b635f33b3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178d8b92-f9a3-42ab-b3a8-aa792cccd184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469cc35e-5b7e-416d-8bf8-6e8205b952b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b94afdb-28a4-40cc-98a4-2b169c19733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c32193b7-791c-4b43-8339-f3fcad06d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aba40fa-cd18-4e24-ad32-19f9acd0d5c5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4506c71-7a54-4e6f-ad64-de6f4ba33285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4d74cc-e2fe-4a3b-9825-cd36725f5f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11516c9b-fa44-431d-a321-3f8bd2cfb5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfea0f98-1aff-41c5-8463-7736412d0b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4d1b3f-d821-4e8b-bcc5-0213bdffa687",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64656456-1b4c-4bed-912f-ad12049816a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd47d000-5eac-44b1-9974-77a7f0dac106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5e111c-6ff6-4b96-be7c-f2aa33f9c022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a7dfce-4c51-4c91-9753-100ea7aadc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ba52fb-1c05-4bc6-886d-f19454333526",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55146781-b3bb-4994-952b-951498120442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17e5fe8-3ee9-4c67-b2de-a3557928a77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117b1ee9-fd4e-4a43-b1e6-283e148b7aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f72d96f-8354-4e78-94d5-f24bfccc0e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8bbae-616a-4342-b43f-4d600f84f158",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0966a79e-12a4-45a3-aac2-26270faabbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef3bcd3-ae7e-4e74-bc31-284a31f03202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406b41fc-e146-461e-86be-3802b5ddf146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e677244-3cee-4fe2-84e4-71c07db118a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1919b0e4-0efc-4677-920e-4a01f1503438",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a20a2b-7c83-4d4c-a97a-d5cb75f234f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222c14d6-aad3-4712-a955-70bc8051268f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12ca6fa-bf54-42e9-aa5d-445af15c5cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "302f4e15-5626-42c8-bf3b-be19a06f9935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e8f1c2-9b78-40a3-9f84-70f3b096a616",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec42535-b5dd-4adc-b8a1-25bc5d8642d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7ce7ea-707a-4841-a190-52ee88d81502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072ba918-ca33-43e7-b0b0-64497a7d23d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20ff6dc-94f5-4a38-a843-dba540be425c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c499d128-0756-4c9f-97ab-9fd1dac0d716",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea08ea2-02e9-4e1f-9812-447a5c3416cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09af97ce-89ea-4d65-9ec9-cfb658826201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134186a2-297f-44ad-b871-402b6d52728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9cc8f7-0e96-42cf-a8e0-8c42b9470c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5ada93-baed-45a7-9de3-4e1c47e7762b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a097510-42c4-4a1a-93ae-5752d3927e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc8dcca-7a8f-420e-a1da-98032548007a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9146c3-6d88-42c0-a1ba-79c5237d80b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "116a6f93-8535-48f6-b579-1572532d03d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78e8c23-772d-4346-a50c-ab092f06a915",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7844aa7c-0d2c-4c02-9b95-47360bddf9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5762c0-f55d-4a25-8301-ac0ee4f6fcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd40f62-3de1-42ed-823e-a65741c064e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b73bee-89c8-4785-9332-1ea1eaa97a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c65d38c-234b-4b9f-85da-32d92f915ee6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cbecb0-2303-4798-82f7-b9e7190560f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aef5947-db82-442f-94b5-338995e478c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c853a9c0-ec9f-4058-83d2-201dd0f604e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcce300-dedc-4a91-a9ff-4fce4dbc52a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a0f570-acce-4a02-b2d2-6c3208e48877",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa288c05-9140-4210-9a16-13e67b9fbff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b527b0-84f6-40c6-86f7-40d38d0db094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556dd0b4-33f3-49fd-b075-066c0bcc2afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0fec76-2e56-47e5-ac8d-ec9e496b1175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da71117b-b4da-4669-8676-13e96db0d943",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f6035-8f38-4150-8bfc-9abc9b4df573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a17ee00-f3c9-45d2-9394-1fbde4592e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b28561-e464-4721-91cd-4cc38fb118eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f5a7ee-7802-47f0-b291-fa5824914241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416ce18e-1ce3-4579-a6f7-300d19606ea0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992509d0-1bc0-41ce-b80c-f0e7628106b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ba0b2e-bd75-47bf-adc0-f396c827eff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b990671-8883-4ee2-bea9-ebf6761fbd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4848ea6c-8062-486a-a844-c0072806e876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa0364e-6c0d-4ad8-8d59-b1269295fb3e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7108c5b-2ddf-4020-bba3-705fc8ee7a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad7b3b3-91ab-431e-a7be-2de4414c981b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f248377-9cfa-4d2c-8350-9bc8030a9ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0985aefc-c665-48b8-97ba-f211ac33dbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ff719c-e9f9-40ad-9d36-109024be9bb5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394112c6-cad5-4142-9f36-11a043cc5676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1bce42-dd2f-4314-9407-4800f63df4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abed97d-8fdc-4722-b19e-7d07019b8760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d93d71-a86f-40a0-a1e6-296d21442fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255a5d0b-b9a8-4a88-a414-a8a5b3516717",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0b1a73-bf48-4db3-a5a9-d1c75d129794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2610d9-c1c9-403d-8e63-868dc2c01339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c1b076-729e-4e1b-9a99-61de52fc66d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1f7b72-0552-43d9-ab69-aadb8029034a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec7d9b-f3bc-442b-a83e-ed4ca268323c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca29fc8-f1e0-469e-b51a-afb6718b2c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ee5cc9-f944-4cbf-9907-45b5e9a83307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75450e71-b79f-4f87-b985-01863bfe1686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fbf5df-ea99-448b-b425-fe397e6a5956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614e8ee0-c8f2-4830-842f-d88624afc3c0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18da165-2428-451a-9a2a-af092700144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4e6785-15ad-49b0-b24a-3384abd5f0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df90bd8a-2061-4be6-bbbe-64251c71d52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67dba789-3a35-40f0-9989-a0f5b30529eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f983a0f3-c6ec-4831-84ae-5c880772e277",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341803a4-8339-443c-be1b-202a9232934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90840be-9465-4484-8f0a-0df66c71d6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363237cc-0587-4b62-89b9-5aad5d9716da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c799df-d7e7-4c27-87b0-db7288765e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f932c75-39fb-44ff-82e2-47dfcd338f8f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84090275-8154-4f4d-8a43-9dfc5f0594e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ff6f6c-63f3-4f34-90b4-37229ed6569f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b62386-293a-4f28-848b-fe3ef9edc5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfd09c5-7c2a-4078-9af3-67b61caf2a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d31869-cc01-428a-b190-bc35b87590b0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88765f2a-b8aa-4f36-9ac4-08cf880e34f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e1728e-bcc0-492a-ba28-f224f50be9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be162207-1157-41be-8622-3422e99e02c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8a1712-d3ed-4f90-8c93-72e4441e4687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf926d4e-0db5-4458-8bf8-8ef1739afddc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aaad32-ca7e-4343-a961-a59e75240a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579152dc-ce22-4c55-9e2d-8378cc0369d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b895afda-3184-4010-9a32-52573969d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d081721d-4b64-463c-af4c-ea538ace5fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4029ab7-f17e-45e2-b02e-38399b4384a6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e47021-515c-4f86-bd1c-7106c0e8e1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9010de4a-8045-475c-9569-ab58e8a7361d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a42e8e-6d8e-4ea8-bdd7-9053f7b8c64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6421fb5a-9ad8-4c91-b040-e577c9220d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade0172-67ea-4e34-a34a-f98776d77253",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef49ecd1-6582-4904-8950-f2c4c62c1c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbd1da9-9baf-44b5-84b7-f76e05edb21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2cbe75-fa4d-4ba1-a39a-08663d8c078e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338bc7e4-d200-45fa-8251-d99cfdfef0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2dd0fd-6bd9-42a5-a6b0-2c82e7c80c0c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874ef1df-18ab-4fcd-9e44-e68e85acc1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133fdd20-5e1c-4434-a1ca-b13dd57e680b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d813226-2939-4a4b-b7a7-1d5c2fc740d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f8003b-1687-4137-b9a7-3596a6f03863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fce2bd-c0db-445a-9f96-12c4a818461d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d439ee-5844-4ea7-8277-3f3166a86bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368b6b1b-5e48-4499-b308-bc5fbcc5fbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3bd27d-3863-422e-bf23-3f168709d775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14cf8dc-4c74-46fb-9698-5d7ce113b8f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5cb552e5-60e7-44d5-83ce-61f01d9b830a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2258e5a-d997-414d-8fff-5a302253608e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72284b8-0771-4228-83e4-c8a2d604dbcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a52655-5951-484d-9f1a-1357aa17c363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0995d1d-4b18-4555-b934-d74023ddc8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "879b7bf4-78c9-44e7-a7e7-ee4b197bda68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d1cf677-c65d-4381-8e39-7e91e2f3d491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fab9cab-faad-4c22-ad9c-7938e64059c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "943a10c4-f5b3-4358-913b-b15489cefcf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d7f04a7-4bd8-4917-a467-a970c71179c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc037ff0-9e5f-42b5-bebc-f0403c993ee9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d83b9053-259a-4bd9-b997-946479adbdf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddaf1ef6-a4b3-4438-bdf7-b7109f183c8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bcc6f41-6606-489d-92cd-10104addc093"
            }
          }
        ]
      },
      {
        "id": "080f62b4-35d6-4c7f-ba84-dedd90d23273",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e55b0f3b-4a0e-4a84-b1ba-3c041914a50d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b468613d-b7bb-4e93-9d5b-42155301773f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63f354e7-7b27-49d9-a5ed-08308ae93184",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09135629-b3d0-4fdc-82d5-d82d64155185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2faa81-2ce6-4f55-b986-35126168f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc22a2dc-8a00-480b-9970-82a511822066",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42877ba-0980-495b-8e41-c73232c82ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3d5cf1-476d-4ebe-bfe6-ee18ba2e50b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd49fe61-ff17-41cf-bf0c-d3525084805e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31c54a2-f310-4d9d-9f09-90f8f64a00b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164143b9-4255-4ecd-91d5-1bab41f49cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39fb93a-f657-4c5f-aa9e-36f2855164b5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582a188f-a008-4793-ae6d-0b7e45ee9299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18872b1a-5f67-45cf-b7a7-1bdb08a6e12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ee27cb-1d7a-40e0-b740-c231b4bae935",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77d3771-4fb9-4e0d-8e2d-70057a1e5041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1995a468-69e9-4c01-9b7a-0ce1fdc71462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b41d25-dc52-46b9-bebb-edc986c0a4ed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069c47f0-f507-42e5-bfa1-21dc8a2d98ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a5409d-bd24-4253-babc-124c3a005790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7c3cea-2e7e-4fab-a293-c503668d82f6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a4c2f7-493b-4f2c-a752-981b39339d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c15a48-3ad7-4e02-8ed4-db5434b933e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbed2ac-95b7-4531-941c-a4e22dbf2399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14ba75f-6517-4004-8053-61c07914a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded58b79-5ba6-4b7e-88ea-bd95c8010aa1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91752af4-1d23-43e4-a061-a5b939682d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb2f408-c511-4812-a738-807c859ff5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3494524e-eda5-43f4-b5db-7b9b89a7f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377ac41e-5d3e-43f9-a93c-c2cb0d74f7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9099f00-3bbc-4916-bc27-b58ee7896249",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ee910-4c5b-4ab1-98aa-a573b5827d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69572ccc-d428-4932-ac5f-4909546d67ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dd549f-e0ef-48e7-b362-6364d6ce4c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492a566c-0c70-44db-a2ea-e90823039923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6160c82e-c232-4b7b-8770-b84665279d9e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd32df5-4fa4-4194-99ce-1bfe456a2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac4b8cc-b8c5-4b92-827f-dacfa4cdff2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282353c9-cb49-42da-8a81-2c45b12ca8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112c7db4-a243-4a13-a345-6893b074e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fe6bba-244f-4b32-8693-f99c56df2a51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fc05f6-7676-4d84-894b-07083ba39ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f60486e-4e87-4611-80af-69ef6c676739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893da6d7-20b1-43d7-80ad-1e3bbc988a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd9e788-ad9e-4ba0-85f4-79f53a7bb4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e86097-69d4-4172-a8f5-26dbe12c6f16",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592061b5-208f-430c-8a45-6a49b62bf916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a098dc3-bcac-4e81-8564-fd41789db97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423031ac-1ece-4611-920a-2f2629479b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c8cb6b-7472-4b46-8d1f-b224f2f0f0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50872ec-f3f0-47b0-a080-4dc4fc0d489d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ff0e46-059f-4c69-84f1-5433d31c4060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38088719-42a3-445b-8316-fe40fe6a18fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fb83c8-c3f3-4f9a-b16d-9e4863925d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad09335d-b8ec-4dee-a227-e2dd046e94c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4971e3-04f5-4f49-af2e-d8adf3e89d35",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd295274-80fc-473a-a77a-56edbc2b53d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8649e879-27c9-4f3b-9339-e44f0fe1248f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5f4a7b-4627-42aa-9878-60bc4bbaec8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8153ca-4e33-465b-bc2e-97d39a613c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3886dd6e-249b-4304-89ad-5a73b28f09a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd9d5d8-47ea-4975-9117-b3da94b1609f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6c4790-96ae-40f1-9bc8-dc69e6d22257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b83c143-6f0f-4951-bec4-ef5d57e1429e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea1e4a5-bf2b-43d7-a476-429266ace29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e4d1ce-4cfd-4943-b155-814efa6e4a3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004ad15d-389b-4bdf-87de-439f0ada2feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8a574d-b3df-4b45-bcc2-6d345aadfb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8768e25a-f453-4f9e-bc75-cfc5c4d6c27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1da21d-85cd-4264-9129-542d20ec0095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aedeb02-25d4-472f-a153-05483862f945",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344c19df-b3c3-4895-87d7-00a1c2ebf079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913075b5-5118-4313-bcb8-cdcbc49bc2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b509499-2346-48e4-8423-9bb35913a5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c03bae0-22f7-428f-844d-615a03e6f4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2436b1e6-9aea-4f0a-9984-fb7939fc0b19",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e851a5-ff73-44e6-9cb8-bfc8e4a7efa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07518d7d-0270-48cc-9a1b-818919d80693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57968868-8efa-4033-988d-3a395b3e7000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b42f8d2-4106-4b01-ae50-7c27f3c704d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e5bbc8-3316-48bf-8182-aaa3c67f9b4d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b79d40-7432-4d4a-8dcb-7b0d91c6fb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86511a6-237d-40d6-9e36-f0231acf07bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd7aaca-ed74-4eeb-bafd-f05257c6bb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4867c91f-1429-4723-b72b-932380d4b92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a41c53-eb61-4e09-9d3c-57723ea12834",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3d78e0-f2ab-4028-bc77-f201cf1060ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0746b196-8082-4d66-aed4-f26b85d94d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5944fac-9c7b-4ffc-85be-f8bff56d6bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1e4df9-56ef-4099-ae77-0b37e99431ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122b4572-e7bd-4da7-ad83-6cb6e2bbf1cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73940778-ac6c-4d43-b1b3-4d899799fe87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c388090-5ff6-41ca-a10f-531a2e72f97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0145faca-2c41-4a16-8e43-291c86c538f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ded61a-3608-4151-aa5f-c1e29164e010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fff08fe-307f-4170-96b0-b94a48671c7c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90285fa6-a59b-4d52-8d2c-9f0c1a918d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003c669c-78c0-46bf-bf87-9482490ca111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7583ed43-7f74-4f4b-93c8-f8a1b3b62b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5484642-a969-4a0c-8483-e84771321e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3120a19-d10c-4b0e-ba36-9a7cfd7fbf7f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bf79cb-30f9-478e-85b2-0ce2d44bab09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1070313-ddc6-4597-b9ad-5daca11402bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756c0316-3e44-49b4-bf18-7debec1bb7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81371655-9a17-4486-a71e-68caf286e153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6826a0a9-5180-4402-b332-35a2de94d54d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092ec0a5-2b1c-460b-90e8-b9b08c35763e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb26e24b-a501-4978-9e6c-18b82468a71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332ab01d-8bb3-47a3-a76e-d3936d209e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e291c148-97ce-46d2-9b0b-573f127810dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee0d870-2ebd-4077-87c4-e35c8b7e2fef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8d2a81-dfca-4aea-98bd-1db1feddbc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4fe6ac-a5ca-4bb7-85f5-14121e7ff130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3515eff-c3ae-4f10-942c-889fa2f56c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2280265-e28f-47cd-96ea-68844fcaa467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8f57e7-458c-46e7-acc5-7deb9db36fc7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b53cca-b614-4e89-972e-bb76e5bf062b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8069d3e-c59a-4f14-a557-aec571079de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f40906-f96d-4820-ba83-0a8fe1ef5e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37eaa391-ca32-4868-a1a0-d342f3103702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20841f5-04de-4c19-be3e-8d5afbf99b7f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e97d287-11a2-4e7c-b06f-8463df753d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2edbe65-cb0c-4705-9d83-d21cb00dd199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d03c6e-9236-4cd2-a9b9-b778d3ad4f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fd92f1-a446-49f6-b25c-a38f5a162309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e332c0c4-e623-4c2a-b95b-3351ced9df0a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0135f826-dd06-48b3-919e-019938b47de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac206be-f2b9-4dee-9d7d-6e4830331c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa96d305-24e1-4e00-9542-6bed3d38d57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198c12cc-4767-4c07-81c9-cb39b7ad985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afeb2dc0-5c16-4128-9847-5bf0023269ee",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fced6730-a47c-4007-8202-1bae00e1343c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb806339-2957-4b8d-aeb1-9a32f5561bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbe5cfe-b5a7-4d2c-ab59-1c8de6b36a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7e4760-6a12-4e99-8da3-611b8cbf4fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3368f881-064e-4d5a-8167-ddeaa7b499ed",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc455cb-ddc5-4dff-af78-8674a8351faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd06df86-4071-4e64-9ad1-f09ee4704efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd173ba-1823-431d-be20-b53a7dc5e7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd63d422-b9fa-4518-9d16-52627723b624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72349c3-eb5f-452f-8d35-b148756e1308",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1eb44c-e975-4ea5-af88-3c0e74f28522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679c112f-9103-4dd4-9651-4feab78d5091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaf6bea-136d-4796-b226-13b1326ab344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fb03ff-65de-4cd1-9226-b310657cde0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd321338-15ca-42f4-a49a-c6c181dcdea2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616a5303-fae8-470c-8dfe-efeef1f0f08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78b78cc-58a2-4b52-95d0-3e977aa5f169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a431699f-ba5e-40d7-b12e-31ef066414e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e90b409-a8eb-473e-a98c-2e22c0908ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca24d08-2903-4a7b-b5ff-409944f566ab",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6f82df-6d14-4e52-a588-61571c1fd511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8bb3dc-205b-4392-ba26-970f26cc2400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3de8e38-1e6f-4e41-a092-67a7d70420b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9b4ec4-ddf1-42db-9d83-2dbc475bc24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c720d23-d40b-47e8-bb95-8278e9019c0e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a0c187-bfca-423c-a5dd-0c767e00279e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27397af1-ee96-48cf-848a-d94cdb174ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4768ef01-0c85-4787-a7cc-19a40519695d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ccee96-0644-4463-9c2d-0f18ddf1f4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc428d2-9990-4a21-adf9-e5b6099eade7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3f2936-c261-4fd9-8543-723ddd3f2c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cf5890-ad6a-451f-a0fc-8e5df94466f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752d77c3-9fe9-4266-ada7-8c3ba00129b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9b6fbd-27a7-4350-97ff-0cc73b201f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fc3d74-9a57-4dc9-8b98-9b110410b0e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b72bbf8-e181-42c0-b1b6-8a6e691ece46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49be97d4-772c-44d9-8bc6-989c7553818e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c3f16f-c4ef-4c01-8ea4-a8c3b8b119cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d944f47d-2b2e-42d2-ae0d-5b2e026df650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc41d843-bd81-4f5e-8ae4-832614e52e3d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b205f7-dad9-4cd1-8059-1d1698c23360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673debc1-b497-4b6e-8856-440a5834dcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da29cb8-5d22-48f6-ba46-494e3a30f630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae161367-d16e-4b5e-bfcf-bf1e09d36879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feb4622-a780-4f1b-813f-477de58d2cd0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1a66d-305e-452e-a464-754b3bcb3a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ef1950-4294-4a54-a967-065cbee6ed4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15b4434-3803-4bd1-b451-b2214305dc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe46ebfc-d19e-46b9-aaa0-eefb4dd82a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cb30cf-d973-4baf-b80e-1f8e9ac43645",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651c3267-12ae-412e-9bdd-c41fe0804a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3080b49f-ea97-49a1-a46b-28988e0697fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f602353-17f0-4d34-9df9-3c7ce1eb9282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf22707-2428-4920-abd3-3f117378ef28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09913f3-716e-4278-ba2a-be910dfeec8a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c56837e-96f7-45bf-a7fc-315a15d904a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bbcaa1-4004-491e-837e-143b327d3fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eda4052-9da7-436a-87d4-e40191e0b8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c35d54-80ff-43f6-b11b-4cda80c6a154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd88fe1e-1054-4971-bf26-7868bc042e3c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cea01c4-1dc4-40ce-8a84-6b21803ab257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09edde8e-7a32-4c9a-9dba-73a7f72e31ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6546d1-30f4-448e-8724-6daf8d19b548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c914bd9-ed19-427c-9c32-a39da95d49e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b6bcca-2bd8-4fe0-967f-9d8da32548f0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e1af9e-1619-4072-ba3b-9a74d8c4f6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aceac1d5-c744-41bf-93e6-825890e3d2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0975228-72fe-4d49-80ab-9749f96a75a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74489680-dac8-4356-8034-91f275baf792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58aeb97-988d-4c45-9468-d9291735d034",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c794c9-176e-487c-bef6-7bb69f0213a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70353b82-b8f0-46a0-8a09-e79fc26629e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4835ee-477d-4e6f-a72e-b6c50f4c7731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c027599-e418-4ffc-9324-bb891e2a711b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c70d0b3-377e-40ee-b823-d6d0548ba913",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fb0374-2e38-49ee-b38c-a7a64dd211ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e1f475-bef8-4204-aeac-1895aa109c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cff4f6-0239-4ebb-a6a6-94f02c5129bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e719f51-3fa2-4ced-be96-802171400482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df98b23-95d2-4dea-aa76-771e4dc7729b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e979ad87-8868-4a65-a4e1-e79d0d3e1895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26569040-4c13-44d2-928b-6dbd2462bd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45dc8f5-feb3-4016-b04a-a5e9e29c8545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e4a3ce-fd5c-41d2-a215-2ca2c5f2dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288de544-06a1-454c-8599-7b3df4b4614e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d52da6f-2db8-4127-9b44-f95acc7e0b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecef3294-f241-477b-9e10-c6e42127f93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df176113-182c-43fe-aa25-0f67203f309c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa555738-894d-4259-8a65-22d812892ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8c23b2-adf3-4018-a287-f450ef50401c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbcb98d-f48d-4943-bf6f-ace63627cc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71878ccb-b013-4a9c-9847-288fc15beadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b526df3-6825-4be9-88bd-254020dc34cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792e9e50-4593-48cc-89af-b509d7d71ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0bc2c1-e5ed-489c-9d65-3dac4a18741a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f491f4-7fb8-44d1-8296-59a9bf7459b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7220f6-1103-4bce-a36d-867c9e3227c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18289b3e-9da0-4538-99f1-c9da8678e5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482f6e52-df0f-4282-89f6-dcad9e327aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48ba60a-5957-4908-89fb-e79f7ba484f7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dc9156-c2a6-40a9-8fe9-e3006dace619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093172a3-2694-433a-a519-75a2fc47f485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "032c3bec-df6a-43d4-9ad5-a1af7a7cfacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c87b5d0-faf3-46e7-b6a8-8fb296c7a7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc35a0c1-0cee-4e52-91a2-a2554972d1e3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f9b299-c625-42d3-8454-74e53e37e688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcf82cf-b3c3-46b5-98b1-c91e91267087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0bbbe0-44f0-4329-9707-a775dfb45291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de967a44-462d-4a0e-b988-9a9a7135dde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b204c1-eeae-402e-905b-8dcdd1a2e0c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b660986-c79f-496a-b39c-8ec37ef20736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831405bf-1a7d-4b7a-8ac8-d44f94a304b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd83e26-dbc1-403e-b912-d9884872ccb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1162ee8a-2e27-43fc-9d49-23b96798d317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1e52a2-4265-4370-935f-5f16d793608c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a050ec-a01e-4075-9783-7bef6eca6b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bade1e46-c69e-4832-b9de-5e4993c67d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c48b13f-da4e-4fd2-889f-2cfa22d64f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9945f28f-cec0-4a68-9933-bc21bd7ac339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c2f18a-4c69-49e4-b1a6-edef34146688",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001b6192-4b85-4732-ac77-6e46a9fc9141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d507f5-605f-4a49-94e9-ef8f0b281bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcc87b9-daa0-4604-aea4-2c8e51a01fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e3b609-f2b3-40e3-95c4-9ed2de9dadf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c841df0-e580-4d6e-9de0-2346bcbe18f6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55f2e54-019d-44ce-970e-17d16e622291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff2b7d4-17b7-4434-a70c-e7e711257dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aec1467-ce77-4a38-b69f-3f04388d9dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c225f8b9-4493-4b20-bd83-6bd00ee322a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219bb3c4-4e93-4cd8-a39d-456699227d4f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413341fa-831a-4c3d-afb2-f4085d17a4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca26528-18cc-4a4e-a20a-ce4686826c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb7e42d-648f-4853-bcab-d128bac2bab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8846ad2-4388-4443-b307-d29e99896ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bed33e9-6d3a-4292-8ff2-9f9e4b1fbb2d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770adcee-ab57-4d09-b502-c2b024e6677e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4021ae-4e1e-4b3e-9b86-86e74bc64cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba2b3bc-f4aa-431f-a675-0c98f62ed320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cae195-f655-4f0f-bc74-ac660eb55b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0ba4e0-5151-45a1-a19e-c71a7024cbf6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee2b9e2-3f21-4fa4-9d0d-1cfcf7af7e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a685d9-131e-477d-b967-9a30db70b787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be84f09e-dfaf-4be5-bb20-36ba7bff7a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d04284-ec05-4924-931c-0b2ab5d5e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e54bb20-d2dc-497d-9366-e1abb7907130",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5515390e-00bc-41f0-be15-7f532fa3aeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5263b4-ec11-48c6-8166-cc518fe736ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9446418c-feb9-452f-a95b-58dd4b1ae3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b182d6b-2a49-419e-ac09-641b349677c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5ab28d-4749-4ee1-a9d1-81c8643fc9dd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7192d76-4b88-4f4a-84bd-5b219e179d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62964d7c-21d9-4554-9a11-279dbc06dfbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4231bb64-cffe-418c-bbb9-594d92deb487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d54a7af-fc55-4a7c-b669-d943a4add4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e3df8b-60fe-425b-8300-d33218d5eb90",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53922466-5d53-428e-be2c-74b8050d3be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ff2bdd-6714-4789-b4fa-57e0528d3339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaeeb2db-bf0b-4121-bcb9-1ac0ce565405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb3499c-5af6-49d4-8846-03e10f9e299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a566d6-4441-4500-ba01-4f453d402cd5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93773e0-8e1b-48f8-8516-e32d0e8113e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa36a0a-8f8f-4f91-aa6a-6340685bdf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6dc4cc-fabf-4468-b54a-78720d321538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e178e590-490a-4cec-97fe-c9a724504441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0309a606-d310-4a91-8c34-4dc244e53912",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cec2d5-13fb-4594-9cff-12ae36ef042e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e86741-1a14-4644-9640-43f9c0343e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc1244e-eb7f-4e8b-96f3-ce4157cdf0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e14666b-2ed9-4091-bd0f-00e5bb525ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec9fa0e-745d-4e9a-b47c-78cb1f4e050b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67078f78-276b-46c4-bb01-c42240c7a0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251b3ae7-3023-4611-92c5-cbf596da1733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb59ba8e-cb93-44eb-868b-339517443d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91cf1df-de8e-465c-bc3c-129c6fcbb992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e15f25-d5eb-46cb-a9b0-7090d2e82e79",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad35161-aef1-405b-afbc-68bc38f73f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad73e81-ebac-4c5a-8a43-d037079cc77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad166de-91ca-49f3-9a97-6f6b108e4532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ec99ad-9970-4075-a90d-d5ed70f31cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d80e71-48de-4cae-92d1-dd5cfde3ad1b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4fcf2f-1cab-4cbb-8022-590fc58d5908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f00002-ad51-4b5f-bfdd-031d2aacb6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1b0761-ec21-4c66-8b7b-6a1aa4a87a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81519d47-66ab-4678-a0c3-ab38c671fe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399a4f27-b6dc-414f-ac45-4ce162583938",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3face19-2a3f-46fe-9f37-df862fd90871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be00956-3ee1-48be-9179-23f494440e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080ee8b1-6d54-4589-819f-a944c2062e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ed53f2-adae-4616-9188-da51ca5a9553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e90360-1e3f-4822-8df7-c9e616578b15",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5deb15-7d84-4d53-a666-88ea9596d6ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53634bd2-a48d-4730-93a1-f10300756b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a5cf96-8292-4e31-8001-127e591a6d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47aaddb-e816-4d11-922f-30bbc199032c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58121d9a-6e53-4ee6-afa1-65efffefc85d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d430ffaa-5017-4318-9e1d-e33cdbc14b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ba5570-f514-4415-9f51-cd0c89de5962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0815b4d-6076-4536-a57c-4d701de5cd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9208c5-a78a-488d-b105-ae4388081b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b93ca9-732e-462b-9c2c-e0d4c569504e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e507af55-492f-4ef5-9ab9-3a8e9dff2757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf20c77-1bbe-4204-8597-bee753d8f0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fce7c66-17de-4023-8340-e433d51d8dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137c1fd2-eff3-4fa6-bf29-df38658e30c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a82459-5871-4a14-bc6e-73f3da47ec65",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e0b884-c795-455d-8ca5-0046bf3f4cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772041e5-a67f-4679-8093-17c9f62f1c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4bf585-ca62-4f2a-96aa-91b617935a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266de86f-6694-47a6-b411-1a53bd21bb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e605b7-4725-42c6-a15f-12453c299255",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7864e63-20a6-46d3-b41f-c6f11f6bf4ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fa78bb-8735-4189-bdce-6965c0c72fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0be54a1-5b32-409b-930b-38356da84bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecb2f64-ccb1-4a5b-8b9f-85ba6cd10ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d17ea7-b1cb-40af-a44c-69a776e18111",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5e615b-1f28-4473-9d90-4148732b30b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73ce5db-e705-4d18-8ee9-865867be071c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2866eafa-a956-45a1-8539-feb852237519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05137864-5cef-43a9-b69f-7d0f77484ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f356a-6b78-4feb-982f-c6a5cc6fd07f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5841bef5-0540-4fb0-97b2-c85517f599db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271a75f1-6e2a-4ab7-a0cb-9f60a8248f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d830c6-8b81-4a8c-9ee5-41e763e2fc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744045e6-e5f7-4707-a3d6-57ec967361b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93b14c6-ad68-473d-8364-6aa57d239ad8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b84dfd3-9fac-4cc0-b5a7-073f1927bbcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7cab0c-460a-4065-af4a-e5a8e0f61afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91911ca-c01a-4f93-8783-6d8315f51be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ec4404-1a46-4b9f-9157-80af31a60ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be023a97-d34c-483a-854e-f47abd8a9668",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a26e018-bf95-4146-a782-dddb4f85922c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbdafa6-2994-45fe-a0a7-75d53e0138cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fceebea-a390-4e81-83f0-946cd349313d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe259925-acf2-478a-8384-14ea62f5c3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bb419a-6707-4a60-9882-f326bf671844",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b57ff5-7122-451d-a72c-972446a769ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a55b8a-2b66-4b0d-ad87-abf6b7a00f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d56e69-fc34-410b-85c7-41eec2fde4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716c0518-c96c-4a1c-bc9f-1229e04b9e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89eb706-d8c8-4ea5-92c9-bfd754225c80",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28883c5-5219-43fe-b430-e4b1050599ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a67137-929c-44f0-8ad8-62d7f24ce4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2236ce50-6306-4e90-bfb9-c18f704b45b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9061f9d-b811-4976-9de3-7c5f79a9db83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e246f6d6-28fe-4eba-a3f8-661cecd7575e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468091ea-d15e-4423-af23-569e77ff153a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b836753-81f1-4e26-83d4-7c0f4ecb90c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9735cffa-0765-4a20-baf8-738a1996d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ea7c3d-9ac3-475e-a1b3-ce4046f2dd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f907216-2eb8-49c0-825d-2bd0f6d5fad5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e410041-bd9f-42e5-9bf8-74fd71f2a862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3e6aa4f-bf12-411e-89fc-46b40608f0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45484ba4-f9c9-479e-bb0b-f8fd6670a0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cccef8-6864-47f2-bce9-e1146691cc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8caee4-26bc-450f-ba4c-bdbc399c58b9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a479c85a-9bdc-430d-8888-dd777aeff958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e04289e-c5c2-4789-9da9-a3bb3ea92ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10c875b-dcbb-4bcc-8460-cb94c86a7a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee27b8b3-df59-41c7-a1b9-d6340afd4164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e648af4-67df-44b4-99ed-8441de2b8eac",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e244b34-3769-492c-8a47-c8169e88c112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ac6591-af88-47d6-9a07-ff961ad2c5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8f4877-4c43-477f-9857-a95f68a6abe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66835035-73d7-4318-adaa-c59d3da7345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe9d3f1-ade2-4906-8ef4-edd5311e0eaa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260057b0-eac7-4094-a2dc-0a988aae3253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f5f272-c53f-4460-8789-533b9dae6aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b598b7-3cf6-40c0-845c-d0446c7ecf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720a6e89-9724-40db-9d5f-4f9a3f0f9223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c55db1b-7cab-4cc9-b266-59c01e81bfdb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdca8d5e-6e28-40db-95c3-0db45dacfc66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd043697-e629-451b-b835-7677745e2a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a653611b-9c71-4e8e-81be-7a37cc7af0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa57eecc-fe43-486c-96ec-91653e98efcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97dd23b-2e60-4292-82f3-b785efef25e4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b4854d-135b-432a-9d1f-3adfa25f255c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c689b2-99af-4ee2-91d5-bcfa79343fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384e4b46-75d0-4fea-8454-3aa90fae7b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e700bd6-4fbc-41d2-b239-3d3d6d9c5daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4100619b-9970-485d-9b7d-5e4f6db8b2c8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351e9cc9-8ddf-4d53-a990-27a11ce4d68c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53bedb3-4b0b-4f71-9558-8d5ea0f5b488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4d7fdf-3a0e-4a76-af8a-1597a11339e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3600de0c-8a1c-41fa-8269-cdec7bb47223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634df6d5-cb01-491a-a50a-15943c8f4da2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e286a76-d671-4caf-a548-219b4f3305d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ab4fa1-0d4e-40fe-b189-f55c8e2cfcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad27c8df-b230-4dd4-956b-5c9eb5b28059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59946a0-f931-4c5a-8fdb-2e0e769fd7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd6d1b1-0b3e-4fb3-9a0a-a890d2a423d5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c744b25e-4e62-4b47-aa3b-4c18d3c882d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2406e5ee-1cb8-4212-abd9-d58ad4997761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a055b8f-5d45-4f35-9a40-043d81efa490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c765a9-4804-463d-ab6c-f99aba99233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43195e45-2afb-41c2-b892-c8bcbafbfbe2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022dbc52-12c6-42f5-b549-2fe333bddf16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd1de14-05c8-4cd3-8f82-d95ba057a95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e060ea13-949d-48a2-a629-046c4a9c8927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c252d6d-2f56-4ef6-b4da-920eb7fcfe7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e7df15-d98b-4ab1-b226-404fd07a1098",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faf64a0-568f-4380-b60d-1181c4ed9548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b1ea41a-b351-4d0d-8b17-1d829760d498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafa9fb2-b54e-4243-bb3d-4bbe1ebbb560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f169a5f-fd04-49bc-be05-f2be87a7bfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3203fa3e-c117-4aa1-9dd9-9ce77d93d775",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bace2444-36dc-4627-bd5f-6cbff283a71e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea2822d-22ed-4cff-b0e8-db62378ce95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2580ae-8e6b-44b4-8e64-12f82e9f4e8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e21549-2f31-44eb-987c-2ece504b8db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f602c7-df08-46d8-95d8-f453e0e79dc6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e853a763-24b6-4f25-9222-bddbf51a85ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e88f6e-c3a9-4dfa-933e-739518d87e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b8e4e-4001-4bd8-9a95-a6b2d5d40dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4f3781-b118-443d-b903-97b8397ec330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8380951-7060-44e2-826f-7c6fc087fe0c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e9fa27-ce9d-4ee4-8eb4-3f99f691c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daad4646-beaa-47d7-95c1-7a07c42201eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4218e9-7406-4f24-8104-fb6244dc3f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7075bb-1056-4706-a3a6-7f82c309513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f54143-92c7-49d4-b22e-908840fc0935",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4fcd29-e185-433c-ae57-c6d5f6e54aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef3b0b5-1890-401a-8046-3e46db4f465f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd94a42e-a3fa-4e66-befc-c3dfce8f923f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de703acb-4a2f-4cbe-8ee1-2cb0426b4c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c5c005-8587-4fb9-978b-75fdd4b4d0ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca153920-2179-456f-b4ef-96d9437012d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c076c7a-b6d5-4f64-996e-a0ecb579f72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e03282-9b8d-4d23-9c0f-3453bcb5caa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b8ca5e-21ae-40cb-9d63-264e75642d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6dce0d-9838-4466-9a45-e24ace9d23ae",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74de005b-6d58-4459-a0ca-bf6a56d878b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6512c7-387a-41b4-876f-b790c0231a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d79c93a-1d57-4bd8-98c9-beb15c3049f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7e05ba-d884-4825-8cd2-431689f3a105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa5ddb0-d041-4745-bc13-aa12e8ea8b4e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6a3ed4-6993-46f3-a760-0e2abb02caee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83f876f-b2d1-4065-a110-f2b4db33a9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f608fb-9ff9-48c0-9d00-547bdd0a08a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510f0d13-9cb3-4654-8eeb-ecc188fd7fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed3cb83-dfc6-490b-9504-7bd76b3e7a95",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed506e6-34fe-41f3-9132-4f6d48c82e62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cae05b9-f943-434f-ba38-4157d8a1d41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba4b1b2-f7a8-4078-b733-6f6cf8e0d1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f171a0c1-ed41-482e-bab1-f8425c46742e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71706186-0780-4988-97db-b552ba02f1cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "768ebe82-5963-4269-b8b1-16f469f1c2c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec51223d-2ed8-47d5-b4e9-5ae15d06b112",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eee8db76-d8e6-4936-9fc7-9319453c397a"
                    }
                  }
                ]
              },
              {
                "id": "a0f05c34-ebfa-4c18-907c-ebdc3841f604",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdb2dd56-e17d-49ab-a57c-3fe25a36b6c1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75610b22-0b14-4488-ac4a-da02f20a743c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d413832a-94da-4ac6-a458-2ff4cf8a027c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac18aaf-e7ba-426a-98b4-37b1938c4df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f155e92-9ac4-49e6-86f8-834fba25af6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71fb84be-807d-4cb1-8915-188c5e2f3913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84c01075-0031-44e8-9f71-6317e0ee41d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8567ea15-f54c-4816-91c2-c403363de7f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0634307d-87e7-48f1-9d8a-3f1f9c0bcbf8"
                    }
                  }
                ]
              },
              {
                "id": "1c8cf011-2059-4ee4-a155-b8af9f454d5b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8662906b-5a60-4b8d-b217-e933883e9dac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5bf0a7-8703-4262-bde5-24a7fa9f983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4ffbeef5-1ec6-4cd2-991b-88fb7a64b277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc71a94-7d43-449f-8ef3-b08d2edcd1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761e2414-1e4b-4c63-83ab-c3e374ea5c0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78648282-3c6f-44a4-b231-40141c0d9117",
            "name": "Positive Testing",
            "item": [
              {
                "id": "268cf09a-c7a5-4816-b994-5095b52af993",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b47e58e1-dba5-4c90-be18-5e1865b2ba29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9dd70299-d3ad-4b8f-8920-d1dc3bb8d8a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c52b8595-8097-4947-b780-1177915c2fa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd1e2e4e-7d12-41f6-9c4f-a85a223a6313"
                    }
                  }
                ]
              },
              {
                "id": "38385075-3ce3-4f9e-bd52-550d9dee5aa9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1749fe63-5b4f-438e-b806-d0cf633782d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d5543a0-1c0d-4ac1-aac2-b2f592e6fb7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47fc39d8-bacd-40b8-afe8-0abca339944e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96929f82-261b-417f-9bc4-54a700743a9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "555042e5-0ef1-4e16-bf83-0bdb5938d96f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "08df9ee0-a75c-4b89-988d-5415763083a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00caf5bf-e2dd-4781-b1ae-e46640c6f0b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9b97edf-83ec-4ad2-88f1-71ed8a9e2f5b"
            }
          }
        ]
      },
      {
        "id": "1f5c0307-f220-4536-9577-6ca1aad7971b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1f13cdb9-25c3-46f4-bfc7-4fe95b6c088f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "045dfcc1-c257-4cb6-a7d4-f7da4d092e68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33821652-217a-4c7a-a48d-b8db61f4a6c4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db87a90-72e4-4454-b5eb-e810eb3aaff0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30d311c0-9934-4760-9a99-5f9578a43300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70b7601-0532-46d0-9abc-1eff59728e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da85f53d-0717-4afc-918b-5c7002dd8075"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cab4f906-5604-4bbb-9fb0-0395f1ddbc9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "511ceb76-d47f-46cc-a079-533f5fbb3204"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b04a9ae-333b-4c59-a757-f05eab680dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d67d2c-c8a0-443d-99f9-faf9dfab1470"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24867971-b912-4abf-ab97-6b4f248f0ea1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b1a21963-c66e-42e5-a209-51013978689b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9366242d-b2d1-4b1e-80d8-66bd309edde2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e3abbc1-5ade-4cee-b79d-cb43a2a135e3"
            }
          }
        ]
      },
      {
        "id": "601b04c0-3e88-463b-8bce-766c465c1ecc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "264d2293-d3d3-42a3-a554-50c39b187ecd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f366e7bb-f822-46cf-bc76-c6c542dcabce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1c1411b-9de7-42f2-8e17-970cb7b3d1fd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a907cc-5f66-46d1-8dd8-a411eb8d9a51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3042511-467d-495e-9864-70934b9c5a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b852d551-d0c3-42fa-9607-422bf87e8d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "952a1dfe-462f-4d54-81bb-cdf01cf7c16f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96704c9d-0439-4aaf-ae56-eaa8e9d07c64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "564c2be8-e3f7-4daa-9432-bfc9f5f415cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8419b1b1-ecb9-473b-980f-344371fbd90a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63a1de9a-6782-49cb-82bb-af5b5866f54c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47db3b79-04e8-41d6-8981-e2ee91af64af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1081e57-db5c-405c-a161-5d7a2ba933f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca3a5bef-2cd9-4cea-9a48-c34659e345e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f71ede81-244f-4ffb-94d0-24e49abaac71"
            }
          }
        ]
      },
      {
        "id": "99c77271-ff0a-4ce6-992e-195985ecf7ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "98221fa7-51ef-41c6-ad91-4a007ccbc3a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75690e77-39b5-463e-bcb9-fe8012d68c5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "310b7796-e6db-4de2-95bd-5ab99160b44d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3d57d2-2faf-483d-90b5-349a1e9c25e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bcce708-a27a-42b4-8b9a-4cb63ea23d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb715a48-f61e-4fcd-9a31-288165458b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb6a2251-4e9a-483f-8a47-ef9116e93ef0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b63196ec-e4dd-4b20-9256-da73d31c987c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f38744a1-beae-4331-9a19-ab18f57dbd5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed7d5c3c-1aff-43d2-b072-9912c2c89277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60dd9cee-96e5-41e0-bc65-8e05ac84cbd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a5adc08-499a-4f7c-ae3a-4ab1b6b707bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57ce13b0-25f4-4aaa-bdb7-490d03e4e8bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7f57175-8e37-4455-8135-01bea3789c8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78214636-741b-4028-b576-835e1486a56d"
            }
          }
        ]
      },
      {
        "id": "c1d1d052-3d11-4511-8bc7-11ca2e5dde6f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62c2291-5282-401a-a90d-8b1873ec06d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57c8a7ed-bc6d-4380-926a-3bde82ba9913",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d79a72a7-6d9e-4746-9ac8-ba977e8e26f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fca59dd6-d463-4e16-b840-8c7e8b58c984",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f3223c3-367e-4471-bce5-63fdb260fc93",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 358.8908450704224,
      "responseMin": 11,
      "responseMax": 8748,
      "responseSd": 1065.8610709619916,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696638776282,
      "completed": 1696638890766
    },
    "executions": [
      {
        "id": "45ff1362-76af-4858-917d-569acd8892fe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bc95bf5e-c0a8-4e5c-8289-c1af7505bbe9",
          "httpRequestId": "1856551c-5029-4a32-9913-8bfd333282ae"
        },
        "item": {
          "id": "45ff1362-76af-4858-917d-569acd8892fe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "44debd2a-8612-47b5-bba4-8f44fcd1edf1",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "623d7275-5297-49fe-ad83-286236c4f89f",
        "cursor": {
          "ref": "3e93775b-6ab2-49cb-82d1-934b6e501a61",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "eee15d1d-2566-4827-a5e9-34d6abf7a852"
        },
        "item": {
          "id": "623d7275-5297-49fe-ad83-286236c4f89f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d8c1d54a-eb46-49ee-be55-cd636e654111",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "5c4a4285-b16d-4451-93ad-8f698399f430",
        "cursor": {
          "ref": "7499ac09-6707-44cf-8d52-e3f16da89223",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "82fa6a7e-b278-4350-8e0b-5c02ecd42c7c"
        },
        "item": {
          "id": "5c4a4285-b16d-4451-93ad-8f698399f430",
          "name": "did_json"
        },
        "response": {
          "id": "e14dc6bf-4d24-4ea2-9472-c014568df7ca",
          "status": "OK",
          "code": 200,
          "responseTime": 1672,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2628bd-c608-4814-9725-526538a91137",
        "cursor": {
          "ref": "a833d62c-01d6-4993-8747-c1ee791c2b45",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ab21859-7720-4e90-b2aa-d2df942bb918"
        },
        "item": {
          "id": "0e2628bd-c608-4814-9725-526538a91137",
          "name": "did:invalid"
        },
        "response": {
          "id": "309b8920-1f6d-46a3-ac3e-841f1b7eb453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2628bd-c608-4814-9725-526538a91137",
        "cursor": {
          "ref": "a833d62c-01d6-4993-8747-c1ee791c2b45",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ab21859-7720-4e90-b2aa-d2df942bb918"
        },
        "item": {
          "id": "0e2628bd-c608-4814-9725-526538a91137",
          "name": "did:invalid"
        },
        "response": {
          "id": "309b8920-1f6d-46a3-ac3e-841f1b7eb453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a84c6f-3abe-4575-93a5-a7be9a040e3c",
        "cursor": {
          "ref": "49c8b1dd-6568-4791-b82c-137dde8ff986",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "65d3b5a6-c7e1-4a9c-9255-09ed141fd66d"
        },
        "item": {
          "id": "27a84c6f-3abe-4575-93a5-a7be9a040e3c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a4abc1fc-ba15-4c6b-b786-2ca97a75900d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 330,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001bc739-dc29-4913-b237-add399c1fc4e",
        "cursor": {
          "ref": "1fde541f-3263-4144-a12f-ae922a932d8e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2d35cdc9-8d8b-48ff-808d-de9248e7e33e"
        },
        "item": {
          "id": "001bc739-dc29-4913-b237-add399c1fc4e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cba0bc42-5db2-416e-b112-7ed0213593d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 258,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426acc6-e828-4b95-b2de-d29e8789a063",
        "cursor": {
          "ref": "747280ce-47d3-4899-9933-4fb8d7036d61",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d1e529ee-b3dd-4232-b9db-bd131c0e0c5e"
        },
        "item": {
          "id": "b426acc6-e828-4b95-b2de-d29e8789a063",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "657b8a72-f96c-4a25-9fc4-07eaec073277",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbcf7d3-2caa-4a5d-a1ac-54b34a356b93",
        "cursor": {
          "ref": "696ce701-28f2-47b9-9016-ece81d7da348",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "edcb9620-f8d9-4377-817a-b50b3e932352"
        },
        "item": {
          "id": "ffbcf7d3-2caa-4a5d-a1ac-54b34a356b93",
          "name": "identifiers"
        },
        "response": {
          "id": "e7b363ed-85ae-4d94-b66e-606bc33e8493",
          "status": "OK",
          "code": 200,
          "responseTime": 1503,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c01ac44-74a9-4c96-84ec-6f2403280a63",
        "cursor": {
          "ref": "e7df0240-2854-40b2-8f58-59a382ebc338",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5df3e4e0-55f8-4b73-ad44-9b6e4860c5ed"
        },
        "item": {
          "id": "5c01ac44-74a9-4c96-84ec-6f2403280a63",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8a3fc2a7-4117-4fc6-a653-44938151d4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74c9077-5a57-4542-bc41-9d206d485543",
        "cursor": {
          "ref": "b2619940-5260-4fad-920b-aeb7216b0852",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d7736f8e-6de4-4aa8-8fc3-a11afb3dee9b"
        },
        "item": {
          "id": "f74c9077-5a57-4542-bc41-9d206d485543",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "af1df759-2b1b-4f25-aefe-87b0b5169242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257315b5-9895-4627-bf53-21d1b008e778",
        "cursor": {
          "ref": "4e5916ca-ccba-4ffd-aaff-96582ca1a140",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c9981ed7-079d-4c74-806c-2ffc3276f208"
        },
        "item": {
          "id": "257315b5-9895-4627-bf53-21d1b008e778",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d6618859-83da-440f-a7a6-e959adc3ef16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a2cd1-9a4a-4c7a-a6a3-c46c79da4504",
        "cursor": {
          "ref": "04157774-91a8-4d5b-9229-31ee965da55d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fbbfe7f1-bf9f-4d1f-84b5-cf4f5c71e791"
        },
        "item": {
          "id": "705a2cd1-9a4a-4c7a-a6a3-c46c79da4504",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "243e74f1-e214-4e0d-bf3e-2ea12191f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec9cbd6-3078-479d-9c52-1dc27d82282d",
        "cursor": {
          "ref": "7dcfd424-097d-4d8d-a337-eb57f55a4eb3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "eddc4408-708b-412b-a258-8d873aa95601"
        },
        "item": {
          "id": "7ec9cbd6-3078-479d-9c52-1dc27d82282d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5cd2c04b-e924-4a98-a29b-3d27f9eacff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca88115-9256-4ede-bcd7-9e1839bcf15b",
        "cursor": {
          "ref": "7cfc3ff5-e92f-48f7-99fc-b41ad8a6fca6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1266b61-251c-4583-863f-204aec3b29f4"
        },
        "item": {
          "id": "5ca88115-9256-4ede-bcd7-9e1839bcf15b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6dfbb169-832e-4427-97a5-84232015482d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01615ee7-6937-4e07-99c8-1d3a04bf7061",
        "cursor": {
          "ref": "0a42a32f-c19a-4bdd-ae52-47d76bf8efe5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "752547f3-670f-4076-be17-f4a484689f2d"
        },
        "item": {
          "id": "01615ee7-6937-4e07-99c8-1d3a04bf7061",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "260faee7-42aa-4f75-aa5c-a0044b80bc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb878b8a-f991-42f3-bbe9-066ecfba4088",
        "cursor": {
          "ref": "66325017-ab58-45ba-8326-6c729afa70db",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "83394426-6685-48a6-9135-43703ad0ac4a"
        },
        "item": {
          "id": "cb878b8a-f991-42f3-bbe9-066ecfba4088",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c7384ffe-9788-4146-8365-f6aca1049964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cfe8b0-93b5-4f6e-b5fc-38816b89b8ee",
        "cursor": {
          "ref": "35c3051b-1def-4cdb-ab01-609d65a2ede0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "03064dff-bc02-4c1e-8d88-ec030360fc3d"
        },
        "item": {
          "id": "81cfe8b0-93b5-4f6e-b5fc-38816b89b8ee",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "733b6d2b-d162-49b8-b4a1-deb412ab9650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cdc3bd-b8e1-4c2b-8e97-f27dff03d033",
        "cursor": {
          "ref": "027d6cd0-8db3-4c4e-99ab-48721525adde",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7197f852-f3cd-41e7-a1ff-394394e069d1"
        },
        "item": {
          "id": "91cdc3bd-b8e1-4c2b-8e97-f27dff03d033",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20e97341-a9fd-4447-9d4c-3c3d86b52d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc538ace-bbbd-4bbf-a5fc-084f3980cb98",
        "cursor": {
          "ref": "e19d5aab-f2a0-444f-ba75-2e3fe857c78e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5b7bf7bd-c10d-4e59-bd1d-6de3e6681f21"
        },
        "item": {
          "id": "dc538ace-bbbd-4bbf-a5fc-084f3980cb98",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4c070a5d-4711-47bc-afe3-142555d26d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47a95ca-fc07-4e7c-af75-00a1de6b5f42",
        "cursor": {
          "ref": "c521d7c0-837a-4e0c-b944-759379153398",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "606dcb43-48f0-4846-872c-98ef069ceb67"
        },
        "item": {
          "id": "e47a95ca-fc07-4e7c-af75-00a1de6b5f42",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "efd25be5-aca0-4a86-91ba-2cd017e8dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e428976-2f17-4660-9817-52c4f5776328",
        "cursor": {
          "ref": "3f25a86e-8f21-43e9-929e-a6aece76068c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c6532856-b6de-44a8-b619-b067abcd36a7"
        },
        "item": {
          "id": "7e428976-2f17-4660-9817-52c4f5776328",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "379cec55-ff0f-45cf-9026-24ba3300cebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a549ec-01ff-40c3-a3d8-3692abcd304c",
        "cursor": {
          "ref": "7f19cb31-c61d-4e5e-827c-d8139d7d7baf",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9c17fccc-2417-4ab6-a448-0568b40cd26c"
        },
        "item": {
          "id": "87a549ec-01ff-40c3-a3d8-3692abcd304c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b63d6bf7-164c-477b-9a30-5ee8b78a5561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd38f203-a725-45f2-9ec2-b7768fcbac15",
        "cursor": {
          "ref": "e8be9011-d2af-4369-b0dd-c4492de082e7",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9efe3d6c-9aee-461a-969e-c9f018ede95a"
        },
        "item": {
          "id": "bd38f203-a725-45f2-9ec2-b7768fcbac15",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b2bd7de1-0129-46c6-bf5a-b4769b6cb9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64157e0f-2d6d-4d58-be8f-ba8e54d771a7",
        "cursor": {
          "ref": "e4fabbc4-52f2-4771-aaf6-c087e06e8cfc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fd0966f4-0309-42e5-b949-26f1e6dfa327"
        },
        "item": {
          "id": "64157e0f-2d6d-4d58-be8f-ba8e54d771a7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "45b97fda-dc48-4d0b-86c0-76385838e386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc94cd0-1130-4f77-9e82-a1542aa84217",
        "cursor": {
          "ref": "103f70a5-4d2c-458b-9881-ed9fb79bfabb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "61b210b0-8f9d-4ee8-9808-ab45672f8187"
        },
        "item": {
          "id": "fbc94cd0-1130-4f77-9e82-a1542aa84217",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a37aa57f-ca46-468c-a671-df16d6bcd0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0b519e-c87f-48cf-8717-e0b2c636b156",
        "cursor": {
          "ref": "6d8c6238-d042-45f5-aa4b-aa5769923d32",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fd841015-5e22-437b-bbe4-d27cb0bb0ab1"
        },
        "item": {
          "id": "8c0b519e-c87f-48cf-8717-e0b2c636b156",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "47bdca5a-4944-4fd1-a2a3-b93826697502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46722e02-e06f-4a45-b027-21e7cda32e76",
        "cursor": {
          "ref": "e476bd26-f3a9-4bff-be91-1f20e735e139",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0d62da6c-0df7-46e5-af4b-cdf2248d494e"
        },
        "item": {
          "id": "46722e02-e06f-4a45-b027-21e7cda32e76",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b7538386-a1b0-4e31-aa8b-8c9f09e65fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59051ace-abe9-4787-99f1-5984560d0e7d",
        "cursor": {
          "ref": "457b416e-05c9-4ce7-bfe6-7486b408ef58",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a6d6484-82e6-45b6-bbd4-018a6ee2dcaa"
        },
        "item": {
          "id": "59051ace-abe9-4787-99f1-5984560d0e7d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2aaddb93-ed15-4a36-bb00-d25f45323707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fd7f95-3ec8-431c-8699-c32d5ad288f6",
        "cursor": {
          "ref": "b882e229-f24e-4aac-80e0-03e98858ae23",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "80b04854-583f-4108-853f-49970028abf9"
        },
        "item": {
          "id": "a5fd7f95-3ec8-431c-8699-c32d5ad288f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a43913e9-7205-4008-bd1f-cc3c58c74e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3faf17-d8fa-48b1-9a65-415e2c0181ad",
        "cursor": {
          "ref": "2d6fa4d7-f278-4c98-ba2b-f57ba9d4637d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "38b6e84c-789a-40d6-b11f-ee7a0a71f976"
        },
        "item": {
          "id": "0f3faf17-d8fa-48b1-9a65-415e2c0181ad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cd5360db-1fd1-4012-a1f5-82acf5538009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adf69e5-3450-4897-8ca8-315367c271b1",
        "cursor": {
          "ref": "0d3a2fb8-8838-446e-b044-ac66105a0031",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "70701023-f561-456a-8b8a-2c4c633b2f63"
        },
        "item": {
          "id": "8adf69e5-3450-4897-8ca8-315367c271b1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "58a43b4e-ea6c-46d2-9944-984731933d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382c3957-9d11-4846-8e12-12026dca1d16",
        "cursor": {
          "ref": "069c80a1-a575-4a7b-a62c-8b8200c82aad",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "609bfca5-2aa9-4dfa-a42e-c868e3c05609"
        },
        "item": {
          "id": "382c3957-9d11-4846-8e12-12026dca1d16",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a6061f35-41f1-4803-a74a-4e097e31042b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2865218-725c-4ba2-b452-1d659eee8dd2",
        "cursor": {
          "ref": "dc8e6422-c8a1-4a0e-b0dd-98d3e3b283ff",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f31dc65b-3c77-4a38-a037-ccc6d20bee86"
        },
        "item": {
          "id": "a2865218-725c-4ba2-b452-1d659eee8dd2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "90307585-a022-48ee-b073-2887cbc13d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219515e9-4b63-4cac-a65c-0fc6972a9507",
        "cursor": {
          "ref": "47b35420-fd35-41aa-801c-e3948f4ff722",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a30b4c84-8de6-4873-af43-bb4ae6522ce5"
        },
        "item": {
          "id": "219515e9-4b63-4cac-a65c-0fc6972a9507",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dcea03b6-8424-4c97-9887-cf3d47789b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4c77de-0232-4f53-b413-c24a89a3a941",
        "cursor": {
          "ref": "e9d829bf-aee1-4525-a4da-554ade168d44",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "996df40f-0b62-4725-8bd4-88e797c173a6"
        },
        "item": {
          "id": "ef4c77de-0232-4f53-b413-c24a89a3a941",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "94511121-6c83-48c0-bae9-6ce25cdb5295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d680a9-6074-4858-8206-65354fad76fc",
        "cursor": {
          "ref": "e7daf705-90ce-437e-902a-728d98d4eace",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "80e8dd83-6630-4a75-80ef-f07f939def5f"
        },
        "item": {
          "id": "89d680a9-6074-4858-8206-65354fad76fc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "95d1147b-fdd1-44ed-a6a1-1c6a1618bed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f558ecd5-0b44-4ff6-8b95-197e069a5b65",
        "cursor": {
          "ref": "3c499bc3-4ab6-452a-9852-f3198a759798",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3268dfc2-97f8-4de0-8e85-de6959b677fb"
        },
        "item": {
          "id": "f558ecd5-0b44-4ff6-8b95-197e069a5b65",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3c272814-3732-41f9-9098-2a60a428d26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c0dd1a-67a9-4c0f-a86d-28cb7c8146e2",
        "cursor": {
          "ref": "1b09ca7c-3460-425e-9777-77793e0d26d1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b1cb8f1d-43df-404d-9af1-c6b57721253b"
        },
        "item": {
          "id": "b8c0dd1a-67a9-4c0f-a86d-28cb7c8146e2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c9505c8e-5e3c-4ac5-a253-1ee868fa89e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94a3d84-5949-4a28-bdfa-ff8631587617",
        "cursor": {
          "ref": "321b7cf5-025c-4f3b-8850-e7dfd63083af",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e041502b-5ce5-4542-a761-3b594876eef5"
        },
        "item": {
          "id": "a94a3d84-5949-4a28-bdfa-ff8631587617",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "06a40387-5276-420f-b57e-feef1d21e913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89a0762-2c8a-45ca-a35d-5363d507ab18",
        "cursor": {
          "ref": "14c6fa36-8a0a-4d4f-a998-039870036fbe",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c5192d6e-3e3a-4aa3-a5bc-6061c41c4fe2"
        },
        "item": {
          "id": "a89a0762-2c8a-45ca-a35d-5363d507ab18",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "91b6a55b-d0cf-495f-bb62-41e3966d2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c2d638-6e75-488d-b5d8-e9531511ecbb",
        "cursor": {
          "ref": "24f4af4d-9ddf-4144-bbbb-e3894fb5359d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7d7a1803-7c44-4bb0-9e61-8be31d4471db"
        },
        "item": {
          "id": "19c2d638-6e75-488d-b5d8-e9531511ecbb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "820ec635-d3d5-4436-a84b-f36acff41bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9a099b-40c4-419d-ab8b-513dfe478be8",
        "cursor": {
          "ref": "d9fb4759-eaeb-40df-9a11-e7769ef235bc",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "64f6cd63-acdf-496f-b036-0db853b2fa0c"
        },
        "item": {
          "id": "7b9a099b-40c4-419d-ab8b-513dfe478be8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "881660a3-10ae-497b-bc52-a651734496cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2891e70a-c858-4bb5-a8ad-2737e22606e7",
        "cursor": {
          "ref": "3f274765-8cac-410f-8d3d-25bd0df2fbb6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9ebbe9b-30a2-4790-a713-8f64c8c6cc69"
        },
        "item": {
          "id": "2891e70a-c858-4bb5-a8ad-2737e22606e7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eb225b30-bc0b-4135-959b-7e43f9126026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050abaf5-b5d6-4b21-8c06-789bd4587e36",
        "cursor": {
          "ref": "e73165ee-f1f6-4290-87cc-f4b4466b731b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aa9141fd-b9e6-408b-b06c-f101dd99a018"
        },
        "item": {
          "id": "050abaf5-b5d6-4b21-8c06-789bd4587e36",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "02338f48-08c1-4867-8707-519d0d80866a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 629,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d30ba-6f82-4241-946f-2f93e92e357d",
        "cursor": {
          "ref": "00547215-822c-4653-9b3e-561d76899150",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "efa0800c-c99a-40d4-a33c-7a212edf271a"
        },
        "item": {
          "id": "6a9d30ba-6f82-4241-946f-2f93e92e357d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c88a7a01-bbd8-4f48-8193-42f8c71c5493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aecfcd-95e3-466b-82ee-8e49abc4086d",
        "cursor": {
          "ref": "d2cfb8ed-79a0-4789-b4c8-0c273d17e0e7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cb15cd88-1f13-4e2f-b1f9-9cbe6fa97f55"
        },
        "item": {
          "id": "e0aecfcd-95e3-466b-82ee-8e49abc4086d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a4787780-6693-48da-96ef-101a853f51f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b5363c-9359-4fbc-8e3e-6c7933913bf2",
        "cursor": {
          "ref": "584bc3cf-00e4-4eaf-93ab-027c3754d154",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c6a7b55e-a663-4e74-83f9-c9bc55045694"
        },
        "item": {
          "id": "71b5363c-9359-4fbc-8e3e-6c7933913bf2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b62ea7d4-e410-459c-940c-17d884da70e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f52f25-da8e-41e3-8b6c-e549630d5e11",
        "cursor": {
          "ref": "466b8559-9522-4749-a2c1-1c7200fff6fb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5bd841e8-32fb-4cac-af70-4543a7835832"
        },
        "item": {
          "id": "f0f52f25-da8e-41e3-8b6c-e549630d5e11",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ca52c15d-b699-4536-b4a0-bf35d554fd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca2ab91-783f-4468-ac3b-12e0ddca7a40",
        "cursor": {
          "ref": "07a2ca88-8bb2-4487-81ee-ecb969e9bbd5",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f059333f-4a5c-4688-b527-693233147343"
        },
        "item": {
          "id": "6ca2ab91-783f-4468-ac3b-12e0ddca7a40",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cf49cf1e-f972-4b15-a032-e63d77f684e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e173be0-360c-48b6-b093-f50e9ac1796e",
        "cursor": {
          "ref": "cbbd695b-9c5e-4aa1-a58e-52842fa36ea8",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a54ba233-a576-4ca0-8b27-265fb82364bc"
        },
        "item": {
          "id": "8e173be0-360c-48b6-b093-f50e9ac1796e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5a0e5a32-9dbf-479a-84a8-f1bccd4a7ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f31aaa3-beb0-4a65-8a5c-04b9704bbe96",
        "cursor": {
          "ref": "67000584-20bd-4883-a0d1-24cb67629b9d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5ada72e-451d-4027-9aac-5a4e6820685f"
        },
        "item": {
          "id": "8f31aaa3-beb0-4a65-8a5c-04b9704bbe96",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "349cb1de-6aa6-45c0-aed3-4f8cdc5695a0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 639,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535d68ad-1f72-4830-9a03-dd6765a9328e",
        "cursor": {
          "ref": "07c286f8-62ce-4544-b8a2-76b18fb18c6e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1ef2f14c-73f2-46d5-8258-2b79c886a636"
        },
        "item": {
          "id": "535d68ad-1f72-4830-9a03-dd6765a9328e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "414598e7-b8d5-4203-84f9-ab056619e6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640221a3-d233-47e3-b065-b771975a799b",
        "cursor": {
          "ref": "e6d93dc5-ef4c-42eb-b1b9-a7efa3f5de24",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9d905bd4-8910-4c90-886d-8cc9f98430b9"
        },
        "item": {
          "id": "640221a3-d233-47e3-b065-b771975a799b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "70adae8c-a7c6-4a78-8c39-d5f915435853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e414f9b-c5e4-4f5a-9cf2-3000de0a77ab",
        "cursor": {
          "ref": "8c6277ab-a8b8-4006-b283-4f4f98c7bd98",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "269dd753-c267-4484-bfac-820d5e4f8fcb"
        },
        "item": {
          "id": "5e414f9b-c5e4-4f5a-9cf2-3000de0a77ab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "26d213cf-11cc-413d-87b7-9813891779fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146550ca-9810-4445-ab3e-2d6a85e766e2",
        "cursor": {
          "ref": "17ee440f-705e-4941-b7b0-80b8d9eb70e5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "91268c10-1bfb-4aef-81c7-31c8a02b07e2"
        },
        "item": {
          "id": "146550ca-9810-4445-ab3e-2d6a85e766e2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "89c86e79-2b6c-459a-bfcb-cf608750bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0aebfc-4a6d-45bd-839c-b3f24c8529c5",
        "cursor": {
          "ref": "dad9a62a-ba3e-45b4-9b3b-33b449e0b1b1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95201eff-2470-4882-b158-e8ab055312f5"
        },
        "item": {
          "id": "7c0aebfc-4a6d-45bd-839c-b3f24c8529c5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "12bda997-fa90-41d1-b580-ed6c5e458640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d6a5c4-40b6-4d45-bced-0c6beade0fb6",
        "cursor": {
          "ref": "d2d0a430-c843-4515-bd50-d77719128f56",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e59ac7f-b5d8-46a3-b9d5-32ba151ea748"
        },
        "item": {
          "id": "56d6a5c4-40b6-4d45-bced-0c6beade0fb6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "11512f17-cc4c-4b66-913f-c7101557ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62784326-63aa-43f4-9a71-c3f0017889b4",
        "cursor": {
          "ref": "e1f1342d-f265-459e-bbf0-b8b02fb4fa84",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8c234d11-2d07-44a6-9bf8-e454416cce61"
        },
        "item": {
          "id": "62784326-63aa-43f4-9a71-c3f0017889b4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12f75e41-ce6a-4cff-b2ea-f83473b26339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b5f830-3460-4519-9578-6fb64c6486ae",
        "cursor": {
          "ref": "91ef09f4-bd67-4290-83e1-e09495c107d7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d9bffab9-dd27-437e-8b64-1d9ed98e9419"
        },
        "item": {
          "id": "e0b5f830-3460-4519-9578-6fb64c6486ae",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ca18f810-7089-4f17-9415-b85bb3dab79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcaa2aa-b592-4572-94a2-ecd2348c75a0",
        "cursor": {
          "ref": "e5e01d59-315f-4faa-998f-8543927b598b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e434c1d-d9ae-42de-b6a4-67f9bef49233"
        },
        "item": {
          "id": "3bcaa2aa-b592-4572-94a2-ecd2348c75a0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "86d2ad7c-7009-42b5-b840-af8186c68206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80baae3-c3e7-4b89-83da-8865b585a805",
        "cursor": {
          "ref": "eceb4e2b-8f3c-4b3c-ad04-6d9763f8585c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c9f282c5-cd23-4d01-9738-f982322d9346"
        },
        "item": {
          "id": "a80baae3-c3e7-4b89-83da-8865b585a805",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7049447d-e5ad-495a-8ca3-286e9c3490aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e86fd0-e7d6-427c-8373-ad10ec8dfa63",
        "cursor": {
          "ref": "5becd999-d0c2-45e1-b88c-c408ac59f413",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b77cea4e-5c76-4caf-82c4-ae10cffe6890"
        },
        "item": {
          "id": "73e86fd0-e7d6-427c-8373-ad10ec8dfa63",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d80a48b0-a37e-4a7f-9ad4-16cd8e083518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a027a8ad-1e9d-4981-a796-8b24a9ad2d3d",
        "cursor": {
          "ref": "4b27fabc-b118-45dc-b229-a6ff75ef2db3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "04e9c540-3b8e-4592-8f61-131374161a4d"
        },
        "item": {
          "id": "a027a8ad-1e9d-4981-a796-8b24a9ad2d3d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2d0a7d78-1585-4576-a260-dc5eac1904fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358ece94-4f6f-4c56-bc27-b85b2fb7a90e",
        "cursor": {
          "ref": "408ecbd2-0fcc-4667-ae15-dfeaf94d35ee",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "731374d1-f10b-486f-9674-4f87eadbab95"
        },
        "item": {
          "id": "358ece94-4f6f-4c56-bc27-b85b2fb7a90e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "84f19d10-28e4-4c78-b4de-a473b066d41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0561b9-9a70-4a90-b338-81be7d0226d8",
        "cursor": {
          "ref": "a8691ccd-0030-429e-a757-42ddd1039c47",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4c6eb264-fa31-4005-98a1-0e7d1dfbe9cb"
        },
        "item": {
          "id": "cc0561b9-9a70-4a90-b338-81be7d0226d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "acfef7ec-d475-4062-ae0e-2dcb4ae0f594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79edb297-87e6-46df-b14f-990411d0bb00",
        "cursor": {
          "ref": "c9b9a756-e815-4de2-ba02-a9e3833a5fd6",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "211b4834-aad0-429c-9137-483f286620d4"
        },
        "item": {
          "id": "79edb297-87e6-46df-b14f-990411d0bb00",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b05c4913-3122-42ad-8598-15fb8028c09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2341e291-103c-4df2-b661-42f7676a37c3",
        "cursor": {
          "ref": "5960b05c-a578-4cea-b45b-e611328d8807",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2e117f3b-bdf8-40bb-a5b3-02e8f82647a5"
        },
        "item": {
          "id": "2341e291-103c-4df2-b661-42f7676a37c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7a58467a-d106-4746-b52b-a6b12718b25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e189f5-71d2-4b63-9e94-b134cb66429e",
        "cursor": {
          "ref": "16e7f2f3-6e7a-4a85-879c-3e8c48f31786",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "349c1ab9-8c9a-4b6d-aef4-f0d171439493"
        },
        "item": {
          "id": "b8e189f5-71d2-4b63-9e94-b134cb66429e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "73d3dcea-ae57-454d-8984-3e63542c647e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cf1701-9d3a-4f57-8809-6c768c8b71f7",
        "cursor": {
          "ref": "7538eb61-d10f-4adf-af97-8e83e473c054",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "44920309-8e1d-4a23-b75b-275e6d64bb65"
        },
        "item": {
          "id": "a9cf1701-9d3a-4f57-8809-6c768c8b71f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "afba2652-a0d4-4d46-aba4-167d7c71034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce413ddb-dd32-4c98-98bd-1b082616ce61",
        "cursor": {
          "ref": "80b56064-9ba7-4ba2-a997-147d0fd0834f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2c44d9b4-046c-46ca-939a-17ae86d990cf"
        },
        "item": {
          "id": "ce413ddb-dd32-4c98-98bd-1b082616ce61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7eb7638a-b587-451a-9cf8-c69a11a77040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31bcf57-e81f-4e99-9b54-8e6602ba60ec",
        "cursor": {
          "ref": "4b50f58f-a6d5-4f29-b91e-555ea11655aa",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2db12554-fd44-487d-ae15-784f53c1ea5f"
        },
        "item": {
          "id": "b31bcf57-e81f-4e99-9b54-8e6602ba60ec",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7bcf91d3-0e9e-49cf-91c9-31ee584316ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10341522-867a-4a22-99a7-94ed304aef78",
        "cursor": {
          "ref": "d026a13b-fcc2-4b65-868e-533986049df2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ca3c83ef-96ee-4b86-887e-b5c6bdd98e1b"
        },
        "item": {
          "id": "10341522-867a-4a22-99a7-94ed304aef78",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3d2f05b7-7d49-4f4d-9b49-bff43969d9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea58b68e-3306-4fda-9855-a367a06fa48d",
        "cursor": {
          "ref": "edf35a55-5a5d-4461-b479-419985bdd468",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a136e558-6ac1-4b01-ab9b-a63e97c281f4"
        },
        "item": {
          "id": "ea58b68e-3306-4fda-9855-a367a06fa48d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "672877fa-9912-41b2-99aa-3b69b57f1d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d79ac82-7e2d-4aa2-b541-f8e267ec7794",
        "cursor": {
          "ref": "ed6fe820-0cd5-47b6-acbc-e19c18b34251",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2771b417-5c45-43c4-a1fa-a7a316f7657e"
        },
        "item": {
          "id": "9d79ac82-7e2d-4aa2-b541-f8e267ec7794",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7c4cca5-f767-4890-873c-c112feeb1dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56051e48-1900-4d29-afff-c01824cf38f7",
        "cursor": {
          "ref": "263f94a7-e24d-43fd-adbc-36bb21757cf2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "af3f79ae-29e7-4ffc-addb-8bf33149f7bb"
        },
        "item": {
          "id": "56051e48-1900-4d29-afff-c01824cf38f7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "93922b0e-1bde-492f-839d-288a789ae3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58802e80-c2cc-4eac-babe-d8e792e646f5",
        "cursor": {
          "ref": "be4f3265-3b1d-4f99-a39e-1aaf6693a50f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0da20013-498b-4d17-8987-d181e4c942ad"
        },
        "item": {
          "id": "58802e80-c2cc-4eac-babe-d8e792e646f5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24f344ab-4eb1-4c38-98a7-15f07f753348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4b416d-b72d-4851-a565-a73dd4c5f211",
        "cursor": {
          "ref": "395e9b96-647e-417e-b7cd-9cd978a5b262",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "03c78620-dace-44f5-95cb-d298346470ce"
        },
        "item": {
          "id": "2e4b416d-b72d-4851-a565-a73dd4c5f211",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "df98dc3c-75a5-4c89-8eda-b6c8ed175d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b044c8d-1c46-46c0-bf95-1fb76cbde697",
        "cursor": {
          "ref": "2546ca35-c4ad-4ba0-b4c4-55dd551db896",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "211f80b9-8f08-4121-ae98-1791526d475f"
        },
        "item": {
          "id": "7b044c8d-1c46-46c0-bf95-1fb76cbde697",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2cfe1183-ba0c-4151-8cce-1a9513101c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d779e2-7814-4dff-95da-e7fc3a25159e",
        "cursor": {
          "ref": "13bf5782-46dc-45c3-8069-82e0cc2d7064",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9c8c6e0c-a5aa-4a0a-bea0-09fc5377f6f7"
        },
        "item": {
          "id": "32d779e2-7814-4dff-95da-e7fc3a25159e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "06861609-e905-4bcf-8c77-9d276e829001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f1c880-440c-4211-a25c-119b545da519",
        "cursor": {
          "ref": "4462527c-d570-43a1-b76a-468dbdd8a27c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4dea9efa-f1ce-4af3-a45c-a42e82afecc9"
        },
        "item": {
          "id": "a1f1c880-440c-4211-a25c-119b545da519",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eb1f4787-6987-4299-83ef-2569495a439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608785c7-11ec-410d-a951-ae188d133bb6",
        "cursor": {
          "ref": "bfdeb6a2-424a-4734-b63f-74f6fbab5123",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7023cfeb-ef97-4a77-b208-298b68a6ccda"
        },
        "item": {
          "id": "608785c7-11ec-410d-a951-ae188d133bb6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c90852ed-40c0-492e-a5e3-739c65ea1c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead54ec5-655e-4dbe-abdc-155d787901d6",
        "cursor": {
          "ref": "9cc93bba-053b-493b-bf5a-80c987dcedea",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5da8843f-1bfe-4d4f-8311-cd37b7ce82fc"
        },
        "item": {
          "id": "ead54ec5-655e-4dbe-abdc-155d787901d6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "45b81e33-7ac0-4ab5-80ac-9be7822cb353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d820fdb-4668-4f20-8152-79e39b9f1796",
        "cursor": {
          "ref": "8d19d69f-e9f7-4d12-b881-8264b159acd5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "513f3f3a-9018-49e4-b9b2-71acc95d5aff"
        },
        "item": {
          "id": "8d820fdb-4668-4f20-8152-79e39b9f1796",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "83800f23-5892-46e1-bf3f-cc484d8823ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb28f6b9-f470-4b3f-9fb2-6770be4ff618",
        "cursor": {
          "ref": "ba53cd24-a6d3-49ad-ab03-f5661b4fa71d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ba712d60-80f7-4446-b0bc-d51cf0ec75dd"
        },
        "item": {
          "id": "bb28f6b9-f470-4b3f-9fb2-6770be4ff618",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c6c79037-e13e-4ac8-bc5d-e3e4b168c7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c9421f-a3a3-4ee7-9fa4-f223d34b9393",
        "cursor": {
          "ref": "36092592-ba75-478c-9217-bfa91e5f988b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "73099745-44ce-4a12-a158-d26d1411a0db"
        },
        "item": {
          "id": "99c9421f-a3a3-4ee7-9fa4-f223d34b9393",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "544c2dff-e81d-4232-b25f-46340913fc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d38cfc-a6a6-436f-889f-87aeb65d6913",
        "cursor": {
          "ref": "85e0c94f-3bfd-467e-8650-e5ff6786b5b2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3ba818b4-b839-4f8c-a745-50e8d9a3c476"
        },
        "item": {
          "id": "48d38cfc-a6a6-436f-889f-87aeb65d6913",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3323c404-06d9-4849-ac1e-34f9a0dff37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349924bd-88e0-4346-95f0-afb28cb2d7c7",
        "cursor": {
          "ref": "7d6602f8-30d8-4bf8-aeff-d0a15ad78a86",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9f522927-a140-4f1e-92cd-2f93d9005222"
        },
        "item": {
          "id": "349924bd-88e0-4346-95f0-afb28cb2d7c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "48dc88c0-f016-4cbc-9a25-42cc23b3f120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afc5565-33b2-44f8-9a3b-f0786194bbb3",
        "cursor": {
          "ref": "6538e840-7fd8-479f-aa9e-77d110cdae7f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5f0083d4-5cd9-4ab7-b78d-e2cb226e4ece"
        },
        "item": {
          "id": "9afc5565-33b2-44f8-9a3b-f0786194bbb3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2edbb6ff-ba5b-4e2d-bd07-2b1508c18255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbbd863-2619-4628-916e-ca927e4c6b1b",
        "cursor": {
          "ref": "43b56a8b-b532-4d5f-af2a-cfbbc1e5152e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0d373583-6a47-41b3-a774-2c08454553b5"
        },
        "item": {
          "id": "ffbbd863-2619-4628-916e-ca927e4c6b1b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0d93122-5362-497f-b136-9b72158ffcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4841aab0-0a9d-47dc-8db0-7b57ab24c452",
        "cursor": {
          "ref": "5334eb59-e61a-450c-b93e-93eca42e3abd",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "db034a43-31c4-4548-be7f-fb165a4f1330"
        },
        "item": {
          "id": "4841aab0-0a9d-47dc-8db0-7b57ab24c452",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2e7117ee-11f5-43f0-b4b1-89b6e0e21477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e946b4a0-7148-4558-8230-d6b6efa62583",
        "cursor": {
          "ref": "6a39efd4-e887-4a75-b1fb-7d87e4402546",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d8c29ed2-f44b-41d5-b846-18439424a811"
        },
        "item": {
          "id": "e946b4a0-7148-4558-8230-d6b6efa62583",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7c82d42e-bf58-4ece-8c75-c24f6871130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8a1b5-e543-49a0-87b5-e0ccbaf29574",
        "cursor": {
          "ref": "5981c82f-1397-4aaf-b19b-2afe63d5af92",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d945960a-c7f8-4870-86a2-4a1f88b4d253"
        },
        "item": {
          "id": "38e8a1b5-e543-49a0-87b5-e0ccbaf29574",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8ac31306-fc8d-45af-aaf2-7a220ab44be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e21f7a-dcd4-4920-9633-90d2624a1920",
        "cursor": {
          "ref": "2c0c8f20-b639-4f09-acd5-489e36c6e3ad",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f05064c-dc9d-4548-abb2-9117ff39eec0"
        },
        "item": {
          "id": "21e21f7a-dcd4-4920-9633-90d2624a1920",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0cf92d02-8ff0-4640-8782-5ba95a746f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd56e951-5555-47bd-917d-51601a4ccd7e",
        "cursor": {
          "ref": "573e7014-371d-45c0-ace1-5abe9215477b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8668436b-7b09-48f7-b59d-71bdc23467bd"
        },
        "item": {
          "id": "fd56e951-5555-47bd-917d-51601a4ccd7e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4b008aeb-6e82-44e2-be3b-4265c7953be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bab5ab-c4f5-41d0-a882-a5395a089c50",
        "cursor": {
          "ref": "adc3114e-c49c-4c7f-a880-907423a8807f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e9154a42-48ac-4b67-a80b-dfa471786c78"
        },
        "item": {
          "id": "72bab5ab-c4f5-41d0-a882-a5395a089c50",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "61f6f01a-748f-4bde-9603-48e3c8291c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de63cb5-1fc0-429e-8af3-0533d5a50338",
        "cursor": {
          "ref": "2f5ac280-219f-46d3-934f-e7998829e429",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "96b2af3f-ff33-4b40-92b2-e7d623e296e6"
        },
        "item": {
          "id": "1de63cb5-1fc0-429e-8af3-0533d5a50338",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "566856e1-4e63-4f11-8118-9a2b370378df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f05a5a5-0818-4ce3-9509-bd7b60d7737d",
        "cursor": {
          "ref": "ffce7456-29be-4c89-8444-08d88e9bb612",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "900764e5-20fb-418d-8c18-3e977c89c711"
        },
        "item": {
          "id": "7f05a5a5-0818-4ce3-9509-bd7b60d7737d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "255126e4-be35-4bfc-99b5-50efb5a48997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6506be-ac54-4da2-b70c-02ce3329abf3",
        "cursor": {
          "ref": "a380ea0d-b9e5-4d40-b0b0-b10e506f20eb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3867c212-21c8-4dac-95e9-79b3ae24f8c4"
        },
        "item": {
          "id": "7b6506be-ac54-4da2-b70c-02ce3329abf3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5989ba7a-7b07-4182-995b-e4b1b875de1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663251b-7aa6-4d97-9728-704ac33f7fee",
        "cursor": {
          "ref": "612bf041-3bab-4ae7-8284-4e29ee5e5e1a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c4427137-f469-49c5-af08-ee6de0302d89"
        },
        "item": {
          "id": "1663251b-7aa6-4d97-9728-704ac33f7fee",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6495f888-e858-4104-9428-e328dfbf577f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d66afaa-e582-4568-b7f3-b76650bb9496",
        "cursor": {
          "ref": "e69c051a-82d3-46a4-8a2d-e85477f5cce7",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "55e9771c-8333-4dbb-a771-59a0ab35df7e"
        },
        "item": {
          "id": "9d66afaa-e582-4568-b7f3-b76650bb9496",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "48379609-d673-4c86-a5c7-9ad652081791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9c2905-9462-4746-8fdf-6f351055163a",
        "cursor": {
          "ref": "27253efb-0c9b-469b-b00d-57ede94d18d7",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5f081559-b18e-427e-9de3-6986fcd6a1e9"
        },
        "item": {
          "id": "db9c2905-9462-4746-8fdf-6f351055163a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d7482dfc-b34d-46f7-93af-7990dbad1db0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93f6ccc-a17c-4575-a505-f1aef8493e99",
        "cursor": {
          "ref": "287f7c09-112a-43d0-ae89-768b7105fe01",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "57afc941-fd83-48ca-b9c3-877fe609738b"
        },
        "item": {
          "id": "f93f6ccc-a17c-4575-a505-f1aef8493e99",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3c2424cb-2d5a-4d99-bd1f-42ec2996b170",
          "status": "Created",
          "code": 201,
          "responseTime": 8748,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb0bc49-7ea1-402a-95f2-397265f6e885",
        "cursor": {
          "ref": "78107525-ede8-4ce4-9aa6-3d8574784072",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c53dadf-824e-4b95-a524-cfdc955bccd4"
        },
        "item": {
          "id": "feb0bc49-7ea1-402a-95f2-397265f6e885",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "607846ca-1291-4c0d-9d68-e78c33fc930f",
          "status": "Created",
          "code": 201,
          "responseTime": 8722,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "680733cf-0652-4670-9529-9dcfa486012e",
        "cursor": {
          "ref": "e32c8041-217a-478b-9c9f-9aa7562c77ff",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c4c80bed-d53c-4a74-8d3b-4d91e623c9f4"
        },
        "item": {
          "id": "680733cf-0652-4670-9529-9dcfa486012e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "02b4d926-859d-4192-8d3a-1e8fcd728abe",
          "status": "Created",
          "code": 201,
          "responseTime": 7505,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99eac7b-175b-4193-9374-c55f11b756d4",
        "cursor": {
          "ref": "ab81ad7a-8b2e-4d52-a7e1-18970955ba7d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5a6f2bcc-2f00-432a-be74-33f8b2dd5dce"
        },
        "item": {
          "id": "b99eac7b-175b-4193-9374-c55f11b756d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74f53ba6-23c5-4014-bc91-b3d1755993ac",
          "status": "Created",
          "code": 201,
          "responseTime": 8329,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ccf26b-0ddc-42d4-bc94-645f0fdf086a",
        "cursor": {
          "ref": "711c1590-2897-4e6d-a1c6-3c6139f40ac8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "66defe81-ba91-4b39-8b9c-29e77b056e23"
        },
        "item": {
          "id": "83ccf26b-0ddc-42d4-bc94-645f0fdf086a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31502d20-eaee-4d35-ac59-be62e82d1596",
          "status": "Created",
          "code": 201,
          "responseTime": 7253,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeba8664-816e-4660-9052-f0ee4b058f34",
        "cursor": {
          "ref": "f8c01252-ab6c-417a-bffb-a12755793815",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "22ae25f6-bc51-47b2-9eea-a76b39aefe70"
        },
        "item": {
          "id": "aeba8664-816e-4660-9052-f0ee4b058f34",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "eb19dc28-67f9-466a-917b-4773dd770126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6a13acc5-ef8d-4b72-b49b-d685a6f85faf",
        "cursor": {
          "ref": "1bc74e9e-5474-4fc2-a3e1-aad637784120",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a0a53bff-d23d-48fd-901f-6049d646fdc6"
        },
        "item": {
          "id": "6a13acc5-ef8d-4b72-b49b-d685a6f85faf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "776ee66d-3b0a-471c-804b-5963e6659553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196cb927-8220-4388-b97f-ad14b6d96a48",
        "cursor": {
          "ref": "37b2c6e5-55ad-4ee8-9e35-8aec03682fb0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "26e4efe0-5bd0-455c-8a07-bb3b431b7f9d"
        },
        "item": {
          "id": "196cb927-8220-4388-b97f-ad14b6d96a48",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "620d0d33-85b5-4556-85c6-0e3c585da410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d7ef75-f4fc-4cec-98ec-915a7de945b7",
        "cursor": {
          "ref": "a4eabf24-898a-4855-b270-a0c1f2f6aa5d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a7efc793-8709-4429-9a2f-33fcbdb8daaf"
        },
        "item": {
          "id": "85d7ef75-f4fc-4cec-98ec-915a7de945b7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f2171b6-9f8a-4e7b-ac64-bd65b76f6061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb878685-67e8-4936-a287-8791c0614a18",
        "cursor": {
          "ref": "441faaef-3259-4dc9-89d0-bc75041cf71b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bfa09481-a76b-4a50-9165-baa9f88bb687"
        },
        "item": {
          "id": "bb878685-67e8-4936-a287-8791c0614a18",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f120e763-c182-4900-86dd-170bb9036077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952ffe70-092c-4ed2-a978-68e6a7fb8dea",
        "cursor": {
          "ref": "09499aa3-5e6f-4a98-a6e8-f50a61434bf5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "628f9ed8-82c7-4fbd-88ef-e7ed876f21ae"
        },
        "item": {
          "id": "952ffe70-092c-4ed2-a978-68e6a7fb8dea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9360ba12-27bb-4cd2-89ac-0e29c061addb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b728081-1d0e-4a52-babd-54f27415d1b4",
        "cursor": {
          "ref": "341645f7-da0d-40f8-8054-54058ee6aadd",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b4008071-65cd-4232-a3d4-de035ecafaf5"
        },
        "item": {
          "id": "6b728081-1d0e-4a52-babd-54f27415d1b4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac77c1f2-1572-4204-a19b-aee270bb7859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a6ffae-2da4-4989-aa2b-aa178f40e1f2",
        "cursor": {
          "ref": "26353a71-3093-4a6f-9632-dd94ace6d280",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4ec471af-7bfe-4f64-991a-d88052d4318f"
        },
        "item": {
          "id": "f9a6ffae-2da4-4989-aa2b-aa178f40e1f2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24fa9bb6-2502-4c7d-943f-6ed00db85547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e41150e-527b-4aef-8260-6ee766b75415",
        "cursor": {
          "ref": "92a08833-9dbc-465f-abf8-c01b44275d71",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "98b867f5-2952-4a22-bb42-70cb602ea3a9"
        },
        "item": {
          "id": "7e41150e-527b-4aef-8260-6ee766b75415",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12a18159-f2b2-4211-a6ab-9d1233c5cadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a9816d-86a1-448e-88a5-78a861b10f29",
        "cursor": {
          "ref": "668543a5-46fe-431b-a16a-6848fe60422d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fbba9d5d-b0ee-4c09-bfa1-b34fbcf75092"
        },
        "item": {
          "id": "54a9816d-86a1-448e-88a5-78a861b10f29",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9ae7f90f-9eed-4f2b-9ab8-dcd3e847b576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b50bd26-45bd-4ba2-94fc-9179067a5884",
        "cursor": {
          "ref": "6ba0c2f9-3cee-4d2c-a553-1c4632ad5561",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "55a33dd2-aaa7-4e7e-b445-97316287caee"
        },
        "item": {
          "id": "4b50bd26-45bd-4ba2-94fc-9179067a5884",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cc4ad5ea-bfe8-4b69-bc08-4902b8b7cb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc60f3-83bb-478f-9c6f-32d9ab8448f1",
        "cursor": {
          "ref": "e4a1f599-54d3-4121-b678-f206ac420087",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1dbee4b7-7189-4b48-9b43-9e4106ec8539"
        },
        "item": {
          "id": "f9bc60f3-83bb-478f-9c6f-32d9ab8448f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "52627c75-7c82-4e2a-95c9-7276078478eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029073df-1dd4-4a19-b9bd-0ab078839d99",
        "cursor": {
          "ref": "551522e3-e83e-4739-aa7d-dc8d77b6abfa",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f1bbd7f2-d5b3-4d9e-8dad-c7652cf1a63e"
        },
        "item": {
          "id": "029073df-1dd4-4a19-b9bd-0ab078839d99",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "16c128be-23bf-45b0-91fb-3df337f3c854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8466b2f4-1cca-42b7-b7f2-47ef2aa423ed",
        "cursor": {
          "ref": "03ef1d13-728b-4a62-90df-7fb4141ba997",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f9d683b3-afeb-41b7-8d9f-334ae41c1a55"
        },
        "item": {
          "id": "8466b2f4-1cca-42b7-b7f2-47ef2aa423ed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bcf9a517-f3eb-4624-bc29-130065d3e215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c87f361-d377-481a-8d4e-3a821acf0ec5",
        "cursor": {
          "ref": "93e5c289-89dc-4855-81a6-54bfe06e9201",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "06be8afc-e84e-4fa7-a8b0-94fb303793ff"
        },
        "item": {
          "id": "3c87f361-d377-481a-8d4e-3a821acf0ec5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a20cd557-9da3-4f36-9671-561ecf86d2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c8b63-9937-4048-8f6c-993e65cdacc0",
        "cursor": {
          "ref": "dd4310a5-d36c-4d4d-8dfa-a6b4c54fd69d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9a5bd975-f400-41b5-b458-eb3293bee786"
        },
        "item": {
          "id": "7f5c8b63-9937-4048-8f6c-993e65cdacc0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3c7870e0-2240-4de0-9a02-63079a2a4a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371bd0bc-3718-436f-b969-7c25bc64164a",
        "cursor": {
          "ref": "21b0664f-de58-4437-b5a4-5c861ca0681f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "426e7c31-9cdf-42c7-a649-394146f7adf8"
        },
        "item": {
          "id": "371bd0bc-3718-436f-b969-7c25bc64164a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6dbbdc46-28a8-4279-ab88-e6737e8c7c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c10c9f-0761-414f-94cc-676810934313",
        "cursor": {
          "ref": "076ab19e-ba7b-433e-be51-d14d2b83829d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9e70b2fd-e9a7-4f0a-ac4a-eb4a882215bc"
        },
        "item": {
          "id": "c5c10c9f-0761-414f-94cc-676810934313",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1acc8e4e-8dc9-47f3-b987-2fb1d78f7d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f1cdf-1d6c-46c3-bf39-63e3badb5757",
        "cursor": {
          "ref": "933afca3-c670-44b3-90fb-0d2540d86092",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "22899a19-f3d4-4f2a-8378-53145dfa9f4c"
        },
        "item": {
          "id": "717f1cdf-1d6c-46c3-bf39-63e3badb5757",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "977a7650-abf1-4f58-81b5-d9e1d2bfb79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888cc228-cb76-4a40-bd57-21bb711bd320",
        "cursor": {
          "ref": "20c4abc3-0d9e-46cd-9a3f-68a5c820d0d1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b8caa907-9742-40cf-947f-5b6e777dd0f4"
        },
        "item": {
          "id": "888cc228-cb76-4a40-bd57-21bb711bd320",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c108a1b2-d0b9-4299-a4dc-740864d298f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cb4e83-c018-4b17-a3a5-c768ef7b343a",
        "cursor": {
          "ref": "86934556-65b9-44e3-b6ee-03ddf49f493a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "497fb383-7aac-407f-b1b6-6eb2052a8b31"
        },
        "item": {
          "id": "77cb4e83-c018-4b17-a3a5-c768ef7b343a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6fdfbe31-3332-496a-be87-3b43be344132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea96bd03-cf31-4d57-8265-c9910d5d562d",
        "cursor": {
          "ref": "766fccb6-b286-47c6-a641-07783b0174a4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f973270c-bb3d-459d-bbdd-ed8b3b2cd61a"
        },
        "item": {
          "id": "ea96bd03-cf31-4d57-8265-c9910d5d562d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3faea46-182b-48f2-8307-32485c6b09d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b43eaf-4f39-4371-bdc3-a57be656d3dd",
        "cursor": {
          "ref": "7321dbd9-34d8-4fbd-b047-bfa596ade9ff",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "10765aec-400d-4354-a8c9-314d4f1c6241"
        },
        "item": {
          "id": "89b43eaf-4f39-4371-bdc3-a57be656d3dd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7650f81-1c31-4650-9de8-981ac03f2eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2b0fd2-2d29-436f-8d6b-079e35460a14",
        "cursor": {
          "ref": "b019db59-32b7-430c-b55b-9b028871e7f5",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2c3db6e9-8bee-4e12-aa2e-9e125c616afb"
        },
        "item": {
          "id": "0e2b0fd2-2d29-436f-8d6b-079e35460a14",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b77266d5-0a4b-4087-9d85-d194e5deeb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c78c3bb-d876-4623-a4b6-36b56d0e2578",
        "cursor": {
          "ref": "1bc99466-9c7c-4e1f-a79f-f1df2fc03078",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b42add9f-1ff8-46a4-ac50-b5c4ef2d4a5f"
        },
        "item": {
          "id": "2c78c3bb-d876-4623-a4b6-36b56d0e2578",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "abe26a8d-5058-46d6-be10-0cc8eeb0f2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad362657-e796-46c4-8a7e-6c8833480e16",
        "cursor": {
          "ref": "b812e32d-1b47-4e07-aef7-52303eabebaf",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a38f2dcd-03f7-407f-a28b-ab79a9afa3e6"
        },
        "item": {
          "id": "ad362657-e796-46c4-8a7e-6c8833480e16",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "502ec84a-1a80-4a6a-950b-b5a719bf05ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b42e78d-b4ab-4df3-8e62-1c9103236a19",
        "cursor": {
          "ref": "9efa11be-4e18-43ee-a365-a1188e77cee6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a76403e1-c66a-4b30-8eec-3181776583cb"
        },
        "item": {
          "id": "0b42e78d-b4ab-4df3-8e62-1c9103236a19",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f4f27ca0-5a5a-4290-a4cd-ffdc091cf7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98c1f6d-fe4c-4b16-8d2d-051dac0952e5",
        "cursor": {
          "ref": "4bff3164-1c53-41ac-81ad-93dedbd186fb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "46ce7a25-fb7f-438d-8265-2de79bde07bb"
        },
        "item": {
          "id": "d98c1f6d-fe4c-4b16-8d2d-051dac0952e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bff74bb6-7a01-4588-b300-87492cab8e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0599e8c6-9828-43fd-8bbe-1eaa7e254310",
        "cursor": {
          "ref": "a991293b-daa6-4821-aefe-9af2c90129c8",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cdcf7fd8-c2f1-46ae-99b0-132226fa1f55"
        },
        "item": {
          "id": "0599e8c6-9828-43fd-8bbe-1eaa7e254310",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e8779c8b-4f17-4911-8db8-f2d17b69bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa06f6b4-c9a0-4bda-a538-de34ba567c26",
        "cursor": {
          "ref": "2def6b9e-8f2c-4768-a0a5-edae348fddf7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bb104dd4-3a30-4446-a0f0-5f1f07771e16"
        },
        "item": {
          "id": "fa06f6b4-c9a0-4bda-a538-de34ba567c26",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "89e1e76c-ee9e-4928-8aa5-9a7fb9db91d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc8f5ed-111e-4088-a9c4-bcd3455b3e6f",
        "cursor": {
          "ref": "dae72a8f-9419-496c-bb74-aac7d2574f5c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f9d95d37-fad6-459d-b11a-1a570a9df419"
        },
        "item": {
          "id": "9dc8f5ed-111e-4088-a9c4-bcd3455b3e6f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c750f381-8c7d-423e-993a-c603a70023c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ec69ba-05ca-40a4-b86f-d60b84b389d6",
        "cursor": {
          "ref": "d86b5ddb-3afd-417d-a3b3-05bc77c240b7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0456447-4c23-4491-b85f-1aa14d025900"
        },
        "item": {
          "id": "b9ec69ba-05ca-40a4-b86f-d60b84b389d6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0e34ee49-6432-4a12-a4e8-0a1fb80a374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c41dc65-81cf-42f8-8194-e7b88f4762f6",
        "cursor": {
          "ref": "e031abb6-51a8-42a3-98be-61f83545ac39",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f8b79d0b-15bb-4769-b61b-e6e3e9794282"
        },
        "item": {
          "id": "2c41dc65-81cf-42f8-8194-e7b88f4762f6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "303a3ce9-232f-423f-b889-155a704f824a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aa8d5e-26dd-4ed6-86ba-65a453337eb4",
        "cursor": {
          "ref": "85ac9735-4f95-4413-9295-41263be96a69",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2692e776-7d27-46a2-83aa-62b59f74ff91"
        },
        "item": {
          "id": "49aa8d5e-26dd-4ed6-86ba-65a453337eb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03b00ecc-0588-4f3b-b228-af2e83129982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 210,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f65a43b-3b4e-4d17-b6f0-b295d8f4d600",
        "cursor": {
          "ref": "0564abbc-a9bb-4a88-95cc-effc55018467",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8cc7c21a-7d9c-4e35-8320-3386d00ad268"
        },
        "item": {
          "id": "3f65a43b-3b4e-4d17-b6f0-b295d8f4d600",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5aa6cf84-def9-4711-be32-c74f0ac11848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54109558-2f2b-449e-acf2-7d9ff22d130c",
        "cursor": {
          "ref": "ef5d80ed-5225-45c1-b359-0198d404ae90",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2636e189-19a4-4879-a7e6-ef00ce7d08c8"
        },
        "item": {
          "id": "54109558-2f2b-449e-acf2-7d9ff22d130c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c767c4d8-5bc7-4e3d-9e2b-f1670918d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6e1914-f691-4dc9-97a8-bee01000e2c9",
        "cursor": {
          "ref": "c4393166-f131-4f5b-8ca8-f0475b61525a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fbaa205f-20be-430d-bf91-7aedd0a0a4e8"
        },
        "item": {
          "id": "0f6e1914-f691-4dc9-97a8-bee01000e2c9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "351812c0-6d43-4d72-9a49-ad5f274c2067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5a1da9-0372-449c-9b8e-80109c6e13e0",
        "cursor": {
          "ref": "65301471-7b43-45d9-81ab-9acf70a7caae",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7ff4186b-62a7-4308-877b-0ec0c0c70d9e"
        },
        "item": {
          "id": "bb5a1da9-0372-449c-9b8e-80109c6e13e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e31ccf44-1e7e-479c-a8ee-e8a070cab452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f034d882-2e93-4961-9122-0b123635f1ee",
        "cursor": {
          "ref": "ece3d7ee-8ade-44f5-944b-c6bf449e52de",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3686e450-f703-423b-b813-1cebbd6ca713"
        },
        "item": {
          "id": "f034d882-2e93-4961-9122-0b123635f1ee",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b00c07a2-45a4-48e8-b4e0-dd2dc8cad2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467ae26c-8f26-464f-815e-4f9d499b35d1",
        "cursor": {
          "ref": "54a3a5ad-e136-4b9f-b70e-522c2b820dfc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ffc53064-b005-4b36-919e-b76d89d43b9a"
        },
        "item": {
          "id": "467ae26c-8f26-464f-815e-4f9d499b35d1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "410e5ced-32e7-4b7a-b49d-0b999ae96bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3420695-92d6-4e0a-b08e-50f6280b6c80",
        "cursor": {
          "ref": "21410f13-08a8-4417-8f8e-d1fbee85cc91",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "61a88ed8-4d5d-49bf-b820-593c0e87d498"
        },
        "item": {
          "id": "d3420695-92d6-4e0a-b08e-50f6280b6c80",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bd96c696-cb07-49f3-a236-b3421b6f9a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ee2c76-b477-4a89-b20c-d466363394bd",
        "cursor": {
          "ref": "6f4f739a-c19a-446b-a011-1061169bef6f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a9812dd6-88c3-42db-aa18-9b91aa824c25"
        },
        "item": {
          "id": "a5ee2c76-b477-4a89-b20c-d466363394bd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de67c2ba-708d-4088-a3e3-0a809fbab66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc2da8-438f-485d-a740-7baee5283f6f",
        "cursor": {
          "ref": "0591492c-61f8-48b1-8992-6e7fc76d85c2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "78622d5f-56ca-46d6-af93-cb65ea0284b5"
        },
        "item": {
          "id": "60fc2da8-438f-485d-a740-7baee5283f6f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "61909b31-a64d-46e0-b1ee-0c5ca5b59c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a948fdd-262a-4a2b-8fd9-0273cad046d5",
        "cursor": {
          "ref": "9c72ce03-90db-4460-b52a-416ca60b4359",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d01f5903-a09b-441c-82fb-fc089e1510a7"
        },
        "item": {
          "id": "2a948fdd-262a-4a2b-8fd9-0273cad046d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a8dd3405-8af7-4d46-b321-cd7e3d174601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfecbcb1-fd65-4f60-88a2-864b635f33b3",
        "cursor": {
          "ref": "f87eaf00-d687-41bd-bf81-967227553cb5",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d0d37a01-9ce6-432c-837b-f2eaca9cd80a"
        },
        "item": {
          "id": "dfecbcb1-fd65-4f60-88a2-864b635f33b3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c7c59181-cb6b-4cf0-9a79-86f6302049f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aba40fa-cd18-4e24-ad32-19f9acd0d5c5",
        "cursor": {
          "ref": "05bcfbfe-e272-495c-ad02-468e48dfab18",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3dee48ef-386b-4fda-ad46-7efd829b0398"
        },
        "item": {
          "id": "3aba40fa-cd18-4e24-ad32-19f9acd0d5c5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "14ab62a8-b8b5-4341-92e4-8955b3890646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4d1b3f-d821-4e8b-bcc5-0213bdffa687",
        "cursor": {
          "ref": "1d7df7b0-91c4-469d-b4b7-c42749508586",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f8ad5fb4-1b53-488a-8e2b-57fc16f744d3"
        },
        "item": {
          "id": "ec4d1b3f-d821-4e8b-bcc5-0213bdffa687",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11be256c-63e2-498e-a25f-d5d2be2b5c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ba52fb-1c05-4bc6-886d-f19454333526",
        "cursor": {
          "ref": "b1a4bf57-cad2-4040-a3fd-c94255b1c2b3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e30cf26f-8fd4-4591-b063-76ec06e0d0d8"
        },
        "item": {
          "id": "17ba52fb-1c05-4bc6-886d-f19454333526",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "560e5c53-4f0e-4635-b9da-7fe67ef7a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8bbae-616a-4342-b43f-4d600f84f158",
        "cursor": {
          "ref": "1b441830-6bdb-4c45-8b41-66b00cba9c33",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "deb39c8b-47cc-4ba7-bdef-ff6fd00e88d1"
        },
        "item": {
          "id": "bad8bbae-616a-4342-b43f-4d600f84f158",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "12322f57-169d-4f47-afac-6f5e22b1df14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1919b0e4-0efc-4677-920e-4a01f1503438",
        "cursor": {
          "ref": "3813b221-cbf5-4ad6-89d6-b462fff14756",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5cb1606d-119d-4d21-b3c0-70ba4388c218"
        },
        "item": {
          "id": "1919b0e4-0efc-4677-920e-4a01f1503438",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4b2d8017-06ec-4d06-bf84-fe59eb0340df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e8f1c2-9b78-40a3-9f84-70f3b096a616",
        "cursor": {
          "ref": "7c2d171a-8766-4702-9147-d3e475c33e86",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a235e87-a767-4fb4-8981-78f85c7cd189"
        },
        "item": {
          "id": "02e8f1c2-9b78-40a3-9f84-70f3b096a616",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6194d2ef-7f43-4b0c-9e5a-08fe24bb0d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c499d128-0756-4c9f-97ab-9fd1dac0d716",
        "cursor": {
          "ref": "7897b66b-8cdb-4322-b122-d0f2cc84cf24",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d1bd1a91-01dc-4411-abdd-697364bb2303"
        },
        "item": {
          "id": "c499d128-0756-4c9f-97ab-9fd1dac0d716",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f4ca12c-1588-4ba1-91e7-f5740b7a0b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5ada93-baed-45a7-9de3-4e1c47e7762b",
        "cursor": {
          "ref": "20ebff94-797a-47ca-be1c-fdd06fab21cd",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f88fc5a4-3688-4cc5-91b6-f006b2f7407c"
        },
        "item": {
          "id": "7c5ada93-baed-45a7-9de3-4e1c47e7762b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9392cd8a-a3e1-4ea3-a819-8018c5564377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78e8c23-772d-4346-a50c-ab092f06a915",
        "cursor": {
          "ref": "0891c476-ef45-4d12-95e6-5a9ad2749496",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6f65a031-42b4-4eb7-887a-c2958fb14fdf"
        },
        "item": {
          "id": "b78e8c23-772d-4346-a50c-ab092f06a915",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0d6813af-c981-4489-ad3f-d447ef411dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c65d38c-234b-4b9f-85da-32d92f915ee6",
        "cursor": {
          "ref": "cce9bc22-919e-43c1-80bd-7f91f8ee9d07",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f9299a83-1db1-4878-a8a8-3c63d1bbc1b5"
        },
        "item": {
          "id": "0c65d38c-234b-4b9f-85da-32d92f915ee6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "78634d3d-c89c-4fe3-8424-620f958cce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a0f570-acce-4a02-b2d2-6c3208e48877",
        "cursor": {
          "ref": "0bb26df0-6852-490a-8dd3-52077354cf38",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6cdc7f12-4dcf-42f1-ac06-c1669a759d0f"
        },
        "item": {
          "id": "92a0f570-acce-4a02-b2d2-6c3208e48877",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9aeb0229-6229-40fb-9ac5-4de5adeabe2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da71117b-b4da-4669-8676-13e96db0d943",
        "cursor": {
          "ref": "b4ff0de6-5667-4fc2-84ad-7c769c735a3c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3b557ffe-2a0b-44c9-bb78-a135f2f70881"
        },
        "item": {
          "id": "da71117b-b4da-4669-8676-13e96db0d943",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f65191f4-928d-48dc-b1aa-5172b9f52a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416ce18e-1ce3-4579-a6f7-300d19606ea0",
        "cursor": {
          "ref": "41a87f07-2619-4391-a0ca-9d48b45eef8e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6c8eadd7-93b5-4616-bb76-309ece5aa4f1"
        },
        "item": {
          "id": "416ce18e-1ce3-4579-a6f7-300d19606ea0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "72ec7e37-6ba4-4d16-93b8-726894836db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa0364e-6c0d-4ad8-8d59-b1269295fb3e",
        "cursor": {
          "ref": "805bf9dd-61d8-45f0-abd0-876b3752552b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "72589f49-95ea-42f1-933a-d7b27d88c087"
        },
        "item": {
          "id": "caa0364e-6c0d-4ad8-8d59-b1269295fb3e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fed1631c-194a-43fd-ac56-1551a0367988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ff719c-e9f9-40ad-9d36-109024be9bb5",
        "cursor": {
          "ref": "60ca24bb-54d4-4440-aef4-b48a72855ad9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ddd340bd-e263-41ab-bd81-d2b50fb36205"
        },
        "item": {
          "id": "54ff719c-e9f9-40ad-9d36-109024be9bb5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8fe9dd97-b33a-4827-9055-57f1a3e0a1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255a5d0b-b9a8-4a88-a414-a8a5b3516717",
        "cursor": {
          "ref": "dd873d97-80ab-46f7-8e5e-80eccc4699ce",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "61fe3abc-5997-4d6d-a4d8-69ed29cb5548"
        },
        "item": {
          "id": "255a5d0b-b9a8-4a88-a414-a8a5b3516717",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "87e57a02-4b5f-4365-b0fd-d461bbbcfa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec7d9b-f3bc-442b-a83e-ed4ca268323c",
        "cursor": {
          "ref": "f9e1cbc9-ca2c-4adb-b049-e3dea8c036b9",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dbcec6bb-d348-4355-97ea-3b7701b98170"
        },
        "item": {
          "id": "58ec7d9b-f3bc-442b-a83e-ed4ca268323c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb907885-b4f0-4306-b5c2-b3cd007099dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614e8ee0-c8f2-4830-842f-d88624afc3c0",
        "cursor": {
          "ref": "4982b422-c665-4f1b-b85b-44d9aa9e362f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c7546683-5629-4baf-8b19-f9616ded5438"
        },
        "item": {
          "id": "614e8ee0-c8f2-4830-842f-d88624afc3c0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "74b1d021-5dff-46e3-8b6c-48bede57460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f983a0f3-c6ec-4831-84ae-5c880772e277",
        "cursor": {
          "ref": "a8e8d90f-263e-4b0a-8e61-97f0f5ed09b1",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9c7fc942-fbba-448b-a12f-3330100d2725"
        },
        "item": {
          "id": "f983a0f3-c6ec-4831-84ae-5c880772e277",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "984579e3-896e-488a-8505-77eda9d4a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f932c75-39fb-44ff-82e2-47dfcd338f8f",
        "cursor": {
          "ref": "9a2bee97-0e03-4770-855b-ff3880923d1d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c2c8f72-06b9-4f76-af59-3f76eb266448"
        },
        "item": {
          "id": "7f932c75-39fb-44ff-82e2-47dfcd338f8f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a15bb412-f013-45d5-8168-3129593bdc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d31869-cc01-428a-b190-bc35b87590b0",
        "cursor": {
          "ref": "b9b2a7b6-32dc-4e52-bdc7-e8e1f217ed0e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ab8d1873-b1c6-4f0f-aafd-de5384b4ad36"
        },
        "item": {
          "id": "c0d31869-cc01-428a-b190-bc35b87590b0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "faa9ecdc-efc2-4fb5-9502-3cb6cd1abf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf926d4e-0db5-4458-8bf8-8ef1739afddc",
        "cursor": {
          "ref": "a5309697-e39b-4fff-aaf6-3407c0ed0e8d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a98965dd-e5ea-4c0f-a9f0-a65be6c6fba2"
        },
        "item": {
          "id": "cf926d4e-0db5-4458-8bf8-8ef1739afddc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1bce5031-2682-46f4-8511-c5449ae001ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4029ab7-f17e-45e2-b02e-38399b4384a6",
        "cursor": {
          "ref": "fb43cbf9-79d9-4be2-85e8-df75dd9925e9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "90a8a563-a1c2-4805-a075-94ffbbe24f15"
        },
        "item": {
          "id": "d4029ab7-f17e-45e2-b02e-38399b4384a6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "37461a44-6368-4e6d-b351-803a81f265e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade0172-67ea-4e34-a34a-f98776d77253",
        "cursor": {
          "ref": "967bb739-9e6b-4dd7-ad6a-e9e0707c95fe",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "959a1260-c3a5-414a-bb23-8032f7cbba09"
        },
        "item": {
          "id": "bade0172-67ea-4e34-a34a-f98776d77253",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0080d99d-f196-4288-b40e-51ad3c861bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2dd0fd-6bd9-42a5-a6b0-2c82e7c80c0c",
        "cursor": {
          "ref": "d987a6a1-689f-48dc-8158-e91cb06347d4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd11ffc1-bf9c-4703-88f7-c6f6d6adbbd8"
        },
        "item": {
          "id": "3e2dd0fd-6bd9-42a5-a6b0-2c82e7c80c0c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "04fae676-cb28-47c8-bfc2-960e5c07a086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fce2bd-c0db-445a-9f96-12c4a818461d",
        "cursor": {
          "ref": "2f678b15-7b27-4b10-b967-b2b7af0b06be",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1b604f1b-3eec-4fe6-89c7-5c952859f2ac"
        },
        "item": {
          "id": "b5fce2bd-c0db-445a-9f96-12c4a818461d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1072d695-d4c9-403b-8193-d085e21dc2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2258e5a-d997-414d-8fff-5a302253608e",
        "cursor": {
          "ref": "aab0315e-8fed-44b3-a7b1-db7db68214fa",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "58461107-0246-4823-ad53-4c8d8c31ec43"
        },
        "item": {
          "id": "f2258e5a-d997-414d-8fff-5a302253608e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fbb7c21f-da77-4563-b195-c1961f800cf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f354e7-7b27-49d9-a5ed-08308ae93184",
        "cursor": {
          "ref": "815e707e-57c5-4c37-b9ad-197977c13c0a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "45ee855b-566a-45ee-9192-085407e88aa1"
        },
        "item": {
          "id": "63f354e7-7b27-49d9-a5ed-08308ae93184",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8ef988b-d3d1-452a-9b6f-4df0a5a0f143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc22a2dc-8a00-480b-9970-82a511822066",
        "cursor": {
          "ref": "668674d8-70c1-4349-be24-871f72d4a26e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "abf64dba-ffa9-464d-b527-8d3410822e2a"
        },
        "item": {
          "id": "bc22a2dc-8a00-480b-9970-82a511822066",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "56a2daa9-9c62-425b-ad64-68c56a36e2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd49fe61-ff17-41cf-bf0c-d3525084805e",
        "cursor": {
          "ref": "17c4d00c-4ddc-4dd3-88ed-20bca6327c26",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7baca62e-0240-41c2-b89b-162e6df78c0f"
        },
        "item": {
          "id": "bd49fe61-ff17-41cf-bf0c-d3525084805e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f6d83b8b-27d6-44ae-9d26-16b106df4084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39fb93a-f657-4c5f-aa9e-36f2855164b5",
        "cursor": {
          "ref": "8d8dd6eb-4b96-4c13-acaa-9dec9dcdf356",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "663ada8e-3c14-4952-9984-02062c605740"
        },
        "item": {
          "id": "b39fb93a-f657-4c5f-aa9e-36f2855164b5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "621f2a92-db56-4a89-a598-7d8882e50465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ee27cb-1d7a-40e0-b740-c231b4bae935",
        "cursor": {
          "ref": "25ce2a12-11f7-4ec9-b869-f01e1cb1fb27",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f030b7f7-6c78-4e1e-865d-bf5fca4a3bfd"
        },
        "item": {
          "id": "b1ee27cb-1d7a-40e0-b740-c231b4bae935",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "28c705e0-5f4f-41a4-8020-007b9246fadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b41d25-dc52-46b9-bebb-edc986c0a4ed",
        "cursor": {
          "ref": "b0ce4cc6-57d3-450f-9718-32c0b41de744",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "648f391d-7616-4fab-8b05-20224e6d964b"
        },
        "item": {
          "id": "57b41d25-dc52-46b9-bebb-edc986c0a4ed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "de0560b4-41a7-4359-bea5-df6e9dbd3827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7c3cea-2e7e-4fab-a293-c503668d82f6",
        "cursor": {
          "ref": "459aafe9-9646-46c8-83a2-c8742d3e68ce",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "751166ae-b8d5-4da1-aee5-8b781e8c1274"
        },
        "item": {
          "id": "db7c3cea-2e7e-4fab-a293-c503668d82f6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "26dd0709-7122-463d-bc8b-67a58e1d6776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded58b79-5ba6-4b7e-88ea-bd95c8010aa1",
        "cursor": {
          "ref": "548f8102-7df8-423f-955f-17702279de77",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc871b7c-6dea-44e5-ae30-2ac3df777645"
        },
        "item": {
          "id": "ded58b79-5ba6-4b7e-88ea-bd95c8010aa1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bc14debf-b556-48a2-9f41-73ec62c0b28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9099f00-3bbc-4916-bc27-b58ee7896249",
        "cursor": {
          "ref": "a87aca9b-87cc-462d-a1ab-8c149a007403",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "30e36668-4bb8-4dac-86e6-6a28c56f4bce"
        },
        "item": {
          "id": "e9099f00-3bbc-4916-bc27-b58ee7896249",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9583c8f2-bb85-4a9d-9501-c18ef7627c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6160c82e-c232-4b7b-8770-b84665279d9e",
        "cursor": {
          "ref": "87e8651f-06d6-4607-9b89-31e338aa173c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "809a1b2c-b878-4776-99e1-014e134f6045"
        },
        "item": {
          "id": "6160c82e-c232-4b7b-8770-b84665279d9e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1f72d825-91f4-49fb-ba79-a50ce23635da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fe6bba-244f-4b32-8693-f99c56df2a51",
        "cursor": {
          "ref": "a8bbbe02-1a8e-4142-922c-0eae9402198d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "072d7109-34e6-492f-a506-ecfbdbd97020"
        },
        "item": {
          "id": "86fe6bba-244f-4b32-8693-f99c56df2a51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "77e5f033-44d9-4b15-b533-aff3e94cefcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e86097-69d4-4172-a8f5-26dbe12c6f16",
        "cursor": {
          "ref": "f66f716e-a746-4bd0-9015-67f2531089da",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "324bdc65-ae0f-44cd-847a-6af6e351192b"
        },
        "item": {
          "id": "13e86097-69d4-4172-a8f5-26dbe12c6f16",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6a742304-6b41-4dba-b736-c3be766dc4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50872ec-f3f0-47b0-a080-4dc4fc0d489d",
        "cursor": {
          "ref": "4ce84f3d-19ca-4cc3-b2df-5ee7f1ea9e05",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5039c94e-1622-4ad8-aa1e-08c2f03a2938"
        },
        "item": {
          "id": "a50872ec-f3f0-47b0-a080-4dc4fc0d489d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0e437099-8ac6-4214-b976-f79985368384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4971e3-04f5-4f49-af2e-d8adf3e89d35",
        "cursor": {
          "ref": "50e76534-2983-49d8-b545-f90088075be4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7902f266-4505-41eb-8cbc-512f5d34f2cb"
        },
        "item": {
          "id": "6d4971e3-04f5-4f49-af2e-d8adf3e89d35",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b3402051-1ff7-471c-8271-d2eaf5f82a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3886dd6e-249b-4304-89ad-5a73b28f09a4",
        "cursor": {
          "ref": "2472e330-c1c2-4db7-adc3-a4bce1f4e18a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4bc4a57f-a895-4787-a2ec-7f05b1f883db"
        },
        "item": {
          "id": "3886dd6e-249b-4304-89ad-5a73b28f09a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b584832-7bf3-4405-9797-fdbf86308131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e4d1ce-4cfd-4943-b155-814efa6e4a3c",
        "cursor": {
          "ref": "15fe4488-5437-4537-8725-4f6abf4666a1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1c1356e5-b542-480c-8041-46d462330b0e"
        },
        "item": {
          "id": "61e4d1ce-4cfd-4943-b155-814efa6e4a3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a9cec54c-9378-43a5-b296-22d5a5e2d812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aedeb02-25d4-472f-a153-05483862f945",
        "cursor": {
          "ref": "3d0a47e1-9503-4c84-9bca-13088649455d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73bc8017-4596-4232-a99b-02f70fa3396c"
        },
        "item": {
          "id": "9aedeb02-25d4-472f-a153-05483862f945",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1cc6da57-28e8-4804-be84-4d3726fd7609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2436b1e6-9aea-4f0a-9984-fb7939fc0b19",
        "cursor": {
          "ref": "9cf93589-e350-4278-a122-220e1fbd2c40",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1b5d54aa-abc0-42e1-9b64-c753b3001286"
        },
        "item": {
          "id": "2436b1e6-9aea-4f0a-9984-fb7939fc0b19",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cfa1fc19-982f-4212-bf77-6379617c026a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e5bbc8-3316-48bf-8182-aaa3c67f9b4d",
        "cursor": {
          "ref": "6f61188b-90e7-4b0f-bb50-0adf11ff020a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c9f549c4-d354-4914-87ef-43333e7c5534"
        },
        "item": {
          "id": "64e5bbc8-3316-48bf-8182-aaa3c67f9b4d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a8884a2d-6d73-4e44-b423-8ee423a432ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a41c53-eb61-4e09-9d3c-57723ea12834",
        "cursor": {
          "ref": "33240afa-96a0-44c1-bcfa-bf655d0f915f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6496f33-8d1c-4a1e-8868-6d1a14a4492b"
        },
        "item": {
          "id": "36a41c53-eb61-4e09-9d3c-57723ea12834",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6db3390d-2f96-47e4-92a8-4ab9ce08d4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122b4572-e7bd-4da7-ad83-6cb6e2bbf1cc",
        "cursor": {
          "ref": "460b29c0-c4c2-413f-b139-0efe9c372c44",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "db70e61f-8378-42d3-b57f-d110b73ed7cc"
        },
        "item": {
          "id": "122b4572-e7bd-4da7-ad83-6cb6e2bbf1cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d1c92cd5-3ce5-476f-a88b-629a138970f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fff08fe-307f-4170-96b0-b94a48671c7c",
        "cursor": {
          "ref": "aa38d67d-2b78-4e9e-81ed-ec55b0adf069",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7d9a3d66-ff43-4c16-a6c7-3f5a5473f2f6"
        },
        "item": {
          "id": "9fff08fe-307f-4170-96b0-b94a48671c7c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3754d6f5-838d-49f5-86d2-5bdd66085aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3120a19-d10c-4b0e-ba36-9a7cfd7fbf7f",
        "cursor": {
          "ref": "309713a8-5b82-45fa-8bf3-1153957450d8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fc0ce66a-c9d4-47f4-98a1-d8c4428399d3"
        },
        "item": {
          "id": "b3120a19-d10c-4b0e-ba36-9a7cfd7fbf7f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c975d5cd-3657-4568-9a5c-44d35e0e5ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6826a0a9-5180-4402-b332-35a2de94d54d",
        "cursor": {
          "ref": "2ce6d3ad-1ba6-4522-908e-aab5fb69f8cc",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "41fcbd62-fb3d-409f-a576-a1597360e9bb"
        },
        "item": {
          "id": "6826a0a9-5180-4402-b332-35a2de94d54d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "645be534-506f-4f8e-a28e-03736c33d980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee0d870-2ebd-4077-87c4-e35c8b7e2fef",
        "cursor": {
          "ref": "84aad197-195d-484e-be9a-0cb919bddf1f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4a68bbcd-5f09-40ee-880e-c53187fdc72f"
        },
        "item": {
          "id": "3ee0d870-2ebd-4077-87c4-e35c8b7e2fef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4c8b9833-5263-41b7-872d-d380dab9fd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8f57e7-458c-46e7-acc5-7deb9db36fc7",
        "cursor": {
          "ref": "03485176-3a33-40b3-b4ca-b279ffebf76b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "999dd64b-8102-4435-aed0-9df455fa153b"
        },
        "item": {
          "id": "3e8f57e7-458c-46e7-acc5-7deb9db36fc7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "feb24fe6-9beb-4cf6-93ba-76e3996191bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20841f5-04de-4c19-be3e-8d5afbf99b7f",
        "cursor": {
          "ref": "d40b9683-6e55-4ac8-bc78-c0be034193bc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "07e77cc1-506a-4086-a2f5-a89fd70c7a82"
        },
        "item": {
          "id": "e20841f5-04de-4c19-be3e-8d5afbf99b7f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f67ad80e-cb12-4242-a6ef-470d7eeaabf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e332c0c4-e623-4c2a-b95b-3351ced9df0a",
        "cursor": {
          "ref": "57b04e41-df36-406e-931c-6ab03afbdf86",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46e44dd4-d984-4725-9d18-6c9ad1d6840e"
        },
        "item": {
          "id": "e332c0c4-e623-4c2a-b95b-3351ced9df0a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3f0137fb-ef7b-4a1b-bcfb-26ef940a71ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afeb2dc0-5c16-4128-9847-5bf0023269ee",
        "cursor": {
          "ref": "a08c9aaf-818d-4b6a-a015-693d77765727",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5cfba973-adb2-4d60-b8e2-aacd9ebf71fc"
        },
        "item": {
          "id": "afeb2dc0-5c16-4128-9847-5bf0023269ee",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9b11ed95-8ad0-4a13-9606-970bf8e51ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3368f881-064e-4d5a-8167-ddeaa7b499ed",
        "cursor": {
          "ref": "469a62e4-7a7f-4a64-8a15-4efc99490f0c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "af5d9fc6-36c8-41a3-9a24-9026a2a48b6d"
        },
        "item": {
          "id": "3368f881-064e-4d5a-8167-ddeaa7b499ed",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8ba6872-3024-4dcd-b604-c169c2345416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72349c3-eb5f-452f-8d35-b148756e1308",
        "cursor": {
          "ref": "82f5c14c-c49d-419b-8868-985b0029b955",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b6f71fe0-b720-4caa-8f61-25f3eff64d85"
        },
        "item": {
          "id": "b72349c3-eb5f-452f-8d35-b148756e1308",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "08d8d2f4-c0bb-4cae-a894-680cedb49ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd321338-15ca-42f4-a49a-c6c181dcdea2",
        "cursor": {
          "ref": "ae587c34-2dd8-4860-a18c-fad90db80d18",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "65627e2d-abb5-4732-a7d7-b5d084088387"
        },
        "item": {
          "id": "bd321338-15ca-42f4-a49a-c6c181dcdea2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dd1f47a8-2357-4bff-947a-d77a88dae3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca24d08-2903-4a7b-b5ff-409944f566ab",
        "cursor": {
          "ref": "f04601ab-af94-430f-ba9a-f2cb9732a1be",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8a328e81-156b-4c19-b5d1-e32b25a9522e"
        },
        "item": {
          "id": "3ca24d08-2903-4a7b-b5ff-409944f566ab",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cfe49449-5bb2-464f-ba11-88e5f5a7ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c720d23-d40b-47e8-bb95-8278e9019c0e",
        "cursor": {
          "ref": "67c002d7-7c1a-4199-9b9f-0a163de7456e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55f68ee1-629b-4199-bf9d-1f834d2dfe6c"
        },
        "item": {
          "id": "0c720d23-d40b-47e8-bb95-8278e9019c0e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "60a1aef4-44c5-4fb8-8896-b25a9a22c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc428d2-9990-4a21-adf9-e5b6099eade7",
        "cursor": {
          "ref": "f89ccc3d-a0aa-42c1-89ed-275da9caa7e1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6f209347-df72-45d2-9cc4-3d2e17ce944f"
        },
        "item": {
          "id": "8cc428d2-9990-4a21-adf9-e5b6099eade7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "06ec9161-3152-415b-8cf4-12acf36248a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fc3d74-9a57-4dc9-8b98-9b110410b0e0",
        "cursor": {
          "ref": "21f91066-b3f6-435f-ab3a-8b26031a139f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b7fae260-0d2d-41a0-8f6c-3c9989a057b2"
        },
        "item": {
          "id": "99fc3d74-9a57-4dc9-8b98-9b110410b0e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "28a858fa-7e64-4853-9eff-abcc2b4893b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc41d843-bd81-4f5e-8ae4-832614e52e3d",
        "cursor": {
          "ref": "52922a79-fcd5-48cf-bb23-8f008e328b45",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a040040-f434-4aa2-8bf9-6729209c8afd"
        },
        "item": {
          "id": "fc41d843-bd81-4f5e-8ae4-832614e52e3d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a772c1b9-056b-443b-b458-f71eb10deeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feb4622-a780-4f1b-813f-477de58d2cd0",
        "cursor": {
          "ref": "7f878404-9092-48e9-bf6c-3f409db9e202",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5afa7628-c1f4-491b-b35b-efed82118e2a"
        },
        "item": {
          "id": "4feb4622-a780-4f1b-813f-477de58d2cd0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "65b417b0-b452-4dc0-be83-2ed5308ddb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb30cf-d973-4baf-b80e-1f8e9ac43645",
        "cursor": {
          "ref": "e204e114-8cb1-48fc-9e9b-2312393682de",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "04ab0948-bce2-4984-978f-6d641ba8bbfd"
        },
        "item": {
          "id": "22cb30cf-d973-4baf-b80e-1f8e9ac43645",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2220d6e3-058c-4a61-a705-76b5444be318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09913f3-716e-4278-ba2a-be910dfeec8a",
        "cursor": {
          "ref": "12c8af4d-d482-4e0e-a2c4-4427e2f4a42c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6189a8e0-6df4-4ec3-bf0c-352c05139238"
        },
        "item": {
          "id": "a09913f3-716e-4278-ba2a-be910dfeec8a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a8ef8609-6793-48ea-b23c-bd6abf57de30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd88fe1e-1054-4971-bf26-7868bc042e3c",
        "cursor": {
          "ref": "262e5aef-5698-45d8-9993-0ff9da6c9946",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d555ebfb-d0e1-41b8-864b-82bf5cb7d56d"
        },
        "item": {
          "id": "dd88fe1e-1054-4971-bf26-7868bc042e3c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39db71b1-b277-44da-a56e-70bf323475cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b6bcca-2bd8-4fe0-967f-9d8da32548f0",
        "cursor": {
          "ref": "8fe703bd-e643-44b7-8cb7-570c6235629a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "69ff6d28-ef0e-4ed8-8260-9ad953ffbff5"
        },
        "item": {
          "id": "b8b6bcca-2bd8-4fe0-967f-9d8da32548f0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ddbeea84-bbf3-4934-a4e1-30f94f67daba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58aeb97-988d-4c45-9468-d9291735d034",
        "cursor": {
          "ref": "d0694463-0a92-4310-bc6a-3217e1df9db9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "181e0b80-a7e6-4d64-b604-84cf7eb9cad3"
        },
        "item": {
          "id": "a58aeb97-988d-4c45-9468-d9291735d034",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c9caed7d-052f-4e70-8af5-678f6a88a65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c70d0b3-377e-40ee-b823-d6d0548ba913",
        "cursor": {
          "ref": "c3b3fca7-7007-4230-9d99-82db0d054514",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "84c81364-2cd1-4d6b-b5b8-815068007343"
        },
        "item": {
          "id": "8c70d0b3-377e-40ee-b823-d6d0548ba913",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a821cb16-7bea-4da6-a8b4-8fc752cadcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df98b23-95d2-4dea-aa76-771e4dc7729b",
        "cursor": {
          "ref": "141cd7d7-0a0c-4094-8e2b-2d7efde767a4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd08701b-ba8a-4847-932d-274a3df1980b"
        },
        "item": {
          "id": "7df98b23-95d2-4dea-aa76-771e4dc7729b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7da84694-8035-4a38-9a20-5d0e11e0bc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288de544-06a1-454c-8599-7b3df4b4614e",
        "cursor": {
          "ref": "44833b44-b5cb-482f-9cf0-fb6dae708850",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4acd4bda-c37a-4f1c-8e96-2dcf63f39a53"
        },
        "item": {
          "id": "288de544-06a1-454c-8599-7b3df4b4614e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5dc1b7a1-89fb-4672-8d0f-558a4f8fbbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8c23b2-adf3-4018-a287-f450ef50401c",
        "cursor": {
          "ref": "c92330b1-27a6-4207-87a2-c5b339200934",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6d7254e0-e58d-4398-b7ce-c2012cccf430"
        },
        "item": {
          "id": "ee8c23b2-adf3-4018-a287-f450ef50401c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "85c5fe1e-86b4-4e96-8885-95f3fa2b1499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0bc2c1-e5ed-489c-9d65-3dac4a18741a",
        "cursor": {
          "ref": "40c7fe10-c2ae-48ca-bad4-1ceaf42cff39",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a0ad55e5-c70e-45c7-9b43-d9ff44cfebcb"
        },
        "item": {
          "id": "be0bc2c1-e5ed-489c-9d65-3dac4a18741a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2b412ea0-0068-496c-b3bc-fa52df31b5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ba60a-5957-4908-89fb-e79f7ba484f7",
        "cursor": {
          "ref": "da4d95f4-569b-4423-ac68-e27362d73650",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "07128bf8-e599-4ffb-bb8c-60b137992e4b"
        },
        "item": {
          "id": "a48ba60a-5957-4908-89fb-e79f7ba484f7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ab3e1f7c-3761-4ffa-9daa-0c13a1ac470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc35a0c1-0cee-4e52-91a2-a2554972d1e3",
        "cursor": {
          "ref": "aa0dac4c-ca65-4852-b79f-632d6b45046a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0abd667f-328b-4505-91f6-df3184a672f4"
        },
        "item": {
          "id": "cc35a0c1-0cee-4e52-91a2-a2554972d1e3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d8c43b0e-5011-4dd0-9d87-72e04da30238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b204c1-eeae-402e-905b-8dcdd1a2e0c0",
        "cursor": {
          "ref": "acc5c57d-c845-4322-92be-b1a7620a23db",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "05e6875b-eced-4558-ab97-040603564a7d"
        },
        "item": {
          "id": "29b204c1-eeae-402e-905b-8dcdd1a2e0c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d364691e-b804-4263-92a9-9117611b4994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e52a2-4265-4370-935f-5f16d793608c",
        "cursor": {
          "ref": "cbf21b5a-fd46-414c-afff-566dd18cf9a8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dc8f0e45-b8b6-4d4f-95ca-8e6bf03165a6"
        },
        "item": {
          "id": "be1e52a2-4265-4370-935f-5f16d793608c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f2276ff-66fc-426b-bf0d-e23ba157fd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c2f18a-4c69-49e4-b1a6-edef34146688",
        "cursor": {
          "ref": "9e5e01a5-df57-4745-8626-99d8b1db2e49",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ba28a31c-4bfd-43ae-849a-f0cbcc585aba"
        },
        "item": {
          "id": "98c2f18a-4c69-49e4-b1a6-edef34146688",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "70151ada-76b3-4c97-b2ad-a51960fe74c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c841df0-e580-4d6e-9de0-2346bcbe18f6",
        "cursor": {
          "ref": "7bf21b4b-b750-46db-bd3b-78f139af48bf",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "14b3b487-0843-45be-af57-2db31e4cffd3"
        },
        "item": {
          "id": "7c841df0-e580-4d6e-9de0-2346bcbe18f6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "248f1480-b2fe-470c-b36e-379a6238ce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219bb3c4-4e93-4cd8-a39d-456699227d4f",
        "cursor": {
          "ref": "bf0ccd81-fc1f-4f0a-a28a-57da92f5382a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f15e303e-cba7-4ce2-a15c-fe01075fa5e9"
        },
        "item": {
          "id": "219bb3c4-4e93-4cd8-a39d-456699227d4f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bc277d88-ef7a-4e35-8d10-16593dd2b268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bed33e9-6d3a-4292-8ff2-9f9e4b1fbb2d",
        "cursor": {
          "ref": "9c919ceb-190d-4e52-9dd0-a0973054c88a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bfae81c5-6f73-4547-9d3a-b4f98f47d5c5"
        },
        "item": {
          "id": "0bed33e9-6d3a-4292-8ff2-9f9e4b1fbb2d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "78a59f1d-ef0b-4127-a42d-75d7ebed8f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0ba4e0-5151-45a1-a19e-c71a7024cbf6",
        "cursor": {
          "ref": "fe699a42-31c1-43ef-851f-f8a302ab0de1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c33f2a70-b337-4770-85d6-155da6c2dad0"
        },
        "item": {
          "id": "bd0ba4e0-5151-45a1-a19e-c71a7024cbf6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b087b401-99f5-4ddc-a5af-eb3349498a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e54bb20-d2dc-497d-9366-e1abb7907130",
        "cursor": {
          "ref": "8c0742c6-c01d-415c-a828-41b0735cbbdf",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "10cf95e2-2921-4fd9-8b90-9e55b714d189"
        },
        "item": {
          "id": "3e54bb20-d2dc-497d-9366-e1abb7907130",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1f576960-2284-4ea3-a680-160dfca3fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ab28d-4749-4ee1-a9d1-81c8643fc9dd",
        "cursor": {
          "ref": "b4b71c77-69d8-474a-b8f5-a426599e9e01",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "380c9cd1-3826-4d8b-9638-504ef824c00a"
        },
        "item": {
          "id": "3b5ab28d-4749-4ee1-a9d1-81c8643fc9dd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "98082122-c585-4afe-a93d-3d675e869886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e3df8b-60fe-425b-8300-d33218d5eb90",
        "cursor": {
          "ref": "58704051-d9d1-4168-8849-51051623abe5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "19f10f69-3ca5-4033-b447-5a46b3fff82c"
        },
        "item": {
          "id": "37e3df8b-60fe-425b-8300-d33218d5eb90",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26c24afe-f77e-48df-8382-23acdfb7d103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a566d6-4441-4500-ba01-4f453d402cd5",
        "cursor": {
          "ref": "e97442c4-8fb4-4ecc-875e-fbc1c01bc46b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d8140ac8-906a-4c2b-9d29-983264d3c54a"
        },
        "item": {
          "id": "a5a566d6-4441-4500-ba01-4f453d402cd5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "63852bd4-1add-4e35-9ef9-81dcdf5656bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0309a606-d310-4a91-8c34-4dc244e53912",
        "cursor": {
          "ref": "7602693a-8a9d-4dab-b671-bb65bba0a659",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "efee453e-2eaa-4348-a3cc-cc70a73464c6"
        },
        "item": {
          "id": "0309a606-d310-4a91-8c34-4dc244e53912",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54fdc031-ce50-48c8-942a-f57585675b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec9fa0e-745d-4e9a-b47c-78cb1f4e050b",
        "cursor": {
          "ref": "d677b7d9-277f-4975-867b-0f6eff360a9b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d567e1e0-9916-48cc-bce6-79e01f78391e"
        },
        "item": {
          "id": "fec9fa0e-745d-4e9a-b47c-78cb1f4e050b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3ee94cca-5da2-4187-baf3-1084db7e88c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e15f25-d5eb-46cb-a9b0-7090d2e82e79",
        "cursor": {
          "ref": "f8e8944e-a7de-496b-a1c5-97159a1c89dd",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f3e1660e-b8ed-400c-b511-966bc6623808"
        },
        "item": {
          "id": "44e15f25-d5eb-46cb-a9b0-7090d2e82e79",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "12306e0a-c9a2-4f20-a379-37a03c3a2edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d80e71-48de-4cae-92d1-dd5cfde3ad1b",
        "cursor": {
          "ref": "44fddf9c-250d-4590-ac5d-a196c5b223cd",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "02fe1be1-fa9e-40f2-ae04-bd8125273a7b"
        },
        "item": {
          "id": "39d80e71-48de-4cae-92d1-dd5cfde3ad1b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "48ae1db4-dfde-488e-a0f5-8f929361ec47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399a4f27-b6dc-414f-ac45-4ce162583938",
        "cursor": {
          "ref": "166ad870-51dd-44a7-aea6-92a1f41d4bc3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43303910-f04b-4e77-b694-e92bfd63a92a"
        },
        "item": {
          "id": "399a4f27-b6dc-414f-ac45-4ce162583938",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4fce4664-9db4-4771-80a4-dbaf2410bddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e90360-1e3f-4822-8df7-c9e616578b15",
        "cursor": {
          "ref": "760bbb38-fb39-4598-b416-274a2647b482",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0bd441c1-062b-4f55-8ecd-e2090bc2ae58"
        },
        "item": {
          "id": "61e90360-1e3f-4822-8df7-c9e616578b15",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3c50f07b-3eb9-40e3-a2ce-fa683e016709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58121d9a-6e53-4ee6-afa1-65efffefc85d",
        "cursor": {
          "ref": "56d6eca9-2c3f-4d97-9e02-02c6c1f64955",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ce4b56b-4340-4288-90d4-9f823257af8d"
        },
        "item": {
          "id": "58121d9a-6e53-4ee6-afa1-65efffefc85d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03d62e63-8192-4cfd-8a60-8d936d1b1efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b93ca9-732e-462b-9c2c-e0d4c569504e",
        "cursor": {
          "ref": "bc5d996c-19f0-4217-9a72-47abe959bd5a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ea279a30-5452-417a-aa6c-654e14fc3850"
        },
        "item": {
          "id": "a4b93ca9-732e-462b-9c2c-e0d4c569504e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "25335870-ec18-47ba-990d-93300ef9e30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a82459-5871-4a14-bc6e-73f3da47ec65",
        "cursor": {
          "ref": "07e657e7-35a9-4076-aa98-f389333a9502",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0ed47660-bf26-47fc-a600-725081928c90"
        },
        "item": {
          "id": "e4a82459-5871-4a14-bc6e-73f3da47ec65",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dad770c0-7af7-4cc6-960f-e49c82c43282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e605b7-4725-42c6-a15f-12453c299255",
        "cursor": {
          "ref": "091f127b-ec5a-4b2f-a034-ea9218bddd22",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0ff63380-d506-48da-8810-68fe4a92ee91"
        },
        "item": {
          "id": "f4e605b7-4725-42c6-a15f-12453c299255",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f48479f-c430-4440-a6a9-a9fbf929bb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d17ea7-b1cb-40af-a44c-69a776e18111",
        "cursor": {
          "ref": "d8940dac-6b84-4e97-a87b-182adf2f4cf7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "457236dd-1e2a-41ee-8d83-6ea653d65869"
        },
        "item": {
          "id": "23d17ea7-b1cb-40af-a44c-69a776e18111",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c517e1d5-7aea-4991-9812-994089893234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f356a-6b78-4feb-982f-c6a5cc6fd07f",
        "cursor": {
          "ref": "85baa2c3-f612-4aac-8e4a-56e8b9a4712b",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd7b59f8-3986-42d4-9a22-ba3b5dc145bb"
        },
        "item": {
          "id": "1e8f356a-6b78-4feb-982f-c6a5cc6fd07f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c861d7d5-d042-4538-8b29-abf13278e8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93b14c6-ad68-473d-8364-6aa57d239ad8",
        "cursor": {
          "ref": "249ec751-032a-48f4-9e09-c96b0fff7f8d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2d08bf2f-0f99-4c44-b9ed-2b79943ec86e"
        },
        "item": {
          "id": "b93b14c6-ad68-473d-8364-6aa57d239ad8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "52f54c68-4112-4b49-a4ee-fcff5e851eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be023a97-d34c-483a-854e-f47abd8a9668",
        "cursor": {
          "ref": "20a8c2cb-f4ba-4c8c-bb45-d19794f02d83",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2d65f90b-4170-4dc8-8885-7b826d535b35"
        },
        "item": {
          "id": "be023a97-d34c-483a-854e-f47abd8a9668",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0d0d4f71-ca47-4240-a887-b081eee98b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bb419a-6707-4a60-9882-f326bf671844",
        "cursor": {
          "ref": "9da2e3c7-8731-4e93-8df8-e38d2029cfd6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4b076333-ff10-4ae4-a9eb-010a97046bad"
        },
        "item": {
          "id": "a6bb419a-6707-4a60-9882-f326bf671844",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f6af961e-0537-4587-bce7-60ceb15ba51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89eb706-d8c8-4ea5-92c9-bfd754225c80",
        "cursor": {
          "ref": "daa69eb0-1ebf-400a-942f-57a85fa60cdb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bfcab61f-e29b-4401-98f2-8c380976a358"
        },
        "item": {
          "id": "b89eb706-d8c8-4ea5-92c9-bfd754225c80",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe338a7c-2879-4345-ba56-a45b6014f25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e246f6d6-28fe-4eba-a3f8-661cecd7575e",
        "cursor": {
          "ref": "97fb841a-757f-4944-a29f-5e1a7fa1752b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "44878f85-9a22-421d-9aae-5354498ad52f"
        },
        "item": {
          "id": "e246f6d6-28fe-4eba-a3f8-661cecd7575e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5500871d-1c37-465b-8c97-c5be410d3704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f907216-2eb8-49c0-825d-2bd0f6d5fad5",
        "cursor": {
          "ref": "743289c5-602d-41e4-abe9-b18be1ea6a4c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9530c2ad-7ca0-4b80-b1d2-755f35a83473"
        },
        "item": {
          "id": "4f907216-2eb8-49c0-825d-2bd0f6d5fad5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f38d2cdf-3c71-4df7-a81c-5f84194ebb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8caee4-26bc-450f-ba4c-bdbc399c58b9",
        "cursor": {
          "ref": "e01c875e-08e7-4b4c-8134-c3b9fa23286e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7f90ae26-94c0-469f-a9e1-d3cdb96aa625"
        },
        "item": {
          "id": "4c8caee4-26bc-450f-ba4c-bdbc399c58b9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6b75665c-1be2-42ce-9506-3a4ad331dfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e648af4-67df-44b4-99ed-8441de2b8eac",
        "cursor": {
          "ref": "7486a8d8-9a3c-4183-8c78-d424104c5c39",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "683f8971-2fdd-40b2-a7e3-d38a71b030e7"
        },
        "item": {
          "id": "4e648af4-67df-44b4-99ed-8441de2b8eac",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c2d1f189-8a7f-40e6-9347-b1d9f889e46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe9d3f1-ade2-4906-8ef4-edd5311e0eaa",
        "cursor": {
          "ref": "ac2323d3-a1dd-4ca4-b360-d1cfc5398275",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f02ac61f-ad28-402b-9831-4ecbcd6c2eed"
        },
        "item": {
          "id": "bbe9d3f1-ade2-4906-8ef4-edd5311e0eaa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "138997c9-2d0c-49ed-83ee-9bb20c26870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c55db1b-7cab-4cc9-b266-59c01e81bfdb",
        "cursor": {
          "ref": "79b2d05e-a140-450b-af4a-eb3a9f77574d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "572f11f1-9842-4571-8ea4-78f00292ba3e"
        },
        "item": {
          "id": "8c55db1b-7cab-4cc9-b266-59c01e81bfdb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "33a7d35b-e1b3-4ea7-9219-2b7a08f68698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97dd23b-2e60-4292-82f3-b785efef25e4",
        "cursor": {
          "ref": "8bbdd83c-34dc-4811-8f4f-f2a82cb633ac",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "205b218b-b718-4628-95f3-e4c74e15a01e"
        },
        "item": {
          "id": "c97dd23b-2e60-4292-82f3-b785efef25e4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b63e51b4-9f26-4190-b40c-06d745100ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4100619b-9970-485d-9b7d-5e4f6db8b2c8",
        "cursor": {
          "ref": "d6e3e9bb-9ec7-493a-944b-cc3b537393e0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cf14a831-44dd-4335-ab74-285612db67a8"
        },
        "item": {
          "id": "4100619b-9970-485d-9b7d-5e4f6db8b2c8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5edfbca1-437a-4f0b-8207-8718cefbab3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634df6d5-cb01-491a-a50a-15943c8f4da2",
        "cursor": {
          "ref": "00d078cb-5cfa-422b-bf90-46d4901f6cb6",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7155cc0b-219c-421c-bb9b-ea43dd6c9bc2"
        },
        "item": {
          "id": "634df6d5-cb01-491a-a50a-15943c8f4da2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7fc17ada-62d0-42ed-9a50-ef92d115bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd6d1b1-0b3e-4fb3-9a0a-a890d2a423d5",
        "cursor": {
          "ref": "915e2485-d103-4799-afeb-1be3c5ad6c5d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f8dc1914-bc27-4c5f-9e89-595e5e2d1d6f"
        },
        "item": {
          "id": "2cd6d1b1-0b3e-4fb3-9a0a-a890d2a423d5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d51933f5-6a15-4766-b509-9acc43e9f861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43195e45-2afb-41c2-b892-c8bcbafbfbe2",
        "cursor": {
          "ref": "085e02d8-bab0-4cdc-a014-91668965e53e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8520f391-e243-4876-a78c-649c6bb87404"
        },
        "item": {
          "id": "43195e45-2afb-41c2-b892-c8bcbafbfbe2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "28d46ae9-a1d7-4f28-94f7-a688aa4cdb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e7df15-d98b-4ab1-b226-404fd07a1098",
        "cursor": {
          "ref": "6080d1b5-15b9-475f-86b4-2fc287110a60",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d169bb25-6008-4556-8d3f-9d38ec9caf57"
        },
        "item": {
          "id": "b2e7df15-d98b-4ab1-b226-404fd07a1098",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a206e79f-4cec-481a-81f4-9eb505c29d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3203fa3e-c117-4aa1-9dd9-9ce77d93d775",
        "cursor": {
          "ref": "4190b356-043c-4b34-908e-1f16230840b5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2b2f03b2-90ac-4eac-92f5-0c83a53bbc64"
        },
        "item": {
          "id": "3203fa3e-c117-4aa1-9dd9-9ce77d93d775",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3ed31189-568e-4125-ad12-b8576ce678a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f602c7-df08-46d8-95d8-f453e0e79dc6",
        "cursor": {
          "ref": "29c063b1-a114-482e-a6ba-6ef6e2462573",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "76031b79-1214-4ecb-b8bf-66e7d5f24faf"
        },
        "item": {
          "id": "30f602c7-df08-46d8-95d8-f453e0e79dc6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af574bad-01ee-4c82-94fb-7cf3990790e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8380951-7060-44e2-826f-7c6fc087fe0c",
        "cursor": {
          "ref": "f23e5eb9-4419-44e1-a49b-2599028b5d85",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4f2870dc-5c17-43f6-9865-8d26c735870b"
        },
        "item": {
          "id": "d8380951-7060-44e2-826f-7c6fc087fe0c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e282b70-7b23-4b01-94d9-9721191c8505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f54143-92c7-49d4-b22e-908840fc0935",
        "cursor": {
          "ref": "b5696fcb-34cc-46b8-b09d-5ec6fd209a66",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6177caae-14d9-4901-9bd6-164170a7856b"
        },
        "item": {
          "id": "f6f54143-92c7-49d4-b22e-908840fc0935",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d453f54f-acab-4dc9-9bf9-8e4f04b70449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c5c005-8587-4fb9-978b-75fdd4b4d0ea",
        "cursor": {
          "ref": "5603c1bf-0fd2-4813-83c4-e6e072a3b637",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "79a33252-8528-432d-922f-151d4c584fc2"
        },
        "item": {
          "id": "17c5c005-8587-4fb9-978b-75fdd4b4d0ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "df2c9ef0-6919-46d5-a839-43604efc0aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6dce0d-9838-4466-9a45-e24ace9d23ae",
        "cursor": {
          "ref": "ded61652-e013-4b81-bc13-4d6e550b7a2d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "52bd8dd6-7460-4785-b6d6-badab102f128"
        },
        "item": {
          "id": "2c6dce0d-9838-4466-9a45-e24ace9d23ae",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ffb643c9-f664-4c45-9902-a510b2814912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa5ddb0-d041-4745-bc13-aa12e8ea8b4e",
        "cursor": {
          "ref": "ac9a7cd2-3cb2-4c9c-95db-dab905a5b8b0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "124296b9-9f9e-41fd-be4e-f86a8a2ead52"
        },
        "item": {
          "id": "faa5ddb0-d041-4745-bc13-aa12e8ea8b4e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "43a1ac91-6852-401d-9bb9-f736a1ff42e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed3cb83-dfc6-490b-9504-7bd76b3e7a95",
        "cursor": {
          "ref": "bfb51216-6cc1-4dae-ba65-3eff4ad83e36",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ae37099e-90dd-4b0c-b060-440c0d8422e0"
        },
        "item": {
          "id": "0ed3cb83-dfc6-490b-9504-7bd76b3e7a95",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e4e63607-5806-4d19-b782-c3856caad5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb2dd56-e17d-49ab-a57c-3fe25a36b6c1",
        "cursor": {
          "ref": "cd149dc3-8ce4-4e04-8be0-5faa4d9cd792",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "91f40d1f-17d2-4c07-9009-3e5877403233"
        },
        "item": {
          "id": "fdb2dd56-e17d-49ab-a57c-3fe25a36b6c1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9d13127a-6c1d-4eb8-a280-1ce466aa67f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8662906b-5a60-4b8d-b217-e933883e9dac",
        "cursor": {
          "ref": "98e9c87f-499d-4ee8-ab58-ff39eabd8e9e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6183ace7-13f5-456d-af23-a908f91271e7"
        },
        "item": {
          "id": "8662906b-5a60-4b8d-b217-e933883e9dac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d5f583fd-6ba4-4dd3-b099-18866600cf32",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "268cf09a-c7a5-4816-b994-5095b52af993",
        "cursor": {
          "ref": "0d83a965-3f0c-4501-b06a-1c969188cae1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c89290e1-4766-45e3-91f2-b80c0caceb29"
        },
        "item": {
          "id": "268cf09a-c7a5-4816-b994-5095b52af993",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2f163a1e-6769-4597-8945-6ab8a983e050",
          "status": "OK",
          "code": 200,
          "responseTime": 1870,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38385075-3ce3-4f9e-bd52-550d9dee5aa9",
        "cursor": {
          "ref": "91cf2a36-d91a-4637-8804-3e155ffc05a6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "786c41ea-debe-48b6-a69f-c4b948a3cf4b"
        },
        "item": {
          "id": "38385075-3ce3-4f9e-bd52-550d9dee5aa9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4f9b36f2-6ac1-4c2d-897f-24a0ce1d39f4",
          "status": "OK",
          "code": 200,
          "responseTime": 2174,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "33821652-217a-4c7a-a48d-b8db61f4a6c4",
        "cursor": {
          "ref": "95f378b1-ac4f-4f57-9aee-9601ee0119f6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "18b2651b-aa65-41b0-a955-5c0ff7d3181a"
        },
        "item": {
          "id": "33821652-217a-4c7a-a48d-b8db61f4a6c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63256f6b-76f1-48d8-92f5-a18ae6359354",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33821652-217a-4c7a-a48d-b8db61f4a6c4",
        "cursor": {
          "ref": "95f378b1-ac4f-4f57-9aee-9601ee0119f6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "18b2651b-aa65-41b0-a955-5c0ff7d3181a"
        },
        "item": {
          "id": "33821652-217a-4c7a-a48d-b8db61f4a6c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63256f6b-76f1-48d8-92f5-a18ae6359354",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c1411b-9de7-42f2-8e17-970cb7b3d1fd",
        "cursor": {
          "ref": "35056604-05e4-4f8a-a36f-cf12ce6b1627",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "024574ba-a8db-4e13-a800-d07d1851dc77"
        },
        "item": {
          "id": "a1c1411b-9de7-42f2-8e17-970cb7b3d1fd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca1ae443-d056-4a11-a312-ef749a8dc175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b7796-e6db-4de2-95bd-5ab99160b44d",
        "cursor": {
          "ref": "30a66f16-8376-4a9d-b76a-ddf5b9812906",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7510f1d7-945a-4b0e-a614-47808643c8b8"
        },
        "item": {
          "id": "310b7796-e6db-4de2-95bd-5ab99160b44d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d61956ac-9d6e-4b95-b849-d2ce23484266",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}