{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0ca87ae4-7cc3-471d-a1ef-f1f07f80ff57",
        "name": "Clear Cache",
        "item": [
          {
            "id": "19670469-9d3f-4cd6-8163-01eaad3d8ff7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aaa605ff-958c-42f3-b25e-dd82da1d8093",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff4fe1f7-6095-40b6-8ef6-607db1ae49f1"
                }
              }
            ]
          },
          {
            "id": "48069bb6-e520-47df-bc22-ef165c198869",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "091bddea-11ec-45c9-8878-7e46ba073003",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8f1d42e1-adbc-4307-9098-54296c12d889"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8347ee60-bb27-4ebc-9048-db633acf2bb5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5209cb8a-8985-457d-9ca3-6fb07a459be5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4860ada-2c66-4e41-baf7-deba184742e6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f54c361-eea0-4308-b517-dd16d5620372",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75986444-0e18-4ce7-af8f-723e6747b345"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bac2576d-73a2-4263-b057-24bdac8fe080",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28eff6f8-25f4-4b3f-a47d-54a7bb9a18de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9279e1b3-d867-4af5-a42f-e6bf1e04d28f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "502e432f-4198-4595-8219-4ce8c1eeeeac"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43ea1ac6-c113-4d6c-a5c9-f87bcc240ad7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09b3d795-a612-49d1-9e82-42e6c70f5dcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b64685e-c1b3-4920-bded-c52a21a3adac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca8d78a8-ab8c-4320-b3b9-62de5f9224a1"
            }
          }
        ]
      },
      {
        "id": "af63b79c-e058-41f5-9be0-eacd10b05af4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7d6e0cab-0bf6-4234-a8e1-1559378e5da1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df197478-cb00-48a9-a755-0a950c43329a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "51944c1f-f718-41d3-8a37-5683253b9152",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178db459-1f06-4e70-ada9-1e27101d6514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0745852d-8a72-405e-8523-cdd4a91c887e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00c22c8-b293-4094-a4fe-2eaa3e0c18e2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a225c4-107a-4191-b668-75a2a4dfecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c39acc14-f5ca-4deb-a954-81e28e928a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5d58bc-19be-477d-bb17-5e4b53442d38",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f8d963-3556-43d2-b1b5-d5b77840f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "109da25d-3fce-42f6-b725-d81b9cabb65b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25feeea7-cb7c-434d-9984-f18cb0c74c70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80b5f43e-f607-4dfb-a758-237e861a23da",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e48621a-4111-470a-8b30-0fbbbe39fc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ccfdaf7-4c35-4203-97d3-7b533420e909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cb2c11-5dfc-4c97-9ec1-90256c9d418c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7b9f49-7d3f-49e5-a311-0048f7d5e2e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e736d46-022a-47fb-a764-8c38d3d8b917",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4767e8f8-ad80-423d-aec6-d40df592765f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc9b7802-7cd7-4ea0-ae57-26d6e0af7123",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "08adc0cb-a43a-4038-b33d-598d8973ddc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5aff402c-dd00-4961-9b90-dd60a711a770",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9384396c-1c8d-4175-885d-df21c19a6ede"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29d8331c-7c35-4551-a396-e9a28c4a491d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20c543cf-b6f6-44b2-a925-a27b07d0c5e8"
            }
          }
        ]
      },
      {
        "id": "ccd02267-becf-421a-a9ee-bc5b3394937e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3db37b01-7033-4f4c-8deb-17c744cf6f74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ea5f9d2-2603-4c88-b1c7-373d26b848b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "71721f8e-831d-47bd-afec-8ae7ac256b01",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b6364d-2481-470e-88f5-93b0adea179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab65d9a3-6fcc-4d02-9820-e2aab24db49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142e1b2c-415b-4a41-8b68-143e0937962d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afeb38ab-c713-423b-b082-f0bc7bf0100d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95122ca-53dc-467d-b5e1-e86c7bf3a8a6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f074bd-2818-4755-98ae-19a87cd41ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0ecf94-420e-46a4-a71c-495dd0e05f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5fc24a-520a-41a7-a8f5-7ce746673711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0d064a2-a83b-441d-b328-988b78b17d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71318283-405a-49be-ab5e-a401010f8fd7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e3f4b-736e-4601-b578-b8674e4502de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c636c8-2eae-4336-8807-a8348cdff88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5edef3b-2f5a-4ce2-8a0d-9f4b86879337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cccffe63-a5ba-49f0-ab5b-7e3b1d03d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b09d10-ebba-4d02-9e57-c4f75134aa9b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdf22c7-16d1-4bd2-acc4-b2dee6868571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12bc806-ba8c-4c67-96dd-0612b6c15ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9639956e-767f-456a-aa06-84f1a5e394dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6320cc60-896c-4928-bb14-2b71eeb065a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de46bec5-22be-496f-b80e-ea829362d29d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63090ce9-ed34-4305-b919-3157be996781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac91e330-4bc4-4a55-8c78-68773d966eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c05f44-2224-403f-b1e3-aa04aa635c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4322816-e8dc-461e-b3f6-27fed6a3d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51c1bd5-22e3-4761-bc3e-7fad84e5af0f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e664d45e-a8d7-42f5-92be-634cd4d16a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07769625-789d-4302-9473-921ca5931bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9942b-2efc-436c-8a5b-d04773d26361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b464dd71-bd2a-4361-beab-5b8f1de21c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8443f749-aae8-4a4f-be12-c6fb8b045592",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18da6df2-f118-46a5-a852-828ca87dbd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef21d93f-f86c-4d51-880d-40605f2cb38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b0792f-4425-4c72-a489-c1e6a3b51b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a483ec2c-0b13-4b6f-820a-b1f74f81f920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a02a65f-ead1-4f83-9ef1-0bd9f58547bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618ed232-dce3-4b50-b727-296a4c5a16f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2574b20f-0f84-49e4-bbc8-fb3361be8ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65452c57-ca58-4f93-bc15-ea7849bbfaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14d1e384-8c13-457d-a5ad-2449e56600a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da644363-b9dd-4a5c-8920-7234b42dd976",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f90bff-a8b7-41bd-818f-c35b165435d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3113054a-6e14-45e0-9bc1-268920efc311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e267a6ec-4c18-4f05-aff0-1de16c617db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac8e6c20-92eb-46ac-8cbc-2383cd280254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c82491-fb01-4c5e-a995-af9cae0e1ffb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c8f2a-123b-4fb3-a71b-52c47866a92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5de74bc-7e5c-480c-a851-a34bdb6bb17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7849bf4-f601-4d11-8f8e-8ac3e89d1fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f073ff3-c77a-4c59-b427-b45490678cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a630b-dc88-4cfe-b68b-f6e3fd525ae4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e545895c-0100-4ca3-8d78-c9096fdca14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326e1e7a-d823-435a-a391-5e0d8bc97692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b0192f-f386-40f3-bc5c-cabaa20e89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c943537-b892-41a9-ad5a-ab620e7e516d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c75182-f75d-46a4-b468-93da5241be6d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd9fc27-1d4e-44a7-8f06-fb5c0942a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed9d35d-f0c0-4355-8fc1-e7f4de322480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57ea5f6-ceff-430c-b601-fb705d63c3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c880d4a0-9c1d-4c5a-9c00-936c35dc7c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d10a03f-f3a4-4b99-bcba-2a12692a85ad",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1fed5-7fa7-4913-b11b-de3003da777c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ebf26f-824e-45db-9f43-720f392f45f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efad3193-2722-4893-b089-7cc134730094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46c69c77-6b7b-4104-bc29-25d894678ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc65c457-c8ff-48ae-8818-c9912fa644e5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd193ef-e240-4790-94b6-8d8684632fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba6f063-09b8-45d1-9380-fb7bac419613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3a9d56-a7b8-4a10-8b18-30e8367ee071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdee983b-30ba-4049-85ce-e7101a15c3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc22cf7c-e8e8-492c-8f21-4ee578a7f858",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb15c75c-e0ca-445d-94a4-e4234118744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b95fe4-5514-460d-bec5-d8709521a9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec173a8-d679-4d53-995f-5c9482b50011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c278aab5-0569-44af-a6e5-0031e0b62124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a3d5c0-b36d-4a54-9a48-76b8ab90ccb2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ccbe3d-061a-4930-8e6f-2170c6f60ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49da9ced-9564-4cab-9e08-55c22ce6680c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f7dd7c-90a0-4489-af68-1235b34060c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e93e30c9-d5e0-4980-a060-e183c361ea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067492e5-6861-4c0b-a93d-2b41205a1b21",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271e2f6f-c204-43f6-a4a0-2e658a96ae28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e72be9-f441-4f93-8bfc-0994c8d7d71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b9014a-922d-4e41-a4a8-ac4544a561f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af4fd1f-2df3-4f63-b915-1faeb66a855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9c5113-8caa-48dd-8923-6b94a39179b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344e84e7-25cb-4536-9427-16446b599aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6ea27d-68c7-48d0-a5ed-4f9e893c1043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8b72e1-0cd9-4420-bc93-4d1a4c0cf3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92a55bb-33eb-4dec-a3a0-3bc12c884163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fdf518-8058-4cba-8926-9a2f006867ff",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646ab358-7087-413f-9fd6-9cf23ba9b016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f19096-b18a-4e24-9d83-5c2433b98218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f475ef1-00bb-4ec3-ae3c-68b00c553374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e55411d-1c2d-4b79-abff-e6f77bc1d274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c036df8-667c-46f6-9b1c-280fbbfd2087",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be548797-b12a-48a6-8997-54e561f35ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eb9128-caad-416f-bcc3-5d591d3aa29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088f6b9b-95b8-4677-bdde-03c7a562adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "946122d7-4014-467c-b401-7d10f9d5bb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba4e851-d63f-4adf-a781-0676ef9ce0ed",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7173447-cf85-44bb-9276-bd06db6bae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193915c4-bc15-4e17-900b-bd048b180556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273df460-5cb2-41f5-af13-bcf55fcf31f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e97f54-e39d-4bf0-8420-b962bfdb6e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adf1375-1df3-4d57-b37c-21ba6657887a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2324ccda-5f21-4fea-a159-25b8ff088ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4727e6da-2331-4916-8def-996fb1e4b509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a18b9c7-8188-4d8e-9223-359868479e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f363e3f-5ff5-4c1c-8f24-c3d7e2b28c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7d34a3-206d-4108-912b-45aa8b7fd611",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a31c31-1d47-43e4-aa96-13833ddd31e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302bfeec-abca-4f5a-b16d-c1de2d1ac4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dcf89c-3c82-40e7-aaa4-9eae75aa48f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2759372a-ac89-42ae-9daa-d6b3fc99d554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9cb333-9c11-41ae-9669-b80f63b6ec57",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3fbfe4-b255-497e-8fdf-93e0c258ff0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2742a4f2-f1ec-4826-8259-5cc2ffbebc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbaccf4-7fc2-4cc0-b2d3-873decf80da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e257b73d-5979-4afc-9059-3025616e1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e83d26-d84b-4ccf-b83e-f6b3f7f4239c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e92ef3-b15c-4dcc-84d8-878e9539bd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c3d167-cb0f-4cab-9503-1d506682cf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e684dd7c-cd92-47a6-b4c3-4d9e578ced2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f72ee0-b254-497e-816c-6c42c19306bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b75e496-74b3-4ef6-b27b-ac2a849999ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089e1977-7a2f-4202-83ba-1cf63fb33a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e379bc3-68d4-4c2a-b4db-c4981f5629fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab18217-eb43-4e90-b754-dab3ba86aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ad4b2b-f91a-4bd4-9543-f2c0b939add1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26de3df7-5c99-4abe-8319-d687d79b91c3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2be5f32-7f72-4082-9e85-4c7237301d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38dd9d1-a50c-4c12-acbf-5031d7fd4fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c399f579-0674-4d99-9835-61bddd7c0c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdbf02e-49e7-47b3-9b00-b16a72dcff27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00158b1-0408-47f1-b84f-b041d9409fa5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd2aa99-fbc8-4f58-b34e-bf75971c6b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ffcd67-4635-4fb0-a928-5763955cc2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab83e79-308a-4309-9211-5786b8ad6917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83fab1ae-d8c1-4654-880d-ad2fcfb18298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce388e0-ce32-4bff-a2e0-295bf196fbd2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2aa968-ac8e-4374-8b86-1548b5a0a6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48922f9d-c5ec-4c68-91c6-4de8339ed411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcfb8d3-be6c-4237-9ad5-48b5eb1db7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1325c1d-8917-4b1d-97c7-bdb3820b2dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f789d99-8c98-47cf-9ed4-21c1322bf3df",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ea806a-597b-407a-ba05-10d09b6fbf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abebc6f-e6ed-4d70-9945-2f3198a73acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb8aae-cc12-40af-8276-3800cb9068fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dcb838-172f-4bd0-9ea9-5c569bd687f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377a7b13-7f0a-452e-a7f4-d6a329c79b87",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e293b5f-b231-4a63-a19b-1989784f148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc0d512-b8f2-471b-abb4-f259f6d5b609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f56655c-f744-4664-a029-f78f18166f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae177c9-5646-4879-9a41-47e728a16e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a21c49-bc77-47f0-a448-9b2b67926093",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d84bec4-cbd7-4f08-854c-522391ed91ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77682f2-8fea-426e-8ddb-b400ee183c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b076fb6f-f62d-4007-85c1-ada38638bc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c99b8fbe-dee2-4d46-84b2-5849c30ae4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b738e2-0921-4c9c-9237-649fed732829",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8acbb06-82c1-46b8-b883-3b33e8d78e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ac016a-7753-43f1-bcda-19f89762b371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed230bc-c1b4-4102-8d4e-66b0c1ead2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "281d7514-85e7-4516-9623-456b276128eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83514992-c776-4a5f-acf7-8a0958337753",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95488a04-bc73-4a0e-bc26-61c5e3cff4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fc0ce6-e863-4d2c-a47f-a5ac92acca62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b20821-c069-4628-bbab-291cb8ab2552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b85226ed-3a9b-4487-9d3d-eaca201dc023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c558cd6-688a-4932-9245-e0ea5e5a57d3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf4c1cf-b01d-49db-b31e-5737de27b192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c5d4e3-c729-41ef-b4d4-cf985ff3eba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19189f00-4d4f-443d-8b6e-f03661e2adad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68549138-eddf-4d0a-afb0-16191ddad7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89f7936-f092-4c3d-aa57-ab6b51a7f174",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a96046-217b-4a27-895f-84ebf5d9bb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb001042-8455-4a7a-a41f-f0a9b4f9baa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d173efd-a292-4dfe-9011-a0a8ddd3669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed66e3c6-eee0-4e3a-a99f-19e648fcb257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25967023-a708-4238-b4fa-84f689e97a3c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddb3f0f-2a0f-4607-8c52-82c0ad90b67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0cb692-1718-494d-9db3-6ffbba763b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29131128-2d83-435b-9ca3-d7def9b6883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc5dbc2-ba9e-419f-bb93-7ded39bb5380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908e3cb9-779b-4612-95f0-b48935d230d6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb78614-8966-440c-a33a-cd5d2f4ec936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46ab952-7cce-450d-8316-ffc62da1aef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aa6cb2-ce92-46f6-a72f-052dc2a32c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3b4953-8465-4473-87db-e3abfc8ebee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31512196-d412-4d33-9cc9-c0c27d85ea36",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9154932-4df0-4e86-8a10-7225d1fef9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebd9618-d248-41f4-94c5-6b1c0aca784f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7935051-3b09-4979-a94c-9693e4113ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50329ffb-7c51-4a8c-a866-72b0fee61beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556c69d2-54c5-4d67-9352-f13310abac41",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda52f47-ebe8-45f3-805b-120dc373af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95e6e9a-bc03-4430-9fba-a05d4a2fc954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f35ff9-97d3-423f-9c2d-f21ab416968b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b786196-4c27-48ec-9a56-298ef0e8565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8994d5a-8e7b-4033-8a7f-f415a4660dac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811e9f04-c3a1-4c5b-89df-2dd6c043fad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24073b3-6d12-497e-88ce-e88f6027e915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a7a07f-af80-4ca3-a713-0aa6e9f778f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba7537b-ca0f-497f-b1be-2cf8e729008e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75546f59-3333-4b04-b083-a920401ec358",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74fa189-0f30-4722-a419-5636f50c495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ccb6fb-b49d-4753-8192-1ae01941d32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d80f15-3d30-4d4e-a46b-5d67129afb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6842d6-9190-4ea2-a41f-b84b59acc0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944c10a4-5753-4845-9d9e-79da0a43ba66",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594f1261-8c6e-4593-af0e-3ef8fa95212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e660d9-3d3f-46d0-a763-5911b591343b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178e4417-fce9-44b3-9a98-5ddb7f426cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8caf0e-19ab-4159-84c8-035aa39115bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084ae366-d7dd-4e6b-b992-8f9c7add3435",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1880db-752f-4f43-b2b3-b233f03dc475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1221dfe-bb78-4281-8062-cfbe9694b006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f52e77a-ed0b-4d7f-931f-75b4a6502bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eef195-8b44-4d35-b80d-ff598a66819c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bd7ad2-11a1-4e0a-8517-2b38ce118d48",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac70247-7f72-4641-b3af-327754d74938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729997e4-c723-454e-b538-a4fcf0b66c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e45c80b-8baf-4c1b-8005-b7e300717eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aede4659-9179-4bfb-8fb0-33dcdab13376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c001e167-53f9-4c73-8f76-67e8add74b40",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba171c5-5641-4db5-b39c-cb77b1d4208d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c514c7a-787d-4ee4-89b1-c8919f9b17ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799e16f0-7700-47e2-a471-f57513c870cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0461ac9-ace0-4508-a455-55a7166b6ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb64d3cc-b3ff-488e-8bfa-381f8ff1f064",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97222fa7-a7ac-4666-ac3a-9dd8dbbc5163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a10fdf8-98b3-4f62-b3e4-3c7b4ef37438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171632e8-a047-426b-bf74-7817cfe0f2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1d578c-13e7-43c4-8417-fec9bba23859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881094c9-d07c-4b4b-a5de-b15228920d24",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc635e0-e553-4d5e-9484-8b67a53e1761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96486e3-3675-4d33-b2e7-390e2503acd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfe9efc-0aae-479a-a1ad-6ca85e0dbade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ddba01-f881-44be-b318-f9f730300053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633cccdd-4067-4445-8a4a-10c7eadf96e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cda2474-092e-484e-9a7e-aac6b53bcbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcece1e1-71eb-454b-9496-ea21d8b67e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624855f2-fa2c-4138-b935-3130b2482778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04716ca-fbbd-4366-a378-f697d91b8824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3ba56d-c26c-4cb7-bc2b-ca1d7128b0e6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfdfba5-7d8e-4310-8aa3-c868d365388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89f8c7a-5ab4-4afb-a65d-ca77793e4c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031d88cc-8876-4f30-9fe6-261a3351c205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d94a372-1db4-49b9-b20c-746b11134cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223c1343-c582-47a4-b19b-b29246e63e95",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7f7590-c2da-47d8-bc8b-0d4cabc9512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9c8b76-8ade-4f88-9655-3d9c758810fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b2f153-12f1-429f-8f17-f770628269b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "51842c83-00e5-4229-952c-77bfb289ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecad5af-7526-4f5c-9273-e7c0dcdf2008",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8452a390-a434-495d-a635-71901d6bea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41053bf-65d8-42a8-a20d-80829e809986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4cbdac-8b45-4038-8262-b963f91d861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "765a0e9e-73e0-4669-a709-dd73f81ed31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45fb44-e6bc-4e4c-bdc1-2ce068934453",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648b412b-a715-4e9d-a3d6-cbc71adaea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176fba6f-9456-414f-86b1-aa5fb7b2a219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924bfa36-a9f3-40b2-b5bf-d17f54ef28dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b236ca-4da3-4ce1-980f-46a19ac64ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0f94ed-7d02-43f5-9dae-69863bdc12b4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88b5e50-a59d-422d-a079-15c2d6d2e63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e43f04-d886-4601-9ba4-6b46bdee84bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd93984-50d6-4137-b245-b8c61f6a5f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc86aa9f-a6ed-4bb8-9648-15f0c84471b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede2a0eb-5b08-481e-924c-e5225aa10d11",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b3210b-4a05-40e1-9517-de2c8417090f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b1a71d-69ac-4698-9075-5f841744fe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac01bf-1a54-4a24-a002-ce782b684654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d16cc1-8bfd-44ab-84f9-b4607b76dd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bcfb1d-d60b-4731-8bb6-9ff49ed1e28d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab3a132-2ea4-4588-8f8d-c450747def81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c635aa-07c3-47e1-982c-82e332010514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f406cbfe-c133-4e20-a659-28512cde038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "25991cd5-4866-44fb-acb1-2fbe7d9cdf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29fc49b-bf47-4bd4-a920-c5871c9d32f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c485a5-c8b2-4974-82a0-9611024fe4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172835f4-729b-4af2-98a9-525bceb217af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f189b6f1-175c-4751-b07a-af34662828f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "feb32b1a-986d-4d72-83e4-5de484858ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d39fc16-e971-434d-99f8-9b2485f03a73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc90cb31-ce6b-4cf6-b981-78ebaec618d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5486196-0a75-414f-9794-bfccbb6e2934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e52c8b-d48c-4d81-86f0-e14df161a098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba61d4e-13ed-4e03-8b81-429ce8e36b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a4b4eb-b32c-4ef3-b396-4182c3ad94be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a1356f-b555-47d5-90e3-860074715e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f775b6b-c242-4806-ba24-bc6c88069b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ee1af8-1e8d-4d9c-9fc6-83684ec11d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0733f17a-4e3b-487e-bb6b-4eeefd056f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55584b8-046c-4809-ad2a-87715c768b7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d80ee8-1983-42cd-b2b7-06de0e023093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f7dfb5-1212-42a9-b8d1-1b70bd03b47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad465e52-7da5-4cc6-a108-2c1323069d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83c62997-a1be-47d4-9adf-166e8403ff4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5595afbf-7db6-406e-a5c6-24a23fac6047",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0a408b-8716-4536-a28e-ac87fc022cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3ac595-b668-474d-88c1-a3ac95900f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7c7378-336f-4217-99d6-98cf2bdb2be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a06181e2-9ae7-41c3-8da6-ef467a20034c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa809f2-e855-4a17-82e0-7be02af898b4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6df8be-1989-448f-8df7-f108a72ae134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b27cfa-14bc-4227-9361-e110c0a11db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43e2ce4-0bb7-47c2-80e2-c776103d9bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "471e3bae-d568-4db0-8645-f37c6a70ae9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c758d2e-e2a5-424c-bfe6-235a289c7738",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41539d26-f488-419b-804a-b3752d07be27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6d53b3-8331-4be1-a5ae-f79103f86e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702cb30d-1f20-4ad3-8f4f-a8d8e8093a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b028dfb-9e35-41c9-a3de-9a87b654468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2fd4f9-7878-40a9-93e4-afd108040130",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7342ede3-d1ab-45cd-9a86-45d2abf127bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936b8379-f48f-495b-a469-cea4fa85173c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b36626-f902-49e3-b0a3-1cc579b03284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92926222-97e1-41cd-beb3-f034d53bbb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed46e23e-87b0-4581-a6b0-9ff3e3f24161",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f7fc1f-59c7-4a46-ab6a-9144eb9ab162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b52767-4995-4403-af23-ea8156811db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1344f6b0-0e51-41fa-bba8-121b8faa2fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23ee1f04-ffc4-4642-bb7c-c3688f9caffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad90e6-1dc3-45ce-bea0-500d78f9a65f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffa2645-ec13-4e59-9b20-085549dc2a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c142d45c-2160-44b1-afae-51367d1d0cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b73a2-c1ad-48e9-8cc3-3b3def1f0856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e55d28ef-e83b-42a2-832f-fdff04ce357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d90d47a-9db8-49b7-9975-4fd781e967ab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478567e4-d2d1-40fe-9695-e18c87d04162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868d98a8-1d09-4402-868b-609a1ed187b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79421a5f-da41-4de5-91ba-c7f396bec54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4db56866-68e8-4b97-88a1-807207f1c15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8861638b-4aeb-4512-be13-e33eeb2848cb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad87bde-7599-4966-a1a9-b20e1fe67e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6b1d4c-7371-4e97-a74c-a493e816b333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd24e7e-b437-4e7a-ba75-fef5b3daef92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b19bdb-64b1-4af8-b2f5-136602b6097c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd055c61-88d8-475b-8414-add53bf5cff4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fce6a7-d94d-47b9-856a-1e744db20444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ceec06-a26d-4969-9b22-33697cafafe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b38562-bc2b-4b04-b0f4-88728df6491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c153aff6-5b54-4db3-be7b-2bed5bba45ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f390264-8e78-476a-aa6f-f2e7addbfa4b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0ab72e-d93d-44d2-a0cb-b6672630784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ffe75e-8c7e-4a1f-bcde-48a673ffef1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b16b40b-dadd-4b18-b3aa-bf7214e5df03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c26c28f-2d3d-4503-b623-74f5e51b3a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96048b95-edd9-4240-ac59-79c158d57ca6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e7fa3-6345-4308-a8e3-6ce968cf6c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f89c86-edc9-4093-88d7-9a3bfdc9f627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0917142c-75fd-4c18-a495-97d4a9ead26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a010b001-6049-4e3e-98a3-1be34d898cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178ff14b-5410-458a-820d-98bf2d026ddf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797b947a-613e-4431-9c08-8e2958c31931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fef0422-6a74-4480-b936-c5a608ac306a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12af2c59-f22b-42f2-b6b0-ef70de61e13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7472731d-2e24-4624-b98b-8bcce64f0fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9352ebf-62f0-4c4c-9e7c-f63fafea056d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658070bc-1591-4f97-9707-04ba77a18991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a23a03-04f3-4aaf-9b2d-2a371e914c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db3d83-be4a-4212-a580-731d0c05d174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6abba8c0-8b70-4006-959a-515e32f07063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b85353e-17a0-4a32-89a0-a1a9a5da969f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6491f7c6-a769-4aff-ab34-fafded832f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c12117a-3d8e-4d4b-871a-f0f62aacf3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c87e16d-5bdc-4b5a-8432-7a7ec25079fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be540c89-6c10-4085-a2ab-b751dbad9eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0286217a-bed3-4c7f-a4e4-5acbd9cd4140",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4027324-2621-48ab-b272-05c7188ba605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658a198e-0033-4e98-9db8-bf326ec3d364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630c96dd-6330-45d9-96ca-8c6d7742c1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe246a2-4943-4924-bdc8-d91c47dda403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7775d4-cdd8-4783-8234-c66d3165818a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28da192-d41d-4cf6-b9c1-8f1630fad71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323421d6-658e-44c6-9875-769e74a8ea0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0195e44e-bb4c-4d2d-a937-c670246a2a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40803de8-4a5d-4c48-af1c-fbf264729099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cfb015-81ec-45aa-aada-89daaa746d30",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9c3f8f-2d2b-428e-969c-ec9e0f80634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f34641-39f7-4909-9477-3519404d53ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c02de3-ea25-433d-909c-48377f05251e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e9f101-78e0-433e-af55-73899aaf3847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb1aa2-898a-4459-a7a1-b669473e3918",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5752f8af-aadb-492c-957f-fdcf4f302c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bf7c11-0228-48fe-9f75-588b2b318f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c665600-d96e-47c2-99c3-0e496fbcaa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda6c6c7-2199-4819-974e-045f4d5b0d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa542644-33bc-46b4-afe1-54a96d4b9779",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f7f2a0-d7e7-4d40-b6d5-f2247fe7711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b109b0a7-88db-4df2-9ffe-1e11ba94a933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb86184c-61e3-4a9b-b2d4-92ee52b8c2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a10687e5-d6c1-4545-a8f3-ed5e5df7dc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b358a11-d5de-4d8f-88c6-1e2b98e642e2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f237932f-84b5-4822-accb-b61549530179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8340db9-a7cf-431a-b9c6-c498da411612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d8160d-474a-446a-92ce-9d5030de35fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b44c3034-1444-4a17-b4fe-e7e4324bd307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6ede5b-03d1-4d39-855e-157b8e607576",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b158458e-1b4a-4137-b49c-f3f1e4732bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8673cf96-40c7-458c-a50f-864d8613f4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62688d21-0450-4d0d-bf4a-fba6f0f130d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25b84c9-576e-4a86-a8be-60c60f86a982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be18698e-5547-4dd6-b984-0333d2149fcb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59190dc8-cbfb-474a-9eca-9633e6dbe68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597af5d1-4771-4af1-8a79-75b4f92435af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9571b24-3ea8-4b86-bcfb-a7c5542fe282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff3f9e7-2410-47b7-960d-1b38b1cc08e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3663b8d9-5fec-4e31-b7a4-d414b1985d28",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e29cde6-bf29-4444-bfab-bedb6ed4ecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aebd6dc-415c-4ddc-ac37-ff48a3daa52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d90030-5890-4cc2-b5c8-36298b44f3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb24e42-b0f0-428c-8a2c-74434be04d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d0f958-b392-49fb-9b02-27b06e0f2069",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bee378-bbb0-474f-ac40-16fcc31be8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd51d898-8d09-493c-bcfc-6c3eb9557011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ed7af2-d2f4-4393-aee1-2cc5890242f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5eb3fa-737c-4c33-9434-39667a05bad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7c4296-11d2-4aa8-8981-6cd219d2a204",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b219c786-9dfd-456b-9480-9147e5adfdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1f3c7d-f8ec-402b-88be-2f721a40e6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39532bd9-5a8c-400a-b1c1-49d1bf79599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dadede1f-d125-4abe-be36-fa4cab894689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce08d232-ba7a-4e73-a0e1-134c300976d6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe012301-79d4-4705-adda-9af0586f4d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61a750e-eb19-4e9b-b149-f4d9c56442ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1de3b93-cbe4-494d-a3c3-16d65a204f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "754bf44f-d7bb-419c-803d-aa7fa5603fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0454583c-3cd3-402e-8fda-04d0ca05d3ae",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af39e5d0-5d89-4943-822b-ed0108deccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac410d1-c8d1-493d-84d1-214e99222dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8b3a8f-9447-4173-b42e-4faa468b4c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3ca189-ba68-4e95-b791-2f873a10f004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154a0c22-3109-4ab8-9552-ddbc2de973ff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8733ef-c4f7-49f1-8564-8bc7792af1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74b3664-1050-4133-9a8c-28abc292a51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c63bef-1712-4f03-acb4-7a9eaea499bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07b25643-3f14-479c-acdc-631f67e8b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0474dc-0c04-4da0-b0cb-68d931fd1945",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87611a1d-f4d8-47f4-9f15-d114c90fc1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2039bd0c-8678-4296-b276-14dc3fe9236d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46188e9-3a0c-4771-87f2-44b85f23fc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d60eeaa6-f8ef-4107-9ee5-5d3c80e6479b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200695f7-fae2-428e-beb6-064631aeab40",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13b21b5-763a-4b3d-8df6-5d0ddf91c103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e0e083-b6f4-4956-b0fb-90d620a3d54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2019cf-ef91-4af5-b1e5-7434f506dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b37b76fa-57ab-4ae8-a4aa-5467a75ec61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3472cb8c-212b-4e00-b55a-45c050d94694",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7b23a6-6bf4-4387-8fb2-b748e6e00683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1422521-4542-4dd2-8abc-1a64ba251202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898d4557-8610-414b-84b4-dcd11dd6ad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb2d6fd-2e22-450e-bc21-abe02b0bfe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613cb5cd-8200-4838-b358-3b7aa7359bcf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999d2bdd-9fb3-4024-aed2-1163741c01d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "792d3140-1b87-4c8a-bbc0-3ac6a1e805e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6806e9b9-4dee-4b63-9eb8-c3deedd83057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27ecb62-91e6-4a54-b7ff-6566be1825b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8592e371-dbad-4d5f-b289-b69ad83ff440",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3430387d-fc75-4750-8aa2-adeb3e470d19",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae479a42-d382-41c7-b1d6-bec6e9626bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfa81999-fe66-4af9-a0e6-4b390cbf3570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b007711e-8d5d-438e-bf10-3754eb0b660e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d6a5223-ffdb-4c99-b776-0d4a2ee3b21c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79171254-0a26-428c-9635-89077abe7756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e524b793-565d-46ba-8641-b5219f5d2e9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f183f7ce-ac1f-4818-82bb-fcaa68de9baf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7525922-3a45-42c6-8feb-42208a1c2732"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "373a766c-9191-4a06-94de-d1b18fcdb826",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e286cb61-860c-4c3e-90b7-de6a4e811922"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8162fd96-3e31-4b01-839f-b2646d9dc7b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d7d17e5-b258-4e87-89e7-5e913a1db7b3"
                }
              }
            ]
          },
          {
            "id": "0c95e453-4237-4da3-b233-3a2b82447679",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d3a1436-ad11-41d2-aa08-79519ee0c8df",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2abe4b38-5e45-42e8-863d-2b3f04a89114",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc18a4e9-7a7b-405e-89d7-7dec20487ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b0ab76a-9449-44bb-aaea-89df88180cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b49fec8-a2bf-41e7-9965-f2c39964f3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c159ce-c8d9-4045-9cb2-34f7b26f5a88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3fb0ee3-e24e-4f97-b407-1f954ebdcef8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8f769b7-ebaa-440a-90fe-6d0474af36d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a556f5f-65a1-4957-9d10-9cb4d538834c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e17c132c-c4d2-4560-bf8a-4b23edd7c594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8771d096-0553-42e6-bcf7-1ae889dd83c6"
                    }
                  }
                ]
              },
              {
                "id": "89692ca7-4708-48fa-b1c7-2975a1fb5199",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f7acd16-c8e1-4c39-978d-ad49ff7ab317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea423009-c505-40b8-afe0-9f6ef15cf224"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6bea2da-25d9-49aa-b9a2-1e1de314c17b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d290d97c-b11f-4125-83c0-bcb23bc89b31"
                    }
                  }
                ]
              },
              {
                "id": "b26e86cd-51e9-4d2f-a490-a87ac63536b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f2491f0-69cf-4209-9861-c5bf08536ce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2beae036-e2d3-45d6-8af8-b951a8f9fac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48bfbbf0-54a8-470b-a34f-c547494b14cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f9eb83f-e523-4fce-82ca-b40e9f4f6436"
                    }
                  }
                ]
              },
              {
                "id": "f757d189-fdaa-4721-b13f-1af5131cdd5a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b0f3f65-2450-41df-83dd-bfff1cd42c10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64939168-5b84-4d07-8879-ec160eeb904e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "862c26bf-24e0-4b09-924e-1ae75e45a492",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae3171bc-09a2-4624-8226-9aa4948d8d57"
                    }
                  }
                ]
              },
              {
                "id": "ef76318c-7c42-4d93-85c7-e7ed0e3e6b22",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0a56443-4363-4c7e-94d7-3cb3c6858d5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dec27620-2204-4059-a758-a13ff41b8125"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57bce626-d82b-45a7-835d-c0cf22f0a2d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c25719b4-403f-4dbd-b040-87683e384d59"
                    }
                  }
                ]
              },
              {
                "id": "7bdeb0ed-b2d0-4b6e-b6b2-0912e54ad698",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "105a046a-777e-46d6-ba99-ae09d1e975f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30133d5c-b8a5-4040-b4a0-012fee897f08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa03d4dc-d6a6-4301-b6c6-8e13b2f5be6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2473aac1-2f08-4dfd-b051-7f8f2a7c2863"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5542ac4-afb8-4187-b31d-e25666b24da8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dae689c4-2fb4-4745-b942-3bdf4a7ac675"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d20c2ae0-68a7-482b-a5a8-f537083626ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d432864-8f79-49f2-85ee-6d526ff10ae0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29471f9a-509e-46ef-8c47-2bc47ec828a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "83ea1d8d-5959-4ca7-958a-20e8006dbb00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70471a24-2c3a-4aab-9c4d-becb08c0776a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85593771-e9f0-4b68-8456-877bc5299c33"
            }
          }
        ]
      },
      {
        "id": "91f13484-95f8-4b26-8371-ae159ebe147a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2381a564-cf32-4e62-98e2-c29b38650f70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8949386d-8dbc-492d-8965-040b8c799107",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14555c88-482a-4808-a88b-8ecf65521cec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ab4d74-fe78-4dd4-9e9e-1556791d4dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394d5c6e-fb22-4d76-a492-5fd484d8e7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfadb9b7-78a0-4134-88ca-6221bb0297f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c720eae-8b29-438a-aad0-42b2b197f9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92b50ad-17da-4581-ae00-7c7f507dd852",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7127ddf3-b33d-4e86-94cb-bc5243a9fe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa523472-d886-4d11-82fd-668b344c0e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889cd0a5-d6a8-4a5f-89c0-9a40b881e441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67aab759-6222-4046-ae87-04ccb48365f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d2a52-d8d6-4070-bfed-dea8f0d662d2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353604e-0ec9-4770-8754-501c7b46f457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74efdcd-6940-41a7-9571-da3e3e39fbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280299ee-fc0e-471b-8d4b-4be95b62a142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fae2e71-c0c0-4667-9c09-5c25263da9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7091323c-4b13-4c7d-b3bd-839d5180d371",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba4d7f8-f040-4c18-bafb-dcd5e293c140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dd0581-2f42-48d4-9866-39a2a2f1d842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe144c75-4be3-42e7-9e7d-7c849dbc7192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73fc62a9-d404-4576-bd1d-f647599374cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2223f4-f953-4c4c-a5a3-bcf5bca7244f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4047a67d-2a59-4db7-ba19-ae922e9abdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecee1b5-2e8d-4df6-b8d4-10d3cc5843d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dcf795-8f8e-4bac-8b88-eb5e404b463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf26687-f592-4ff2-9da0-dfc504886846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8657021f-78c3-4dfb-aecb-a45ec3311f52",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eb4915-10d3-483e-a52b-5ee633ea522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781bd928-6ebb-404a-85e3-731171d7b9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba334ae6-c731-49fb-bf31-63f71ce17dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f224a4d-94cc-4847-8d52-107a329a1921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0458b980-7f62-4674-be54-a6cac4bd4df7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02a58c6-a4f8-412b-be96-f7f0b51d2d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23739a4f-eb77-4978-bf67-ca8ec8cab395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993366b9-03a8-416f-b1d9-d2cfd6974226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "426045e9-769a-434b-a002-e49f16787fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eb4d16-4538-40b7-a524-337239d2b414",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34f6cc8-8e41-4da9-847d-63d9769537a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11a9566-65a3-4287-a820-b8424e5941a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ee4e75-2e67-4654-8316-c78e5a61abe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f01eb9-1676-42ba-bb4f-1c1e47d03355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc7aebc-a2c1-44b9-b6d1-4eb9e3aa70f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849d2845-72c5-4285-8824-d86e087668d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b67b6a-fd4a-4e9d-b5af-eab849e02604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd24fb7-6fcb-477e-b68f-8c7531042ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a3ebf6-79da-40ab-9f44-06ff6562b01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8cc000-7fdb-4dd3-a244-ada32748d3cf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06117560-030e-47cf-b1b9-c47d6021bbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849f8a04-73a4-4256-8035-d23dea0c3a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff15f9a-3399-405d-8e81-bb78bca1ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1151d6-022d-45c2-b409-e7720b7f2dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2bf69e-8d2e-4856-b362-e4610c89b098",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe23a83-6799-4f6d-8236-7160df7ad993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00f2528-eb6b-4e1f-a125-f9df32396fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd75d12b-7f8f-49ca-8d0c-8bde67cbe868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38879ff7-8ddc-40d8-909e-f0ba8bb2b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349f5bf6-bfce-4594-a61d-e244df15cc7c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a4683e-82c9-4d49-a587-1cc9ff0bc551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8806b8b6-a504-48f3-b49a-93148acdf17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b03d58-f0c5-4b84-8f68-ec5b17f8e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d21fb84-a6f1-47ca-b32c-3130335db536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b00cc2b-1495-4541-97df-4088e78be0c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980c9054-b29d-4691-8997-ab6afb3c8480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be615b16-3e9f-44f7-aa2e-bdba4d86f485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2213b0a-42d6-4106-a255-cddd8eea5e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c5f5e9-b8e7-4a86-a2dd-d977185d7e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f2a152-ad65-487f-827d-6006bb157379",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f8aecc-63d6-4c77-a783-037902f948c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f58a9a5-ed9b-433f-bb7e-3f3e56c88cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff7212-4751-4aa3-947f-5a4cf3ac8ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "811ea609-a18f-497c-8781-ac48b8c934ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0a7583-4e1b-44bd-8722-18f22f42f90d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b1106f-8847-4496-a23a-8b5e4b2c3d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfef0437-2312-4bbd-829f-3b5f6e3d1d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e54d52-410b-4a90-a358-689774f31db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6083557-e9a6-4b97-a1ad-69457655adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a11cc6-316f-433d-83c2-43a9500c0016",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c706181a-93ac-434e-8ec4-0d033790df71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0312ef1-bc46-49c4-9f84-06b5fba98040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b19822-faa2-4cae-933b-0bd2d7ad7083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "750d5e45-a889-4014-baed-34012e13d45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ed4cd1-efa4-46ab-9962-62ebc50f0729",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d0489c-41bc-48c5-b6f7-06fc1ff7757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655a1ab9-dbd7-4c99-a498-f361057a8d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1edc1b-9493-48f1-a65b-579b33e15867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df5b145-b7fd-4c32-9515-e31a6a09eee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5c3158-a873-413b-89bc-311646948177",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0faf65-0a11-488f-904c-1be799a7a7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76bcd74-e344-41b0-91ba-7773f1633413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08210e66-18b4-424d-8900-4e590ba79edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "897d732b-4396-4f45-bf27-4f48fb89cc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef1c691-f33d-4cee-8169-33ae1dfbdd35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aabc42-c3e0-41f4-9f70-59f17d967d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cfa530-546c-4ed8-865b-b58c261fb820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38115dc-2378-463c-b893-991898ea9c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7fe784-d055-4cec-9442-5f0cf0eaa58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58df4ae-191f-40e1-be28-76c02fd8daf6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b587993-3e07-48c8-bffa-2c04ec17ce68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44041428-947c-46a1-a93f-b00d441b443b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a52a4f6-415a-47a5-a0e3-99cd9c9db0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03db44fa-3ab0-49b2-b529-b4e06c5ea5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a2d78a-3ff7-4116-87b9-9570bf585c9a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91bf067-44af-4854-8619-2c8d26a9882c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f91ad7-9110-4adc-b7d9-6ba6834d0218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6300e18d-9f51-4228-a591-f6b4b270ce03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3806c18a-a167-4005-8f2b-ae361c768795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42cb03e-9526-436b-9239-3ecdc7838cb0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22596ed-b9ae-470c-9f98-67dd077ea5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ef7c08-0deb-4368-8a40-30c609e30bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d04f51-044b-4080-a28b-4181f8139a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a93832-f5c6-42e7-9143-f3fb0cab41e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a79faa-96b0-4aab-9192-d725044300b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429be4f9-1ab7-409f-b143-bd0ab5b00b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7859a8-4110-4e6f-9bf6-a66f7995a043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771e536e-5ad6-461f-9029-cde8ce92dd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42c6d836-c8e3-47ed-8430-a002b2f0e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f149dc-f6b3-4a91-b85f-916824ddc6bf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a6091d-e38a-4b84-b49c-f630ca62e228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d989d50d-c0dd-40c5-bfce-54709654afce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c1de4e-a28e-44f7-ac6f-297d55e9826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a211d12f-933c-4fc4-b680-ee0f81ab991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c164fa51-4721-4252-959e-cef584706f76",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ca0562-22f8-47fb-b13c-f29eae16e2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7731f658-6ba6-42e9-9113-51ca18390b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e093a6d-3800-4996-bf68-d29d18af154e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27949e41-6c32-45b7-8be2-a90de2d12d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc8c19d-eb77-4d3a-86b6-0abff222b36a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6058147e-1ab2-4774-b556-0730fd36a869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b018f3e9-8357-473d-831b-d8920564eeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea2370f-0bd3-4135-8434-f5cb31c1f9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e51ce1-89f0-4376-82ab-b5a9f2f050f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61df01f9-8737-4493-adab-fa926c0de298",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53620ae-5719-4b9b-9beb-420addc770a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232efea4-44c5-4f20-9783-5f1ba755c69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21ec55b-ea8f-44e8-9097-09799fdbff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5f0df7-9767-4000-9bc6-2534a9ec5614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c5e6b4-7b1b-4098-98bb-8cd13147e155",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e017da8a-6b26-4d54-b6fb-15c0e8f1189a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9de813-1d4f-46ed-b175-b076c51df9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f39601-9f07-4ae6-b0a1-4cf9b28e2739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed09049-5f12-43d4-a058-0c07720bd20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0e5a97-52bd-4a52-9c0a-6b1c78427f4c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bbd9b0-c4da-47dc-8c13-758857f47197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09b6694-8d9b-4b5c-8af3-d1ea8bdc306f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09df4a-2c3c-47c2-99b2-f7f2f32cf9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4e12e3-916d-484b-927c-5b3893cdd387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f8969c-0be5-4a0b-8dc8-f2403ee5a35f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04edc294-6df5-40d8-a96d-fefba0132462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1f1ae3-2347-47c9-be26-7ff5c69f43ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95daa050-5d77-46e7-937f-9f8676f727ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b5a25e-1bb6-432f-ab2e-e9ac5fded869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0c6351-bdf1-4d6f-8f5e-5483c08943c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08ed2b2-70b6-49d2-832a-a27f9d4c6cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1411201f-14fd-4b6f-9d9c-8333bc34ecb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c5983-c407-477b-a837-4d3fba4ef0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511fcf4e-af69-4557-8287-753c5bd8c2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d445dc4-60b5-4c60-80b1-c2645e83b006",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d98e0d-1b0d-4974-9108-483c8093148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42756521-fc35-4347-9789-03761d06164c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17f4023-95af-4e96-a504-d532b03d643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6eced6-9127-4ed8-8e56-a86ad6e67bc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "450a56d2-ec46-4be8-b5e3-9167dff0c94b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc7c4e02-ecc2-4562-af7f-30a3221de397",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd02849a-efaf-40c9-9e8f-995574248dd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ad2479-e1b6-4bfa-a8a9-e560605c603f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f35b12-dbc7-44cd-9b0c-57c2458d8935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a96cd30a-3145-43f6-a2ff-e3149729e30b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfeb95b3-bb97-4f6c-a14f-085cc74541f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b905d89b-fc8d-47c6-9ab7-f5980c338321"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "846097a4-6d63-4bfb-8e5a-6d5a2348bed4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87f32721-aa69-4378-b449-e09ed519c018"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "beb45c09-7026-412e-9200-79ee1529a894",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce0598bb-ba9d-45d8-8e3e-d4efe9b8ed45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d520337b-943c-454b-a0ae-fbc321b56515",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f850241c-36b2-4f99-b37b-28c02f3e29e9"
            }
          }
        ]
      },
      {
        "id": "aae24ec8-fa94-46a7-b4f8-b6296e953f94",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8fbe4509-7d82-4265-9df2-9eb00c798a2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb3d171c-e543-4df0-a7b6-1c6772c01fbd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4bcaa41f-672b-4fc2-9aa8-a363e7c50759",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06681e18-d5d4-4b25-a95c-841d938dd95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dab104-ccba-4ee8-aa7a-5550cc6f7013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991145ca-e2e7-4240-a261-4b4301afdcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8eff3ef-9df9-4440-b887-4fa7806c4d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698d036c-a249-41ea-ac8b-7a7b9b5a4cd5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784b4168-62d8-44c5-b58c-459028b03a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aafb32-1ba5-44c6-b513-679fcba207d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7691aba8-7b70-47fa-bb2f-6d1f784f456d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2e8619-dd8f-4793-90f6-66770bee0533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc03056-9e94-47fd-965d-6ea7bf387ed0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29bed57-0de6-43f1-82ae-319e1faf70fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85acea3c-e080-4706-afdb-12ee34c24485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465d802c-ef4a-4252-8591-6cd5c1a6d193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7b9f86-56fb-4e9e-bda0-6fb1b018cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5957667-cac9-4938-954d-dcbe2372982f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af031df8-eaaa-42be-b4bf-70de14f84f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9437ce0-f42e-4ef5-8751-2b113448e473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca28b0f-9fc9-42da-b41b-a42b06601abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "104c766d-f144-474c-b389-5992c7311d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7103a8-03c1-4610-8b6f-efde9857348d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22370e0-3c70-4720-9b88-da0f78226f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cdcb36-570d-45e6-9599-91bac116e727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc96adc-5d96-44d0-95ae-5baef66ef006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d00d0dd-c607-4d74-ba8e-f4c360eb851e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dec719-3207-4846-a8c0-2c3c7e58cc9a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4765b878-e544-4733-8a0c-09b9d11aa400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48bed96-5670-42ae-bed8-25adda849641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9d71af-7d4a-484c-8384-31a0cfa02df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7cec0f-d2a1-41d6-8391-464110997d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbae423-cb55-42f0-9388-951839fd1826",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab7874-93c2-4cfe-8a5b-f9f171e5457f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896d2f2d-7c58-4154-ab16-0d0d90c578e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27866a8-feee-4138-8746-fdab0524969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aececa-b5f2-4a9f-86ae-3c5b16fbb6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e93d09a-65e1-41fb-8ca8-902265803fda",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796b6526-fc2c-4edc-a407-5669f609e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398a5148-4385-43d5-af29-249de26508a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9546b3-68cc-4e29-8a3b-3492a79d9baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1719d2c8-d05a-45b8-9300-e1c6ce75a20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ca6a99-76b4-427c-bca4-edcb23876b26",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f36523-e482-453f-8ebd-ce7abd67a4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7948bdde-1d0f-4cf6-881a-4f9d5fa6cae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e20e4e7-af61-4c9a-8731-8d4c09439ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "437c256b-a0d7-4f7c-bd66-29f1312fe03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27503acf-b443-4129-a773-a6f1b1bc7ef2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2eb148-6581-4738-958f-44ffe4ba07e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573e5751-ecf0-4c38-9fdc-87f6833d59e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb719f1-22d6-4239-afe2-9efebd142820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1c80db-f6a0-40e1-af5e-ca306cca2ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea1741b-8b58-48c6-b858-0d1581bc41b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd83f872-cf10-460e-9374-60beb147c752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a74648f-f95b-4c78-847f-ea6b2150cf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14df5d85-3ddf-4a97-9bf8-5a4e5f0776f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12e58e0d-31ca-45f4-a940-8b8e68762916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9dfe1f-4a53-4711-ab56-04b3e7038b74",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94ad715-58ca-4cd6-8c2a-730158a9f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5663fc2c-3652-4669-ae77-51aa55c3ce22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acacbbba-e0a8-4ede-a85a-1efaf1331978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1f7d96-b147-4d56-a6e6-ebe25108d0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c74c67-99e5-4dd0-acdc-6f97ebba94b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ed133a-152a-4a2b-9f33-4511dcc26ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9ee152-f072-4388-80b2-380e21103546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd80c12-9609-43c3-b3a8-77bf1205fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13045b29-d62c-4727-8a51-800a24051d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54e1fa6-0a4a-4375-b86a-5b59eb1296ca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f532e4-c3a0-4236-9663-609a8b85f236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72088582-7142-428d-999b-08538f58fda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c533d3-d808-4696-b5de-9c9a64229c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d6d2f6-dd94-4fd7-8ce3-e83f5e538213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba0fa93-7cbc-431a-8db1-46ea9a5a0ea5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86bedb9-0906-43a9-9148-6b5156dc4614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a535b3-4bda-4ed7-a293-89adc9f174a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7fa0a0-6c90-4282-a887-45d6d28434ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10299d0f-2a6b-40e5-bef9-4d4ed7cc9393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a26204c-e392-4989-b0cf-febfd4cc80c3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c99db44-552c-451c-a6fe-10416280c0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db9544d-1876-470a-8f3b-a5f2e9aa9e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef045d82-c27e-4145-b05a-fe321b4888bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c31b659-7a70-4c60-abb6-40caec98a47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10be4567-0cd3-4c7c-b317-dd0a1c321483",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354506c9-d4a9-4cb0-ae5a-a278d7f0d689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebe0e95-3503-4715-a264-187d28f7f23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8950c310-dc6a-4fa7-a1f3-25c1f1ad2dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5689a488-3e09-4486-861c-7c7b244a0fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ea1d96-7179-489d-acea-861608c0834f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4385d0-79b8-44d4-870b-484f44d45726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b4b7e2-8141-4e4f-94ee-c003869b6fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00303924-6999-4425-b386-4b6056c9934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc63da3-a9d2-49e3-9aa9-b8d29f269bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8c52e1-28b0-4d56-875d-ce03ba9154eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee20ba2-e2f6-4462-8359-410df93368a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd0d5b9-e1c7-4e32-bacb-682ecc0615ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a4ab3f-76c9-4838-bd3d-2ec6a940c916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf031810-31b4-4b69-8254-eb7be4c4ce8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb647488-be64-43ec-8a89-3c74ea15da98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f25fd1e-269e-4c95-a1ec-4172769ca5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0169d4d8-6d58-4e2f-80f4-4d149a1d4f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea464a9-17ad-4126-be87-645f7133fb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c99702-c78f-4708-88cb-84fdd2722496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ca5909-2be8-48e6-9bc6-41e1e177a811",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9073766-3f9d-4deb-a66a-2db9105ce445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0387912a-2fcc-4636-86b5-a3c332587901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf55401e-a4b6-4867-8dc3-99833885fda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6f5ba6-3360-49c4-84d6-d9da1888bbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa955f0-7514-4995-9dc3-85d6f00f0f1b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a94edca-af78-48f5-9c8c-40e8e5ce38fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebb3c69-66d5-4828-9914-56f1c063a275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126df859-e562-4846-bcc1-5e155fd9a763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee991b4-03dc-4b50-82f8-6a0bc46137f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1ed0f8-ef9e-4df5-927a-0bbc77689c26",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aff736-55b2-48c6-9a39-417c775a8570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf0bce2-c168-4247-9d33-fd98299ac601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65da54a2-c1eb-4745-9731-4165b5969be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1ae9a3-db90-447b-af0a-a98ac44f871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca37225-0c71-4c6f-ab27-505508a4d124",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e07de58-e724-4a52-8232-f62ebb71c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41197a71-9fc4-4d6c-9018-af34244a6eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0286d20c-769d-4f96-befd-6fd0df738ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b3ac09-0cd3-4c30-bbd7-2a523c88ad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773bc981-f351-4550-bcf1-876bbaf5fe0e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41116a7e-3481-4b83-aa14-27866b845133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad45f1a3-a90f-4ad9-9034-3c30fa227fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a6f55-5d3d-4790-90e2-24ddc08fd3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "462e8506-7b3e-46c2-87b1-16f82926eaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebfc44a-b23b-476e-b346-2b11a74f250a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79427b14-a823-4753-bc18-6ab72064a9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fc74d0-af75-477e-ae0f-d038175b732c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7a6dba-fca2-4c23-9e3e-1004ed344bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01690071-3488-4fc3-84b0-a3d2c2e33219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a566ca5-ba5e-45a0-be10-e32fc2096a11",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de7f401-9897-4778-94c1-a6d449103dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efb8c95-a079-417e-8421-893e5acd761a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9740e2-3076-432f-ade7-19ea306505f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5fec18-0af9-4737-a69e-8b412fadda7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7c479b-8841-49bb-a6cf-eab6b1a0f814",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c56549-8543-4f90-a563-872186d965dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9860041a-0e20-44c6-8a47-2332aa689395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a0f823-449b-4ee7-956c-e19cf9dac1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd03e79-f539-4863-a1e3-8843d7cbd38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9b8823-8355-4344-a30a-ecd06f51deb3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61031744-6211-4490-82d4-11a476b1c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c873d874-850f-4bbe-8b67-6ea1648003e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660f5ed5-e414-4403-ae2a-287d89379453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f869485a-5235-4a3f-b862-6d08d0209167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f4ebc-89bb-482a-9311-644c2695ba74",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aed1307-e1ef-4116-82bb-aed3225ef1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa5fc19-de07-45ed-8ba7-1dd3fcf8423d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3806ddab-6cb3-4381-9f2b-6c880c7ef475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb0e0a2-3864-4639-bf7d-e40ba52ad0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9e8fee-da29-4ba3-98a1-f80e2716992c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60e8a65-d301-47f7-a300-7880b9770137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbc599e-8910-4caf-9600-072325629fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1c8294-0bb6-402f-ac69-86c0ceda08b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "722809a0-b76e-4812-9d3d-543d3fedb830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc49fc8-10b9-4e65-8a91-49cb7bb66d5a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26c082-1081-467d-9363-df507373c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854454f4-6bab-4d33-913a-030921bedf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d95446-8458-4f0d-a3b9-720385d90bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d5d108-3964-404d-8d00-58f97c78f93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fcd492-2424-4623-9590-e7b664e04546",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d84d3e1-1100-4ef6-bf5a-8b5820ebf349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c218687-1158-4f74-90ed-18bd34812a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea9476f-9622-429c-9cc6-4033773b215d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58182329-792b-458d-a692-326c0692e054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2b24ac-61f2-4aea-a643-1b85d801cc01",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4e6b37-a627-4994-ab33-7c675ac77806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa15e6b0-dcbc-4a19-8dad-d9f4bd08fbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd697aa-a7f6-48e7-9279-0d7f29e5e98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d49cdea-487d-4ca0-b606-a21fbe39baef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3b3503-764a-43a6-a29e-79bb318f3c12",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37deb320-094e-423e-84b1-daaebd9b2381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740299e4-1ea9-4771-88a8-2c874838b6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a379d80e-419f-4149-a831-e9d9213ff675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db524b0-8f61-4cda-aeb4-75d35fa9cb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9efe2fc-8a34-40e6-9fc9-11b75befde9e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0756d8e6-99ff-4554-9d79-2f691bc74b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89197ae6-a300-4ac2-9797-5cfb81f6ca33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9452609-faf9-4d91-8e2f-559aad2779bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3efaec1b-aef0-405e-9e7b-f6d59ba46696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0807d5-cf96-44a2-a81f-194a18e8109d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64af4d4-8ab1-4476-a4ab-59081ead6435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea83c8f-eb69-44c4-ba4f-e4b7a8f2341a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4015f6-39ff-4754-a632-96993488a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "771d092a-cc14-4929-9a28-1d278a586ec6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b5b93b8-4b5a-40c5-a088-0a3e33fcb9ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b07dff07-cbac-4f36-ba63-990b7251e03e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfefc58-cd08-48c7-b4db-3a11f283c7db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dfe2d2-bd51-4cde-ab42-1b8ecbe3f3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47302b7-8f7d-46ad-bc69-3b7025fe1bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05ae2fe1-b64f-4679-aa57-8f7e3209ca8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b26f037-e4e9-4b7f-bc01-4262bf7c3db2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "166dd464-5ebd-4587-83ce-ad7c0e5451f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "944f0729-af9f-4897-9a79-2d6ab7a2087b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d19521-1d55-421a-8c68-d392b2106b42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec6f5cc4-6209-4c1d-826b-26e176a91c5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d006351f-829a-4590-9ced-e59dc6a114c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdc7d6c6-85c1-420e-aef0-2019a5f4374d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a6ed1b4-a87c-4473-8a55-5b4ad30e9e6b"
            }
          }
        ]
      },
      {
        "id": "b16b63aa-f05b-4e6d-a6c6-846646c130d0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5479273b-26ee-4380-b29e-9e15d303a65b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9425b701-0da9-40d3-b259-c0006d3f3a23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b2c97dce-a009-4302-bcaa-be8fb225e008",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31703e9a-865d-4fd1-8357-373e13fe2228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca718b3f-57d1-4ab0-9466-2f13be80c41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966a986b-89e8-4031-b73f-8e461099a0c7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f8f588-067a-4676-b413-56c95bd2c45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d21f4a3-8876-4844-bc8b-6a562b22dd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09640cf-7a09-4b48-a93a-25bfdb00186a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9771fdc5-850b-4e24-8763-0d7557e8a185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26b2d7d-eb07-43cb-b7fa-a19cc02498a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c5028b-c0d5-4871-8e34-bc297aed8fbe",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d2ee8f-ae0c-4aa3-b2b6-46251dcc7f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5cddc3-825a-4dca-a0b0-89d6694007b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d606828-d239-4a0e-8303-7053631f7b64",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95aa3ba-fee4-46f2-9ed6-d3a79b80e292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88939be4-2d86-4637-be3a-5b42fbfe55ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7a0bb5-cfa6-4540-ab91-56173e0bbbd3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb8077-7996-4410-9539-7d48924944f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbe89e5-9e84-43fe-ae54-5afc5eb54a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60800bba-42aa-499b-97b5-5e746ba93eb1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf0bbf5-1279-4357-8a9e-40322d9cb91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18321ece-16fb-4064-ab04-e47ee3c4f0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adc7906-82d9-438c-b5d3-f2bcdd89bbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbea9ca-6f0f-41c5-a47d-6dc29795d69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103d6650-5d36-434c-962d-0a0a17dc934e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b097b3c7-d728-486b-9d69-1e002190df5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39c1249b-9465-4d66-adf3-a861de29a662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1cf717-674e-4d52-ace1-00d539d6e7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0be665a-6255-43be-bdb2-fb03ed85984a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0129f7cc-e004-422b-a4fe-40993f99a9e4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d4bd29-0587-4e28-bdf6-b9ce5b781f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ccc75d8-4aed-4de8-bb19-4559a5088fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d170c8-4815-4fe6-977a-a9d8b5b2f0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d56bd9-778b-4047-82a8-9f225eab7f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d655afc-79f0-4880-9ca1-62b87075d4ab",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e28ea7-d3ca-4000-83ff-c76635a692cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575a8d51-621f-460a-8275-5dbc17750c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82794a6f-30a8-40ad-8270-ef6ec3597d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2df113-bf01-4900-80ee-8d927047cc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07852e8b-abbc-4e1f-8297-4b1066a855b3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216120e1-1cd4-4f57-af62-ba65d6415292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7a7458-e384-4eb8-bf43-ee472ca375e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca7b35c-57b7-4659-bea6-c018d915cc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e76eb51-9b09-4102-8d83-11a5973a132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaae64f-a4db-46b0-8e1d-ec03c002259d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6cac79-e9a4-4319-b31a-ef1bd5249a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676dd2d8-3a4f-417c-8efe-5d8f7ffadf01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208cc14e-ddc7-4a12-ac2c-85eb7f487842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f283772a-110a-43cb-a55d-c9062a989261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22363d1f-1f9a-4a38-8803-5536bedd4a3a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595f0a3e-8144-472a-ace0-de32c221bc4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d473169-b1ee-46ef-9012-352546eb223c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29aaf24-087e-4e1b-b321-605221f7afd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d944b40-0787-4b6a-80fa-cb160d32dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e89f0ad-11c1-49a5-b7ef-32e47199160e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739e3a82-a967-4df2-9c7e-ca938d785bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b729bea0-8a5f-42a8-9fae-5ea60810c164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26408895-4148-41ed-9e6c-8ca8cb1335bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30f178b-1f13-45e7-b577-a21e0ff9afc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204dfa86-1628-4391-9ec8-65e79320c507",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8b76c8-cc92-44cc-8577-7f8b6d4cff01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b1c807-f59c-41a1-b58f-331f59a533b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c185bab-0c96-4eee-822c-19f2a4af048c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78407bb-7469-4dd9-b174-a5dbb05e772d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2031dc-4f9a-41bc-bf6f-21f9f12225a0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e3d0a9-9da4-41a1-8807-230d01a22166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63688f76-da2c-4544-8a13-b0b693d88b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dbfe72-95ba-4491-9008-e406c857d400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8574e9-c76d-48a6-bdfd-2b3e5d8c901c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6e9f57-2487-4438-a111-7672953ca475",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235a874b-7a53-490d-8fbb-ad0b786e77bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71faaa41-2be1-4736-8047-2891710bf6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824f5866-e76a-430d-95ec-b5f9c0736428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae493174-2cce-4ccb-b3b1-d67541f824fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e31c4a-7f23-48ea-88e5-b2da6ab77a92",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c3e8f-7e15-48e4-924c-8ac2e1e004bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9692dbce-ac4d-415c-807c-fe3e7001c8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e661a8-0179-425e-b99e-0a48378c9832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea6f624-1767-442e-a849-59e57126e4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e66aed-091d-4c5f-b124-f70bb4c6721b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f591c20-6d94-4b50-ba82-2ecf7b89f10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acf03c6-1490-44ca-bd2b-0a57b66a3e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5d70fc-9e48-4a46-a47c-3cbae228982d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fff2bd-9fe3-4fe3-a5ed-bd206bf496bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce4868f-66c8-437c-b085-a559a3782b53",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6f6235-5003-4ed3-820c-9543997459d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e47cce-67c1-4843-a72b-3cbd87decb2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e4b946-ba96-40ae-b3c5-8ae64f4b6f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f1a17f-c40b-471e-bfb9-98b7da0d5849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f0d37b-bcd7-4a8b-b8b7-49ffaece071f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55179fe9-0312-469c-882a-bb0513f7cf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61569ee2-29e4-40c1-b8a2-4fd21cefab35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440d265c-0cec-4680-8231-b4e06c3ef8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363c1fe1-7e1e-4957-af7e-fdc526dcd80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead5d9d6-e03f-482b-a1cf-5a92e9d62516",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0a3a3b-d786-4abe-8d58-f9990cb81e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24001694-b650-4ee3-8f1e-a369c3738f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0798ecb-dc1c-4187-b9e5-92a72f0953b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a30062-f59c-43ad-8a52-07779297f1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc6f593-c0d0-4538-ab12-155b11ba2e0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5140d5e5-7bb4-476c-a207-b2f5645605c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138287f1-351d-49b7-8341-96771ed7136d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec2346b-873f-4051-88cc-fdfbde71d4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537ba387-2ec9-4d27-a7e7-b1e7ebd9f54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8316e0-34e6-4ce7-8321-77d5e3dff6c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795057ff-09e3-4749-89ce-a6e5de3266b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c2e7bc-c4cb-446e-914d-777a1628a263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d5a504-4d00-4d71-9dc2-cb4e84da6fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995ce2b8-6839-434b-a93b-655f46697c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de6980a-751e-4eff-936d-7a75a01e145d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467c56bb-e243-4170-90cb-8de10e4dfbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcddc646-af16-4579-82ad-414f3465925b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474e3a13-940a-4993-a8dc-88ee534dfebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5857243a-b1cc-4b61-ae0d-f3d50847cd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e92b94-9b4e-4826-9c34-32237aa12341",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a7c8c0-ccfe-4397-b97c-cb1ab272919e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7638c07-8f5b-4ed3-8d31-4f2258e5b292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498e9135-c69b-4f2b-a005-c83631da48bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d1dd44-90f9-4a03-8992-a51c73eefd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81271cb5-2377-4fc5-bbdc-e6f5d10359f9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece3026-5c42-4ed0-8874-1b5008f48425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6530faf-8abc-451b-a5cc-bbfb94925da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa4bef7-26d9-4bc3-901d-42b819071c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070a8b30-aa93-4bd8-bf65-5c39d49c7a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3454a461-5ca9-48ef-8152-07a71ace247a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b961275-53b1-42fa-857f-73280715a6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d111917-dd86-497a-b2c8-750dd1f1e3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd1397c-0409-48d4-bf29-4b084d97a954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2737dde1-7f98-4345-a2d1-aa3f826e7fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142f73a7-7b13-4818-936f-6d89113394eb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0a9e79-db0b-415b-94ff-8b688cd86c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0bde25-214e-4b2a-8cf4-b754b2051475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e91b47f-e978-47d3-a2fc-e308581a1600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56317c14-9535-47f4-960b-98e36fc053f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db487998-4d92-41d4-ba48-8a1b42d5aa2f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271aaf91-4c35-4f65-bc99-4a458eef9e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece9698f-b2cc-4846-b50e-6c26cb21c386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ade6e3-353f-4d09-b173-a7da9ffd7fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc35598-7e48-4735-9447-20f2a547e171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f36ffb-1132-49d0-85f7-f1f7a3e75966",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81a5337-66d5-4a82-a72c-b05f476d7665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79950ae1-77bc-4c77-b946-df617c997fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa7a02e-1c6a-44ed-afc6-774bf9c30229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c380437-22d8-4aa8-90eb-651df49a3707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721c38ec-2669-4903-9396-f994e1bb7c7d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725f17fc-650f-442a-aa5e-11c025410063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca99134-5b37-46d9-a0eb-b00d6bbdc2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac48e5f7-e668-41b8-b79d-d719566dc6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32625eca-1cfe-4e5e-8b2b-58444f25fe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4023662c-067a-4910-83ac-237492810016",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fbe233-ecc2-4b75-a103-d14c9cde57db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ceea9c4-0f93-4c19-802d-16272877a303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140c13ac-84fe-4d3f-8f19-58894ee32a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99a75a1-c52a-41b5-bd15-ea7932f68738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df28463-24ee-4651-9e46-2dbb9e6f5b2f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49578186-cb55-4d25-a0ad-2e0dfd486184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c16af42-048a-4255-8c58-b5845b41e4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d91923-5f01-452f-9f0a-4177b0467689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9f2bc2-c803-461a-a1dd-f0e58ac0838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b8ff51-24b9-41fd-b4f0-cd1fdec45316",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ee5b75-81b9-4ac8-921e-2091b685495a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8862e1c5-9445-424d-87c9-20dbea0d0246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d2db3c-94bc-412c-9716-e34650498adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f10a63-afa8-420e-99c8-a28cc80fa4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f60d69e-0279-4b37-9299-ef9882027ca0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fbb4d1-680d-476b-bc96-5da506ab9686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c19624-78ca-4255-b771-2b1bdb3d4276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d4920-f111-4067-aad2-433d0308df3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1426fce8-cceb-41a0-8243-a1920886c3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15a692e-5be6-47c7-a1fc-2c4fed93a6af",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ddc3d0-d373-4749-ac83-cccec3b90b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3faa1eb6-9846-47de-960a-461ba6ca5cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f03bc9d-7a64-4118-b837-f8fda67e218a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13d08e8-e64d-4adc-b578-8bc668269044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7ae1b0-a16a-4b45-ad53-0452448c2881",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ff7b3a-bbdd-4274-9434-3687b64612f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894f1c11-907f-464c-92e4-b0d17d77bd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3664964e-39ef-49b6-8479-31cdffd7e9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe1fa04-a0a6-405e-b0fc-25542444b6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f3c549-4100-4b30-8692-6d7b76fc1f5b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a372949-53f8-418b-b3d2-487d8d9e4307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1892c861-7172-4c68-bb87-a4c2aa1f3a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9651869b-1017-45d9-97b4-9b9665f0a14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8543e049-c4a6-4412-b3e0-828bcf769be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ad7dfe-633c-409e-9036-3453645d9bac",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93083209-68ef-407b-bf5a-af9e0419b8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca0fa67-92f7-4179-b364-a16070f0768d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9486806d-c9cd-4162-ae7f-a34858cee300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0145d264-1122-4dc4-bb8b-d86dea7e5260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1edb46-2b1c-455c-9bfa-b786c1329f39",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25330c7-33a3-4599-ba58-a4bb6e7e7667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee91afa-0618-4d45-ab13-6f4382a31b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ca447e-ad74-4f88-88c4-7f7c48720028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccc77aa-4ab3-46b5-b29e-4d98aa3166ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e815f7-e946-486b-9e06-ed5bc1035e7a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a6404a-81d1-49a5-b4e9-4f48ac04401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47610749-8fe7-45f0-a093-da19ba65a404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911832b8-2c99-463d-b689-10243d6e62bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363da5b1-adf9-4ec5-aa81-34300b1f8716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b46fe90-905a-4ad9-b262-e0ad955c84cd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd04d74-364f-43c8-babf-f2f914737a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaf1a3d-4ab3-424e-b89f-0ec605cf3e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b4baaa-bc6c-4d41-a630-261868d73a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3cf4ea-2101-4a70-baf7-83c201857c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181943c8-5baf-4337-8d87-0d7d5486a905",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab24d48c-f2d1-46e0-87e7-f820d91329e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00399cf8-f61a-454d-bd88-8a99d3010e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c055f25-0e3d-405f-9075-6fd4684c365f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9053052-4d6e-4a4e-ad57-fbdc1fbb6973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dfb2d5-9ca5-45e7-8c4b-e33a0b0e4030",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6dd4d0-90cd-4763-8cd9-224e49d777a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fdbdb9-9379-4649-bb9e-cb2d8dade7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2ba168-a826-4f2b-8a1b-badaf959150f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f372bb4-2566-402a-aee1-887da100c47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3460c1-a3f7-490f-a35f-b91b6ef4b4d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4dfd73-c475-4f91-841d-e548970963e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17ae53e-5ea9-4f2a-b8f1-aafdcb603b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e90b8-eda7-432c-9244-08b4b44b45cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c2151f-0cf0-414c-9d12-5165f6954f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7f35a9-1fec-4d10-8eb6-6dc157e0ed82",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc40664-4c90-46ad-89a6-6240188806fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc85a5d2-b6b7-4e96-8212-3f250bc9ffb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598dd6f0-119e-4d57-b35d-77b27d198261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5710fbd-2f05-488c-b8ca-f9c16c405614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9884823a-5a74-4e34-9607-cc7de5168c11",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d84362-3568-4e25-977d-da4c4fbed753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87562608-5d44-43cc-a1be-ed232437d562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf749b5-94e0-4165-b54e-0ac6ca74b049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9f4309-c02a-4301-9210-927a47c829d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72828a75-1571-4e12-b20d-cdd731c217f6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9b9b6c-bc43-423d-ac3a-a428a2c0b171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca70c1a-2c7e-4a67-a5bf-b893c2dabb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88049af7-e3d1-4403-9772-e8313bbf0f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ab25b0-4adc-4a5d-9f97-99860bd5bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068a4555-a57b-435b-80f6-a1f0d4a80676",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539b6915-8085-425b-a23b-2e2ee3976c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a861d079-e94d-4353-8260-993dcf15095d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22afb088-b2b9-424d-a9d8-da3f93a6974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e4c7f6-854e-4c0e-9f87-f6b7aa8993d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d7781e-727b-4802-8307-61b1dc00bbb8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c4e59e-270f-4a4c-ab87-5770183f10c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bbc0eb-0ae9-4759-bb89-269bd311443c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8bbd93-6050-4b10-b7b9-c179bf0d35dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8acb039-a16d-4553-8438-2cd927d56f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ab0645-c5c8-427b-9c5b-364d538f18cf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9925461-5e58-4227-ac1c-78fdc185ce25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a744d1-ceb6-48cb-8f88-5d4bea1c0dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d4f87-2f5d-4e67-91e8-80d589414d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a42e5c-ed84-41eb-84b4-703e2c5c85ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f56dc4-e041-4e0e-a9f8-6556d6f8051f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6f5bc-fa17-4b63-9a6f-c4a66ba78675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf947233-04be-420e-9140-b874b8aae110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186b9df1-3ff7-491f-b1e2-0732bf898098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549fee39-15dc-4d95-87c3-2768bfb8780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4afb42-9f98-49d9-b548-a11414e0da05",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2aad65-7e91-467b-b70c-d53ebdb919ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05f474f-ced9-4f56-ba39-186f78e58a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b810b7b3-a69a-423c-a662-19215d7dceb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcabc53-2cf4-490c-b5be-a57e4caaa061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71dd1cd-fc5d-4eca-8862-cd32c13f163b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32111a0-014f-4e78-a85d-5935695c4c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f793d7f-0b6c-4f9f-bfe2-387f8b96c3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269086a6-927c-4824-acca-5ef1697111b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5eee4e-11c5-42d7-9a9e-fda83b338031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c8aece-95ec-4679-9dbc-89bc98d860f8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd17cd9-9e13-447a-9327-a0421c8cc38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701fd56b-1fb6-4f89-9cf2-fe6875900d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913a51d0-088b-49bd-a386-2e7016fac91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3687503-63c0-46aa-83b1-01f3381208e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba503e-e121-4599-883c-e5a167d449b3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4044dd90-cd7d-4e08-bfd0-e6374256e460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a101f4-8a16-4067-88fe-fba9ec97c033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9fdb64-2f91-4cc3-bf93-ac96349b1770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26202c7c-81f8-4ddc-a550-1d94e4a7a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca8f776-53a1-4b34-a2d6-88e2cbe69d3c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49419e67-08b8-457f-955a-79f9021c41fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25042c6e-db13-4b91-a750-8e7cd406cb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ef273f-ef1f-43f8-b954-d493a8b15ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e488881d-5ec5-4dc4-bf87-8742a6e1d27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443d876a-c6f1-4af6-b523-81aa098c39db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b71d5-6ac2-494c-b299-daa56954b032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39339a3-7fcd-4e73-99ca-90f8ca6e7e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ec0f60-5d83-4416-9da6-fc7c6ea0b5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a02049-05aa-4eb8-88c8-c1fbcba14327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a115149c-df58-4ed9-902e-fc882a4ea855",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c8d504-5c5f-43f0-9196-52b4db90dd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16a2dba-4784-4e15-949f-79f7eb9be11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21a4787-7c65-44b5-bc4a-a9eeffd301fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdd18c0-5364-4507-973e-0f267afe237c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d9786c-187f-497f-b216-ed328f128324",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39284b67-91fc-4fd2-ad0b-a45eea5d33cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a2a04d-0f74-4c27-aac8-cf9efe7bcd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73e0694-1192-4537-b3b8-4d508f10ed60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c101e13c-adff-40ee-bc9e-ddc2d85b62aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0807361-b453-4a7f-badf-a1e7aa8d7472",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77d7d6f-6305-4066-95b2-5d61c9054613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6507c6ed-c604-48a5-a30b-da28055fd7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4350dae1-e3c6-4e33-ae71-47c1f76b7915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f5aa83-be79-44db-94c7-afb7a622c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70192fc9-0398-4ef9-825e-034ce93b813e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d86c13d-527b-4171-aa1b-a1f6ce57baf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc682a5-3735-4041-8499-cb0cb63c81db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a62160-6499-4aa1-b138-677c27ebbf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93d1a5c-8d11-4701-bcd0-6c8459d365f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efabd6ec-6c6c-4f1d-8c45-ab7c37084754",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a67ca0b-3cd5-4210-a595-e5e355240a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04bfb03-5177-4bbb-8ccb-680b46095e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ceeeed-7936-49c3-be6e-1df84924cf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d68baed-194e-41a5-a3a4-e3aaf03abb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fcb2f1-0473-4ff8-a030-c1ac9b2137aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e8dded-7058-48ec-85ed-eaf39e5c2457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "055347dc-4c5c-42d1-b94e-f378c894b00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd39e04-5266-4da2-8711-d8b3c7bd120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3476d1a1-943c-488b-b48c-c1c4fb70edb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717a266f-e9ec-45d3-9c9c-e13873a9768e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae9405a-559c-42ed-ae45-50573d9bff40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe0ffa2-cb5d-4fef-b386-021898fb53d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d1b2f-ee69-4156-8d3c-191acac8d372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a5d6a7-12d0-4ea5-af6f-2511a1f9e464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb3cbbd-5bdd-47ed-b224-c2a52b4e30c4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bb9989-2232-46aa-855e-629d6a7382a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b271f79-e19e-4b14-b47c-27006d9cd75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8844da-a699-407c-8425-b933e7ade67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baba8426-6f57-49e8-840c-7a16a11ed791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86aa6da-ddeb-4c35-8db6-cb1670b5a9dc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab8a545-6719-41ec-b980-35384e5743eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3027d590-b4ad-4dad-934a-940a1585b81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff34ff1-c309-4668-95f2-dc9f50723e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026e6a1b-6558-45d5-a583-cf1302e11a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22ea14c-f626-4b1b-af15-daf7d827bfde",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d770b8-caf7-48ee-bba3-d7dd8553c51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f606a0f-43b6-49a7-8dca-d02260e78004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6b72e1-492f-402d-baf8-49d4fae8063f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e001eb2-ad33-421c-8fb5-675ebcd9a48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1efd2ac-2c35-4553-803e-69ee57291b4e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1860fb56-b01d-4da0-86c3-6e9981ed14a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5deda482-36f8-4007-ac00-51b31d20ecee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485b38c4-d1fc-4739-8572-898c3b9a5747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f846687c-dffd-4792-8ef0-8889c8a64fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63423771-7469-40f7-92b4-8df4a8352ed3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ec7172-9d24-4a23-9d48-bc32c0fc21ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a665d314-2c0d-4816-bb1f-00a34b8e6b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef52cbf6-3ea3-4ec0-9739-f9022750607a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd62427-cb02-4e34-bbd9-90699f315577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f954d778-0eb0-433e-9e03-4e93be170307",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ee5229-aec1-41b6-b575-9461215e430b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adafd6e0-d29b-4990-8468-cce6f0bc46e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9811fa80-1751-4ad8-87f6-4a7aadb1bd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed66cc9-779c-45c3-9e53-91cc584b80b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa75af67-f1b0-4160-9144-916ccaa5def5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd98a222-7c15-472e-a0e8-f604e76137db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6132ec80-225f-413c-b894-2e2ac3361410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d8bfa1-77a1-4abb-891e-de92777b8523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e5fe77-3d82-4555-8090-2c9f6cdf7078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f08baf2-4df4-4716-a58d-47daf91683e3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2404d9c-b4fd-4745-ace0-a976bc21ce67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30985cb7-7317-49c5-96f3-163e09d118d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f8756-2328-4de1-90f7-a35bd428bf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e1118b-f014-4a17-a06b-5e25b2955945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43b6c51-f999-4be9-a183-6ae7ef830071",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143e0386-286d-4f26-b113-5513cac1120d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e36f56fe-32ef-40f6-88c4-fd70fce6cec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f45d43-09fc-4f1e-a14e-52123f1328d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340c6a65-dc5b-4141-a956-3b5eb38907e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4feea61-ae23-4c2d-8287-96fe9a69feeb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacba429-af38-4cad-86c4-dd09d46be38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94906b45-4c0c-42ed-af61-1e0a977f2b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616f452f-440d-4f0a-8ddb-1e805ccd76a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7ffbc7-3064-4672-a817-7b6f631fbf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4053801e-f7ce-43e0-b7ab-f18793b1b3b3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c619397-2d6a-4d74-a805-12c25f96427b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "119b543f-3a6b-40d6-bbe8-5dd6307c760d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17fe0ce-67fe-4652-994a-099c4a288dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc3aab1-99f6-41ab-8a7a-7d19b28d3184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21958b9-2d9b-487c-bc2d-ce7e240ae587",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc21b6c7-eb20-4cfc-b12e-3dd43b6de202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c42915-acdd-412d-a1ad-7ac18d0e3237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ef7e84-5f29-4cc0-b8bc-4d9820bfe491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40c96c9-8373-4b88-9b3f-7c47900c2a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed3a1fa-10d9-4028-9427-1437286a3e7c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f7767f-1dcc-45a1-8065-f29a7be7ebd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abcbb25e-0849-4556-8407-a7fa83441c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55accb2c-1ca5-4d90-a75b-a48ba8f34dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08d4400-e0fc-4310-9bfb-47ba4af23feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0166883-2d28-4386-89be-08c74fcc6661",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc6661-44d9-4724-80f5-5afabd4b9e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6166a338-84cb-4e01-b26b-f861f4bc5d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fff71d0-c1ff-4d93-b48a-9a8d0367f991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e851eb-4d3d-4904-bbde-28fa70b1f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abef89b8-41eb-4401-b450-74014623140d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd10ceb-d860-4b67-bf55-43969e0c6a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eff3d1a-e6cd-4950-b4a3-b88c22a77ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fda9cc-141d-4c41-bca8-4143dab3ab2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb29db5-8d07-469e-b0e5-00e53321ce97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825a85a1-e846-411b-813c-fc96da9e8707",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ca53bb-9e78-4ae7-8fdf-bd0860a068cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f287422c-e2c1-4a2f-b6f4-0103ae95d2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3a96a-07ed-42e7-9c18-d9ef7913e56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aff946c-680f-4e5e-8640-5d821f263e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bebcc8a-a0da-4fab-8b64-57f44017409f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0bd2e6-515c-411b-ad8b-b06e1e7fe228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6912aa7-30af-41f7-a553-41f1ac3dc244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c738395-d9dc-47ad-a282-ad24ff8d7887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8b8795-3ec1-4aef-9f33-1850e49ccc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cbac53-4fd0-4654-a25e-ddff1838c9df",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9d082b-cbde-451f-aa84-06c5555c4f72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0959675-b7dd-469d-9bb8-d94512149fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26a8a58-02f3-4b8c-8f92-e2a77ae71c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a4d9c3-72ed-48c2-9c25-c67af0b7cadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1737c7c-49bc-4d39-a02a-f81fd09cb103",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce830791-2ea2-4948-84b9-e9c006b3538d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebfd81de-7028-4949-82f1-b4bd57345f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b609fd-f625-4a00-bb49-03ad5139e171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6e87c6-f93e-48f8-b02e-9497d0cb6c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c994590-9b66-4d3f-aabd-f4309982919a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3123e488-25ff-4ce1-bca0-74f455f858db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3272098c-189b-4a10-b3ec-53c0eb55ff05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902cc272-3ac0-458b-84c0-97d751a1738e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1312cc4-73cd-4676-b602-860fc772d22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dd571c-6965-4f1d-8fd2-f7977f0689ee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dcd79b-17f4-4545-8bdb-80122ddfd9be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d743cdc-e1a3-407a-8aa8-83314f290755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66cc65b-187c-476d-aa7e-f167fed49232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda9a80d-20f3-4e9e-b4a2-01b52e589c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc67026-bad5-45fa-8873-15e8b2c0ea54",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63464abc-57bf-44d3-adbb-be8666a9b9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e320a8d0-99bc-4401-b5af-1280eb4c984b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28321ea-b4cb-4642-965b-d8858e9c4336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647afb3e-6870-4724-a0ee-872ff59abfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09146c6-1598-4260-a3b5-258006cf0186",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227c4f7e-8800-4c14-b481-225b7c2248c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03775657-f26b-4f27-bc39-475b44379db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6ef634-7b80-4244-9522-b83c46204ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7839af76-6665-45dd-bd1c-d48c9000ec1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4268e775-c917-412c-84ba-a7d74808105e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbfa32f-e6a5-4a1a-89c4-67e03b2d3333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767a9575-b7b7-4e6d-9d0f-9dd76f2ec71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cbbee1-55e5-4c21-a951-309f13f8b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68562dd6-ffc3-49aa-bf1a-66e644d49f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f1b29f-7088-4ec0-b8e4-bc626c04f657",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a4c156-1776-4644-9bf6-02d0afbaabcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68a6582-1244-4898-9b9c-3cd0f9f05b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596e7792-6283-4b7d-a2de-196f1fecd93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93ddb1c-aded-498c-a79a-3fb1049ca3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11afe645-278b-4f29-9688-31c08ee91823",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c6e757-56b7-47a5-a7ad-5ca9db1bedb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d05faad-761d-43d3-9b06-8f856dfee914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e831e7fc-d88a-413d-974f-0bd16c8a987e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5823aa-2aac-45c8-b22d-efab6c8cf3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6207bc66-d75d-40fc-b334-3185b576a060",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1ff976-0199-4f7e-8f7f-0b206770aae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d93609c-2e6b-4b09-bff7-015124529be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d07bc5-5973-4fdc-8ac2-566a5d49f4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34f05c6-c5db-4272-8e6d-610a9060f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bdfb8b-f020-42d5-b230-ff00a3242ec3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da5e364-a576-41db-82e7-b8b3116d3d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f586a6b1-b948-49a1-a4f6-816701d2707e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a200577-434e-4462-89be-6162aaaf80f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59788e7-05c5-40ae-9e3c-fffdec121a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93662917-5266-408f-8013-768481ab5de9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5916684-15c1-4b54-8e24-a574e0dc1a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d16ea98-2241-4b2c-81d7-ab3d9e34f919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb96929-e08e-4af2-8617-eee08fa31f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201f26a3-f9dc-4827-8fa3-10a7e13ffd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec855af5-1969-4866-99f1-26002693ed9c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088f61c4-7ce6-4b5e-bad0-d1c85ef1d627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bb18b3-45b5-4062-9779-0a555c657064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4c8bcb-2b06-41ee-b9df-48dfbead2602",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21f09cd-2920-45cd-9c8f-e1325217f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893455ae-5452-4f77-8660-9351449009eb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b4c2ab-1af0-4abe-a3d2-6ed3d115c49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a1106c-e14b-4b00-8676-3ce9643d6688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d3378b-ca29-484b-828d-6ea6c15e41ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace4dd98-f521-4f00-a4d0-0fe07e824da6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c364020d-d15d-401a-8446-925270cfe2bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62cde90f-19dc-4eb0-8e57-bdbae097d1a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91016391-b622-4c52-b01d-6c322cdfc703",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7198726c-d30e-4a2e-95ce-30a243ed0e37"
                    }
                  }
                ]
              },
              {
                "id": "b0777164-2062-449a-bd77-74da2f15d676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1faf7084-d878-4f16-8186-d1e3bcf89bee",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd34ab5d-dd81-43d4-bd9c-c32003a752cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "db498bea-5713-44f4-b165-688d20393273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d359022-4e43-41f9-8018-8bbd5db9b47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a638be1-bb6c-49ae-9bc5-048e0278b03c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f922e6f9-dbf6-43ac-b503-e1148104c103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fe42ef7-79b2-4f58-ab2f-98c623b24eb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7f165c0-9a1c-4ac4-ac12-20dac2d06a4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9054865b-2283-4420-b21b-03c60193e761"
                    }
                  }
                ]
              },
              {
                "id": "6851c48a-05d3-43f0-bc2c-3e987ccebce3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8eb21cd8-f22d-4b11-9f21-ff1bcbb0c425",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe990ee-e5f4-4b3f-aee4-063bd67fe270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4c203b2b-e7bb-45d9-b1cf-e577026dcf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce8acd-774f-4cf5-9d00-4f6c65bbdd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a556c1b6-4367-4835-810a-5b1dd038a457"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b478a849-1f5f-4db6-9a84-9890dfaac5a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f207e04-8d89-4cc1-92ee-63bba48a2c80",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0d179de-ae10-4ff7-8c82-0598670ec902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8d465377-e0c1-4fc9-820b-288b9941795b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eff827e3-5394-402f-99da-96a27922bfa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8f8a2e1-3cb1-45c2-8507-19c798932869"
                    }
                  }
                ]
              },
              {
                "id": "20e74d1d-b91f-4c87-8efe-b97eb75187d9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c55407-3930-4d13-81bb-e6400dbe62d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92b8cf28-3caf-4572-9003-6ceabf480196"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40b92c04-aa71-4b43-a606-977cdeb8f3b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b04ace52-710e-42b1-80c4-d18464ddca82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95c380d0-bc02-496a-b38b-dcb43bc6751f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "52bbf26f-1b75-4bbd-a47f-6c80b254692d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d4cc8fe-2d85-4db3-9a22-10b2eb9f5c56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e457255c-2c0d-4be4-80d5-7242e86c0b3e"
            }
          }
        ]
      },
      {
        "id": "beaa6ab4-241c-4dac-ada6-579a0e42f687",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9c9dc73-9543-4d06-92d0-ce6e8208fe92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "139faef0-d7f5-48d7-9b7a-4a1036a4e449",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f41e1fe-10cb-4f2a-9268-bd8d8db00704",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6f885b-65ce-4c89-a1f3-dbb702856a56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c209e672-bcb2-4fc5-9b5f-44605d0a91e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be002a1-b8c2-4d5e-9900-6d2e5dfc2350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "041fe017-7997-4312-af76-aa422dec6449"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f718a01-6913-42cb-aa64-329e5d5bd70a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ba3852b-1ec3-4361-b6c5-343ffe0249ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e13ef810-19a5-4170-92fe-0d4680b242f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26bca38d-77e6-49be-a6dd-fa52fb45d341"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f5d5caa-1967-49df-89c3-8838780e6579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "adf09670-0679-43d5-b024-313edb6c1d34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4eff088f-cc06-45e1-b8d0-8f1b01194e7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d064d58-5ea0-4bf4-9473-e3ecdbfddac1"
            }
          }
        ]
      },
      {
        "id": "328391b7-c956-4612-8fcc-30cedb9406d5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b0e015f2-f9ac-4c38-8334-3621af55e276",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d59c9ff-fb4f-491f-9783-64fc4cd9f326",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd2484f9-6921-4ce2-a9cf-9c022ccbf9fc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0651d072-5a5d-4448-a8e3-abcbc1d4c638",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b332c43-3ee2-4aea-aa68-531e7f703e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d943d1-8cbd-4349-a09f-95a5907c66b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67db6c58-02ae-4035-8428-034302b7239c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "380d650e-a2e0-4f0e-98a4-9311ce3fbd31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "445505bf-2a44-459d-bb82-2c7320320aaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9d4e6fb-fe72-477e-9848-c4799a30cc68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a18702e-198c-4670-b133-b6cb8c10d6f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0359eb4-a85f-4059-ad3b-ddb2c0f4e16c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1cc138f6-ad13-4db2-967c-7ac8a76eb405"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cd09825-0a1d-4a1e-af75-fbab41f25feb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bbd48c0-4c87-42a5-87f3-1c207bd636f4"
            }
          }
        ]
      },
      {
        "id": "4e6c5ccd-55a6-4962-8846-5b03e0e552b4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "73d55761-1ae0-4d88-a442-91824b4099d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ad4b69e-0531-40da-b9ed-1f94463bf902",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cf5830a-52fa-49a7-9b3a-0629ba9f4de8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16706d31-a19a-4a86-a51f-35f4e26c29d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a1a38a2-435f-4123-a569-1b61e021a773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e27360-c5fa-4b52-a9b4-49abe2866d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb30e1c-4657-481e-9189-b1fa2e674106"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e6e937c-1b57-4999-88e3-b495dff0e245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efadc5c4-ec92-4ade-ac99-9fb69f4adafb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8df9a7c5-579d-4147-8555-4767b7e80634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e609baf7-9106-475d-bb58-fb8eeae9b424"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8b9c456-dcdc-427d-91fd-efc48a153526",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd2abd77-48bd-4397-a8b3-5f09d3bfaf8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90b07ae0-aff5-4fe9-a4e8-f47b0b2857e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb2fe2c1-8079-4ac0-a904-2ba53a46c954"
            }
          }
        ]
      },
      {
        "id": "c67d5872-07e5-48ee-a5c5-a2e8241308ee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f079f64-4750-4003-a760-5e19320b97b7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b730c44-d301-4230-aeff-ec88d1ccfbda",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "580b4056-1808-488f-91cd-8eac6bd28725",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e42675e-705c-4e14-b282-ba8aa79d38ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64a2a16a-ac61-4477-a110-1241527477d3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.15789473684211,
      "responseMin": 5,
      "responseMax": 5373,
      "responseSd": 397.4624770758705,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703550868756,
      "completed": 1703550903264
    },
    "executions": [
      {
        "id": "19670469-9d3f-4cd6-8163-01eaad3d8ff7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "62518ba4-5dfb-4396-bb00-5393f1e7351b",
          "httpRequestId": "4581aaff-670c-4169-8ae2-8a4a12320956"
        },
        "item": {
          "id": "19670469-9d3f-4cd6-8163-01eaad3d8ff7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ed26edb9-1af0-473f-ac10-6c4b7db0b1b7",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "48069bb6-e520-47df-bc22-ef165c198869",
        "cursor": {
          "ref": "8ef5db0e-2967-464a-b090-1c501c6e1901",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bc326148-1d5b-4d5e-82cc-ad9aa2ca6343"
        },
        "item": {
          "id": "48069bb6-e520-47df-bc22-ef165c198869",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "399dea16-f810-44c9-ad05-ceffcfa96e52",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "f4860ada-2c66-4e41-baf7-deba184742e6",
        "cursor": {
          "ref": "a88ea6fa-4dad-459e-9c91-b812ecfbe0d0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "150ab1fd-24be-4245-bd61-4d902987f06b"
        },
        "item": {
          "id": "f4860ada-2c66-4e41-baf7-deba184742e6",
          "name": "did_json"
        },
        "response": {
          "id": "5f4a16a8-d929-47d3-910c-ebd6007c46b1",
          "status": "OK",
          "code": 200,
          "responseTime": 329,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51944c1f-f718-41d3-8a37-5683253b9152",
        "cursor": {
          "ref": "d9621b88-6f49-4b02-9ee5-140850439e52",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "773a17b1-138b-40a1-966e-eb990cd721df"
        },
        "item": {
          "id": "51944c1f-f718-41d3-8a37-5683253b9152",
          "name": "did:invalid"
        },
        "response": {
          "id": "dab8e2db-c08b-4a14-a4a4-f1c66dcf02f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 664,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51944c1f-f718-41d3-8a37-5683253b9152",
        "cursor": {
          "ref": "d9621b88-6f49-4b02-9ee5-140850439e52",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "773a17b1-138b-40a1-966e-eb990cd721df"
        },
        "item": {
          "id": "51944c1f-f718-41d3-8a37-5683253b9152",
          "name": "did:invalid"
        },
        "response": {
          "id": "dab8e2db-c08b-4a14-a4a4-f1c66dcf02f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 664,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00c22c8-b293-4094-a4fe-2eaa3e0c18e2",
        "cursor": {
          "ref": "d00a5991-6712-4845-adf8-b98a7462d739",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "083eaac8-85ab-4cd4-b546-d669cf0881a5"
        },
        "item": {
          "id": "c00c22c8-b293-4094-a4fe-2eaa3e0c18e2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "23715c75-9fa6-434e-b1f4-b44800e0bc27",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5d58bc-19be-477d-bb17-5e4b53442d38",
        "cursor": {
          "ref": "a6a992bf-15bd-4973-9ec0-0554a5291e12",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2f040d97-b0ed-4fea-8553-8713655cdc03"
        },
        "item": {
          "id": "2b5d58bc-19be-477d-bb17-5e4b53442d38",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eab038df-e73c-46b8-9ebb-7460dcc5dc99",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b5f43e-f607-4dfb-a758-237e861a23da",
        "cursor": {
          "ref": "7df40d49-fa8e-4719-8c0d-7a46528a25b4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "87a754b5-ed12-4209-bf49-2b84dbc6e203"
        },
        "item": {
          "id": "80b5f43e-f607-4dfb-a758-237e861a23da",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "84bd4691-3729-4b6c-9518-906ab0fa2c37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4767e8f8-ad80-423d-aec6-d40df592765f",
        "cursor": {
          "ref": "cf01cd82-3003-4900-8fb9-4866c4dc581b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2f103eec-d7f8-4dfd-a52c-f69b1e2bb634"
        },
        "item": {
          "id": "4767e8f8-ad80-423d-aec6-d40df592765f",
          "name": "identifiers"
        },
        "response": {
          "id": "b2a729bd-7cd8-4952-8988-898c76703304",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71721f8e-831d-47bd-afec-8ae7ac256b01",
        "cursor": {
          "ref": "cd95c99d-30cf-4b2f-b9c8-def8c113bb94",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "46862868-7bf5-4832-8af9-c49682841770"
        },
        "item": {
          "id": "71721f8e-831d-47bd-afec-8ae7ac256b01",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "abf79132-aeca-4254-aac2-51cb266d9f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95122ca-53dc-467d-b5e1-e86c7bf3a8a6",
        "cursor": {
          "ref": "d67473c3-4556-49f8-9f3a-6583646c2c02",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "661f31f6-9068-4f1f-a576-086ba9c7cdba"
        },
        "item": {
          "id": "c95122ca-53dc-467d-b5e1-e86c7bf3a8a6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b1ca7dc4-4d1e-4e21-a313-009f915c3000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71318283-405a-49be-ab5e-a401010f8fd7",
        "cursor": {
          "ref": "c3c2d8ad-d941-425c-82db-8e8e565530c3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4a7b7708-71cc-47e5-8394-ccd72e887149"
        },
        "item": {
          "id": "71318283-405a-49be-ab5e-a401010f8fd7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f2aea24f-8b88-4c20-8b4c-045f5485c2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b09d10-ebba-4d02-9e57-c4f75134aa9b",
        "cursor": {
          "ref": "717311de-2b58-4b9a-993c-f248a1eee67e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5664c4eb-8220-4b39-82d9-7a145c4b4792"
        },
        "item": {
          "id": "67b09d10-ebba-4d02-9e57-c4f75134aa9b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7671822-1d0f-42b7-9f2a-6d3f5037a739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de46bec5-22be-496f-b80e-ea829362d29d",
        "cursor": {
          "ref": "95eae9cf-61fb-44dc-846c-fee81e99fede",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a6d21370-6817-4ff5-aab0-8691dfea0fcd"
        },
        "item": {
          "id": "de46bec5-22be-496f-b80e-ea829362d29d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5083f33b-b95b-4292-a0de-9a4c22cc0ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51c1bd5-22e3-4761-bc3e-7fad84e5af0f",
        "cursor": {
          "ref": "8f660e04-c341-4dac-a348-b47f6242d574",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cdf07d68-6a59-401a-8bc3-2ad010fa8b3f"
        },
        "item": {
          "id": "c51c1bd5-22e3-4761-bc3e-7fad84e5af0f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24565474-5073-4c5d-8139-067c29e61ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8443f749-aae8-4a4f-be12-c6fb8b045592",
        "cursor": {
          "ref": "341cfcaf-ebbd-4f5f-b756-1cc8c8230d26",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "beec62d6-0467-4a56-acfd-490727933e58"
        },
        "item": {
          "id": "8443f749-aae8-4a4f-be12-c6fb8b045592",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e769be84-cfc4-4489-9ade-6577a697c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a02a65f-ead1-4f83-9ef1-0bd9f58547bd",
        "cursor": {
          "ref": "0d4591c3-55ea-40c1-8345-c60c4e3a3827",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "02bc2be8-8f58-4146-af1f-2ff96be7857c"
        },
        "item": {
          "id": "0a02a65f-ead1-4f83-9ef1-0bd9f58547bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a62e25b1-eada-4a03-a221-605b1705f777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da644363-b9dd-4a5c-8920-7234b42dd976",
        "cursor": {
          "ref": "3505c138-8888-43c9-b262-153e2a214172",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6d35889b-0a13-4ce1-ab1d-00b6b695ff54"
        },
        "item": {
          "id": "da644363-b9dd-4a5c-8920-7234b42dd976",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "207ca55b-5d7e-48ff-8aca-46eaaedb4725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c82491-fb01-4c5e-a995-af9cae0e1ffb",
        "cursor": {
          "ref": "d6943b65-20e6-4864-b08d-1b2625a923de",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fdea536a-6592-4ea2-a067-fd4b25b00542"
        },
        "item": {
          "id": "f7c82491-fb01-4c5e-a995-af9cae0e1ffb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1343ce0c-9183-4874-b253-942170338938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a630b-dc88-4cfe-b68b-f6e3fd525ae4",
        "cursor": {
          "ref": "2f8589ae-899f-4b09-818d-dea82b45f928",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "80da2c4f-52ac-4e16-8f5e-b3867a11d67f"
        },
        "item": {
          "id": "597a630b-dc88-4cfe-b68b-f6e3fd525ae4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "406f0491-659f-4c41-bfd8-3f19c85a3c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c75182-f75d-46a4-b468-93da5241be6d",
        "cursor": {
          "ref": "85b7add1-88f6-4e39-a77c-b1f96c94679d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a59d946c-d7a6-4649-b257-eff95748f0af"
        },
        "item": {
          "id": "45c75182-f75d-46a4-b468-93da5241be6d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b08337f4-ee44-4de1-a6d0-95ac1e533b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d10a03f-f3a4-4b99-bcba-2a12692a85ad",
        "cursor": {
          "ref": "f784af43-cbb7-42f6-b761-a141597b39f6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "33fa73a7-9e9d-4650-a744-d29a0f20990b"
        },
        "item": {
          "id": "3d10a03f-f3a4-4b99-bcba-2a12692a85ad",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "171f0693-6f58-45af-8882-4573df978dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc65c457-c8ff-48ae-8818-c9912fa644e5",
        "cursor": {
          "ref": "c46302fd-af46-42b8-b7f2-165dcd708abe",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "30355978-1560-4804-9e2d-057e4029d1b9"
        },
        "item": {
          "id": "fc65c457-c8ff-48ae-8818-c9912fa644e5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "38eedd0d-c864-4fe3-954c-167673f9c994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc22cf7c-e8e8-492c-8f21-4ee578a7f858",
        "cursor": {
          "ref": "9d459f88-ab01-4695-b0d0-20217af2c563",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c31f0ee5-a42b-4009-81b7-d6be3369a722"
        },
        "item": {
          "id": "dc22cf7c-e8e8-492c-8f21-4ee578a7f858",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "28461bac-7edb-46e0-8372-bbc717969316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a3d5c0-b36d-4a54-9a48-76b8ab90ccb2",
        "cursor": {
          "ref": "0d11a829-2895-4988-bb77-76d14eaa517a",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ea158926-c6da-4af6-80da-4d2657ffdccf"
        },
        "item": {
          "id": "f4a3d5c0-b36d-4a54-9a48-76b8ab90ccb2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8420e3f9-7788-451e-91b3-b25b5da3a1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067492e5-6861-4c0b-a93d-2b41205a1b21",
        "cursor": {
          "ref": "1dcf0445-1782-4c50-8c83-3c4b251cf4ea",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "36ddb763-3480-4eea-adfc-b68dd3b6ba4e"
        },
        "item": {
          "id": "067492e5-6861-4c0b-a93d-2b41205a1b21",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dbf69d60-1932-4ead-b7db-8609ed97d913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9c5113-8caa-48dd-8923-6b94a39179b0",
        "cursor": {
          "ref": "decb79ac-b6cf-4051-b3ee-da9e1e0fd44a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "15de09bb-b013-4afc-b956-6b6b4051992f"
        },
        "item": {
          "id": "4e9c5113-8caa-48dd-8923-6b94a39179b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7d2ad917-a268-4b7d-8c05-d622275f99d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fdf518-8058-4cba-8926-9a2f006867ff",
        "cursor": {
          "ref": "42d02b34-3b21-4002-b1f1-5dda5647dbb4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6614f450-a7d3-4fc5-8536-1d590cf30811"
        },
        "item": {
          "id": "a2fdf518-8058-4cba-8926-9a2f006867ff",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a8653c28-510e-48ec-acdb-0ca229218255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c036df8-667c-46f6-9b1c-280fbbfd2087",
        "cursor": {
          "ref": "62f94af8-edc9-409a-8eba-5a7c9d17460a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "498ad77f-1034-4758-b923-ec5260a4c904"
        },
        "item": {
          "id": "2c036df8-667c-46f6-9b1c-280fbbfd2087",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a51cd4c2-6d2d-4c73-aaf0-1d0d7fd1d306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba4e851-d63f-4adf-a781-0676ef9ce0ed",
        "cursor": {
          "ref": "41ce62c7-897e-4d14-852d-007e02f5a185",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bc14d371-756f-41de-9709-16336b75ddcc"
        },
        "item": {
          "id": "3ba4e851-d63f-4adf-a781-0676ef9ce0ed",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0943b3b9-a441-4d3d-b5e4-48659e53f6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adf1375-1df3-4d57-b37c-21ba6657887a",
        "cursor": {
          "ref": "ffba906d-5add-4bc2-98d2-853847e4f5bf",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "082ffca9-b5d3-49aa-ad45-3975c63d1392"
        },
        "item": {
          "id": "4adf1375-1df3-4d57-b37c-21ba6657887a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ce0f092b-8526-4bd6-b0c3-3fc0795e7db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7d34a3-206d-4108-912b-45aa8b7fd611",
        "cursor": {
          "ref": "f356db69-b2c9-40b6-ae16-ae7465ce2f56",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "711d817a-6f72-4fe2-95a4-79d032245de5"
        },
        "item": {
          "id": "1f7d34a3-206d-4108-912b-45aa8b7fd611",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3c3fb2f5-2d46-4f01-af76-9722c73408ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9cb333-9c11-41ae-9669-b80f63b6ec57",
        "cursor": {
          "ref": "7673e1f7-c6f5-4f54-b1d8-937595cf77f6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d80d5131-6f41-4b11-8969-105fa7f17720"
        },
        "item": {
          "id": "4b9cb333-9c11-41ae-9669-b80f63b6ec57",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fd239453-7bcf-4868-8836-1d992588931d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e83d26-d84b-4ccf-b83e-f6b3f7f4239c",
        "cursor": {
          "ref": "90ea3e4f-6557-47bd-99a3-db73de39bfb5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "778db8c8-b80d-4faa-8d35-e4f48a022e13"
        },
        "item": {
          "id": "02e83d26-d84b-4ccf-b83e-f6b3f7f4239c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9f515bd4-c84c-4e7f-b5dd-8cfab3a8eecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b75e496-74b3-4ef6-b27b-ac2a849999ee",
        "cursor": {
          "ref": "1a899d54-2b2f-4879-8cac-16294fdb6177",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "494a23b0-0446-4690-aead-de7f49919db0"
        },
        "item": {
          "id": "4b75e496-74b3-4ef6-b27b-ac2a849999ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "84b2b5f1-7ada-4366-b533-f6e996672e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26de3df7-5c99-4abe-8319-d687d79b91c3",
        "cursor": {
          "ref": "15b4d015-3d8a-474a-8983-0503291d2ea2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "97485dee-f01c-4ee0-bb1a-d02934c75345"
        },
        "item": {
          "id": "26de3df7-5c99-4abe-8319-d687d79b91c3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "992fa8fb-ac87-4404-9959-68a3c9d78e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00158b1-0408-47f1-b84f-b041d9409fa5",
        "cursor": {
          "ref": "3e038d78-726c-4e01-838f-b884cb35159e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a2db624-5e95-4fc4-b4df-6ab772779fc7"
        },
        "item": {
          "id": "b00158b1-0408-47f1-b84f-b041d9409fa5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b4eef342-a210-4b07-843e-e24603d78bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce388e0-ce32-4bff-a2e0-295bf196fbd2",
        "cursor": {
          "ref": "4a4654d9-a52c-4054-b25e-4e6f9ffd406e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "da9eb5e5-68cd-4086-9891-84c4d176b10b"
        },
        "item": {
          "id": "6ce388e0-ce32-4bff-a2e0-295bf196fbd2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a7aaf843-d757-438c-9f29-908ac07767f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f789d99-8c98-47cf-9ed4-21c1322bf3df",
        "cursor": {
          "ref": "99b34b87-b873-49ab-bf04-8ba9d555eb97",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1aaf624c-5939-4e5c-b6e9-0a95c7e37ca1"
        },
        "item": {
          "id": "3f789d99-8c98-47cf-9ed4-21c1322bf3df",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "49ee6411-1e77-484a-aea4-3d39fa596028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377a7b13-7f0a-452e-a7f4-d6a329c79b87",
        "cursor": {
          "ref": "f22d5ab0-8c2f-4ce8-ac19-4cb8aefa8327",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4057844e-883e-4308-9473-4047c40244d6"
        },
        "item": {
          "id": "377a7b13-7f0a-452e-a7f4-d6a329c79b87",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f19444ba-43b7-440f-83f3-e5c6b6adcd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a21c49-bc77-47f0-a448-9b2b67926093",
        "cursor": {
          "ref": "2f145056-bae6-41dc-af5e-d3a99877ecfe",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f8f138d1-babe-4dc4-b3e8-c5fefe6ce875"
        },
        "item": {
          "id": "11a21c49-bc77-47f0-a448-9b2b67926093",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c960fcbb-d79d-450b-bea2-f4c4a6d5c6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b738e2-0921-4c9c-9237-649fed732829",
        "cursor": {
          "ref": "8a5bb15d-56ec-486d-b0ff-024949bf79fc",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "60ecdac6-1dca-4583-bc5d-13f8464e6b53"
        },
        "item": {
          "id": "34b738e2-0921-4c9c-9237-649fed732829",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "90ed296d-fb35-4bfd-bca4-c84f828ca4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83514992-c776-4a5f-acf7-8a0958337753",
        "cursor": {
          "ref": "9e0c786c-00d8-4dbc-87fb-c1cab1bd6b80",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e76d5757-0d64-4dfa-bc64-55843114de2f"
        },
        "item": {
          "id": "83514992-c776-4a5f-acf7-8a0958337753",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "649c8e70-a819-4f06-b3aa-ee33112b340d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c558cd6-688a-4932-9245-e0ea5e5a57d3",
        "cursor": {
          "ref": "80e082b2-da1c-4486-a459-39950311cf30",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "de3012f8-a6f8-4be5-b763-ac20bf8bb378"
        },
        "item": {
          "id": "1c558cd6-688a-4932-9245-e0ea5e5a57d3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "69daecba-0591-4628-a5bb-a9dab40248c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89f7936-f092-4c3d-aa57-ab6b51a7f174",
        "cursor": {
          "ref": "0cd0debc-c6e1-4c68-81a7-c8fbf57300b5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "42585310-1ef4-4103-a5f0-4ecafabd838e"
        },
        "item": {
          "id": "b89f7936-f092-4c3d-aa57-ab6b51a7f174",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dd87cb7a-b8ef-456f-8ed9-b6c9dfd19c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25967023-a708-4238-b4fa-84f689e97a3c",
        "cursor": {
          "ref": "64a28024-ae88-453d-be95-c8d773c11698",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ccb98ae9-3a6e-424d-be46-26bab057bfe5"
        },
        "item": {
          "id": "25967023-a708-4238-b4fa-84f689e97a3c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3656e435-0e06-410c-8a8d-b9f237d8a825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908e3cb9-779b-4612-95f0-b48935d230d6",
        "cursor": {
          "ref": "51d3c11b-eb85-4b0c-af91-29b31ad544d6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "55784820-ed76-41aa-9e1c-6104279f21db"
        },
        "item": {
          "id": "908e3cb9-779b-4612-95f0-b48935d230d6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ac6cdaa1-7c78-4ebf-a3c8-fc6e3a590a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31512196-d412-4d33-9cc9-c0c27d85ea36",
        "cursor": {
          "ref": "59a9faf5-1501-4bb5-96bf-b4adb0db167b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "23382a76-bd72-49bd-9b1a-34a3cd83e6f3"
        },
        "item": {
          "id": "31512196-d412-4d33-9cc9-c0c27d85ea36",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c753862b-1c3b-4504-8d40-72d3be881589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556c69d2-54c5-4d67-9352-f13310abac41",
        "cursor": {
          "ref": "6fe1e2f6-5cee-4de7-850a-96114a8950f3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0dc7b1a9-c43d-414a-ab90-aa5cbf8ae3c7"
        },
        "item": {
          "id": "556c69d2-54c5-4d67-9352-f13310abac41",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4ef66bdc-4ffa-4fde-9ea9-ae4088d26a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8994d5a-8e7b-4033-8a7f-f415a4660dac",
        "cursor": {
          "ref": "e065a2ae-da2e-4551-a1f8-3e64cd78a392",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5cc5de4f-5f94-43bb-a2a2-244a07764fc9"
        },
        "item": {
          "id": "f8994d5a-8e7b-4033-8a7f-f415a4660dac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "720ba1b0-325e-43ae-b34e-4d8a5aca21a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75546f59-3333-4b04-b083-a920401ec358",
        "cursor": {
          "ref": "3db775ab-b8c3-4e57-90fc-29fe203e45f7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd575b3e-4a51-4dc1-98b6-dca897628ed5"
        },
        "item": {
          "id": "75546f59-3333-4b04-b083-a920401ec358",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "69a6b106-6ae3-47a7-a41e-38a565a0b0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944c10a4-5753-4845-9d9e-79da0a43ba66",
        "cursor": {
          "ref": "75f07651-5974-4d45-aff7-907edcebd5d1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "790244a2-bb7d-419f-a2f6-f8a255bfa05e"
        },
        "item": {
          "id": "944c10a4-5753-4845-9d9e-79da0a43ba66",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a4b6c340-aea6-42c2-ae76-52e8005a3132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084ae366-d7dd-4e6b-b992-8f9c7add3435",
        "cursor": {
          "ref": "0afcdaf9-414c-44af-a306-2902c8583e1a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca7fa1ca-a3a2-402b-93f9-8b2c1bbadb46"
        },
        "item": {
          "id": "084ae366-d7dd-4e6b-b992-8f9c7add3435",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1840dd10-5c50-44bd-92fb-e667dc20a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bd7ad2-11a1-4e0a-8517-2b38ce118d48",
        "cursor": {
          "ref": "fe143568-013d-49e6-b883-2a7bfa23dde4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5a53fdb9-74a6-4081-b6c5-d178b25c4bb8"
        },
        "item": {
          "id": "25bd7ad2-11a1-4e0a-8517-2b38ce118d48",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dd1ba7c7-90e0-4d27-950c-9b254a8e16be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c001e167-53f9-4c73-8f76-67e8add74b40",
        "cursor": {
          "ref": "d0ecf829-768e-434e-8fd8-02817019e4b1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "84fa8404-f884-497a-ba0c-d93c6978d675"
        },
        "item": {
          "id": "c001e167-53f9-4c73-8f76-67e8add74b40",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a3c85949-a64c-4f3a-9856-65d6102c223b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb64d3cc-b3ff-488e-8bfa-381f8ff1f064",
        "cursor": {
          "ref": "1230ba53-0b3e-4d52-b7ef-f665dbe7c3ce",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "51a18d43-280e-4fb7-9f26-feabcbdeb4ad"
        },
        "item": {
          "id": "cb64d3cc-b3ff-488e-8bfa-381f8ff1f064",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8ab209de-a98b-465f-8dde-ef94399ab025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881094c9-d07c-4b4b-a5de-b15228920d24",
        "cursor": {
          "ref": "063203e1-56db-41db-8a11-8c4e393e8df1",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "52b24fe9-e736-4d68-9c81-113af5de87b9"
        },
        "item": {
          "id": "881094c9-d07c-4b4b-a5de-b15228920d24",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "adcad0e1-211f-4975-8c37-680c9765c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633cccdd-4067-4445-8a4a-10c7eadf96e3",
        "cursor": {
          "ref": "6ab680f6-3c6f-42b1-a755-28958e1d4e39",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6716e794-3477-4cac-864f-5d89b2355738"
        },
        "item": {
          "id": "633cccdd-4067-4445-8a4a-10c7eadf96e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0bb52a65-2ee2-4f96-9109-1adc12fc1f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3ba56d-c26c-4cb7-bc2b-ca1d7128b0e6",
        "cursor": {
          "ref": "498271ae-aea5-4ffc-aa2e-d1680608f279",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bb884822-0f22-48ca-bb38-b8fd1eeab679"
        },
        "item": {
          "id": "9a3ba56d-c26c-4cb7-bc2b-ca1d7128b0e6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "83be5eec-09f4-4106-97c7-80b5a0bd04b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223c1343-c582-47a4-b19b-b29246e63e95",
        "cursor": {
          "ref": "67a22380-e4e5-469b-89fc-c5ed61317add",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c0ec1bf1-fb07-4ae8-a517-9790ac085b9c"
        },
        "item": {
          "id": "223c1343-c582-47a4-b19b-b29246e63e95",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4c11b581-11c8-4b24-abc4-39791e0800a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecad5af-7526-4f5c-9273-e7c0dcdf2008",
        "cursor": {
          "ref": "95961770-4662-4578-a8b0-51582f14242f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5839de86-2e73-4e75-9e6e-198cc3f8a3f0"
        },
        "item": {
          "id": "9ecad5af-7526-4f5c-9273-e7c0dcdf2008",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "513fd031-1796-4df4-9d7f-2a5e382a2b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45fb44-e6bc-4e4c-bdc1-2ce068934453",
        "cursor": {
          "ref": "c8052585-af95-4784-8f72-d3e18a32c00f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6dfc71b0-991d-45f1-9220-2167a2ed8c1d"
        },
        "item": {
          "id": "7f45fb44-e6bc-4e4c-bdc1-2ce068934453",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be24c9ab-bca6-47a5-ba38-4b5278fec93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0f94ed-7d02-43f5-9dae-69863bdc12b4",
        "cursor": {
          "ref": "861e0c19-9396-4342-9cce-bb6029671b1e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b84b1871-9a86-4aaf-9130-e336d31d245d"
        },
        "item": {
          "id": "7f0f94ed-7d02-43f5-9dae-69863bdc12b4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95e05442-1ef5-4a2b-ba61-0c833794edba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede2a0eb-5b08-481e-924c-e5225aa10d11",
        "cursor": {
          "ref": "8277a3eb-04ff-405b-ba07-0730720cb9b1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b9a41f9e-fb57-4301-89a0-dcd518b50256"
        },
        "item": {
          "id": "ede2a0eb-5b08-481e-924c-e5225aa10d11",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "39556f5b-6099-4a13-ae4c-c3adc3084e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bcfb1d-d60b-4731-8bb6-9ff49ed1e28d",
        "cursor": {
          "ref": "24bd95f4-aee4-4b3e-a734-741acfcd5f02",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "843fd17c-5cd3-415f-8e97-96d9ff27251c"
        },
        "item": {
          "id": "29bcfb1d-d60b-4731-8bb6-9ff49ed1e28d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c05c4e08-9f35-4ab7-a727-b57c1268cfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29fc49b-bf47-4bd4-a920-c5871c9d32f9",
        "cursor": {
          "ref": "9b340e37-3a31-43b1-89f7-e7ea0143d10c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "169880b4-2882-44a4-b6df-741008b1a122"
        },
        "item": {
          "id": "b29fc49b-bf47-4bd4-a920-c5871c9d32f9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "689caac2-93e3-43ae-956c-fc3ec0169242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d39fc16-e971-434d-99f8-9b2485f03a73",
        "cursor": {
          "ref": "a9aabacc-06da-4cd6-9707-20fc69b9aa6d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5e98211a-65b6-4182-804e-7672bded5218"
        },
        "item": {
          "id": "5d39fc16-e971-434d-99f8-9b2485f03a73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c8ccaf26-26de-4e29-b454-f8b2033db3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a4b4eb-b32c-4ef3-b396-4182c3ad94be",
        "cursor": {
          "ref": "3ddd9cd0-b59b-47da-8e8c-e87485a73190",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b374b396-f95a-4c1a-813f-ef8653047b65"
        },
        "item": {
          "id": "95a4b4eb-b32c-4ef3-b396-4182c3ad94be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "09f41b79-c698-49f2-9774-5604ed08a33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55584b8-046c-4809-ad2a-87715c768b7c",
        "cursor": {
          "ref": "7dc20bb3-22f5-4b2b-9906-0ca8e310ce64",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "85e051b2-9e05-4221-adf8-9f96a3a79e0c"
        },
        "item": {
          "id": "b55584b8-046c-4809-ad2a-87715c768b7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9d05386e-8b58-4c56-8d63-3814f808ac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5595afbf-7db6-406e-a5c6-24a23fac6047",
        "cursor": {
          "ref": "559ba176-ebe1-4cb1-a3d5-c6cac6dce9bd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "08aab036-ead3-4640-9bdb-5ce0eab3a73f"
        },
        "item": {
          "id": "5595afbf-7db6-406e-a5c6-24a23fac6047",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "682c940e-8aeb-43c1-a186-e653f1604050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa809f2-e855-4a17-82e0-7be02af898b4",
        "cursor": {
          "ref": "4b696994-5deb-44eb-bd63-0077ddf4ffb2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "827f6aa3-214b-4403-a10f-9d644f8a0017"
        },
        "item": {
          "id": "baa809f2-e855-4a17-82e0-7be02af898b4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0e75f1c3-7e45-40a1-9234-8c7e091bf4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c758d2e-e2a5-424c-bfe6-235a289c7738",
        "cursor": {
          "ref": "3c71c8b1-d979-492a-ba8c-687ad7ab7c86",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "341a8497-761c-4f66-a5f9-fcb692abe43c"
        },
        "item": {
          "id": "1c758d2e-e2a5-424c-bfe6-235a289c7738",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5932d88e-356d-4ddd-bbaa-25c190dc46a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2fd4f9-7878-40a9-93e4-afd108040130",
        "cursor": {
          "ref": "243a9470-51ff-4e75-8d29-261560f97ada",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b8a6f08c-6751-4c09-b1e0-019c01166465"
        },
        "item": {
          "id": "1e2fd4f9-7878-40a9-93e4-afd108040130",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6aaf4978-7b73-41be-8865-4d4f284e5ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed46e23e-87b0-4581-a6b0-9ff3e3f24161",
        "cursor": {
          "ref": "2d9abdf7-2fc2-48bb-a4bc-f70c81d35da4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e03ea8b1-9650-4865-84de-05eb64947e5f"
        },
        "item": {
          "id": "ed46e23e-87b0-4581-a6b0-9ff3e3f24161",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7cd5987a-3126-4c18-a8e7-86023b784b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad90e6-1dc3-45ce-bea0-500d78f9a65f",
        "cursor": {
          "ref": "2d093a22-3fb8-4e2f-a2cb-75d1f5b5c4cb",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f0e847ca-e1ed-4779-9533-c368b05134e4"
        },
        "item": {
          "id": "99ad90e6-1dc3-45ce-bea0-500d78f9a65f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "50bace4f-7ae0-4c19-bdcc-5f4c54787d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d90d47a-9db8-49b7-9975-4fd781e967ab",
        "cursor": {
          "ref": "588f1ec6-cb17-4123-9ab7-0f31faa1ebd0",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bcdca00c-71a4-4b5b-bd9c-181164a5d64b"
        },
        "item": {
          "id": "7d90d47a-9db8-49b7-9975-4fd781e967ab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "16dd3e7c-951c-4ef3-9461-7663d5c1d44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8861638b-4aeb-4512-be13-e33eeb2848cb",
        "cursor": {
          "ref": "4fcd8686-4f24-40e4-99a0-88b5e910c520",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4f7a788f-82cf-43b3-9ba5-35d41c748cc3"
        },
        "item": {
          "id": "8861638b-4aeb-4512-be13-e33eeb2848cb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "46e53f52-f048-4269-9c71-f092902092fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd055c61-88d8-475b-8414-add53bf5cff4",
        "cursor": {
          "ref": "43ad239b-6885-4a78-bf67-5a480d54b486",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea625f12-26cd-4b1b-b755-6b4340a4ac2d"
        },
        "item": {
          "id": "cd055c61-88d8-475b-8414-add53bf5cff4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e3bf3c62-dceb-49a4-8eb0-08e4d1d74fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f390264-8e78-476a-aa6f-f2e7addbfa4b",
        "cursor": {
          "ref": "9fa10066-3bd1-4672-b9ce-839ab70a52b2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4349197c-101c-4946-a4ff-4888d601efe4"
        },
        "item": {
          "id": "3f390264-8e78-476a-aa6f-f2e7addbfa4b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c1c868ba-043f-4900-ba54-34f91a519fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96048b95-edd9-4240-ac59-79c158d57ca6",
        "cursor": {
          "ref": "b5ba6f13-803f-4f31-865a-8601d37734a5",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3eb500f5-29d4-4cf2-98c9-84d1d4175158"
        },
        "item": {
          "id": "96048b95-edd9-4240-ac59-79c158d57ca6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f4cf970d-fcf5-452a-82f6-39f3d6a90e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178ff14b-5410-458a-820d-98bf2d026ddf",
        "cursor": {
          "ref": "9bf433ec-7738-4547-b600-69aa348f35bf",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1f278165-3d0c-4ed7-91d6-266640cb6601"
        },
        "item": {
          "id": "178ff14b-5410-458a-820d-98bf2d026ddf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c3d89032-0c47-4d8f-9bc7-924e12b17ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9352ebf-62f0-4c4c-9e7c-f63fafea056d",
        "cursor": {
          "ref": "af86a06c-99b6-48d1-b723-cfb3bf8315ea",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4c4f45dc-088e-4f32-99f2-7da64bbefe0d"
        },
        "item": {
          "id": "b9352ebf-62f0-4c4c-9e7c-f63fafea056d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e5746bf-3639-4e45-95db-4c62963e5170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b85353e-17a0-4a32-89a0-a1a9a5da969f",
        "cursor": {
          "ref": "ef3cf542-508e-4528-bdf0-cc246efd4d2d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f209834a-8e9c-4e4c-9804-cf63f16f46d6"
        },
        "item": {
          "id": "9b85353e-17a0-4a32-89a0-a1a9a5da969f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b6c01e91-c71a-4d68-aa41-3caf471b0b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0286217a-bed3-4c7f-a4e4-5acbd9cd4140",
        "cursor": {
          "ref": "0084aa30-86cd-429e-a425-c6ca0d7e287a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8b87b3ee-8919-432d-a677-3cc201a93959"
        },
        "item": {
          "id": "0286217a-bed3-4c7f-a4e4-5acbd9cd4140",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9837aa78-3685-4a5c-8733-dc29ed7ab4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7775d4-cdd8-4783-8234-c66d3165818a",
        "cursor": {
          "ref": "c292b69c-8070-49ae-aa6a-0d2328511fed",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "069e76df-3fc8-4a62-9c7c-d4b253301dab"
        },
        "item": {
          "id": "ef7775d4-cdd8-4783-8234-c66d3165818a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "51944c32-f024-4c2b-bf71-8cb7d85bd838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cfb015-81ec-45aa-aada-89daaa746d30",
        "cursor": {
          "ref": "8f200e1d-8d2a-4f62-956f-5ec1aff0b749",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cd36e835-2564-4687-851f-82d975baa38b"
        },
        "item": {
          "id": "89cfb015-81ec-45aa-aada-89daaa746d30",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d137f609-6b23-4e80-b60b-7704956dc808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb1aa2-898a-4459-a7a1-b669473e3918",
        "cursor": {
          "ref": "17e8747c-7c39-4bd0-9e39-503125977a40",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "91e4253f-f3d5-4a94-ba4e-7452abd404fb"
        },
        "item": {
          "id": "81fb1aa2-898a-4459-a7a1-b669473e3918",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8997be6e-59c8-4292-996f-22b597324d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa542644-33bc-46b4-afe1-54a96d4b9779",
        "cursor": {
          "ref": "d30efad3-d747-47ac-8d02-5bb32ede0b6b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6cdc5ff8-d28e-4853-9d10-2127cb023632"
        },
        "item": {
          "id": "fa542644-33bc-46b4-afe1-54a96d4b9779",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a7ced901-b774-43c6-ab88-38a09ed2959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b358a11-d5de-4d8f-88c6-1e2b98e642e2",
        "cursor": {
          "ref": "5b08eef0-8ac6-4ab7-99fe-dcbaa82bd483",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b83daebb-ee58-4814-a53b-795b26c6b30d"
        },
        "item": {
          "id": "9b358a11-d5de-4d8f-88c6-1e2b98e642e2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "aa58d00f-f9ac-4250-88fb-38bcf740593d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6ede5b-03d1-4d39-855e-157b8e607576",
        "cursor": {
          "ref": "53a491b4-e3e1-4d37-a378-0a3c3bcad009",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5a0d92a0-ba37-4876-b987-6826f398790d"
        },
        "item": {
          "id": "ba6ede5b-03d1-4d39-855e-157b8e607576",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "465d0ba0-9cb9-4cf6-ac26-276f3de299f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be18698e-5547-4dd6-b984-0333d2149fcb",
        "cursor": {
          "ref": "4bf2b01f-8aeb-4c04-9a2e-ee024bc8b961",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ba024356-a8a5-4a5a-af38-2142a2295a83"
        },
        "item": {
          "id": "be18698e-5547-4dd6-b984-0333d2149fcb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "80a12e9f-fae1-467a-a9c4-ae3bf1728591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3663b8d9-5fec-4e31-b7a4-d414b1985d28",
        "cursor": {
          "ref": "2e4c8c8b-cc81-4bb6-bad0-4019c4b18d46",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eca9f70f-3e89-442a-aa18-616527cd2efa"
        },
        "item": {
          "id": "3663b8d9-5fec-4e31-b7a4-d414b1985d28",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "56ff298e-b991-4fda-8296-23e2e0663a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d0f958-b392-49fb-9b02-27b06e0f2069",
        "cursor": {
          "ref": "7aaa6196-84d2-4bbb-9087-40bedb409a9b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1581457d-4f34-4fa8-b011-86b61ee63d0d"
        },
        "item": {
          "id": "e3d0f958-b392-49fb-9b02-27b06e0f2069",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5772ff55-7c8e-4e12-a961-90398c5b7cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7c4296-11d2-4aa8-8981-6cd219d2a204",
        "cursor": {
          "ref": "70bb2261-ebef-4fc8-ac50-f6a2b4f83dba",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3398113a-90de-4d13-a5a3-c6d874383945"
        },
        "item": {
          "id": "1d7c4296-11d2-4aa8-8981-6cd219d2a204",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61c690a7-c299-407d-9e16-341428c592d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce08d232-ba7a-4e73-a0e1-134c300976d6",
        "cursor": {
          "ref": "2d95ab8b-84dd-4093-b3f7-29dae9e1c175",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "604048f4-b98c-40dd-b8be-0c10a2163822"
        },
        "item": {
          "id": "ce08d232-ba7a-4e73-a0e1-134c300976d6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a697b628-5020-4715-86bc-832e28ee45c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0454583c-3cd3-402e-8fda-04d0ca05d3ae",
        "cursor": {
          "ref": "a7ff2e53-613f-4e3b-a979-dc6a8c111ea5",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6225c636-b7c4-45ed-880a-7e93bc8092ba"
        },
        "item": {
          "id": "0454583c-3cd3-402e-8fda-04d0ca05d3ae",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a68cdefb-1773-4aa4-9be3-69f14832fd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154a0c22-3109-4ab8-9552-ddbc2de973ff",
        "cursor": {
          "ref": "94b7a5e3-d825-4a2d-9eb3-e6a9ac689147",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f57ef906-5eb3-4b4a-9d59-ebf82c5bba92"
        },
        "item": {
          "id": "154a0c22-3109-4ab8-9552-ddbc2de973ff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d04f533b-87fa-4782-ae40-38514ca245c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0474dc-0c04-4da0-b0cb-68d931fd1945",
        "cursor": {
          "ref": "f2e53d45-93c5-4077-9aac-322e030fc63c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9c080890-1339-4389-badb-35265166cabb"
        },
        "item": {
          "id": "7c0474dc-0c04-4da0-b0cb-68d931fd1945",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97c96f7c-a6ec-4a7d-ba4d-e86ae99bfe3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200695f7-fae2-428e-beb6-064631aeab40",
        "cursor": {
          "ref": "bd1d71c4-f15b-4ce1-9236-733b8ad51f72",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a1ed2337-053c-4714-a30b-cdbc8da01701"
        },
        "item": {
          "id": "200695f7-fae2-428e-beb6-064631aeab40",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bf7af7ed-4bd4-4e7f-abc0-a4be20bc8fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3472cb8c-212b-4e00-b55a-45c050d94694",
        "cursor": {
          "ref": "99860e38-9dd6-4736-803f-4da7749ba7d5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7cb298b9-3ab7-4a5e-8537-1dfaa7cb651f"
        },
        "item": {
          "id": "3472cb8c-212b-4e00-b55a-45c050d94694",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "77bce659-e892-416b-ae82-286c801dfd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613cb5cd-8200-4838-b358-3b7aa7359bcf",
        "cursor": {
          "ref": "18aecdeb-fa70-4f83-9ae0-ba619a182802",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d689e83f-db03-420a-851d-94b76e202875"
        },
        "item": {
          "id": "613cb5cd-8200-4838-b358-3b7aa7359bcf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dce1c434-9cbf-4cce-b625-e2b5fb379fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3430387d-fc75-4750-8aa2-adeb3e470d19",
        "cursor": {
          "ref": "84a4481d-851e-4b1f-ac53-4e7e1c6dc3bb",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "78f0c0ed-9574-4cf6-ba30-bf0f5aec2bdb"
        },
        "item": {
          "id": "3430387d-fc75-4750-8aa2-adeb3e470d19",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4aad4acf-e1e5-453c-8b23-33cd0781998c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abe4b38-5e45-42e8-863d-2b3f04a89114",
        "cursor": {
          "ref": "3c503b20-0e06-442e-b71d-2e46e93986c0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7fc6e671-e288-4e2d-9440-9e4197603bff"
        },
        "item": {
          "id": "2abe4b38-5e45-42e8-863d-2b3f04a89114",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "09393c79-b3e0-48f6-9bd6-be106f9926d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b3fb0ee3-e24e-4f97-b407-1f954ebdcef8",
        "cursor": {
          "ref": "31df9f7c-7b69-460c-97a1-0ca54f97ef05",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8e126e51-43fb-40ee-b5c1-07c52d6f2942"
        },
        "item": {
          "id": "b3fb0ee3-e24e-4f97-b407-1f954ebdcef8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ccae99f0-ca3d-42aa-949d-21ffe05675b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "89692ca7-4708-48fa-b1c7-2975a1fb5199",
        "cursor": {
          "ref": "5d7ec9f5-1430-437c-abf5-517e4ba8f088",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3f99d4d3-3098-4c88-b51f-a629d0927c7f"
        },
        "item": {
          "id": "89692ca7-4708-48fa-b1c7-2975a1fb5199",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9e9f4793-4637-4357-9386-80c68844444f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b26e86cd-51e9-4d2f-a490-a87ac63536b7",
        "cursor": {
          "ref": "ae5f2462-bc67-4304-9f20-3f27386989c8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b7cd5385-57c6-47df-b9ed-5840a2556ac0"
        },
        "item": {
          "id": "b26e86cd-51e9-4d2f-a490-a87ac63536b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2d21f362-073d-408b-9eef-69c44f7998ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f757d189-fdaa-4721-b13f-1af5131cdd5a",
        "cursor": {
          "ref": "4c3816c1-8041-427f-94b5-ded5b72c943f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9efb1db4-bef4-49eb-918b-3043331e06c5"
        },
        "item": {
          "id": "f757d189-fdaa-4721-b13f-1af5131cdd5a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26c9ec64-41a0-4399-b711-aadf72d62c9a",
          "status": "Created",
          "code": 201,
          "responseTime": 5373,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef76318c-7c42-4d93-85c7-e7ed0e3e6b22",
        "cursor": {
          "ref": "46d6bdda-0a51-4cef-88c2-1722da7d32e1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8736e478-9335-46bf-a6d3-63abf158be7f"
        },
        "item": {
          "id": "ef76318c-7c42-4d93-85c7-e7ed0e3e6b22",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a8305447-d3ab-4535-b0df-67ef68395569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7bdeb0ed-b2d0-4b6e-b6b2-0912e54ad698",
        "cursor": {
          "ref": "7357656e-3e78-4526-99b7-3479eb849a5d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f05db019-ecfb-4427-ac1d-f6c32f7cd5f2"
        },
        "item": {
          "id": "7bdeb0ed-b2d0-4b6e-b6b2-0912e54ad698",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "09fc4a8e-3be5-4401-828b-1726cc937ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "14555c88-482a-4808-a88b-8ecf65521cec",
        "cursor": {
          "ref": "159d7d0d-2331-423a-863c-f3fa3a6e74b2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b0749ae6-5130-435d-adca-db2daa0c7f65"
        },
        "item": {
          "id": "14555c88-482a-4808-a88b-8ecf65521cec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e384094-09ca-42f2-87f7-bb3d325ef8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92b50ad-17da-4581-ae00-7c7f507dd852",
        "cursor": {
          "ref": "7267311d-ecaf-447c-bc07-5df6ca2e8973",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "565f28d8-c860-4439-981f-36843d1c5db9"
        },
        "item": {
          "id": "e92b50ad-17da-4581-ae00-7c7f507dd852",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c469702d-b616-4447-b19d-cb9f01afc97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d2a52-d8d6-4070-bfed-dea8f0d662d2",
        "cursor": {
          "ref": "7122b541-9670-4c56-8589-6bf3927b9af0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "95e6503a-c426-4071-823b-72733e47a97c"
        },
        "item": {
          "id": "c91d2a52-d8d6-4070-bfed-dea8f0d662d2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d2a6202b-e2c7-4eb1-8458-cd380980cf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091323c-4b13-4c7d-b3bd-839d5180d371",
        "cursor": {
          "ref": "dd14bef9-d15c-4b82-a42b-fc346043cbd2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9e71fc69-3205-4821-9f58-f34044679009"
        },
        "item": {
          "id": "7091323c-4b13-4c7d-b3bd-839d5180d371",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8f8f5ffd-a6f4-4432-888d-474b789e9424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2223f4-f953-4c4c-a5a3-bcf5bca7244f",
        "cursor": {
          "ref": "8ed6f41e-5c3f-4339-ab5a-d8fdb5f5d4b6",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bdea658c-77fd-4e1c-a619-6b0855ac7f1e"
        },
        "item": {
          "id": "bb2223f4-f953-4c4c-a5a3-bcf5bca7244f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "255c4552-94b2-4f4f-abff-96095b4e8cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8657021f-78c3-4dfb-aecb-a45ec3311f52",
        "cursor": {
          "ref": "50d386a3-a316-42c0-a82d-68b27998e3c8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec326469-d686-4b3a-98c0-8fda99a1f844"
        },
        "item": {
          "id": "8657021f-78c3-4dfb-aecb-a45ec3311f52",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "04d11a43-66fb-43ab-8fc5-1e389a9659e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0458b980-7f62-4674-be54-a6cac4bd4df7",
        "cursor": {
          "ref": "d6ef80c4-2d37-482e-9875-f2d9c995f782",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b161ab26-ce6b-475a-a940-cfa1ad2b0bd9"
        },
        "item": {
          "id": "0458b980-7f62-4674-be54-a6cac4bd4df7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0b3c0ed8-301b-433b-b1d5-8abe71899c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eb4d16-4538-40b7-a524-337239d2b414",
        "cursor": {
          "ref": "46f772ff-2ce1-4eba-8ab2-cae1fa7b82c5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d22a608-eb63-408b-97e9-e243a926fb93"
        },
        "item": {
          "id": "81eb4d16-4538-40b7-a524-337239d2b414",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d32e1f6e-964b-45a1-8591-53c911584dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc7aebc-a2c1-44b9-b6d1-4eb9e3aa70f3",
        "cursor": {
          "ref": "ca0cdfa4-ed8d-442c-b0ad-96a3a9596b4a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2692c2a0-ade1-445e-a5c7-0901c31a7f86"
        },
        "item": {
          "id": "0fc7aebc-a2c1-44b9-b6d1-4eb9e3aa70f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89cf6618-5eb9-4327-919e-ad2299eef893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8cc000-7fdb-4dd3-a244-ada32748d3cf",
        "cursor": {
          "ref": "38686c31-accb-443f-a98b-940bc219d79a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b188f1b8-e1f7-4653-b6c2-b29bceeff53f"
        },
        "item": {
          "id": "6d8cc000-7fdb-4dd3-a244-ada32748d3cf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03e23cb0-1ffa-4fca-9fb6-4b7b7420c4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2bf69e-8d2e-4856-b362-e4610c89b098",
        "cursor": {
          "ref": "680bd9d0-941f-4115-9477-2b2078f1b616",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c5d00d60-42e6-4bc1-945c-a318e0ea038f"
        },
        "item": {
          "id": "1b2bf69e-8d2e-4856-b362-e4610c89b098",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a05547cc-4cc6-4187-b5f1-4ca1dc1babbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349f5bf6-bfce-4594-a61d-e244df15cc7c",
        "cursor": {
          "ref": "6871f340-1c77-48e5-91d4-1aba8ce01b67",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e893c5a0-9188-4657-bcbf-5e4896b9211c"
        },
        "item": {
          "id": "349f5bf6-bfce-4594-a61d-e244df15cc7c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb979fc6-66e3-448b-ab27-730ad167807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b00cc2b-1495-4541-97df-4088e78be0c0",
        "cursor": {
          "ref": "ce92feea-5d68-4898-b76b-37402ca0907c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "259fe6fa-5246-497b-af4f-077512ecf812"
        },
        "item": {
          "id": "4b00cc2b-1495-4541-97df-4088e78be0c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1139690f-18f5-4b1d-a416-3d39610eba8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f2a152-ad65-487f-827d-6006bb157379",
        "cursor": {
          "ref": "242b9ca5-9b86-49fc-bfae-f2fd41762a40",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "41cbaed4-fe1b-4b17-b56e-8899f0d47bc2"
        },
        "item": {
          "id": "76f2a152-ad65-487f-827d-6006bb157379",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7d45658f-30a6-44fe-885d-a54a4c857d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0a7583-4e1b-44bd-8722-18f22f42f90d",
        "cursor": {
          "ref": "0c54fc64-0515-40a9-a5c6-b4ded55a1028",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "18fd3e77-b465-42e5-ae7c-f9ae09587b30"
        },
        "item": {
          "id": "2d0a7583-4e1b-44bd-8722-18f22f42f90d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a97f524c-f6a6-4a75-ba2d-8e612663afda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a11cc6-316f-433d-83c2-43a9500c0016",
        "cursor": {
          "ref": "9fcdab7e-4822-4864-8cb9-73a895c30988",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "baf8f87f-13e2-4ed5-a826-da1d93372ccb"
        },
        "item": {
          "id": "65a11cc6-316f-433d-83c2-43a9500c0016",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45b03ad3-9148-4e05-b72a-e0813492c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ed4cd1-efa4-46ab-9962-62ebc50f0729",
        "cursor": {
          "ref": "b7a94459-f7a6-4449-8df5-959373c37929",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4e08627-c4fd-40c0-a0f3-5128f4b14cc2"
        },
        "item": {
          "id": "53ed4cd1-efa4-46ab-9962-62ebc50f0729",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7b3cf1dc-0b34-47a0-bfc5-187eee7a110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5c3158-a873-413b-89bc-311646948177",
        "cursor": {
          "ref": "032bc0a9-9019-4916-a527-12fdd7a8d35d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "24ba09fd-8591-46ea-aba4-20a1a37a085d"
        },
        "item": {
          "id": "3f5c3158-a873-413b-89bc-311646948177",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "940e3b31-fbe4-45db-9866-53b124b205e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef1c691-f33d-4cee-8169-33ae1dfbdd35",
        "cursor": {
          "ref": "828f051f-cd20-4047-9bdb-d6252487f276",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b97109a3-477a-44f2-a57b-2b9760983cc7"
        },
        "item": {
          "id": "7ef1c691-f33d-4cee-8169-33ae1dfbdd35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a953f75c-006b-4ae1-ba52-fcb2fe25fd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58df4ae-191f-40e1-be28-76c02fd8daf6",
        "cursor": {
          "ref": "5b2cb5a3-55c6-425a-9146-71c90011cc81",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a7df5102-0c97-461b-887c-165570450bc5"
        },
        "item": {
          "id": "e58df4ae-191f-40e1-be28-76c02fd8daf6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74ba3f00-86d5-457f-8a56-10921d6bc6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a2d78a-3ff7-4116-87b9-9570bf585c9a",
        "cursor": {
          "ref": "08a20e4d-0355-4604-a8d6-71422a7080cc",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "729b7c76-e119-4086-a26e-d59b0b3dcf81"
        },
        "item": {
          "id": "a0a2d78a-3ff7-4116-87b9-9570bf585c9a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "81bcc249-7bf5-4bd7-ab3e-55f3c7cde025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42cb03e-9526-436b-9239-3ecdc7838cb0",
        "cursor": {
          "ref": "7b6032e5-8cc3-4335-8918-a87895a75673",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a7606e3c-d0c6-48cc-a773-30bfbe993bc1"
        },
        "item": {
          "id": "d42cb03e-9526-436b-9239-3ecdc7838cb0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b0a3b50-4081-4f26-b9b9-784dec358525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a79faa-96b0-4aab-9192-d725044300b1",
        "cursor": {
          "ref": "17375321-297d-410b-a35f-78e5188e32b9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a96c855d-fd83-4773-99ec-4ef5e9d9a664"
        },
        "item": {
          "id": "c4a79faa-96b0-4aab-9192-d725044300b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "113ad6bd-246e-46a1-bef8-1c3ca7b6dd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f149dc-f6b3-4a91-b85f-916824ddc6bf",
        "cursor": {
          "ref": "82fedd41-a9e4-47cd-a43e-b5b1a45db92b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9d99deda-ddde-424b-baa5-2d6bfee26a31"
        },
        "item": {
          "id": "42f149dc-f6b3-4a91-b85f-916824ddc6bf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "664db685-701a-4b8f-9a08-9029a90b214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c164fa51-4721-4252-959e-cef584706f76",
        "cursor": {
          "ref": "1fa73008-e118-4407-95d3-8bb5f03f8e33",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b4c0e86-709b-4963-b0e4-dadf9d8fede4"
        },
        "item": {
          "id": "c164fa51-4721-4252-959e-cef584706f76",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "223b694d-0edc-4f0a-8c4a-7d81ca0eef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc8c19d-eb77-4d3a-86b6-0abff222b36a",
        "cursor": {
          "ref": "053b942e-ae1b-4a89-99ed-76e8cc08eae9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0e520565-5d79-4835-a33c-d1b680ab5cfc"
        },
        "item": {
          "id": "ecc8c19d-eb77-4d3a-86b6-0abff222b36a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7f08895c-7e32-45be-8eec-6fa5c8a9974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61df01f9-8737-4493-adab-fa926c0de298",
        "cursor": {
          "ref": "d593590a-7f07-4ae8-82a1-b36b7f2366a4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "707253a6-f3f2-4a93-8219-1536f9ed7be4"
        },
        "item": {
          "id": "61df01f9-8737-4493-adab-fa926c0de298",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8416dc65-32a2-4833-9c4f-cc8c618a3d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c5e6b4-7b1b-4098-98bb-8cd13147e155",
        "cursor": {
          "ref": "f5c4dc68-1f9a-496c-9a3d-e28f9136641d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b97b481f-c3bc-4716-b3e7-1f48806ae08b"
        },
        "item": {
          "id": "31c5e6b4-7b1b-4098-98bb-8cd13147e155",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a359545-2a75-498b-a8c7-475815dcc9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0e5a97-52bd-4a52-9c0a-6b1c78427f4c",
        "cursor": {
          "ref": "0137a198-184e-4c80-8e3e-59a8c222470d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "360bb4fe-b697-4692-9d4e-a46fec499d6e"
        },
        "item": {
          "id": "6b0e5a97-52bd-4a52-9c0a-6b1c78427f4c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "10e7ff9c-a5a3-4563-9648-ede15c09aef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f8969c-0be5-4a0b-8dc8-f2403ee5a35f",
        "cursor": {
          "ref": "5eb848fd-c5fa-4bf9-95ca-a92d487e6567",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eec54955-a442-4c80-a2a5-a45002c1d734"
        },
        "item": {
          "id": "00f8969c-0be5-4a0b-8dc8-f2403ee5a35f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "32d127f7-d55e-4c24-875f-09f9d8073529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0c6351-bdf1-4d6f-8f5e-5483c08943c5",
        "cursor": {
          "ref": "d742c86a-8119-48a5-9544-b3cc5d6ea376",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ba05274f-dcee-418f-877c-3aba7b24f866"
        },
        "item": {
          "id": "cb0c6351-bdf1-4d6f-8f5e-5483c08943c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "837000b2-e20f-403a-bd6f-833a58cb7201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d445dc4-60b5-4c60-80b1-c2645e83b006",
        "cursor": {
          "ref": "e912b075-7c92-4d91-a7fd-e7c13e56ffc6",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fcc48770-c0e6-439a-a00b-84d404419ba0"
        },
        "item": {
          "id": "9d445dc4-60b5-4c60-80b1-c2645e83b006",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "819b625c-695d-4f54-b0d0-789d5bddd761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7c4e02-ecc2-4562-af7f-30a3221de397",
        "cursor": {
          "ref": "86139716-044a-40e8-8910-7fed81030c4d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1c8cbdb9-ce90-4cbb-ab4f-02c7d287ba32"
        },
        "item": {
          "id": "fc7c4e02-ecc2-4562-af7f-30a3221de397",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e433d2b7-663b-4325-9e82-bfb4e28f6b27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcaa41f-672b-4fc2-9aa8-a363e7c50759",
        "cursor": {
          "ref": "94aa6c5e-e95b-442b-8f2f-c0921883fb2d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eef5e0d8-e90c-403e-bfc5-8066a415d1cf"
        },
        "item": {
          "id": "4bcaa41f-672b-4fc2-9aa8-a363e7c50759",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c7f5ae0-16f1-4a74-a6ca-e46d7bf04054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698d036c-a249-41ea-ac8b-7a7b9b5a4cd5",
        "cursor": {
          "ref": "801a436d-48bf-481c-a849-0e67b67869de",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b0d998b9-2623-4cec-9a2b-3e691f4b7b1b"
        },
        "item": {
          "id": "698d036c-a249-41ea-ac8b-7a7b9b5a4cd5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "990cb92d-4801-4294-9589-e8db81a5daca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc03056-9e94-47fd-965d-6ea7bf387ed0",
        "cursor": {
          "ref": "0d30e4a5-6207-4667-bec2-09602657984f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f1d7b6d6-e779-4429-a3d7-9e084b803e7a"
        },
        "item": {
          "id": "ccc03056-9e94-47fd-965d-6ea7bf387ed0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d121a1a1-9ea1-4a73-9dea-c08a622afea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5957667-cac9-4938-954d-dcbe2372982f",
        "cursor": {
          "ref": "eac6435b-85c1-4351-92da-06c2653a0cf9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f36d2a2a-dfa9-4781-bfd0-1d88551ffb96"
        },
        "item": {
          "id": "c5957667-cac9-4938-954d-dcbe2372982f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce03fabf-5386-4fe4-b0d1-b32d641e2c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7103a8-03c1-4610-8b6f-efde9857348d",
        "cursor": {
          "ref": "68d1dd97-6b42-4e0b-966b-4e4035811bfe",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e65d4d34-9eee-4588-b92b-ea87fd859a73"
        },
        "item": {
          "id": "0c7103a8-03c1-4610-8b6f-efde9857348d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9aa80c4f-e114-407b-9422-4d712767b405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dec719-3207-4846-a8c0-2c3c7e58cc9a",
        "cursor": {
          "ref": "8258eb6c-bc3a-4a46-b555-fcaea555202f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b019660b-0ff7-4d36-b453-783b3c7c611c"
        },
        "item": {
          "id": "28dec719-3207-4846-a8c0-2c3c7e58cc9a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "281dab67-937e-454b-9303-20e44a03c7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbae423-cb55-42f0-9388-951839fd1826",
        "cursor": {
          "ref": "1b7a6e4b-7346-4e68-95dc-23ebc4079c97",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f7cb014-6591-4b6f-97b3-5a2e65801a57"
        },
        "item": {
          "id": "0dbae423-cb55-42f0-9388-951839fd1826",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cb59e868-2d77-4bf3-a94f-2368c09846fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e93d09a-65e1-41fb-8ca8-902265803fda",
        "cursor": {
          "ref": "9da897fe-eb2d-4e0b-ad05-32d1e8c8adbf",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f55186fe-c5f4-4851-9e75-d5203cbc2be3"
        },
        "item": {
          "id": "9e93d09a-65e1-41fb-8ca8-902265803fda",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "454b1ae9-7bdd-4930-92a9-236776f8305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ca6a99-76b4-427c-bca4-edcb23876b26",
        "cursor": {
          "ref": "16328be7-93f6-488c-8796-118dcce41872",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "815b820e-2081-4473-aa07-20218e4b8098"
        },
        "item": {
          "id": "73ca6a99-76b4-427c-bca4-edcb23876b26",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c0fc510c-24b1-4d8f-89c3-63015c947182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27503acf-b443-4129-a773-a6f1b1bc7ef2",
        "cursor": {
          "ref": "32fd0250-e599-475a-bcf2-5456af437989",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0fd95b43-4b6d-4d92-ab44-4dfe206efecd"
        },
        "item": {
          "id": "27503acf-b443-4129-a773-a6f1b1bc7ef2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "15fbfc80-3465-4dde-b46f-67f3d640cdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea1741b-8b58-48c6-b858-0d1581bc41b1",
        "cursor": {
          "ref": "3ecd721d-ea75-49f2-a5f7-57ddcd684178",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4098bfc9-08bf-4acf-bca1-4fe2189242c9"
        },
        "item": {
          "id": "9ea1741b-8b58-48c6-b858-0d1581bc41b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dfdcdb98-81aa-4aad-9f6c-b4861f71c7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9dfe1f-4a53-4711-ab56-04b3e7038b74",
        "cursor": {
          "ref": "abceb230-207b-4665-b1c2-c5afd0381774",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "21778185-31ae-4411-a111-6ceea144d8dc"
        },
        "item": {
          "id": "8c9dfe1f-4a53-4711-ab56-04b3e7038b74",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5dd09ae3-2149-4f11-aa09-44e4673c385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c74c67-99e5-4dd0-acdc-6f97ebba94b6",
        "cursor": {
          "ref": "552ddf41-b443-4f72-9425-a14a0c0fb292",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3d46a220-7c6d-45c3-bd4b-c5eba59fbfa3"
        },
        "item": {
          "id": "b0c74c67-99e5-4dd0-acdc-6f97ebba94b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b3fa17a3-81e6-4555-b531-fae4cee78afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54e1fa6-0a4a-4375-b86a-5b59eb1296ca",
        "cursor": {
          "ref": "2209c5fb-2994-4801-a21a-a20e874dd556",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2949eb28-4e85-40ed-8297-15d83f5b8254"
        },
        "item": {
          "id": "d54e1fa6-0a4a-4375-b86a-5b59eb1296ca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d8bd080e-34a6-44ce-a05e-c5e0030a0789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba0fa93-7cbc-431a-8db1-46ea9a5a0ea5",
        "cursor": {
          "ref": "7e435bfa-6329-4369-82dc-26124777df2a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fd816243-e9c5-4225-bdf8-2b5aed00f478"
        },
        "item": {
          "id": "5ba0fa93-7cbc-431a-8db1-46ea9a5a0ea5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54b29297-fef9-4b70-9d25-94c08d9026d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a26204c-e392-4989-b0cf-febfd4cc80c3",
        "cursor": {
          "ref": "6d5a332e-b338-4b87-923d-4a5c5dc2a441",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bd747d18-5578-4511-ad57-e07349fdbeba"
        },
        "item": {
          "id": "2a26204c-e392-4989-b0cf-febfd4cc80c3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5c7c87e-01da-43cd-aea3-f16ac6f3b6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10be4567-0cd3-4c7c-b317-dd0a1c321483",
        "cursor": {
          "ref": "5eb52a42-70a0-4645-b700-de85d2f0991f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dd8df611-57d2-46ce-8b6a-f6f464109906"
        },
        "item": {
          "id": "10be4567-0cd3-4c7c-b317-dd0a1c321483",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3b9819a1-20fb-47f8-853c-45a413e4e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ea1d96-7179-489d-acea-861608c0834f",
        "cursor": {
          "ref": "f811c74d-a183-4f6f-ac8e-189f288023d5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b6342da-43e1-4fbc-893a-bb57e496abda"
        },
        "item": {
          "id": "d9ea1d96-7179-489d-acea-861608c0834f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dfd4e64e-a53d-4182-a5d6-ed82e029ae96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8c52e1-28b0-4d56-875d-ce03ba9154eb",
        "cursor": {
          "ref": "d0c88406-ebe8-47cf-8cb7-2fb6753baf0f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc47c6d7-52b7-4561-847f-6a2621e531da"
        },
        "item": {
          "id": "cf8c52e1-28b0-4d56-875d-ce03ba9154eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a9eabe0d-24a8-4360-9c2e-090ded485418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb647488-be64-43ec-8a89-3c74ea15da98",
        "cursor": {
          "ref": "25920784-683f-4762-b3ab-e0880cec88bf",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d0a34682-eefe-4086-ad7d-cadaf6c95ba9"
        },
        "item": {
          "id": "cb647488-be64-43ec-8a89-3c74ea15da98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c653d71-ac54-4d2d-8861-960d647b8cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ca5909-2be8-48e6-9bc6-41e1e177a811",
        "cursor": {
          "ref": "b8c5c798-d7ba-4137-8198-4ce5c55fbdff",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ffbd7714-f358-4cc0-a8cc-9267ba1ce992"
        },
        "item": {
          "id": "a2ca5909-2be8-48e6-9bc6-41e1e177a811",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f0fc5dd5-e686-4572-a3db-8abb73430e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa955f0-7514-4995-9dc3-85d6f00f0f1b",
        "cursor": {
          "ref": "1007b89a-e4ad-4ade-8a21-8054e82b3124",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b49b55af-0743-4deb-ac9d-42eb63931c73"
        },
        "item": {
          "id": "cfa955f0-7514-4995-9dc3-85d6f00f0f1b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4be80e5c-155a-4873-8fea-4c8758fe6f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1ed0f8-ef9e-4df5-927a-0bbc77689c26",
        "cursor": {
          "ref": "505a4558-3b0b-4603-90d8-74a1cbf99457",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1668aa40-fc03-4837-9e7d-093fa71c8bb5"
        },
        "item": {
          "id": "bb1ed0f8-ef9e-4df5-927a-0bbc77689c26",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9fcf6409-ac80-413c-b628-c5f8b8924cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca37225-0c71-4c6f-ab27-505508a4d124",
        "cursor": {
          "ref": "a798a7bd-b890-4489-9ac4-32219775ec6c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "22289216-508d-461e-9777-7ebe77735b77"
        },
        "item": {
          "id": "aca37225-0c71-4c6f-ab27-505508a4d124",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e7379d91-eeeb-4b58-8291-46074549cc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773bc981-f351-4550-bcf1-876bbaf5fe0e",
        "cursor": {
          "ref": "096aa581-9a50-4b6a-9208-3f4f8bc3d8cd",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b0570f1b-232c-456c-a3df-7ace7ab70936"
        },
        "item": {
          "id": "773bc981-f351-4550-bcf1-876bbaf5fe0e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c5eb8e3-8ed3-4627-82f8-000041320279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebfc44a-b23b-476e-b346-2b11a74f250a",
        "cursor": {
          "ref": "4c78aee1-5e3e-47eb-969c-e160da9e2446",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ec769bf9-c5c1-4395-9025-f171efde4ac6"
        },
        "item": {
          "id": "aebfc44a-b23b-476e-b346-2b11a74f250a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "730903ef-9e82-4da5-a59d-532b03f2ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a566ca5-ba5e-45a0-be10-e32fc2096a11",
        "cursor": {
          "ref": "f2c55a93-f2d9-47da-a205-1dcf5509aa89",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4a71b0d5-a6cb-4969-8058-484d93560d09"
        },
        "item": {
          "id": "0a566ca5-ba5e-45a0-be10-e32fc2096a11",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aa49fcf4-28ff-4f0d-833d-b32d5968993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7c479b-8841-49bb-a6cf-eab6b1a0f814",
        "cursor": {
          "ref": "1158f1a1-67c0-4bc5-bd17-88df09a4d26e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0a2d8cd0-fad7-42ae-885c-f040c8680b14"
        },
        "item": {
          "id": "2d7c479b-8841-49bb-a6cf-eab6b1a0f814",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "30e924be-3cf6-4789-96e1-d3c71ab920fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9b8823-8355-4344-a30a-ecd06f51deb3",
        "cursor": {
          "ref": "5fff3c15-e254-49a5-8f7e-617de343bc42",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15e1982d-4379-4ba5-93f4-6692be44a82c"
        },
        "item": {
          "id": "6d9b8823-8355-4344-a30a-ecd06f51deb3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "926ecd7a-5f5a-47af-9e1b-d054c728035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f4ebc-89bb-482a-9311-644c2695ba74",
        "cursor": {
          "ref": "c2099625-8b68-49df-8ff6-b14ed6643f4b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e81caa80-441e-434d-bda6-dcf2e14488e2"
        },
        "item": {
          "id": "6a9f4ebc-89bb-482a-9311-644c2695ba74",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e328b45f-f2fd-4ae4-a284-266dd5847ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9e8fee-da29-4ba3-98a1-f80e2716992c",
        "cursor": {
          "ref": "1f550b5a-bc53-47f0-acb1-c2561c359790",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5c78b911-c8e7-4a5f-8279-f9c3e3ecc4bb"
        },
        "item": {
          "id": "4b9e8fee-da29-4ba3-98a1-f80e2716992c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83af4f0e-1bd4-4bac-994e-31b3654b04bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc49fc8-10b9-4e65-8a91-49cb7bb66d5a",
        "cursor": {
          "ref": "1c32af94-dba4-4c2e-8c98-c3a67cd195ab",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "22963f39-f4d5-45d6-a822-b5718304f8e3"
        },
        "item": {
          "id": "ddc49fc8-10b9-4e65-8a91-49cb7bb66d5a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "66f553a0-7082-4d4e-b8d7-ccf520fe51bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fcd492-2424-4623-9590-e7b664e04546",
        "cursor": {
          "ref": "6b2fa63d-8508-41f9-ab45-879063d9f482",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e683821-5861-433f-9b57-378807de1c4c"
        },
        "item": {
          "id": "e5fcd492-2424-4623-9590-e7b664e04546",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "07b77253-bfc0-499e-931e-f3459c2a19c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2b24ac-61f2-4aea-a643-1b85d801cc01",
        "cursor": {
          "ref": "2ec1e8dc-3f25-4741-8d12-925148607e30",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5105b058-0a65-4798-bbcc-2ee80f27961c"
        },
        "item": {
          "id": "fe2b24ac-61f2-4aea-a643-1b85d801cc01",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0ac3b55f-413b-41fd-8bd4-6aeaae7c926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3b3503-764a-43a6-a29e-79bb318f3c12",
        "cursor": {
          "ref": "cebdfb8e-b5e8-4dd0-b788-0caa441d7b9f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4be6dc91-d81b-4ab4-b180-3c1ec3407ce9"
        },
        "item": {
          "id": "df3b3503-764a-43a6-a29e-79bb318f3c12",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "53163059-2a44-4d3e-8032-beee65bf626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9efe2fc-8a34-40e6-9fc9-11b75befde9e",
        "cursor": {
          "ref": "d3f1734e-4f95-4990-bbf0-112b5ec7c79a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5d787ba4-d723-4730-9f4a-ca0464ab3779"
        },
        "item": {
          "id": "c9efe2fc-8a34-40e6-9fc9-11b75befde9e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8943c4b0-5976-49b3-930d-f8105458a937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0807d5-cf96-44a2-a81f-194a18e8109d",
        "cursor": {
          "ref": "00c7d52a-6461-4249-a8c6-92d845951e20",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b83d631e-2cf0-47cb-b593-ad9bfa3c644d"
        },
        "item": {
          "id": "7e0807d5-cf96-44a2-a81f-194a18e8109d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e56ad404-76e5-4f48-a3f3-faff9d00c0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07dff07-cbac-4f36-ba63-990b7251e03e",
        "cursor": {
          "ref": "d1ea04ff-d9aa-4bf6-bdd1-b46a83604b99",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e8994776-f5f7-4588-aafc-9e03ed103924"
        },
        "item": {
          "id": "b07dff07-cbac-4f36-ba63-990b7251e03e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bcae8377-0a6b-462d-a54e-1add82324980",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c97dce-a009-4302-bcaa-be8fb225e008",
        "cursor": {
          "ref": "d299950c-ed35-4aae-8f4b-8f933a95c610",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c1cfd0ef-bbeb-409e-8398-0d0d56216dca"
        },
        "item": {
          "id": "b2c97dce-a009-4302-bcaa-be8fb225e008",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bf8e09d3-fbfa-40e6-9451-124f02e3da21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966a986b-89e8-4031-b73f-8e461099a0c7",
        "cursor": {
          "ref": "087e192e-e0cf-4306-9029-e788a5e6ea81",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9b80b97b-539f-45bb-9fc5-9862f0c7c3eb"
        },
        "item": {
          "id": "966a986b-89e8-4031-b73f-8e461099a0c7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1bdcda92-4616-4821-86d8-e5dce914fdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09640cf-7a09-4b48-a93a-25bfdb00186a",
        "cursor": {
          "ref": "873cb689-7b29-4f56-874f-06605fe53661",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "84bd28f0-f63e-4f91-b0aa-7abea0b51667"
        },
        "item": {
          "id": "f09640cf-7a09-4b48-a93a-25bfdb00186a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "48801198-407d-4dfb-b4db-c03b219f9ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c5028b-c0d5-4871-8e34-bc297aed8fbe",
        "cursor": {
          "ref": "ac0b3275-5cad-4fd4-bfd4-ba4cd4829da2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ad2c441b-4a83-4d5b-acf8-27e8ca232e5b"
        },
        "item": {
          "id": "40c5028b-c0d5-4871-8e34-bc297aed8fbe",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "db45ad30-943c-451b-b714-81ba77b78046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d606828-d239-4a0e-8303-7053631f7b64",
        "cursor": {
          "ref": "3a7882cd-094c-4fa8-90ad-420cc30990cb",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8d17798c-5b1e-4ede-bfc8-3a3c4316a878"
        },
        "item": {
          "id": "2d606828-d239-4a0e-8303-7053631f7b64",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6f6e5ad2-4989-4575-a2c3-1abb72a8e6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7a0bb5-cfa6-4540-ab91-56173e0bbbd3",
        "cursor": {
          "ref": "e4e523ae-92b6-4056-b4f1-7bef3d527bc5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "da116157-7cff-4fd2-8c11-ebd728b87ccc"
        },
        "item": {
          "id": "4f7a0bb5-cfa6-4540-ab91-56173e0bbbd3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2454eb6e-1d5e-408c-b837-17dd79ffbbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60800bba-42aa-499b-97b5-5e746ba93eb1",
        "cursor": {
          "ref": "9616b101-1141-4d27-b364-e38398f17d73",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6f533476-4099-49b9-9366-7b6158627486"
        },
        "item": {
          "id": "60800bba-42aa-499b-97b5-5e746ba93eb1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d1d06e5-c3f6-4c6a-88dc-4f63b380ae3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103d6650-5d36-434c-962d-0a0a17dc934e",
        "cursor": {
          "ref": "a0506359-ed40-4383-99bb-88bfe52dcefd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d6bca877-6100-4a38-a4fc-ed8cc30b7587"
        },
        "item": {
          "id": "103d6650-5d36-434c-962d-0a0a17dc934e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "abacdecd-ece1-4114-a5ed-77c07644a60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0129f7cc-e004-422b-a4fe-40993f99a9e4",
        "cursor": {
          "ref": "d52cf9c8-3d11-4d50-9da6-090269e9fd54",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "638d5221-0dd7-425b-9c50-952711edf38e"
        },
        "item": {
          "id": "0129f7cc-e004-422b-a4fe-40993f99a9e4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1deb38f7-b049-4855-a7f5-3ccfd2f85e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d655afc-79f0-4880-9ca1-62b87075d4ab",
        "cursor": {
          "ref": "591f9882-9605-4efa-b89d-85c054e47e99",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "14138f92-5bca-471e-90a0-5f39f161035f"
        },
        "item": {
          "id": "9d655afc-79f0-4880-9ca1-62b87075d4ab",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6f2d27b4-5145-4d68-bbe1-ad22766f44f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07852e8b-abbc-4e1f-8297-4b1066a855b3",
        "cursor": {
          "ref": "df04ab2e-6f55-41b3-a133-bf78bb73c0ab",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f42a231d-2616-428a-aee4-c5ee6832f2a3"
        },
        "item": {
          "id": "07852e8b-abbc-4e1f-8297-4b1066a855b3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee55abe8-4afe-4089-aac3-ad5843da878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaae64f-a4db-46b0-8e1d-ec03c002259d",
        "cursor": {
          "ref": "c24931c1-890f-4cc9-8d39-71809c3caed1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "96a2ceaf-c0a7-46a5-b360-624e0d0ff72c"
        },
        "item": {
          "id": "fbaae64f-a4db-46b0-8e1d-ec03c002259d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "81abecba-120a-4383-b166-011208bcd275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22363d1f-1f9a-4a38-8803-5536bedd4a3a",
        "cursor": {
          "ref": "194fe997-eb08-4d72-9dea-6acf81516ec3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e29149d6-23d9-4669-aa3a-00b3ec63ba35"
        },
        "item": {
          "id": "22363d1f-1f9a-4a38-8803-5536bedd4a3a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5d1431b6-fd6d-4b78-92c9-bb2d9f9bbed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e89f0ad-11c1-49a5-b7ef-32e47199160e",
        "cursor": {
          "ref": "479d61e0-ffed-4f4f-833c-09dbf9f86f64",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a5e4aa29-20a1-47ea-9ec3-a2be9bacb03a"
        },
        "item": {
          "id": "0e89f0ad-11c1-49a5-b7ef-32e47199160e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "906d8639-d8eb-48a7-b1f0-c2bbfc986c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204dfa86-1628-4391-9ec8-65e79320c507",
        "cursor": {
          "ref": "71a662cc-7cdc-421e-8208-f02b47257e85",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5af43931-c421-458e-a278-b731497f70f3"
        },
        "item": {
          "id": "204dfa86-1628-4391-9ec8-65e79320c507",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "03ec6854-3bb1-4e4c-92da-c83a19ff4f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2031dc-4f9a-41bc-bf6f-21f9f12225a0",
        "cursor": {
          "ref": "c47f3f12-8fc9-4c66-97a8-5f4b68729623",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4927ba5e-1ec7-453c-9f17-2b770b10bf75"
        },
        "item": {
          "id": "cf2031dc-4f9a-41bc-bf6f-21f9f12225a0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8f442c85-1832-46d4-a8e9-71cd7b30ebe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6e9f57-2487-4438-a111-7672953ca475",
        "cursor": {
          "ref": "3638a13d-c94b-4508-bd10-d8e441485655",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f4fbb3de-3d56-4d70-ba4b-737fa4734d42"
        },
        "item": {
          "id": "1b6e9f57-2487-4438-a111-7672953ca475",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4e2f8665-93a0-4a48-824f-a7deaac117f2",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d1e31c4a-7f23-48ea-88e5-b2da6ab77a92",
        "cursor": {
          "ref": "46561938-9c2b-4165-9e1c-31f549e897e2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "364fbe25-4d68-449b-8850-23bcdfb67053"
        },
        "item": {
          "id": "d1e31c4a-7f23-48ea-88e5-b2da6ab77a92",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "50f5af94-c567-4d81-8132-1941c9e61254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e66aed-091d-4c5f-b124-f70bb4c6721b",
        "cursor": {
          "ref": "87cdcd12-5d20-4620-8bbd-3b72e7bf0a44",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bf26ae02-16d1-4dea-a352-dea758091ba9"
        },
        "item": {
          "id": "b5e66aed-091d-4c5f-b124-f70bb4c6721b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "97d1ebc1-63ad-4ba0-9b81-23c4806b3f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce4868f-66c8-437c-b085-a559a3782b53",
        "cursor": {
          "ref": "0eb64ca8-63d0-4f8b-8bdd-7c2cae19b547",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "58815f20-675c-436c-9ed6-38c3f08b5b17"
        },
        "item": {
          "id": "1ce4868f-66c8-437c-b085-a559a3782b53",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "433eef0e-f442-40a5-a9c7-8bce86d460e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f0d37b-bcd7-4a8b-b8b7-49ffaece071f",
        "cursor": {
          "ref": "14fa1815-627f-464d-b722-6c7caa2c758b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "685dd0d5-865a-448a-89bd-fb803968664d"
        },
        "item": {
          "id": "d8f0d37b-bcd7-4a8b-b8b7-49ffaece071f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f9a6e84e-85aa-496e-8602-b32da9557482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead5d9d6-e03f-482b-a1cf-5a92e9d62516",
        "cursor": {
          "ref": "91dc4dd5-8604-4d72-a814-35bdb8d6e329",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e375d467-bdd0-45ca-9f81-8b3a5ab79f2e"
        },
        "item": {
          "id": "ead5d9d6-e03f-482b-a1cf-5a92e9d62516",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f8d348f8-77e9-4f63-8ad2-4e44fcb6eab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc6f593-c0d0-4538-ab12-155b11ba2e0d",
        "cursor": {
          "ref": "7397f0f5-6634-43c7-82f4-fb208087b894",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0861ca7a-bc6b-4b20-9dea-cd12ce4e0b6a"
        },
        "item": {
          "id": "cfc6f593-c0d0-4538-ab12-155b11ba2e0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "18794c73-648e-46ac-bc00-6378567e1d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8316e0-34e6-4ce7-8321-77d5e3dff6c9",
        "cursor": {
          "ref": "798504dd-ce16-481c-bf9b-7a0366335cac",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ace1b429-a7a0-455f-a83d-134bb810c039"
        },
        "item": {
          "id": "0c8316e0-34e6-4ce7-8321-77d5e3dff6c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "55a8e48a-cc7c-4999-a425-70bbbcacfd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de6980a-751e-4eff-936d-7a75a01e145d",
        "cursor": {
          "ref": "d33aa9fd-cbe3-498c-82a5-e3dff23d82f0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eb3cc9c4-634b-4e52-bae2-8e2e4fe81e58"
        },
        "item": {
          "id": "9de6980a-751e-4eff-936d-7a75a01e145d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bad43ff0-a3f6-4c85-ae3c-3a29be58e6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e92b94-9b4e-4826-9c34-32237aa12341",
        "cursor": {
          "ref": "23409ee9-fa87-494e-848b-762ba1894355",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d9327c1f-dcdb-4489-a428-8f53886528bb"
        },
        "item": {
          "id": "e6e92b94-9b4e-4826-9c34-32237aa12341",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e72525e2-bf3e-495e-87f0-1a8ea1b24449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81271cb5-2377-4fc5-bbdc-e6f5d10359f9",
        "cursor": {
          "ref": "e4886175-e525-43f4-a2aa-0881194b6c46",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b1a83bc-935d-4e50-bcdf-874d25061b59"
        },
        "item": {
          "id": "81271cb5-2377-4fc5-bbdc-e6f5d10359f9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3de726d0-7b83-4ad9-8b20-5fe22ca531d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3454a461-5ca9-48ef-8152-07a71ace247a",
        "cursor": {
          "ref": "db64a332-dc50-4ff2-9341-5c7fb1f38e3c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "664c0096-8fab-4bb6-925f-5e98d3eb1495"
        },
        "item": {
          "id": "3454a461-5ca9-48ef-8152-07a71ace247a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ecbafec7-43db-46e7-9b29-9199669ec4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142f73a7-7b13-4818-936f-6d89113394eb",
        "cursor": {
          "ref": "2eae3c2f-0930-4201-ab00-381fafa624e2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8197acf-1bca-4f0d-bef2-78fc2fd27c31"
        },
        "item": {
          "id": "142f73a7-7b13-4818-936f-6d89113394eb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "79dfa460-2092-4054-a603-f52f2f861aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db487998-4d92-41d4-ba48-8a1b42d5aa2f",
        "cursor": {
          "ref": "56e66280-d731-4e0d-984a-29ea280be28c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "adb24e37-d8b9-4691-90e2-6e1266b6d5f3"
        },
        "item": {
          "id": "db487998-4d92-41d4-ba48-8a1b42d5aa2f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d7073f4a-2fde-41de-81e9-3343f146cccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f36ffb-1132-49d0-85f7-f1f7a3e75966",
        "cursor": {
          "ref": "77f2c38f-f62f-4bd1-979a-40ad93ab6a26",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b856b272-2a50-49ba-9bbe-7a79cd869370"
        },
        "item": {
          "id": "78f36ffb-1132-49d0-85f7-f1f7a3e75966",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4c287b0e-9027-4589-b29f-b769aab11711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721c38ec-2669-4903-9396-f994e1bb7c7d",
        "cursor": {
          "ref": "d34d069a-15f1-4d34-9cd4-de6c407f7801",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1150e9c9-f58d-473f-a6c1-e1a19b7fda39"
        },
        "item": {
          "id": "721c38ec-2669-4903-9396-f994e1bb7c7d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "97d6a79e-0f09-434b-ae56-43b227bd1b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4023662c-067a-4910-83ac-237492810016",
        "cursor": {
          "ref": "f00436fd-fc55-4f8f-8b80-20813d234f1d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5b813e1d-b1a2-4188-ae7d-2a5cefdb0aa6"
        },
        "item": {
          "id": "4023662c-067a-4910-83ac-237492810016",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "61987615-22ce-4d2c-958c-071faf7e8e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df28463-24ee-4651-9e46-2dbb9e6f5b2f",
        "cursor": {
          "ref": "ca9b6ac9-f93a-4b39-9893-b0e40e79e74c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f172e652-2177-4918-a98a-4fb504e7afc1"
        },
        "item": {
          "id": "3df28463-24ee-4651-9e46-2dbb9e6f5b2f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "43b98729-a5c8-4c60-b761-68a37f483cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b8ff51-24b9-41fd-b4f0-cd1fdec45316",
        "cursor": {
          "ref": "e0d8a78a-7851-4eb7-a565-b2377f2dd3fa",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cfab5def-4b9e-4bb5-9844-7f9a6ad62fd4"
        },
        "item": {
          "id": "11b8ff51-24b9-41fd-b4f0-cd1fdec45316",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8f1c1ebc-5007-4e26-b7d9-53c3cf56905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f60d69e-0279-4b37-9299-ef9882027ca0",
        "cursor": {
          "ref": "ddd7d925-4412-444c-9342-d23d6228e947",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "61672298-8144-4db5-946d-eb47bedb0a82"
        },
        "item": {
          "id": "7f60d69e-0279-4b37-9299-ef9882027ca0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e5dc76b7-ebaf-4a0f-958c-6bb23923d838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15a692e-5be6-47c7-a1fc-2c4fed93a6af",
        "cursor": {
          "ref": "9576f80c-aa84-427b-a08b-e502b0516946",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a86c8fc6-75c6-4f46-a751-73a90fe90db9"
        },
        "item": {
          "id": "d15a692e-5be6-47c7-a1fc-2c4fed93a6af",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4ab0cf81-4f88-4bb8-b6fb-0fce8a50c2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7ae1b0-a16a-4b45-ad53-0452448c2881",
        "cursor": {
          "ref": "f3252687-aa83-4773-a4f9-a9d5d1bf2c4c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "78f8b405-d4ce-412d-b12d-85686c2eb24d"
        },
        "item": {
          "id": "ba7ae1b0-a16a-4b45-ad53-0452448c2881",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8d6728e0-3a5d-499e-b3d0-b8296e33bfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3c549-4100-4b30-8692-6d7b76fc1f5b",
        "cursor": {
          "ref": "43c98ef5-d236-4f4a-ac27-1f16e06282b1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ffee5b5d-833c-404d-8e8c-cc69250815c2"
        },
        "item": {
          "id": "b8f3c549-4100-4b30-8692-6d7b76fc1f5b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7af36a40-c850-4c74-9ef3-e4ddccde3e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ad7dfe-633c-409e-9036-3453645d9bac",
        "cursor": {
          "ref": "2be74919-7d6a-499e-a7e9-a60cc99521ec",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c4355677-b6c0-4ea8-9f77-03d07e61a940"
        },
        "item": {
          "id": "27ad7dfe-633c-409e-9036-3453645d9bac",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d83df89-9638-4eee-a291-9dc1d4bc1b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1edb46-2b1c-455c-9bfa-b786c1329f39",
        "cursor": {
          "ref": "be551ec7-592c-41cb-9807-e21b28d091b8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f8fb13cf-b6a8-4ac1-96a8-729ce8e7c6bc"
        },
        "item": {
          "id": "7a1edb46-2b1c-455c-9bfa-b786c1329f39",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1d20c91f-58e3-4eed-83aa-bce0d4768b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e815f7-e946-486b-9e06-ed5bc1035e7a",
        "cursor": {
          "ref": "22da0f04-df0d-43a0-89d4-b00fe0b95452",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8db2474e-cce2-47ad-a789-c5bc404a9d12"
        },
        "item": {
          "id": "72e815f7-e946-486b-9e06-ed5bc1035e7a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d8261797-07ce-4a10-b623-0062e3399cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b46fe90-905a-4ad9-b262-e0ad955c84cd",
        "cursor": {
          "ref": "211b632d-8163-43dd-ad33-c1f899bd491d",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "65ddbe0d-624b-4b90-965c-8185099a6afc"
        },
        "item": {
          "id": "2b46fe90-905a-4ad9-b262-e0ad955c84cd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "16235afe-d838-4b3b-954e-52250e0e296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181943c8-5baf-4337-8d87-0d7d5486a905",
        "cursor": {
          "ref": "a67f9fe0-9d64-4af0-a23f-4be0e8e3d679",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "83f947c1-63d5-4c59-a169-3cd9029ae0a0"
        },
        "item": {
          "id": "181943c8-5baf-4337-8d87-0d7d5486a905",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a55aa30-c996-438a-b327-67b254d32750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dfb2d5-9ca5-45e7-8c4b-e33a0b0e4030",
        "cursor": {
          "ref": "0ac9f39e-d21c-45e3-8256-499d16dacc79",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "56cff808-d17d-439a-acee-a065307aacbd"
        },
        "item": {
          "id": "39dfb2d5-9ca5-45e7-8c4b-e33a0b0e4030",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c9c01941-d265-4076-9a3d-ed67f83605b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3460c1-a3f7-490f-a35f-b91b6ef4b4d1",
        "cursor": {
          "ref": "3447d35b-eded-4fab-ba57-b7faf5183362",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0530652d-e47e-46fc-a67f-e70b9ab020c8"
        },
        "item": {
          "id": "9f3460c1-a3f7-490f-a35f-b91b6ef4b4d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ecc4cecb-2880-466f-ba8f-0c9227ff8758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7f35a9-1fec-4d10-8eb6-6dc157e0ed82",
        "cursor": {
          "ref": "87b7d16d-4ca0-4b44-b99c-eb2150d77695",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9655816a-81fc-414d-b9fa-84745456be74"
        },
        "item": {
          "id": "ed7f35a9-1fec-4d10-8eb6-6dc157e0ed82",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "82318f84-0719-4294-9ea4-d542ca0e58ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9884823a-5a74-4e34-9607-cc7de5168c11",
        "cursor": {
          "ref": "176b5d8d-f90a-415f-b18e-72d9bc9cf757",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fbfec71b-298a-483c-9800-9cdba21193df"
        },
        "item": {
          "id": "9884823a-5a74-4e34-9607-cc7de5168c11",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cf2b35f9-5f51-4a74-b1d8-2077f41c0844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72828a75-1571-4e12-b20d-cdd731c217f6",
        "cursor": {
          "ref": "f65d0405-da83-4d6c-9904-1df31a782110",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "103ba764-ce9a-442f-b1c7-dd18f3e2a9b6"
        },
        "item": {
          "id": "72828a75-1571-4e12-b20d-cdd731c217f6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5b4b700-7040-4869-adb8-b19f80f83095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068a4555-a57b-435b-80f6-a1f0d4a80676",
        "cursor": {
          "ref": "686c2a83-cf5b-4352-906f-31b3918c329e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dd57ea0b-1e70-482a-b7ca-a00a436b4d79"
        },
        "item": {
          "id": "068a4555-a57b-435b-80f6-a1f0d4a80676",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8e3226db-fdf8-4411-bc7b-6a3214fe5159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d7781e-727b-4802-8307-61b1dc00bbb8",
        "cursor": {
          "ref": "f17c07b3-d95d-4eb2-b45e-3842e75b093b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a91b6594-d8cf-429d-9cd6-d389ed4d6a0b"
        },
        "item": {
          "id": "64d7781e-727b-4802-8307-61b1dc00bbb8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5ac4d7f1-cae4-4a82-aa2b-b473247c5634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ab0645-c5c8-427b-9c5b-364d538f18cf",
        "cursor": {
          "ref": "799ced56-3682-415a-b9e1-6e30d19b457b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cf6105fe-2e56-43ae-a703-8c2260381b4a"
        },
        "item": {
          "id": "f5ab0645-c5c8-427b-9c5b-364d538f18cf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ac939f1c-d26f-4db7-9ac8-6c1135e1fb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f56dc4-e041-4e0e-a9f8-6556d6f8051f",
        "cursor": {
          "ref": "106831d2-89ab-497f-83b6-c40ac97785f3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d7ace339-d237-43ba-979f-7c164eae2001"
        },
        "item": {
          "id": "39f56dc4-e041-4e0e-a9f8-6556d6f8051f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "408759d4-726f-40e7-9ccb-1f923b305151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4afb42-9f98-49d9-b548-a11414e0da05",
        "cursor": {
          "ref": "e7c52e2a-a600-4408-a3a1-fdc982098cb6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5bb5c26b-b68f-4c18-93d9-0145011fc959"
        },
        "item": {
          "id": "9f4afb42-9f98-49d9-b548-a11414e0da05",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "942f6578-3ded-432b-8140-90b87e51110b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71dd1cd-fc5d-4eca-8862-cd32c13f163b",
        "cursor": {
          "ref": "0b1cc5b7-8bbb-4f33-b2fd-976a9135942f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e3b1e99f-22d3-4c5d-9955-cc83ef43d66d"
        },
        "item": {
          "id": "c71dd1cd-fc5d-4eca-8862-cd32c13f163b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3a243041-90df-4ab9-92f5-e0646c4b4fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c8aece-95ec-4679-9dbc-89bc98d860f8",
        "cursor": {
          "ref": "b35580f4-cffa-42b4-bed5-6d9bb8100c3f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "caf5daf5-7fbf-4005-a479-46d7ab4916f6"
        },
        "item": {
          "id": "73c8aece-95ec-4679-9dbc-89bc98d860f8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bebdca46-da42-4a74-8c00-a0f61734c6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba503e-e121-4599-883c-e5a167d449b3",
        "cursor": {
          "ref": "81b890e6-dce5-4882-8dfa-c11fb0c45549",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d46d07e0-9286-47fa-8900-15727694fc4e"
        },
        "item": {
          "id": "fdba503e-e121-4599-883c-e5a167d449b3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "10102deb-f1c7-40d3-bc68-53bc52f132a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca8f776-53a1-4b34-a2d6-88e2cbe69d3c",
        "cursor": {
          "ref": "aa70c044-091d-44d3-a0a9-7e235abef490",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f7eb0d20-abac-44f3-b4d2-7dadbaf030d0"
        },
        "item": {
          "id": "dca8f776-53a1-4b34-a2d6-88e2cbe69d3c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "31f568cd-2476-48e5-b41b-63cce6d7c465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443d876a-c6f1-4af6-b523-81aa098c39db",
        "cursor": {
          "ref": "ac81fe5f-5a27-4899-b60f-9868177462e1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dc0dabd7-ba25-4f8a-810b-d45b5c58c64d"
        },
        "item": {
          "id": "443d876a-c6f1-4af6-b523-81aa098c39db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "327da71e-694b-4e88-b802-f9ab08301002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a115149c-df58-4ed9-902e-fc882a4ea855",
        "cursor": {
          "ref": "2b01664e-30e5-4f20-b36f-cf7d536a427f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0bb1ff7c-a23f-42ca-9346-20276d2add84"
        },
        "item": {
          "id": "a115149c-df58-4ed9-902e-fc882a4ea855",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "637832c7-f382-4010-bda1-281098641b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d9786c-187f-497f-b216-ed328f128324",
        "cursor": {
          "ref": "6109cc85-dd59-44f9-a96e-05b199b280d7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c59cc45e-cd53-4c23-abf7-63f41fb0579d"
        },
        "item": {
          "id": "84d9786c-187f-497f-b216-ed328f128324",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7bdc845c-5ea2-4aba-bb55-d85fd06b90ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0807361-b453-4a7f-badf-a1e7aa8d7472",
        "cursor": {
          "ref": "3849bc27-d7dc-48f7-8c95-b29c2488aa60",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eaaa6551-1371-4bc1-a09d-47e3fdbee7ef"
        },
        "item": {
          "id": "a0807361-b453-4a7f-badf-a1e7aa8d7472",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "76f57d46-5de3-4680-816a-d5075c898d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70192fc9-0398-4ef9-825e-034ce93b813e",
        "cursor": {
          "ref": "c31f628d-7499-4e93-a8db-3bf6822c58c1",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3106cf64-f871-4675-a36f-8fda5beb42fb"
        },
        "item": {
          "id": "70192fc9-0398-4ef9-825e-034ce93b813e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "469059cf-3f8e-4190-965a-877f851f3417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efabd6ec-6c6c-4f1d-8c45-ab7c37084754",
        "cursor": {
          "ref": "a025500c-36a4-44d7-89e8-37c7da95852b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ad09407b-b320-45bb-a336-ebbb7d92b1af"
        },
        "item": {
          "id": "efabd6ec-6c6c-4f1d-8c45-ab7c37084754",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "596b3242-3eda-4663-b35e-b92ac3c5a911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fcb2f1-0473-4ff8-a030-c1ac9b2137aa",
        "cursor": {
          "ref": "4069b2ed-a269-4c8f-bca0-8dab77e20630",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "28dc0b5b-7c32-479e-a7dd-afa1da412a72"
        },
        "item": {
          "id": "a4fcb2f1-0473-4ff8-a030-c1ac9b2137aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f1b055a6-5d5d-4b40-9765-b664d02b8d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717a266f-e9ec-45d3-9c9c-e13873a9768e",
        "cursor": {
          "ref": "88f3623d-5cde-46eb-97d9-7f73ddf2dc04",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8415122a-76bb-4797-a5cc-1836451f779e"
        },
        "item": {
          "id": "717a266f-e9ec-45d3-9c9c-e13873a9768e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d33fff4b-fa33-40eb-a788-98473474d7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb3cbbd-5bdd-47ed-b224-c2a52b4e30c4",
        "cursor": {
          "ref": "ff0af245-f16c-4e09-be1c-4ccd1bd9f65e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65aef2d5-26dd-480f-82a8-d159b719e27d"
        },
        "item": {
          "id": "6cb3cbbd-5bdd-47ed-b224-c2a52b4e30c4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "147b8380-d75d-4dbe-9f7b-6de01200a253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86aa6da-ddeb-4c35-8db6-cb1670b5a9dc",
        "cursor": {
          "ref": "4c9cf48b-8d12-4a88-b02a-a27d96269e3c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "abcfb4fd-44f2-4f46-b995-6a793de2caaa"
        },
        "item": {
          "id": "e86aa6da-ddeb-4c35-8db6-cb1670b5a9dc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e7c04da4-f1ed-40d6-9dda-1bcce83c0dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22ea14c-f626-4b1b-af15-daf7d827bfde",
        "cursor": {
          "ref": "a0803406-b16d-4e3e-9dba-c42928713db6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f51de201-1ef9-4f87-aed5-90022cf786ec"
        },
        "item": {
          "id": "a22ea14c-f626-4b1b-af15-daf7d827bfde",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "baad6332-a8ab-4535-82e8-2f45778e0d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1efd2ac-2c35-4553-803e-69ee57291b4e",
        "cursor": {
          "ref": "b2600286-6b8f-44a8-aaeb-d31d019fd5d6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "830b61c7-4f38-4cfb-9bd9-f24c8ba134f1"
        },
        "item": {
          "id": "c1efd2ac-2c35-4553-803e-69ee57291b4e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a1e92efe-ce54-4f13-a717-dc74345cf306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63423771-7469-40f7-92b4-8df4a8352ed3",
        "cursor": {
          "ref": "b664f330-39ca-4fe2-b4d8-ce0459b4a33d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00d9eaef-f0f6-4d77-a0a7-c56d21136555"
        },
        "item": {
          "id": "63423771-7469-40f7-92b4-8df4a8352ed3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5fae1e5b-55bb-4505-875f-166e953e9183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f954d778-0eb0-433e-9e03-4e93be170307",
        "cursor": {
          "ref": "5cc5c186-8dfe-482a-8a12-c84529b67d47",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c6772fae-ceca-4b7a-bed0-addb874a140e"
        },
        "item": {
          "id": "f954d778-0eb0-433e-9e03-4e93be170307",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "252f36ae-4733-422f-8907-be68aa32eb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa75af67-f1b0-4160-9144-916ccaa5def5",
        "cursor": {
          "ref": "6b7acc7d-0163-4c2b-9fd0-067bf48aa98f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "45302baa-d748-492e-8d37-422ad946957c"
        },
        "item": {
          "id": "aa75af67-f1b0-4160-9144-916ccaa5def5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1f32f6e9-61b4-4680-bd06-1426d56f6625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f08baf2-4df4-4716-a58d-47daf91683e3",
        "cursor": {
          "ref": "e188c343-4628-4ee0-8850-a0d7931cb0c0",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2e238420-5ded-4a66-b453-7d2f4b6afd37"
        },
        "item": {
          "id": "5f08baf2-4df4-4716-a58d-47daf91683e3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b6780ece-7410-4c86-8390-1aed4b1e5888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43b6c51-f999-4be9-a183-6ae7ef830071",
        "cursor": {
          "ref": "efcccbc0-07ec-4c4c-9ed0-bf855dfd0392",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7ef23e36-ecb1-49d3-bae0-3ea174459199"
        },
        "item": {
          "id": "c43b6c51-f999-4be9-a183-6ae7ef830071",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "28d68974-d1cf-4231-9b77-e651ca31af86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4feea61-ae23-4c2d-8287-96fe9a69feeb",
        "cursor": {
          "ref": "a6e07607-2156-4748-b4ba-85a9a76a8eaf",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e390082e-aa82-4e47-bf7f-3db7432cbcdb"
        },
        "item": {
          "id": "e4feea61-ae23-4c2d-8287-96fe9a69feeb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b52bad1e-5f39-4ca6-9bbc-3910979e85de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4053801e-f7ce-43e0-b7ab-f18793b1b3b3",
        "cursor": {
          "ref": "dfd4beba-6eb1-48aa-8791-c2b13f81a078",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "91c4b19d-c9fd-4b64-b76f-27fed275dd76"
        },
        "item": {
          "id": "4053801e-f7ce-43e0-b7ab-f18793b1b3b3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "979ca57d-e2fb-447a-8c12-c9dccf2ed39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21958b9-2d9b-487c-bc2d-ce7e240ae587",
        "cursor": {
          "ref": "2c29fef4-0155-4097-b72d-4f5fcbabaca4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "45a3ae96-b657-4642-a824-d2ff1078cea9"
        },
        "item": {
          "id": "d21958b9-2d9b-487c-bc2d-ce7e240ae587",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c1cdb402-cd77-479b-8ff6-e8b8996fc0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed3a1fa-10d9-4028-9427-1437286a3e7c",
        "cursor": {
          "ref": "a8401337-6bf1-44e2-a8f6-8a91d2764e47",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dbdfd143-8fe0-432c-b356-109a41b93d4a"
        },
        "item": {
          "id": "aed3a1fa-10d9-4028-9427-1437286a3e7c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f2c28dbd-1336-4149-871b-709b784abe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0166883-2d28-4386-89be-08c74fcc6661",
        "cursor": {
          "ref": "4b79e381-4449-4a88-badb-b8b5a825f2bb",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1e11313a-ad3a-4970-82e0-8397e8ad7529"
        },
        "item": {
          "id": "f0166883-2d28-4386-89be-08c74fcc6661",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9e0f4d87-889e-49fa-95fb-f6da3a45977d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abef89b8-41eb-4401-b450-74014623140d",
        "cursor": {
          "ref": "0903805d-ed08-4180-9721-44e3edd5332f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d6a57d7f-1577-4041-aafd-63fdbbd28298"
        },
        "item": {
          "id": "abef89b8-41eb-4401-b450-74014623140d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "15c44d54-2258-4507-adce-25e038aba261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825a85a1-e846-411b-813c-fc96da9e8707",
        "cursor": {
          "ref": "427aef57-1c06-4189-a7c4-d8e5e9a4e859",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d87d2b74-25f3-460c-843a-18b133d947b2"
        },
        "item": {
          "id": "825a85a1-e846-411b-813c-fc96da9e8707",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ef93c7ae-e51c-4b1b-ae33-758598e3d515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bebcc8a-a0da-4fab-8b64-57f44017409f",
        "cursor": {
          "ref": "c7bebc44-1f71-4997-83d1-a7a3dfa7a1b6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "780eff04-dde4-4e75-a4de-3408e7c50545"
        },
        "item": {
          "id": "1bebcc8a-a0da-4fab-8b64-57f44017409f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "22be2ff2-b145-41b9-bd77-ee4bc2029a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cbac53-4fd0-4654-a25e-ddff1838c9df",
        "cursor": {
          "ref": "dece636c-838f-458f-a7f8-c0d23ebbe0e5",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c0401da6-1fc5-4824-aef9-c1e3b5d369d3"
        },
        "item": {
          "id": "36cbac53-4fd0-4654-a25e-ddff1838c9df",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f006a143-a44f-47b8-b2ab-c8edfa249881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1737c7c-49bc-4d39-a02a-f81fd09cb103",
        "cursor": {
          "ref": "965fb9ac-7964-4033-a794-e154daa00a1f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "228f40f2-91aa-49b0-b352-0e99a2dae812"
        },
        "item": {
          "id": "c1737c7c-49bc-4d39-a02a-f81fd09cb103",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "649d0a49-b318-489a-9c78-a777dc33f4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c994590-9b66-4d3f-aabd-f4309982919a",
        "cursor": {
          "ref": "3b3dee26-42f7-4c1e-a004-5b686f502211",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f0b1a215-7a02-4371-b0ca-3242fefa6a8b"
        },
        "item": {
          "id": "2c994590-9b66-4d3f-aabd-f4309982919a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0d68f89a-fa27-402b-b1e1-28f01f41333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dd571c-6965-4f1d-8fd2-f7977f0689ee",
        "cursor": {
          "ref": "3f33f2d9-b6a1-4eba-9d46-8d3441097e48",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9f7dc9e1-a884-4852-85ce-f5b2ba453864"
        },
        "item": {
          "id": "90dd571c-6965-4f1d-8fd2-f7977f0689ee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "966b4b1f-5c78-45f2-bf7d-d01d874482d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc67026-bad5-45fa-8873-15e8b2c0ea54",
        "cursor": {
          "ref": "f79f813c-f9b0-401f-bd00-0b42bf4bf988",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a8e6c068-d3ef-45ef-a12c-4a69aa072dd8"
        },
        "item": {
          "id": "cbc67026-bad5-45fa-8873-15e8b2c0ea54",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e6b5ec08-7925-41dd-808b-257d9b6a839d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09146c6-1598-4260-a3b5-258006cf0186",
        "cursor": {
          "ref": "a33ddc86-18b4-4be1-b6b8-f594b5e1bc0b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d0d2ca6f-bfee-47a4-bbb5-d33159ba6250"
        },
        "item": {
          "id": "c09146c6-1598-4260-a3b5-258006cf0186",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f20127ad-0a31-4985-b8e1-1b19bcd94180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4268e775-c917-412c-84ba-a7d74808105e",
        "cursor": {
          "ref": "173943c3-b2c7-4861-99f8-91a66a23b4a9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c2d36b18-4707-4aad-b96f-89b5ee97ffe1"
        },
        "item": {
          "id": "4268e775-c917-412c-84ba-a7d74808105e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c2f7cd40-80f0-49b9-88e5-841d58829774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f1b29f-7088-4ec0-b8e4-bc626c04f657",
        "cursor": {
          "ref": "30126c7a-51e3-49ea-aa98-dfa46cc1f183",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d62e494d-d095-48f6-8db4-5c1cbac2ce79"
        },
        "item": {
          "id": "f1f1b29f-7088-4ec0-b8e4-bc626c04f657",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "df817719-92de-4db6-8ead-836f3179ec6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11afe645-278b-4f29-9688-31c08ee91823",
        "cursor": {
          "ref": "20708186-2619-4404-8f44-5eb905aaf0a5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "581696ed-0afc-4e1f-8d64-918cac5d966f"
        },
        "item": {
          "id": "11afe645-278b-4f29-9688-31c08ee91823",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8d288e8b-ca9f-44e1-9a65-04ba23b324da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6207bc66-d75d-40fc-b334-3185b576a060",
        "cursor": {
          "ref": "6c2c850e-9f7f-4ee8-94c2-a2e53c86415f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9a7d38ce-ef7f-4064-9920-21f2f4fcd8f6"
        },
        "item": {
          "id": "6207bc66-d75d-40fc-b334-3185b576a060",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "44e77855-8722-4c84-8ee9-45678a1b671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bdfb8b-f020-42d5-b230-ff00a3242ec3",
        "cursor": {
          "ref": "bf06ce39-4901-412c-b87f-260c92c62f8f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f3225eb8-4e9d-4468-9068-012c4ce77a2d"
        },
        "item": {
          "id": "87bdfb8b-f020-42d5-b230-ff00a3242ec3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f26200e8-382a-44ff-b3e0-88a685b1e9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93662917-5266-408f-8013-768481ab5de9",
        "cursor": {
          "ref": "5261fddb-a3f7-4370-acf8-1b1ce665de33",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1005e518-6675-4f4f-b329-1a8786932938"
        },
        "item": {
          "id": "93662917-5266-408f-8013-768481ab5de9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7e7fde73-9873-4587-ac75-bf5c724f0bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec855af5-1969-4866-99f1-26002693ed9c",
        "cursor": {
          "ref": "f6fc8893-f2e8-4296-bfdd-9f961f5d33bf",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "53f47ed0-15f3-495a-8747-015afaeb3fc0"
        },
        "item": {
          "id": "ec855af5-1969-4866-99f1-26002693ed9c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7403e791-6d66-4454-a9ac-f0989031bfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893455ae-5452-4f77-8660-9351449009eb",
        "cursor": {
          "ref": "a5fda623-8699-4824-a897-e1b6a2022227",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8ec81277-68e9-4995-be94-3a3c1a5d518e"
        },
        "item": {
          "id": "893455ae-5452-4f77-8660-9351449009eb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e37f6866-8f69-4b0f-9766-6f0ed1ff0aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faf7084-d878-4f16-8186-d1e3bcf89bee",
        "cursor": {
          "ref": "8884564c-9891-4a6d-8ff6-ab5043fc1bdf",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6e7eaa19-4423-4eee-9128-774d2e9e176f"
        },
        "item": {
          "id": "1faf7084-d878-4f16-8186-d1e3bcf89bee",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "709b23f1-9feb-4e29-a95e-118273076a0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb21cd8-f22d-4b11-9f21-ff1bcbb0c425",
        "cursor": {
          "ref": "052eec0b-950d-4307-8888-39115af4b35c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ddb87f6e-1047-4fb8-ba7b-055cf1675a63"
        },
        "item": {
          "id": "8eb21cd8-f22d-4b11-9f21-ff1bcbb0c425",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b159b002-4ad3-424d-a525-092b8d76b551",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f207e04-8d89-4cc1-92ee-63bba48a2c80",
        "cursor": {
          "ref": "ebd88f75-40e8-4b7b-8ed7-d9977979e2e6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c55c4977-9464-4b11-93a1-690ee2ad3a2b"
        },
        "item": {
          "id": "2f207e04-8d89-4cc1-92ee-63bba48a2c80",
          "name": "credentials_verify"
        },
        "response": {
          "id": "586911f4-676a-4287-b957-ee771f0e938e",
          "status": "OK",
          "code": 200,
          "responseTime": 2513,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e74d1d-b91f-4c87-8efe-b97eb75187d9",
        "cursor": {
          "ref": "3d592a4e-d2fb-4369-8e0b-becd63f68ca2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0ee0a5e8-489e-4ec8-b551-42b46f4eb885"
        },
        "item": {
          "id": "20e74d1d-b91f-4c87-8efe-b97eb75187d9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "892f1159-a69d-4f58-86e6-f94a6d32516f",
          "status": "OK",
          "code": 200,
          "responseTime": 2708,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41e1fe-10cb-4f2a-9268-bd8d8db00704",
        "cursor": {
          "ref": "13e8ed27-baf4-4362-acdd-82672904e46f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e7d83a52-62b1-440b-bfbe-77dc382765c5"
        },
        "item": {
          "id": "0f41e1fe-10cb-4f2a-9268-bd8d8db00704",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e31b2460-6dc7-41c4-b07e-4fd0deddfb26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f41e1fe-10cb-4f2a-9268-bd8d8db00704",
        "cursor": {
          "ref": "13e8ed27-baf4-4362-acdd-82672904e46f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e7d83a52-62b1-440b-bfbe-77dc382765c5"
        },
        "item": {
          "id": "0f41e1fe-10cb-4f2a-9268-bd8d8db00704",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e31b2460-6dc7-41c4-b07e-4fd0deddfb26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2484f9-6921-4ce2-a9cf-9c022ccbf9fc",
        "cursor": {
          "ref": "4592d389-1d77-40e5-9995-7a38c7a76360",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "be417fb7-dbcc-467e-ad98-77727dcf3a7e"
        },
        "item": {
          "id": "cd2484f9-6921-4ce2-a9cf-9c022ccbf9fc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "742eb3ab-d25a-41af-a58e-eb8defbcf7ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf5830a-52fa-49a7-9b3a-0629ba9f4de8",
        "cursor": {
          "ref": "13e52aed-d7d0-4f42-b337-2162fcb558fe",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fb2dbf24-18bb-44ae-b249-d4c07a06e2a0"
        },
        "item": {
          "id": "9cf5830a-52fa-49a7-9b3a-0629ba9f4de8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "31e87d8f-92a8-4872-9a74-fa1699cf669d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}