{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fb388c7e-f7b3-490b-8706-28708b71249d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d882f11c-1727-447e-9d24-29f988f8c0ce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d5f1292-0c43-4f26-85e6-5775519b1ff2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d56e45b-6a89-4742-995b-276f9e34b7b9"
                }
              }
            ]
          },
          {
            "id": "06563dca-530b-423b-a8e5-1e26cc8d9183",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "733e2758-f43c-441c-b01b-f2120319dbde",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebe6b57e-364b-484d-911f-f528e9c8f454"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "88f1cd8e-5062-436b-92a1-ec1f1fe5c026",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "648a1529-76d4-491a-b700-6337e001d728",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2eb0eb6c-1ff9-40b7-b7a0-3d4b58ffb1fb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "588e32a0-b6d4-478d-8626-64fc98b1dd5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb835b82-defb-4925-8057-7c303b2ba73c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f91ceacb-9bd3-4faf-a734-c8487d814c6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c3273fc-fba3-4641-b5d5-eeb9a3cb1d57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a00dc450-96f7-4dbb-8c6e-fbab2dc0e319",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66b6934d-d05c-42f6-bc52-af5abf069154"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "debcd277-a8fa-4935-ae47-3c55b5986591",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3df55ee9-9551-4288-9af1-506a01a52ba5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e636335b-c004-46ca-93e4-37232e6b4088",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "105f88c1-04b9-4b45-8d69-00b41b0c7a4e"
            }
          }
        ]
      },
      {
        "id": "fb2e0353-fde2-4d08-84d2-a95cdc0f7b78",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "64c8d785-14c7-4926-b756-6e4d778e8171",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00be8563-5d31-4d4a-a3b5-6c55af39b090",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4bd8285-6076-4f35-b373-12bda2678336",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552e33b0-5733-4442-96ac-ff14175d2d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "071ae0db-76ed-43a0-9217-81594e09afe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c04bdad-4ddd-4a7b-adb3-c193131326ba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2a14c7-ee6b-4951-ae62-8b7738b8477a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bf9a50a-7564-4eeb-99fc-d73b2ac8cbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af704ec7-d9d1-47be-a73d-76fab816ce49",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7655215e-4896-4730-b993-3653688622cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a05bf145-85a9-419f-8198-70ec21929b4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf4b09f1-5a8b-4062-b637-15720d969e12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17e9592a-9ac8-4105-90b6-27b1c65f7fd3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7eb70a-0099-4165-a570-d04e0831a416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e4e83e3-01a9-4a0e-b9ae-143f66853985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dde45d6-b3d6-4be1-87c2-2b1c4ba12f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7145526-3859-48e5-8fa1-550cbb7b30c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd5d5cd1-4838-4006-90e1-24184958d4c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "797850b6-90ca-468e-8ba0-a314a6619c01",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61cb4783-7716-4978-b690-dfed13d252aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fdad3427-ef7f-4897-8db5-96829708de12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e141050-cbb6-4cab-b68d-cbf65f65c582",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4eea1399-bde6-4c26-9090-99aa6ff3186f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e89f5e57-7be8-4341-8c12-36100eac7bbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5596ee23-ef17-47b2-8006-c43a590317a4"
            }
          }
        ]
      },
      {
        "id": "e8cc4d56-480d-4cdd-8a15-c34d71d6650b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0ca8b33a-985c-4278-9ac0-181ce634a6bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d789e78-9bba-405c-8050-b6702e51f25e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae77e52d-96e6-407b-9a90-e586fdbf0c0a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6d0599-0155-487e-8887-65fb7f0f5172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b067995-660b-480f-84fb-d831307b02ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7b4736-c2cc-4754-81fe-96343b46fdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b115a9db-c365-4d8a-a856-bc6a8dcc3741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f781a1-f0d2-4bd4-a911-df89ce0b8d7d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2893f9da-face-4f72-b0b6-dda3dd9bd755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcb5b9a-f4b3-46f0-91ec-2d1b90381499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0438dc05-3993-46e8-9867-f958f0c05ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54956650-89d3-4ed7-b6b1-e61194ffa8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3712672f-9496-4d7e-863e-e17248128acb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e120b07c-89c3-4014-ab54-b34ad73b25a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324bb12e-964d-47a3-bda6-aadf8e0948c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58aafb1-27cc-43b0-84c2-8ebd0e17df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91ce0b96-98a2-4a9a-9223-6c79a4f96c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d283dd-fe7d-454c-8db3-a99bf28163c2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc55d82-b582-4ac5-9ce4-f5ad7d1b53a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cbb8b4-bdbb-4a82-a538-e5c175b3c1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa3baa4-7114-4930-a233-89b90fcb0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f598e3b9-be99-4621-9a4d-a8a5b84abe0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba51039-1c80-4d64-bff8-373fb0e56c7a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc81e0f-8f1d-4435-9c71-2cba650cdc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b0266b-8b01-4762-b912-0de22755cdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc17497e-052f-4896-9eaa-3ddd483b47d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d62bbd24-2a91-4a0f-8323-880a2db7239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29cc592-5423-48d1-bc51-9c0ae367749b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c4b783-047a-46b5-a658-69644bb5b0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3ab173-8caa-4385-b7b4-aeea33352c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eceb3b8-dd5b-4aee-ad52-019efa301bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb41207a-6c28-4f96-8ded-12e2118b0a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a8a32f-88b2-4018-8bd6-da5297c21d78",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8f4365-5445-482d-84eb-0799f53cff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a397dd4f-0786-45ce-aa73-c456e1a6a91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3311109-0a86-4bd2-8ab6-0d4ffd723a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c38204b-41c0-4df5-86be-a660ffe6263e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd7fdd-c40e-4127-9c30-f8061c5bd998",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb684ac7-214f-454b-9e4b-d49a2187082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7481320-4d76-4ce0-88fe-3d25b91cbd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1d9fa8-7c82-42d3-a382-c4af328d1f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587e95a0-b5a7-4b1b-818b-a8921f27ffcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd777ae4-39a2-400d-adf6-d38c2d7376ff",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63e3ac7-370e-44e7-8c66-681730c67e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855b319b-e682-4188-98ee-5857d04cf73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0df6d18-9f71-407f-b1c5-c36d43c887ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2beaa2e1-f66a-4427-9353-fb7761ae381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0827d2-0ec2-4e6f-9932-bf60a8fb3ae6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3c23f0-2440-4848-80d2-81da15522789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976e0f97-df3f-487f-9155-4ecea45e7da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41f6719-58bf-412f-a56c-668128f5fa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "097993a0-0cd9-4a4c-b75d-107f09b02fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df079113-3322-4288-a6de-6ef2914d10f8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93045c7-a94a-4bad-b3ce-3018f1bcfb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a66511b-4e3d-4c13-9569-3dd40fa972b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55928e7c-7165-44d3-b26c-141fe6979c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6307fa00-0df4-44be-add4-0f20c0ae6cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80eea31-12a7-4551-a6ad-0e11223f3dcd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33b0f41-ea1c-47cb-ac72-89010c9eef03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a819fa-4948-4d8a-a055-a42e8c31c701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b53ebd0-df8e-4b48-908c-0e9779b3aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ea186fa-1da0-4c98-bafc-6e6645f7e8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887b6281-693f-4268-aff4-263077916487",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae34732-e8d8-4ec9-8072-32c55aa86c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd287b6-f797-4f8a-b864-6d23103c7f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ca0cf9-b614-49a2-8ad6-08cf2ebf24d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcaaa936-f70d-40f0-915d-b2665f8d4384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8bdb98-8ca7-4aab-bb33-4a4ff46717f4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd38f89d-3a0c-4b3f-87a5-9c21d576c323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82141f7e-5c01-4d30-a268-e4fb0c2b3ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552eba63-d5d7-4afa-bf30-0723b1281117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46e7d454-f4c3-4b60-8278-52269198c5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd60d16-e2ff-4cb3-a92d-2ed2d58caf30",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ad2fd8-2eda-4816-84f5-01b2ef562c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a86b82-3675-42c4-8d5a-3a84f7c7a9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073a12f6-0ab4-4436-9e3f-ca26371c9a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb6e94f-0ee0-412b-83b4-37d0874919fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6ae414-d25e-4450-a9f8-fb1aa8ec1cba",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18049ea6-c742-4511-a95e-b475174466ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032c7324-62b0-48c4-8778-6e2ecff9c7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1f1ea8-1230-4cc4-92d1-e3d55f767d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae93918b-05ea-4d84-8bb5-b8475e5b9fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a470f849-702a-4934-9336-3f6c6d9c4c47",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c53b819-e3a9-450d-9e15-c1ca6705f5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271fe631-1a72-4518-9368-3583ab756801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d62b330-f457-4989-b546-7ce463127f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a218bd61-9603-4e6a-8778-7b55af433441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da78930-11aa-407f-b027-42c53f63a5fe",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bd5115-f548-4f3e-bdbd-fe422b581f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88734457-8dff-4d31-b095-4373fbf636fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b1f2e4-aa02-40c1-a065-b9e41cfa86e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6eab0f3-c110-4b88-992c-04d0ae8cd9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8867cef-f240-40b8-bbea-2c640846712f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e54f49b-37d5-43d1-8027-b77d0bb7cb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f20b3e-7ba3-4452-b720-1d2bd7254fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed50d818-33fd-45fa-b9eb-2c1be091642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91485900-ab5d-4235-8914-ddd5f1ca63e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcf19ab-73e2-46bb-860e-645bbb79be23",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd4f432-3ace-4b22-a314-fb2d609a0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13b5c50-4256-4a08-bafe-72a78071d636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09e23a-2f00-4b04-9e0b-a85ca122f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "321cf78d-ff63-4fce-b5b9-6b08425de8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5348d5-479a-471b-b18d-1c308320dc6b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a75dab-c667-401a-916a-97695695d4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70453272-fa6a-4d95-a808-d4d91a6be7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997b1759-5b54-4707-9db1-36d44b7e9b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f88885-f162-499a-857f-6554cbfcb825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421e773b-3572-4461-9a83-abf23767de22",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849abbb4-2d0b-46c2-ad15-eff3fb8834d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4a72be-049f-4ef1-906d-19b122928b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4338b249-80a6-4745-84be-9c53851d427d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41962177-664e-441f-a975-a566dbc5c19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b00209f-1309-42c0-8c0f-1ff914ba4a2d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b993b73-4746-4269-ac96-6d64f977623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bf91d8-b919-499b-8998-b2cf76abfa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dd397e-4ae1-4565-a0db-805928bc1ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cefea81-8441-448b-a8d1-ee41a00c7056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe128468-c396-45e9-b1ad-3c495f1621a4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f8e5b2-5715-4b39-a77f-52b684bb9e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94df8c56-f56a-436b-9230-a75ccc6c4e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a790a53b-0fcf-4005-95c0-144117329184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69cfaf0-6b60-44cb-a257-639d31e4d624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aefe780-ca3c-491e-b4c8-1c723c938078",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de7f152-8c7d-4cbc-89f8-0ab15d4c6f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfb418b-0ffe-400c-9e4f-699ccdeeffa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b8771d-1d6f-4c3c-8482-0e80d300cd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26eddc93-8e9b-4193-8c88-4731ceb9de25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a01c365-8694-4e48-a6ca-82ebff529fe9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb1117f-1a45-428e-b619-a0ff4a977c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbbdcae-a570-4fbd-9ec7-1ffed51d1e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9029cd6b-7e43-40a0-8438-88656b7a3ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30192a4e-f105-4238-b281-dbc63a819b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05543f7-9888-4aed-a1ae-80f3ef18e123",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0910ddac-85a7-40ca-b488-761a54307b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639b24aa-c854-432b-a593-1ac8420eecb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae6ef52-8871-4bbd-85a8-85e5250b2f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba49e17-408a-4cb3-a320-555610538e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b480c00-e049-401c-8149-4a8f83dc214e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a35f6d-174d-4063-9d93-0c036e4eb132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4827432-fd20-4482-912a-cf5ef1a0f6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ea4998-a3b9-497f-89e5-df92f91cc322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff976ad6-e38f-45ff-bfbe-99f407f054b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a68fa49-3db2-4576-923d-469cd6739286",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05314c02-edc4-44a1-8d09-a8578ab399b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a554125-f53c-4f26-82dd-c34bde20307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8973e987-665e-457e-97f7-9d44988a4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4392ac3e-1387-4219-9fe2-34e377a86044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998bd4be-1671-4cec-bbba-9ef8ae235ed9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf70ad03-fe8c-4d9c-9f8b-1d2d01a0b2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2b8451-7e7c-4059-b5ca-9127fdf1be91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ce031c-95bb-4c9a-b46d-5450e4ac1828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdeb9bb-7201-4355-ba6a-d0e26dd68354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e79eab-79d8-4183-860b-1db40649741d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aec043-1893-406a-bb9b-8a8f58398e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37299457-7c1d-4c7f-b8d3-fc8a40238358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a33ce05-8f01-4570-915e-6fcf1422a818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68581ba-7c8f-40f2-b308-2f99619a4b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6705e097-8ab3-4b3d-a354-4c0b85688e89",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a43df67-965b-4849-9874-1a730cd1447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c843e811-b675-4280-a30a-0cc921f52068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67a24b1-ea56-4b81-a1d2-3f214c17c62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85342ae4-c9dc-48b8-a399-586c5eff18de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef8ef28-c760-454e-82ed-f26934bdd7c3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d02ddb-a18d-4d8d-85f2-e7437dfe1bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02436991-bf5a-4525-903d-a4203e7c5d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a90f90-de98-469f-bb13-3619b4f13b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bcbb5e-2d02-4158-855c-5f3b485e5d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66564c39-9e8c-47c0-b64c-27ae5267d4dd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df263e75-a027-4ead-b814-10f2348018f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392d155b-92b1-4d35-a851-9951992419a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae5b33e-8648-4aa7-9cde-b1a645cfe444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6246578-d0e4-4dbf-937a-07a76cc1b721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85d0f22-dbd3-43db-be10-b4530411c709",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603b44fc-de9f-4101-8f80-d97b4a4b893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd59f76-c2d8-43db-985d-adf947035814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662ae0b5-11be-46c0-bb6a-e3673e5a4760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdb5e59-8131-4a8e-9955-09066018451e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f048e01-6b8e-4d37-b7a6-d5bb2be92f28",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c325504-8beb-4066-9bb9-7f2424e0494b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "237506b8-d3e6-44c9-a656-0c80f6f3bc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdef69cc-d54c-4475-bc64-9f173d69a5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff50c2d0-efcd-4456-b577-5e72e9f04ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abfdbc6-2edb-4f1c-9f88-9e2667aa8fc2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901535a-fde6-4eab-825e-e005df7203f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82555793-f831-4ef6-bdee-56ec1684296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdce8026-0adc-4539-96e6-1754f9f5b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e5ea72-2a02-44c2-b85a-40bd170485c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7febd4-f9ac-436f-bf40-b4b1e404e2fe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59062cc7-9d59-485c-b526-26c1eb89e13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070bcfda-e842-4e56-a4a8-eb53de44bb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1030f293-f227-43fb-9e94-7c20eb6e0c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2f92f6-bce1-43ce-afdc-c31ffc2a2944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0f1ce8-deb3-40bf-b8cc-8ddeaae39c25",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c85b0e9-793e-44f0-b86d-574780b7f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eafaf7d-30dd-4748-8ac5-a43b133f8ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1757ae-4b15-4373-bcc5-512f44a5ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b067d98-a6f9-41da-ac04-565ffcd8bb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb69073-fbef-4738-9ab4-afb64df47b4c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb60c216-fc77-466d-9ca0-7a047ef1395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2650a2ab-af5b-4d68-80ef-31acd12d0191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3f8d8d-9b43-405f-9b1d-d1d138397849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2277b67e-e549-44ac-9d2f-a8a4e2865b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfd026a-8664-42d9-9424-4442ac53b045",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8fb70f-70fc-42ff-8c2d-eeeac172c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13e430f-f2e0-4207-9131-85d105da7ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afe9225-8182-4d28-ad5b-c7a7a53e6e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5fd436-87f3-4757-b77e-418d942e4fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b9e248-4d0a-45c5-9fa4-8fb2c8cf7b22",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ad07bb-edc7-40a7-9e8b-07f268e8cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b479179-ea8b-45b2-923e-f2ba6dfb180b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6b6db8-c41b-42c0-8f50-ab6a5510af60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5effa7f1-c929-450d-98e1-b4029364b666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aa899d-0ae4-4342-8b19-b570943e397d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abda0324-76a8-4c22-ae3c-e306c2e21ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c9bde6-d7ad-4fd8-8ece-c90727acec72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6543d99b-8552-4d2c-a34a-5988065d1463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac41981-7046-4719-a7ee-24b5e0828f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e49b51e-e910-4aa6-a451-67af7ecc66db",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb8830a-a721-429b-a516-e41dd3e09526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784e864e-8e83-47b1-8bdc-dc0d0319c437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8500f813-7f35-4634-b3e1-e20f6092a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "38046b8b-9a6f-49ab-999e-234b8d6761fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1223fd-01ca-4a41-a1f2-df2a0694d73b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc19fefb-f69e-4fa6-9c52-d541e3e2fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667a5f18-2c70-4376-8f1c-0ddebdfc19fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063fd9da-d478-4110-b89c-8ceae0a63484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2774da-67a5-4fd1-955f-9d99813ea814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaee7e68-e410-40ab-96e3-bedd562cdce6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f4b96d-3a6d-4f20-a309-763c12f2344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afcc0c3-d0a9-44f6-9834-8983eb579a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9391fc-4c7c-4e4b-90c5-f24cfddc97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6795d1fa-3e8d-4a82-80a3-b0776e9cefd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f17663-ad23-47b7-8a50-b9cab4c3a7d5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10b16ab-ca08-4492-8af5-b3a1608b7ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7c8e9d-13f3-47c9-9171-98c01f798aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74a1dc5-01bd-4333-84ff-202326d155c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b5b7ad-8402-427f-9bf8-0780f6182923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b29843-fc41-4b6f-9d35-2bc9c7849fca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6b96da-82ca-4ff0-b165-b993da38d551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfda393-355c-4905-b0b0-9ed0573445e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43195c2-6c82-4be1-860a-23f07f179353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff5821b-8a5b-4c3c-872c-d45eda842d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fda250d-5465-4d7d-abc2-2d5e2ecaefb3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2bb419-9b59-485d-9e77-ca4e3801ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92d5ca-beb0-462b-b247-597089671a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcba0885-183b-43f4-b37a-fafda970b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a097d7b3-da11-45ac-be8e-8e21c1c9de89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6f1486-f95c-49c6-a180-62514c972e9c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c847cf2-46e1-42ef-bdbb-e5c59b11d0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81902009-7f68-4643-aa3e-6bf8a0fe5aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297c106b-3ef5-4d92-b036-c7c515b15477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "545dff7d-21e4-4d3c-807f-ae605aa06519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6cd4b8-3234-4dfe-bfc2-8b30fd70b9cb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aae290-2cb1-41b0-a7c3-5817e15f7344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe8beee-6709-4124-9439-e71bc69bc4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd87db0c-b49a-4ad2-bdef-17f9136dc3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4265860e-7052-4292-b30b-e97ec572aabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0026f8-5e1a-4848-b746-fde2f8227c20",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e943b-8564-459c-8f00-96184fc70820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbff55ef-6363-4c22-a16b-398d501b6f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98e1a1c-953d-43aa-8637-99861a8a28e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db588937-a437-4e58-9cb8-13152b414377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82276102-d025-4112-8090-1e0bb3422ea9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2d226f-bb44-40ee-846c-29380dd76ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cca148-8fbe-4cb1-8643-212cdc8be568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a7a4b3-cc24-40b7-8cf0-9dcd25ffbc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829ac68d-edc2-434d-8dbd-d588204a7ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71108d0c-4037-424b-a4d0-ce7c5cffd34a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd58ead-9e75-49f2-8e10-c0ee83db0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb12c2a2-7641-4689-a437-a2856b136f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afef1e6b-90da-463d-b5de-fbd213b42696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a90cce4-aeb9-4ffb-acfa-0996305b7781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be380670-dad0-4666-ac56-306ceb0d2448",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6960412-f4fe-409d-b10d-ef2f3f0ea7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e6adcd-62b2-4125-bfdc-d2be0a9a2459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5627170-dffe-414b-a899-c9678371faf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "481fd037-e146-4e34-a009-0ba0b0a5009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6890429d-4c2e-4295-9e5a-be1b785125bc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9754426-279c-464c-9e1e-18699da296f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3be217-2aa7-49b5-b916-fe23e1880c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4179590-08cc-402c-82c2-1c039b4fc5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99f698e4-e018-43ed-ac27-d5fb4f6c0ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089a560e-2954-4f1e-8ab7-fc4f07a563e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc90c55-c57e-4f3e-9c81-8304f2cadd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aebba5-2db2-4743-9ad8-a29f56c66fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f13ac78-ee53-4163-8cf6-8cbe3a0ef398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f5819f-63bc-482c-b491-99b215106b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd38b71-9f47-4b32-8084-2a842ca780be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34888a31-8707-4c4a-b19f-95c86be49ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810555f8-a471-4f3b-9660-b7c1625c9164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3175e2f4-ec19-4e24-8ced-f3901ff0f8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19393767-4b5e-4ce3-9263-fe57fc18e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b144f83-ec30-4ad4-b4c3-547698187301",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a61b095-1551-41a2-8745-016c351489e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a27f9a-6aa5-46f0-ae8b-ec122647f643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490dd29e-a346-40f5-bf3a-4a2dcc79da7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88594648-87bf-4bad-b3ba-8793a4eee22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aba76e-8a2a-428e-a149-6fd735977b00",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef5181-e466-4fd8-9ff3-26f94fb659d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9367ed-2bb0-4dc9-8cb1-eb2c0f28593c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35edf0f7-7608-4e38-a725-5bfec9571721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8628e6d-737d-4aa1-aaed-9f5946f50b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06369e11-1e90-4a60-b1bb-545968d3e3c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8902021e-2f15-47b4-a3cd-19ed843ee43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6fb05a-9081-4525-8e04-f2ffc2403eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe0a7d-6458-455a-9dc2-8c2b1cb54704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4a9130-beb0-4dff-91f3-04c91722f950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755d3720-8d89-491e-a120-9be639450336",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cf78f8-0ad5-4697-9450-708a39a48ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62987b9f-d62c-4d8e-abb8-51e8d1b9cb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a05bf-d64d-4d9f-8dc0-02f8097cb0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b9d620-9489-4ead-8306-780eaea06762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13571859-7ac3-409e-8fcb-494d96c8c1b3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebded7e-a73e-4d6f-a782-f4c70788e1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b956108-6124-4050-a7e7-e1fdf69b9253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5da0415-3083-479c-8a1e-ce6e2790e652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab731b8-c7d8-4e5a-b492-80efc24a72fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14753a30-4f51-4a07-a104-af67834e12c2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819c7878-7806-44be-9b1a-39faa76f3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf64448-63c2-4536-a0bb-3090f1a4a828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e7c24e-7cfd-4d1b-9c2b-470e7415814d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7168f7-d27b-4034-a6c3-cec0481461c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beed9e1-8270-4039-83dc-e40e52f57030",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca87da6-3bde-4eb7-909b-0ea4885403df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3096d47-c78d-4174-a6cd-427e81b79a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13357d56-9308-4c0b-a3d3-c0abb23c24a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "142ba897-2936-4245-b72b-2424b7e613fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac9bda0-c3cb-4220-9b26-f44a91b2f71b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a70b2a-bb7b-48c5-b36f-a93cbc753537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0946dedd-95a6-458b-823d-b6afb08e5ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59607ed-52a6-4356-9164-57f4f32a8b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bae31e3-3408-4acd-9261-e5cded3e69a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d32274-0e8d-4658-8ce0-5cc172ff8fde",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe75cdc7-06e3-4d48-994a-3f1ff43a9342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457360b9-1358-485c-b02c-1a834c131852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc1c37-e2b1-432f-8239-093b55e45e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd29f09b-378f-4d9a-ac47-56f1f78f1a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ca83d8-a83a-4ee3-be5a-b2ab31ca8202",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc289c7-2344-4694-82c7-948a6330416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0b73af-0a13-4276-876e-46fe58b7adfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745a0bb8-3d5c-407a-94bb-e8c87155d38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f61a23b9-b69d-4197-9357-f87545d81c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cc2896-c57d-4317-a17e-a03d7c99b0a7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab34cbb-5080-4276-a8e1-9f819b18c59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf17cf5-85f2-4b02-b6d0-79a9c021626f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001d33b9-bd9e-447b-bd1a-cac4ec562c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fa14ed-a9f8-44ee-8b3e-ee419c0260a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a64bde-e8c9-4e04-92b6-7eed40c40e8b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e121cc-06b9-4353-8579-de49393938d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4b05a9-d2eb-4f40-9e1c-96a9c70a6988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c49474b-9fff-4220-86c5-f1fa1958980c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52400137-30f8-4fd8-aaa5-a3c44d42a2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558e2cde-21e5-4bce-804d-f17631809518",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c18515-71d0-4c76-a742-2045e8242173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522140c9-cf80-442b-bbdd-de202806e231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4912d5-ec1a-4d70-8613-b9339cb33acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d90a2bfd-2498-496f-a59a-74295ae96f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206cac1c-fd9b-4909-a723-72bb833cf5ee",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b968f02-099b-4e4e-9f62-e94440dcd6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b451877-7bb2-4f9f-a93f-8b5f5ae080b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fe8189-f3c6-4911-860d-bdb4386b4c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9865a8df-c3b0-46b1-8164-a3f01958dbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2582c010-7026-4793-9071-9c41e241f425",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf896f0-e3ca-40a0-acc4-a273976c18fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a4e0c3-ea08-42d4-8c2f-06f5921ac4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e31cfdc-ee56-4435-9600-2b4593fd6e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e32deb-581e-47d4-a304-c30c23c90e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dd2fea-e7b9-43a4-b5db-b9463c0e2300",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df68c7d1-f569-4ace-909c-47d5efd5dd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7474c9fd-75b9-408a-abd7-0c5e4ef9fe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156abd9c-39fc-4dcb-86a3-20b3bed33108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b02e72a7-8326-4527-920f-5186a47c4f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b987d3-5b1a-48f5-b0d3-baa9f41cbd1e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e582579-1c2b-47c2-a439-2ccb56719e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ba2443-3d70-46ec-ae14-d88b0f906e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b031f4-0e2d-4fd6-97cd-7ea7c40670e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4edc41c2-7e2b-4ab1-96d9-dcbc73a22a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27269bc1-1d51-401b-8a89-4fd18ad7a887",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b2d09a-b83a-4039-b63f-862581487742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e61cede-5d82-4a45-be02-7a96c6f6fd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98fc96-61d6-46bb-a874-759a0bb7b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0da6bae-36a4-4e25-8d36-c3a90b6d52fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1ac8ce-7f09-4c06-be48-5d10fd8ce9df",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9034f9f8-8925-4737-acfe-b397c5d9ac46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975efe6b-99aa-42dc-abfb-3d52fb936a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db36f011-468f-43dd-9acf-9cb17d04a4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a891cb39-1092-4c0c-8dec-db73db72f354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a8fd28-cbc6-4a08-a600-65779e46f79d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd8f9f-351c-44b6-a67d-28f4bb362670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dabb19d-3d51-49f2-bd6e-7bb274e84f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a765eb-cade-419f-b422-64f753f0c60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a46efc-e3e9-4792-8bf7-3c53a3ff66dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5b0d4e-335c-4589-82ed-982aa45d356f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a13dbe6-b87f-4f74-b86c-3d8329ed911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6bc93e-49b7-43ea-a43f-224cbd12da14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb28cee-96a2-4a42-b1fc-ac4104ffcc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7af01c2-69e0-4320-aa0d-3a29875600fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55562934-7be9-46f2-b6a1-fdecd4b274d1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c92015-6524-4d2b-86d9-fa054b74831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6744273-629c-4cc7-9975-d38246c7fbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09675c1c-ea6e-4987-b7b1-c8f0924bde96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0909b0c8-30f0-4fff-8974-8d31788cb64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c880074a-c0a6-4ea0-bbf9-70f79ecfb300",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082c5774-9ddd-4aa2-a288-4c9425c9b87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e1d945-3be6-4d32-8762-d272be40e1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9719a01-567f-413e-8b74-0bcf05201199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3727e711-ce8f-4523-9622-bda699f21bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d70405-0f28-4882-bcc5-760b9d8ad2bd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c37f8c6-124a-4932-a861-9a27c407e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef481f70-c085-4bc3-bf23-b2dbc8cf79d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048366eb-5cd8-460f-a5aa-07e4ca3b5164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3d9eb0-c3cf-46df-952f-20f08e14dbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a0be33-ec55-4896-8ac2-b64aa1495542",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f32944-4f57-4814-a19e-4e686d0ef9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c88b030-3482-4185-ae5b-49eb554d4bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d398c5f-1d6d-4967-9aed-b68aa97b40e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c71281-9da2-4a70-b396-d243064d501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7ebe99-9944-4d80-9f9d-18755a6d34a8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9eb540-5f5c-4f68-8a62-8dfe4cd414ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734809bf-a8a1-47f0-b449-b71de4c0bbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cafff8-bd23-41d1-9d97-09474d84b9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "723e4344-7eb8-4f87-97e9-7b7b8173a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e09ed5-1218-454d-9bf9-90cf19c1c67e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb44a0ed-b74c-4091-96ac-cfa68f7bd766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ea25e1-8e47-4fab-ae24-58584338b9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93170326-c20e-4912-9d6a-7cf75811f9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "853f2307-a2f2-4f0a-9148-873168238306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a364488e-5c5f-4863-8863-210e7f7dc07a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a4f76d-d933-49f2-919f-642c462189f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bb134a-fe46-4375-b195-1315a5078837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe033e8-17ad-4562-980e-fb40aa82f53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e24e02-01a5-4d64-9ca9-931b0adeb678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3374971-4046-4bd0-897a-3d0215c6ef99",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db4d5a7-5901-43dd-93ad-7d2549478cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5814ffc-c24e-4a18-a93a-028ed401040e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4907da7a-2f78-419c-9f89-40c3cef01738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3df89960-eaef-4466-a0f9-05c07a198218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d730eb4c-0237-446d-a5a3-610d411eb4df",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33adf416-3bbc-4402-9c85-3e82deff9acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a963ef-b02a-4935-8dfb-a92a4db8764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bcfe61-a478-4989-872b-52ba37fcd664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5e434a-268a-4e77-9664-4560f868fb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fa90e5-d523-425f-9cd3-36b0cc1b7506",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7592d62c-1cdd-47fb-8ca6-b0a1ade069fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc810a71-5b73-4a00-9a51-24ee0f429d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de59569c-048e-4035-9dde-296e95376a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "667b452f-19c6-44ae-84a6-e45cb07c94e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fec3b8b-2b0f-4120-8800-bdaf3d704d2e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0231e65b-1c0f-42b2-bafc-5930678c5c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c9fc20-f461-4064-87f4-5619f05a79b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36210d5e-217e-4fb4-a17d-e8d68c3bc6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd38d877-8bf8-4c56-a476-4dacd45da0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd45e6d-ebc3-494b-9dea-6c9057c4fcc0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58162ab0-5bac-4e0e-907a-79f2f6eb25a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e532309a-8426-47ba-bf4a-5219afc6baee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4486853e-2535-4e21-af75-aa1fbfc48600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "00dd81aa-591d-4a34-8367-9258d8205286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c737763-800c-4206-99a0-efe88e8f2fad",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851d5be-24c6-4ef3-b706-5b711b956715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "577f451a-e8de-48a6-94d3-49ff1eaa142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b316d963-2b33-4037-8d09-75460b7ccf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "485ddfb2-4431-41b3-af75-32de8019dba3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "883b3e02-aa2a-4745-833a-f32e42ef5bca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c8e731f-1298-4ca8-b93a-3a7c3b703c5a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a452b316-4cfc-461e-b227-db7fb768dcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee61939-55cf-4e47-8690-73d8634fde7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d464263e-4089-4d6d-9e24-a4a4d1c9ece1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd62484a-35e9-4179-929c-132a4c580e80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574d441c-c29b-42ca-b50c-f2fb00acb831",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1760969-54a7-4868-b75e-10af12423526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c35099-81dc-4676-9411-f10cb1553334",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21bf98a2-63d0-4c4b-b498-556b7debb3d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3507ac48-0122-4fbe-aec0-5487f4d3272c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bff7fef7-a653-40d3-9b27-7126be7d6a52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5794bf7b-9e8e-4216-bbcd-1cf12a999137",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "493b73ff-760d-42f0-97ec-967a6383e42d"
                }
              }
            ]
          },
          {
            "id": "8f97f90c-a888-4506-99c7-b50e54fb52bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "595e160b-f70a-4720-9bc2-b6891883779e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "670aa83f-fe17-41ae-8b85-10d6a8091b05",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883d68ac-2c07-414b-b06b-be3316c66ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3bea2e59-5831-43e7-a565-16bb010c9f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf80374-bf1a-4e35-b0b4-89c0f3e5d540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f89b5c7-45e0-4ef8-8305-a0da104d1fe4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93980b8f-32a6-409f-ac12-51d79775b2e1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b0736df-5549-4e4d-9995-14df07b63a7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbc03872-0a58-4f41-99d8-368d759d426c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "075ccae4-9d56-4729-9e6c-f06162df1bfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46bb707b-23f1-4739-871f-2476b0d92d33"
                    }
                  }
                ]
              },
              {
                "id": "5f85842d-99f6-47f4-8aec-465d1b0c8a53",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f303520-b51b-4658-9781-bcc1529da121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26e0fb76-cf2f-46a3-90d0-9d5276b2896d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c8ba00e-894e-4c1c-90f0-64d555cb48f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e29ba92-1205-48a2-b419-4395be1a09dd"
                    }
                  }
                ]
              },
              {
                "id": "410af351-daf1-4918-94c7-2dbee9c57801",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "797362c6-8c80-480b-aca0-c175e7561953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a2fa660-7623-40d8-bb4e-47526c6e4503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bffa40fc-5113-49b3-9998-160977703e18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd6a0551-7d6a-47c4-87fc-ba0e1c9f41f2"
                    }
                  }
                ]
              },
              {
                "id": "17f10ca3-e40e-4725-b57f-7517a54d7128",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4100c2e6-2ee8-4f05-b4da-71e1ae46c0da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a276a04f-e521-4c1e-9f05-13c8c4592d8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acb91e39-6931-40bb-be83-df87e8869596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b35cca16-07d4-401c-b979-0564b518accc"
                    }
                  }
                ]
              },
              {
                "id": "e1af53a2-eef5-4b04-8be0-22445535205a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "754ad996-850e-4e65-8849-5f42e25575a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df6acb0d-d2f6-4b73-8ac7-78ea7f9f8365"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9797abb-511b-443d-8097-761f059b6998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0653515-3b86-4b85-8160-78069f1efd72"
                    }
                  }
                ]
              },
              {
                "id": "0c91e3c9-292e-44ff-b6cb-cbc6540a99ca",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e63a2029-dd57-416f-b4f4-84fa94967b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83e5863d-5028-4cfc-9463-a99900b025c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "251c4354-2162-458a-b253-09582e9a2575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b9dcf25-4418-4ae1-8def-d7c7524cc9c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1456f2a0-7b35-4d0d-ad97-2cadffe15537",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c12c320a-5603-481f-a4c0-735ceaa9bb51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "379e1684-a46e-466c-b8ea-b26b06eee76d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcb7357e-ea58-4b28-b069-488a0ee857b3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bed453ca-21a8-487c-bab0-3980b52bb9ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "65bcaef2-a9b2-44f6-9cc5-1eee26b9d4d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69286ac3-0c5a-4235-acf2-eeb552f12e3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9eac62bc-536c-4f0d-bf2f-f4d676ebf6fb"
            }
          }
        ]
      },
      {
        "id": "c9cf69ad-6a8e-41ab-a43e-9c88000e72b4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bad7a1cf-8881-4dd1-b5e7-102325ddf950",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c827abbc-e886-48b2-9858-af7cf49b05bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7fb06a30-0a8c-4fd5-9f20-7f28f88ee26a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c457867-ab4e-457a-8b62-6cf41211cf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cb88c0-ee2a-4479-afc2-6018e218ead6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e52c3c-4879-4ca4-bc3c-474ea5eccfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "18db73b5-af91-4178-ad67-14b6b128fa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4f9116-8f3d-4cd7-aad5-a01e55f9620b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92898e67-627e-4c47-922e-c936ae2d177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0b046e-ed0f-49e4-aa69-c4014ec687c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58508b84-dae5-4012-a4a5-46ae6e6284fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda53d63-d6e2-4a08-8ebf-a51078b83256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92329d2a-3f96-4138-b4de-f8f52d0e7683",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae55dc68-786d-4d93-b8aa-e2650edab474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e60e5f-b584-4a66-a112-a8880ae0e052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d957024-890a-4e48-b58f-4045fc830a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8909586f-a10a-4c12-bd61-436a39ff4822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c84e55-3c46-422d-b7e1-c7d4b3871889",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a57e8-a8c6-46ce-bf95-a6907e641524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e92a88-2679-4789-aa3a-5997b7049c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f0317d-1ed4-4000-b9b3-e2976967f00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d6f173-f503-4df2-91f9-f25630231664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e695a365-dada-4613-ba11-be0fc868a5a0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164a9890-1003-4ad0-9fa6-d8fb54077b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494cc125-1ce5-4b99-bd80-b381d6abb01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4858cc8f-c717-4986-adc0-43e9ac08ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ab4159-5043-4443-b3db-a460572a641f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ecffc6-e270-4d3e-b42a-db957577ecd8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd17857-6c56-472f-a2e4-6c0b79e0a627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cfc3e4-eb33-4fe0-b0eb-1aebcba4ba24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b3e3f1-0dd3-4e1c-98a9-7ffaddc8b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb0c1bd-9bda-4fc2-a11a-c127f873cb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa47c82b-d046-47c9-a6d3-60cb7a4ecb36",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8f3bc0-e792-4544-8bec-98fc65d83634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b659b789-a7bd-4296-abeb-af1af2f65908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ff50ac-278e-4de5-a8b1-b4236c0e7a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4262c4-ca05-428b-be57-53f07bb94d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070afb7e-0001-4884-ae85-555ef03564be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ea4378-ab0f-406b-9f62-ed6e369d7d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b42836-0891-4408-8e5f-3b0a81eb46b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3902704-5a61-44b0-9bb1-321e3c08682f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "625cdc7b-23bf-42f9-996b-2d34484256ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd6464e-c7a8-4e60-aa26-7501436aa54d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173f0224-9a90-4378-b7ec-1dcd11c395b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e99f240-0f75-49a8-9649-3335c4e7bc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a893971-e406-4f74-8f11-0ccc5974eb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c556a2f9-b3d8-43bf-82f7-3a55327cd478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5d5f96-a8de-49b7-886e-b40186e6dae0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00b465d-a661-4d41-97cc-8bc8ff1a5ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36db07af-6e66-4d3f-a3cb-5a85ba44fb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25438613-4bf8-4765-8f49-965b98151b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a04876-a62e-4dbe-a2db-c86c560f4623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c574ff03-f544-4d8b-b4b3-c145f0fc7419",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a5156b-0769-4ccf-9ded-0b1f15791afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20875627-af22-46dc-be69-9ff563e9444f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e0805-26a7-4e88-abef-c444311ba4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e80828b-3c95-4d70-98d9-9dcff5d89640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e6c3b-ed5f-4ea8-bd46-be7828eb3b8a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6d0f6d-6eb2-4371-ae4c-7b8232db26c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0284f8a2-419a-4755-978a-865a5a4409ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87785123-9d38-4c90-8afa-6b2886e27d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c509dbc8-c330-4371-b025-957cda28bd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e936859b-ae24-482c-96a8-d3992a79425a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9f5bce-7318-4df0-bfd4-c5b50001e2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c258a6-7ddf-4dba-bfd1-b26504a554b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a316c717-1f58-49d8-83f0-712d4f14ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7255fd-bf1a-4894-9e1f-b0c4bb8af39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a24d3ad-a572-4779-bba7-a1a7131dd377",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ac0702-6084-49d3-ae96-e8035a88b146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fc9979-bfdc-44cb-b945-66f2ee5c9878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff7f2a2-fa1c-4391-bd9e-b1bd633df6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "244bc143-42e2-48a7-9ec1-7660c16de483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56b8c54-e04d-4fbd-92eb-8e1058955fc0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fab7cd-ce50-479a-8c00-f2532360fbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ddf048-4105-4593-870d-a7f0f071c03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7140c7f-b315-43c0-8b04-873bc5a813dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a74163f-8595-4937-832b-f1c1c6ba2dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250c485c-1c8f-429d-84b5-771b97fa8d51",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b114735-e898-49ea-b278-ee3aa40df358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4db4313-b482-4ed7-b7fc-51d24dc6025a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2fecee-0a10-4edd-b202-ed8fa75498a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f16af10d-8cb0-4d1a-a28d-0856ae488dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7354b8b9-564a-421a-9609-4fe620c82648",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55059df-b720-4b27-912d-aef52a4eb38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713dcc36-186b-418f-881f-0a88816049e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdee812-b61e-4d7e-8fab-b99bbd34ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "02841346-f455-46ef-8a2f-bad753a65114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8395b2a-1fa0-4930-8906-8371c03de129",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6edeca-41df-4d0b-aaac-f5508ef1c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb54fe6-f5e2-49cf-9cb7-2e475bf2acd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963b549e-5529-463e-926e-a6c282b31e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14698397-a996-49b8-93e8-717247f319b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8c9075-7579-4a76-b299-896e52c4715e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d2d5ef-e568-45d8-b3aa-891d333204c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0de8c60-8d1f-419f-9338-7d59da0a58d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3301c48c-86a2-4482-a08d-01447e10fff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfe8d45-ef59-4378-a57c-bc7af63997e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be1d402-4c94-43d5-8df2-1534c09a1d4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854ad778-1b93-4106-b448-7baae7519009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515b0c87-b90d-4aa4-b372-db9b5d6e394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0f8200-6b75-4069-8e32-bf54b6072877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2fbf41-a813-4d41-932d-b73146505d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00503fc5-8431-439a-b58e-3f811b8b3862",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abce690-d09f-4f10-9e66-a90c952b1c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6243a2f3-b032-4361-b167-ab06f4731cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036b36f8-6590-4e75-a847-9278c36ddadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfe02f2-27db-46a9-8a30-6fda1aff8070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4e8097-7e85-41af-b880-408946e9682c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d57f31-cbd2-41dc-857b-58d39cfcd4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af6731-baf7-4373-9573-cb54a2e543d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5feb95-2ea4-4a04-b6b1-2d49b74d1a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37865da4-9d45-47a7-a484-992c41175163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e523fab4-b38a-4994-8e16-8e111e090269",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d366c6-f58c-40dc-bd80-7ca8dc5b2414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b8313f-d16a-4a4c-847d-07bf9749fe0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1da31a-d422-466d-91c8-03de3dd759bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "880f3d6b-946f-46ef-a619-2fa3ea3e38ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc5c5a5-4616-450e-86b3-47d2077bc027",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db07033f-83e5-4e19-8054-2921109371d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94ff7e6-e0ce-4b53-bb88-ba603f4e34e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e817f5f8-e65d-4ed0-af39-0497e900cdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2e79f3-4ee1-4050-9e57-f11f41db6575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576012de-ea30-4e1d-b3c3-693ea7a509fd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03a7094-7833-4cc8-bd51-e1bc216add06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b44d4e-284f-4576-8694-043cb0050539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59bcc53-9213-401e-a85f-2ddcdc7084b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "322ab08e-b8b3-462d-9099-119d5d84463a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abd4301-8773-407f-a5b9-976b4dcdd6e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852409df-f51e-43b0-9963-9e3f11170fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e20061-19c5-4b77-a820-edad7a6025eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2da09f-74ec-4a6e-ac1e-7ea45ac86b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "967c3305-092d-4ab8-b07b-24a132ae5f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6895d1-4141-4021-899a-d633e3d5c1e2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2797ecf-7427-4f15-94db-c1fd222af784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc18017-a003-4ced-aac6-ed01d0ed7e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec97906d-2de3-4b52-9b52-9ad713ea0841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "077168e4-e78d-496b-83dd-c2936fe465a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc14582-1caa-4ff8-a5d3-3de5a3417bc2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9537777-c618-4bde-adc4-c514ced83b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9a229f-95e8-43a0-9cd3-4acb71520cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b555d120-6215-4392-90b9-0d30b7a41657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91a372d-1b72-4efa-84ce-9f8429810fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abee8e64-cc13-4127-98a0-2c5f93bc8e9c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7e1fe6-f147-4cb0-9db7-bda76fa3d4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1076f6-95d6-42de-a50e-9144b086a175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9de337b-ad86-463a-9dbb-e7e815c598c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfa5680-ba69-4da7-8a93-c769f504a505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4d0b80-534a-449c-b646-24d841eaeae1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be8acb2-6d39-4f79-a3e4-4c522d4303ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d60bac-b304-4ba8-a479-acf0d0979541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e7dc8a-6068-4054-b778-482002092c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ceb2b8d-0d3d-4bd2-8d33-3f113123c436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4469c0b7-c1fc-4589-886e-a9adc20694ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdae9a4b-3002-44fa-bbdf-40a35d3b2501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c451b3e3-271a-4f59-9762-fae79c8826ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13082f25-88cb-4235-93eb-4c01d65d3c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d0c6e2-2b2b-42ce-991d-decdbed70d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00332764-232b-4ff6-8893-c0010a16fa59",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa58bd0-35ea-4a2d-8725-d1aabbe27119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe6dd80-76a8-4ab8-93fa-344de1c67b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d80514-8bda-4f7f-a7b7-3446c10b26ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b016b27b-fd37-424c-aa05-63296a4b71ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5219661-3d46-4a4a-ad71-4478b99f7c10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "423db33a-61e7-40ce-bbe7-57c41822b237",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba3d3ea-4296-4f17-bba2-9c6c90d47c36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6056f5-e7ee-4c79-9b7f-3751d6c717d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57033330-b8e2-4da0-a833-91b1d0ebce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc2e9cea-8ad0-4886-b9c2-a19e63e58a0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "014dd4ad-f8ea-44d0-a510-a25d9e5473ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e06a1e77-9b2f-4897-82f2-db39bf9b8599"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34741174-6565-4383-b65c-65de0b56f689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f3d1605-157d-4eb4-9d3a-491a6d7c1230"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0597208-e526-4068-9122-bf33a7b61cce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b58d98f-dcf1-4c4a-9735-1053000e7613"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9f3944d-e9e6-461f-bc36-8200de42fa7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4bd3d73-7666-4c34-94d9-34262c14af78"
            }
          }
        ]
      },
      {
        "id": "7ea8cf65-0acf-4ca0-8729-dfb499d82b59",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "80fddb45-df1c-4637-81ac-c681f8bb108e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5da579c3-6889-471d-b86b-3d8a06499fe3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "629db2f1-0f64-47df-97c1-e281a888be47",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8010e2-7dae-4dd6-8096-b326500c3018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3561936-a345-42aa-83ef-4cd1a4fedf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79792576-ff91-4378-a96c-c4c2ff1f6d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89c74c6-3cd3-4700-a5c6-a071c30fc268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cb7058-301c-4314-bb40-8f972de7498e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b89174-29f3-4a83-b7fc-757419080da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a6a638-664e-43c9-abaa-47ecd55db1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed40d4b-bbe3-48fd-aa4b-1d9a89914470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d6f79f-0284-40df-927d-97109eb5fe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df27b603-36dd-4e35-910f-e469028c26b0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ba93c-f89a-422e-b19e-889b67de438c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d100dd-5442-48a1-8dcf-a688e48534d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e2e28f-7d46-4e12-bfbf-b28c4901669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bab21a1-cfcc-469b-806e-692288ba4e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fc9e35-c531-44d3-835d-37f3a48efd07",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e1c1bd-b334-49dc-852f-c6d098eeccb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e9484e-951f-4f5c-97d6-255f3e07b3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cb2f9c-2ef8-4c30-bc1c-50b45f4595d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c038e86-73d0-484e-96fa-dda68501b483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cbcce6-45ab-454f-8166-efaaf308817e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aa15b5-acee-4dab-a981-70aaf3097c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a6e75f-e397-4418-8dc0-988318ea59af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70926bed-249c-40b5-ad3f-62aacf8af08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8984bf-d672-4d5e-81fb-7933057212db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51867d48-3ee9-447a-ade3-992693e9e2f3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a1409-a962-4aca-9bf1-87fdd6f466d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca5874-2ec5-4d54-929b-30dec54d41cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32db457f-8eb0-457a-8290-faff3504d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "861654f7-d65f-40b1-8828-3373630daa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ca93da-7313-42d8-8eb1-1452397e090a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf7451f-faad-427e-bd81-8b0983ed1677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d3258b-1900-4e4f-865a-a13cae34f7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582d573e-f9b5-4559-bf34-091a048d2eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b644ba34-820e-4303-8e65-f6da37e25be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f10c303-fd50-4fc3-82fe-d3cdde7fa7b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9c4200-c2e8-4e5e-9729-19e9924e769a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bf7f43-38b7-4c12-a4e5-5a50233cacba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc0c16e-c36e-4b4b-aaf1-438534f973c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db3e9ce-b374-4577-ad68-74470b3f5afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f099e22-2ce8-4a02-b184-4dbfa4a55f8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813f57ac-268f-4ec3-b997-d322cdf85ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c8a019-8d3a-466e-8e71-842add760e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703235b6-2155-416b-ac38-37b123e21501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2304f8b4-2ae6-4b53-b44c-9c77044135ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82be96a-f01f-4b3c-8ef4-42c1b6540962",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b728ab91-08d5-4030-9c90-693c17c5a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887a76df-6e1b-4ff3-828d-2b6724501c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95aa4d88-095c-4e0a-8928-c30ffb664a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c4a59b-873e-4f4a-b1fd-94986f52d656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9608217e-ec4e-4122-bebe-a4730d8d5847",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4623885c-69ed-4bc6-b3d2-6b891428aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b12879-f977-4323-8030-ae6d96a3a1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e202437-584e-43be-afa4-11d4c880d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "be461052-72d7-4c29-80d1-27ac556119e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859bd8b4-2716-4801-a179-3f90f278e58c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9096c16-9361-46d0-8a9a-69b2edb7e8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632ee089-d172-42d5-a182-f6ff20e74906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42cb96a-a178-4123-9bb8-d75af3e3e11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7ae91d-0692-4049-8ec7-2ee1a17cbea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a293b0fe-c6f1-4fac-9fec-8a9cc86fea27",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3575b52-9532-4d83-a5a3-9d4b861d43e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fccc67-4c72-4347-af86-70f9955639d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30287f6-b5ca-42c6-8bb5-0146dfbc55f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a17adb-71b0-474f-8c06-ecd692edfaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a529b918-ed4a-47f1-af10-12531a8448fd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e645562c-4d68-4a2e-844b-b68038384d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963230de-9473-44fc-b2f1-67a801d6f59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830bca5d-8149-49ae-b369-febacd2c6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa406128-4fbf-4b55-b831-a2fa1bfd054f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7b2cef-c135-44ac-9c80-f352971b2f03",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7b7b96-540a-4ff9-8770-e3cf2caa8f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125eeca6-b77b-4528-a140-78532501c16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842a2d12-4002-4871-a3be-c0bd2f320ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a85289-2115-4450-bd1e-6ba9e9e6a716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed982404-8bfc-4f47-ad80-73306e25a5f4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad25db5-951f-4e4c-85cc-3cadc07ef535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa533a91-41e2-42fd-906f-0fc1122d60ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3d190d-4f8d-4d95-a319-992a08d790da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "740d6169-f60c-4943-9af1-2f19aae18b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3db33a7-c3e8-4e6e-8cec-fc481beaf1b3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97809b28-f449-4257-84c3-7b10a7153d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ddbd5c-6e29-482f-a191-00960205660f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379ca74e-0cdf-4edf-adb8-7c0178cfd308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb73065-60a0-4a4c-9b93-836ede4943e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f42e01-35a1-4065-8b16-d62f35de9012",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e22ea21-2a4e-433e-8c1b-2fc408fa463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b53a58-75ac-4dda-a0fd-20e3066c5df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64530df-fe4a-4a7d-8f65-257c98032ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cff7aa7-f307-46ab-b41f-fd2604f40438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cb9d0a-7a7a-4e3d-bd3c-fb210d76de80",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef63ad-4b28-4f50-b26c-dc0bccfeecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32228d57-2bb9-4d10-8cba-f26e83e67c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262254d7-34c7-4c13-bd9a-2fbf7eb7110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6e61b4-1542-4590-8c76-e56008c32a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbf4e04-ab7e-4b14-972b-71e7d7538ab3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172ed13d-2575-47c7-b4fe-a6488341e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff72da2b-99b7-4d36-bb5a-c5dd194d4c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2863174e-770d-4c69-bc14-6f9884ee818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c19da3-2a63-45c8-a0bd-3f703d7cefcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552efd4-1ac8-42f7-a458-d33bb6d5061c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e858a43-a906-48e4-a88b-5142886573df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8231fb3-6698-4e4f-925c-e2a915f0c516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaecdc3-afe6-4852-b09e-9d21572f27c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcf237e-0fcc-46b1-9868-ab425f402cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fa4fc1-361a-4da9-b2e5-a890e03c0a38",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb0f3f9-d93d-42ab-b7d9-6fab0a2bd42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be61523-1a22-466e-a3b0-934f06f3d3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6773265b-f888-4213-90f8-2929ada6023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "394609cd-806c-4877-808a-bdf1253e5128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aaf7ec-ddc3-4c71-af9d-8a8cbb22f3c3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca16b196-9674-48ca-8ae7-05af901a257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e064fca2-2b32-484f-a2f9-2e02006b7e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f8c0b8-c724-4a9a-8109-3d2e2f8a272c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e8916d-1485-4d21-a180-9849b5d8f86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcc60ee-aaa6-428d-9702-7fd649a99ec8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a48b9e-c6b0-45a1-a5d4-fe04f5b25531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38beadac-e22a-4f0c-8bc9-7abffa37f2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69a5446-7a6c-46b8-bcc8-e894a2fa23d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e05ef0-7ed2-4c31-b68f-f80b87026ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91b47eb-c194-4bdf-8810-abee5304cf6f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1041014d-ed6e-4171-a997-44f9ce4f0995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471ccdee-f318-4964-831a-488f43ef75a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5a145-9dcb-461b-ae1a-2180eabd2ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9839df-4429-473d-9d80-50481af0a272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed62af2b-0b40-4579-82e0-475cc38394b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84edd73-6a06-4eeb-8531-230cc29e25f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9097874-1081-4ab1-8d52-faab245ff0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bc60a0-b2b3-4eb1-8d47-4e71e7450ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61908f7c-b9d4-4b6f-826d-ce6ac54c5319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e850c9-d8e5-4bd2-b9c2-0988379a4434",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8ee1f1-d385-4b54-a84d-07a65acf112c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87c583e-3499-4f12-869f-79a96ea68a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c2f890-730d-483f-a505-2ae9fb895728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b47721-7de3-402c-be25-08e5ec859d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869fc7fe-2944-4a4f-ae84-05820afd526f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae530209-2dd9-41af-8d8d-0966584376da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88ba304-2c66-48e2-9ef1-c99938166a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6bf2b3-80ea-4046-8de8-0c294e0f3dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea2440c-4018-4bd3-a5ba-23c2df78ad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200ec6a4-b638-49d9-9710-a6ad39629736",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e64baf-4f84-4535-a57c-5ea5a0ed0542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63216bdd-4cff-4aee-a6a4-f80a19503674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242f5c73-b43d-4db6-982b-cc3dedde2924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e83701-64f9-474f-a531-6e13c1f6af9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbd3acf-1bd5-475b-ba68-4066277430aa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eba983a-0e5c-43bd-b35d-e7018d0b0c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b67265-98b3-4ee1-b0e9-2417baaad48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1d99a5-6984-4503-8e40-d8ba404460d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1221e2-79f7-448a-9703-f331859262d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccefc33f-40af-4e58-b190-410d43441901",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef67e9a2-1c67-4ad5-9d90-cab81eaaa380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd93a2c5-0b31-404f-b674-ababc6ce2b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a418395-f195-47a7-acb3-860f27484777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4f0272-e98d-4f46-8314-68de82185db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f3d5f2-4018-4497-ad69-e00cc6d363c9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826ab1d3-ed8b-4d4e-9ea9-ca4cfc3a27f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f0c2c8-c0b5-4bed-a476-1646c79152fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaff8ad-8f34-47d0-8a4a-a22f871863a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "419d9a04-5350-446c-896e-355942a4004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d6b67e-bfa9-42f9-9290-80644b042a16",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d1a074-d77f-4ea2-a721-d623655d0c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f211f9b-ba26-4f07-914e-849cf990e803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8301c835-02cc-43c2-938e-74b6e7346274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8357a34e-9674-4561-b6e4-fb87c9ad1da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7d2ce2-e6c9-4c9e-bcab-9e1e56d8882f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a5e569-9155-4a03-bb32-fc6aed851c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da581d2-4ead-45dc-b1bb-687ffc003a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9414b2-d900-4ee3-a44f-1e965428e121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8346a295-21e2-414a-a8f9-aa35d1c17245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751b3b37-70b6-4697-acdf-2884adf75a81",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8b4fd0-8845-4766-a88d-5af3449c27aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7248f360-dc1b-44f7-992a-4440cbe11a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1ae70d-3104-4332-9002-04cf15e73973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00a4321-88e0-419f-9814-1da4643057e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ef0749-3e09-41ab-9cfc-917353d5d75c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53c2db2-3035-4429-98cb-7179d0aa6bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5771bee8-4c0a-47fb-9934-3511020baf5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5207448-ca89-470f-93ac-edd8eb4f6112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40179f38-3da6-4dae-8684-d5dae3fc4217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c2b931-4806-455d-a68e-b8097c99f484",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaeb511-e322-49ca-b1e2-764e886a9943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdb872d-a4e7-4e46-91d9-ea4b521c0443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec542070-2687-45f3-8c12-47c71043bb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b236e72-6e72-43ab-b7fd-1c0806dea094"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "883da16d-0214-4b65-9cb6-b8443fdec6ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b91b6d4d-510b-44b9-aa44-7f10d247cfc2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e871142-891f-46c2-98d6-7d7605add852",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "581cba61-d5d4-4849-a190-88e003a76ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b486bc-9645-44f9-8857-d49b013a9a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e6ca5b3-b6f2-46e2-bf97-1323c3f907c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6294b04-c1f7-4160-b9d3-4d764c1f99cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "030c1a3d-bf83-4560-8148-83ba15f3f872"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "308155ba-a0ed-4734-ac27-4ff769c37e06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dee63a5d-2d8e-46ec-8b64-66fda8552b9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9b011f5-84d0-4cfd-b2bb-ff25dfec0720",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a27dc017-e086-4579-92e9-c24c87d5a0b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c069f6-97a9-4a3c-88f9-a6299ca54069",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "503e5ddb-77fd-4e15-a5c9-0a4edd0267d0"
            }
          }
        ]
      },
      {
        "id": "26dbb08e-79d3-4a7c-a7be-0ec8cec74364",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c388ee0a-e2af-4758-96ee-86f36a7d0c8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f08b6afb-e0ee-49f2-bc33-d5a407082adf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f255557f-628f-45e0-a5b6-92fe2c4d8eb9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf96082-2139-456d-a34d-0e286521b623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac70d1bb-fa76-4287-b110-c23bb60cba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d863b99b-0ac4-46f1-a395-99d532c33e9d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d248ff-8434-42fe-92d0-91aa337b5323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3064c788-dd02-405a-807d-d8ccfb8516f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a4bdd0-40c6-468e-81a2-7229752ac37a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa17855-c0f1-44c0-9a33-384cfe598aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7400870e-d326-4cb8-9818-a5092bfa25e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ce6a07-54b0-4029-806f-722e12ac102a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb4eb2-0aff-4794-94d3-d4d2ec9f4a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825b874b-2d36-43f8-a7d7-66ca92927ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa53b127-ea55-4452-8e6e-efc97ecca74d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7b2d7e-488a-465c-9c0b-46556bb3cd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffbb2a9-3daf-4628-9ecd-1cca8ab1ad5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d71b0e-9f68-4fba-ba2b-3cb870f26b94",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cd02a2-6864-4743-9919-1728ce2a6bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073b2036-6302-479c-97ae-cdcf21885da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6668fa2-4cd6-45dd-90c9-76166a9426a5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad3d000-38d0-43d0-ad78-57d441252bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcf1f5c-ef67-4781-9aaa-242e6f51cbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62ee620-5056-49a7-93f4-4e00add17bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6927239-ab6a-49e7-9b06-5211a7a10ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8330feb-7f58-4138-be23-abde53e4cf8f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6b7faa-06f5-4865-ac4b-4fe0645d7e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7481c0e8-8f04-4b7c-b412-0c7c56bc7f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61121a94-17d4-4e66-b1b4-cb2e20af6161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12aaf992-ad27-4994-a321-5f830d67a12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e83e262-7fba-430e-bd6f-e530a3292489",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02c9a2e-2677-4851-9b8b-68fe20383aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a55e61-95b6-407e-a75b-c54b1ef40ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa5326f-7101-4a81-802a-6fcd34ea73f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391fae6d-86bf-4e84-9e0b-b459922c74f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d2825-0581-4f43-9562-523425a47d37",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad17be5-52d7-4691-a1e5-f7636bcf4fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476089a6-7c80-4af7-bf5f-fbc6be8b66f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04da2298-94aa-4dc9-a640-018437fbe10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07082af-83b9-4e02-8145-b0de8d5f3496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd92231-f82a-4ae2-97f9-ea459ed9809d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d4af60-9b46-43f6-ad0f-6f3086ce9560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b45242-d2c7-49f8-9ca8-bb7bef570978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48abee69-144f-4039-b4b2-9aa2d42f60e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f45f8d-b41f-491b-9699-fd62916f6845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2c44bf-896b-4f3a-9047-b6cadfdb74d1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e4f06-591c-4880-81b7-43266c98c60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca70b0b9-b91b-4eff-9949-4eb2039d4243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f5ad8c-1c93-4fc5-abdc-3461be3e85cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449c2227-8aeb-4ac4-8587-7f549d2f48f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49b56d4-e49a-49a2-a758-cb38f976e335",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eae831-b8bf-49b3-ba00-a5861500f49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fe9b03-8630-496c-b9dc-cec839920950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729d6f71-5ae1-4177-9b27-3184ffd4cf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d551ee-117a-4ecb-a532-e7f508be9e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883113cb-36b8-4408-a614-018015a9be5b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66344a98-d46d-409a-a925-7d01203b12f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7496cb-4c08-47d4-9f79-cb235c8a0716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99eff592-c38d-4a87-82ff-8053928154d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0575c7eb-59fe-436b-955d-81fdc380aaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed6f90d-a515-454e-ad32-07854667d534",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdae794-587f-4eeb-a8fa-00c3be76608c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece1f019-261c-4872-8b33-aeacf6fb84bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d96f68f-cdb8-4c60-9740-29e3c818a360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db35397-ef72-4eb6-b45e-557e9ace31c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10376c70-1c45-410a-90e7-501c42e10031",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f5bc92-d869-454c-a319-eaeaf1c139a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223eb9ea-3486-4adc-b4c0-19d2769f2445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c51ffa-4b73-4298-9434-04b7fc5d3842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc8fa74-3916-4f62-b5d8-743246ae9312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba3c26e-ffed-4761-8a2a-814ac0d9928e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aad4137-28d8-4516-bf71-ffb36c764e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83c4a43-8d31-46dd-b4ad-1a2db0bf8a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3412d2-55e6-451c-bb1e-ed57f95ede97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38752b30-f80e-47b4-ba5d-882d2e88bae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb7a4c9-0a84-47b0-b9f6-72352d4888ac",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa99f25-b629-4ee9-ad5f-a373ae32022d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579cc09a-1f95-49cb-922f-0b4cb290e58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f98288-0d72-48fb-b632-e05ea8d4a600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ab4491-637e-4db2-89c5-633dc2c375a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869ca3e0-98bf-4c14-afd4-6b212c222cf1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc1209a-2816-4ebc-aab1-75c83f6548a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05d4120-1d63-4568-8bc5-323cd7c6a6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47452159-2bf7-4f24-846f-346794c58ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e997a577-d87e-4577-8b9a-e8f1d3eaa101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98615b75-7bb9-4ab9-b2b7-24ca7c7adc53",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca3254b-0994-40a5-ae4f-8cc16a8ba6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6ec096-e3ef-441b-b76b-bdadac945952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa419318-91b2-4d62-8dd0-1f8b329ad854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f49177-1efd-41b0-b84d-15c075a841ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9e4fe5-e369-43b6-af13-474cb305b9a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde60c93-d339-4de6-8919-feea069eb42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021b7022-47fa-4856-91b9-e3f712b450f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a51589-fa1c-4e46-a5fc-15aa68ee34eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968133f6-fea7-449e-8892-69b2697a5bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e52759-0c2a-465b-80ce-19621ed7686b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49b840d-9505-4476-b81b-44461ca91d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb11c54-17e4-42fb-8eae-2436be5a0636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca48305-3309-422f-a0f8-0324c252112d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4ac434-7c85-4e20-b4c0-809cd6ecab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74887d43-7137-48da-b5bc-b2f1ee6a9537",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1f77b4-2283-4644-b920-46ddadc1bdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d397fde-3467-4237-a88f-869e859e6704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417e2352-5af3-4e41-9373-73da93dfd7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b474f2fa-8140-4354-88d5-013f41278561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a85b79-2822-464f-98c5-ca51a062097f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a306de55-380b-4612-a314-834acb5ed0e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff8a90e-af49-4b05-b79c-afe2617e2496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bf689f-2d17-40ff-8959-b49c55f68fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59081945-622f-420b-8625-f28cdfac5385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459400fc-fa0e-4c49-9531-d9e08eb3fe22",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6050271-53e4-44a1-902e-0b6bfa621441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e33c69-4c56-46d8-b1aa-d1e847ecc003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae961d35-9572-4201-8f52-83b4f40ebce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb652d62-e630-4d54-ad93-1612f6a3c8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddb6f75-8f44-4c48-91d3-dca25a5edd94",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb5b4e6-0f21-4263-91d7-91aad24fd519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca798a09-50c9-40b7-aeb7-cd27dbdfa9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb512038-7bdf-484a-9532-cafb9ebae250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599f1ddd-a13a-4cf6-8a9f-f2fa97b35c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81aa34a1-2ad5-460c-a65e-a2085e5f5da2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4557a143-931f-4a0c-9ccb-e9dfffe48e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3d2697-54cf-43cd-ac99-38be15f55e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41977327-3cfa-4a4b-8da2-3aefb25addcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e74c95-8673-4506-a82a-a93a295de11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b6bb9f-9d1e-4a90-ad56-bdf33c16a86d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa51797-4176-468e-917e-7ed0f8d576f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70e2163-f045-4297-960e-1034b43fd9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d55d9a8-5d3e-49b2-8c3a-d4d76d109617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7192b25a-8755-4e9d-b443-47e3a3f37bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3dd9f-6f76-4a93-bf94-2bcecb92dd14",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f330c5c2-71d5-4f19-a159-7ed73dcde48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bee7161-9464-467d-8c00-810ec5b267ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6480b1-7745-443a-a288-95893688ddc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e86b4e3-471a-4720-acd4-476faca1a6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad4becc-d815-4d88-b3e9-6179b00b0178",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6557a493-e546-4cf5-b48e-3a48c64fcab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d95b95-c421-4b5e-83c7-c18baf9f8861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2d7036-29fe-4b21-b894-0d2807fb14c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2bb1fa-7cf0-4a26-9434-23653d15c39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205f44da-dd06-4079-973a-c171108cdc20",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff0fa7a-8f09-47b9-a155-b9390f04b2d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7767250-a945-46f9-b355-49ed8be88909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1f25a5-5db0-4ee9-b79c-fdab3ce963e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8cc90f-0fe9-4f16-8e47-39744121ea8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3f3079-971b-4e25-bc23-99d62a579b83",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef4d53-c31f-4654-8627-c9a413293276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce47e4f-917f-4352-a69b-24098515842f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e957e844-3728-47df-973f-9db47061111b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1883f825-b75d-41b3-b46b-d31d09d99342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c88f80-b12f-4343-ac99-e4d3adbc1949",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e75d60-7561-406e-bac7-bb5b25a93e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f73070-fda2-491a-9787-f4a76651d80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f54d50-183a-45ca-b00e-fa3bcd686254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e5d9d-20b6-4832-813d-cf4609531526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d15f37f-e9f7-4279-8663-7a025a94cfd4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7dbbd9-05b4-4377-819a-a84bb75ce6ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d923d1-1991-49ef-9d76-d144efca509a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9d0632-0e32-49da-8648-05b5caccc23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108a7d55-96df-496a-9e27-455cda0a7419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428e6fcf-d540-411b-aaba-e7a22242d15b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640023ca-99ac-454b-b9af-b78067abfee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdce0d2-fe37-4e0f-ac00-20a34e0a5a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2824748b-9d1e-469a-bcb9-fa842016c2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6186d8-b57c-48c8-91f3-9470df1ee516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037bb479-5756-446a-81bb-016df02e448e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2a7706-7f6f-480b-88c8-706d5f939664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21a0640-c3e2-47b2-b47c-5f60690fdee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521aab84-e8bf-4648-8b20-19df67a340e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a738da27-ac10-4107-9b0d-5bdcf06fb187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da3352d-b531-4178-b6af-0e75f8cdd1b0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc84008f-d22f-465d-9ada-d4b792e25199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1838a5ce-e64b-4207-abd5-b841256aa4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1948e5-9839-43b4-94c5-666a9724ba75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a9458-7494-441f-8652-70614604a31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c4ef92-22e8-4c83-a3db-e29bf9d8d500",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f95531-ea94-4b93-b72b-bb4a7e03e5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac4a2b3-455d-4c33-a962-ce1bc25970c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af58bb80-7219-4e20-996a-0ac8b06ad1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a404e0e8-ca60-4d39-844d-ea549e916f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741f7294-e5f9-4738-be31-7a7ed82cb094",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a655e114-8b76-4479-b50e-5a7e6d6ebeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c524c2-2d1c-4b89-85e6-7a96a1103391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d7ddd4-0f62-4c4f-8296-4437d5b699b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5a61f0-2b76-467c-b1e9-58cdab27538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270ed15f-f979-46cd-8689-9bea3576c5dc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecbae53-7267-4dd4-972f-9eb8eae468e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f443a96-4d17-4b2f-9a37-e40d5a8a7bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623d5eaa-b899-4586-85c7-560a95e1b496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0d7336-e189-467a-aab7-f5cd7c8d26af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d589ab58-3a6f-4999-9e4d-431495768d48",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce84cfd-b3c1-4079-81ac-4a90f2869636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a60b88a-4607-4542-b063-18b87c472d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d191aed-3c04-46cc-9514-7f0866f9b503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158eca20-a3cb-4054-955d-ba66ca39a5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb2bd02-fcf8-4274-bae9-a5ad0557432f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51292fb-5f83-43ec-9810-58b1de1409f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12377c1-e121-4040-b113-f214f1c8fb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecff8804-2aa0-45c4-bf87-dc7e890ab2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaf1101-cfef-4125-a56a-85517dd1b4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec8931e-68ec-4f56-bf90-4ae11194c3ec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e87dc01-46ce-4e05-aaf0-300b6dab82b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f754b92f-be25-4fe8-8094-6c81021d54b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b7fab0-c5a4-4e1d-a05b-5cdf3005c56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac46e064-7c87-4637-8709-8cc725e3bfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5096e52-779c-4f85-9bae-9343b08bfef3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64511305-ef26-4f95-9317-6e5302a3befb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d715c919-adad-4118-add6-2960067d1d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6260e838-aea1-4b74-9567-4795ffdb3ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4e9929-9ec8-429f-aa96-d6aa2bfc4bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137b6ac1-b94c-4ba3-9aab-6bf8b9ae9541",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b7cc18-dd1b-4dc9-8c33-22c8ccdf900f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bd69ca-9dec-4fa3-bc0a-730b0702d35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba1207b-2a09-4b4e-af74-2963889c8d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5163583b-a176-4add-aad8-6184fef57044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33418823-a81f-47ba-9729-3e2e237aacfa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a69a51-c529-4d7e-bd7c-044f66aa14f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b267ba-dab2-4eed-809b-c547642f8a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34650bf2-108b-458c-bc98-a304965fe187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d447449-d606-474f-ae79-602170221896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6125ef-45d9-4265-9096-3dadc6329896",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99edcc7f-7d2d-4407-a050-79aeb543c89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e45c94-b438-40a1-bf06-2606988a3a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe63aeb5-176a-40e2-874e-edc05fc201d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82782fc-3fc2-41dc-9718-86acd805a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb29f4e4-b4ef-4563-ae3a-a56acfd0c8de",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965b574a-03bb-4e62-9e9d-192c64170a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995204ac-ce65-45df-96c8-00b445f96f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9db5b9-76ce-4676-826c-448424040f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0639045f-2cdf-432b-bf52-5472e92bc36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e4e392-0401-48f1-9b8f-cface49cf7ed",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9589f223-b42e-43a0-9f33-16fe8d10c05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de21c2c-00cc-4a79-aef5-316dc3c10cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75279ad-0d97-4163-bb93-97d69e31dcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e3a799-97a2-42ec-8282-c79ef98d646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e675bd-d9f0-4ace-80a6-138197361a03",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c4dffd-4b0d-4c88-b703-e89bbe5da85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381cda67-784a-406a-ac50-f818284efd98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b0da18-08a0-4fbe-8add-aa52d30e8b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d583fe7a-1ba9-4729-9a4e-e924c9392d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580beff4-1080-4c89-bfce-b3ae0d086746",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8838dc-83f0-4aa5-b630-37a19c54baa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601059b4-dcf5-4735-b480-4d069aba0ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b75ae-d19b-423a-ac02-a67fc1a13efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d019516e-0aaf-4ff7-9965-b0e9702d56a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fa7849-fc6b-444e-94da-d35145835c42",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a9cd31-7c21-4982-b15c-74762ffbd081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3fb3a7-1976-4c44-921e-ad9e5894f821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fc72ef-de4a-420c-a305-aa0998954822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d663a27-078c-4fde-8e43-4f59451d9c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ded8da-b632-4534-b11c-03561f0b1564",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d193841-b156-491d-8b90-d515a90446ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c17a4aa-ea17-49de-bfcb-6cc4777e3866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171c789a-64d8-413c-b408-cc241b779991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63fa7cb-71b1-4ef4-a19f-ae79ea22c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50032059-0373-4194-87b9-53ec26f190fe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773af0ab-60bb-4291-8793-565d33ab7301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ca2379-afc6-4190-935c-227f2dc0f539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28754b8c-5aeb-4eb8-b16d-dc6e3eec38dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b4194b-50db-41c5-bd29-80e493a173de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057b9156-30de-4c0b-9329-98e802a42aae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91608ded-96b5-4b9a-8b42-2f1204f2b750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa01503-5f8c-41e8-b5cf-267e4b016b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bbaf77-ee74-40c5-8622-be2da7e27ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d68fee-6dff-4094-adaf-76499c8a5406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d92228c-d9a1-4a2e-8580-65dd74451c43",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c15f06c-a376-4180-bf11-24a838680393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ea55c8-1ab1-4630-b673-e3c517713a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5fda00-6c2d-41a0-8e5b-a786844eb0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10f7c96-bff7-466b-9dd1-f5810575e0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159f1916-a616-4bda-95df-99d3224fe48b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f72a7f7-1fee-4d8c-8081-06740137ce9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdc5f02-29b6-477c-bb80-330afdf436ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395394c-9c8b-4d7a-b77d-3e83c5fd44c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eaf75a-52db-40d7-9c05-a866357f7fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e478fc46-d434-4ef1-8515-be79180ebd8f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f6ca37-d15d-4753-aa3a-ae3a224da8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d93baf8-7503-4e81-95ee-7baab304d0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a1ada6-2ee4-43bd-a14e-65a3216e8315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe76ec11-9728-41d5-adec-edf4127cb4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf177111-51ec-4642-861d-f32737451943",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb87ece3-8de2-428d-8f4e-e50f17009d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8316584c-b712-4e0b-aa63-bf8411e579dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d54f52e-14a2-411d-9d2d-ce1ac4f24f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed736857-8f40-4523-abfd-5e80a5c0f81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e620947f-726c-4b94-9d74-36cb53e5b7e9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7b9b4e-65b7-4c8d-bf47-4fb8f6f780d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8153374-ce43-4a99-a538-14882d816fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203badf-52e9-441d-84f0-5405c19db31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5899ee22-e960-4301-be3a-bf210add1f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a44d22-3641-48cb-be70-9b283b7d33ef",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e954e0da-c6dc-4b5e-ac75-4008644fbcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6e6e0a-f45b-4d23-94cb-32648ac76780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f7a21e-53bf-4336-b2d5-4401c6ab177a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d961f7c-aa8d-4611-a72c-46af1e8cc905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b72a039-7728-4cfa-9e15-a4251b156ffb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fd05b8-c840-4f33-a702-5ddf071ba169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d176665-7f62-4740-b030-2c50ce439450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7403bd-2fde-43bd-ae9f-672aa513aac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa9830e-e529-4da0-ac08-6fcab6607d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd19f26-206b-49ed-a1e9-78a1e2b83aff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a557ace-c3c3-432b-a896-6a270bf73c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a7555e-0346-4072-a6bf-6d1061bedba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41661319-8bc9-4da3-971b-c98caff6a0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd28681-3c0a-4135-95bc-4f1b86cf9842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d330d-ed31-46a3-b29b-302aec7a88fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddc84ef-f1f1-4dae-8e5c-ea4ca4bdc6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4715f14f-49ae-432f-83ef-18dca617b9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05255f73-47cb-43f5-bac7-2c85396b4f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fa2877-3476-4756-b18c-ed8971302e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadaee40-1f39-4e94-9c3b-add96f7bb4a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50683122-c415-4b7a-b977-293b773496f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278d820b-a238-42f2-a065-0dbfaaf1e08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bd13fd-03e4-439f-b139-7a607dae73da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdbbcc2-af54-4781-8807-55b825ba4f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae48b8e2-97f5-49e5-ba38-f1ba423dd8a7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa77d47-1654-4c9d-b32a-a3f10e3e7840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17475809-4f29-409e-a65b-354a2413bfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96bc5a2-73cc-4501-8a76-02f05c5fcca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d07696-6214-4443-afb5-4387934082a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad58d2a-5724-437e-93bb-dd6f0b9522de",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467543a3-534c-4f7a-9026-54a181c948bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1024b7b-4469-4d90-81bf-f23bd74f899a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b87689c-1abe-4221-a262-1088fac462f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fec9b7-68be-4846-ae58-7e3d1157c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce78019-a6c1-4322-acdd-398d0b214b80",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013415bf-9bc2-40fe-bb9c-7c53f1987331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c632b0de-bbc7-45a0-9e94-af97014375ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa70142-b8a0-40d3-87fe-d12e8d7f75ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad584fe-aaf1-4f1d-a293-609a0b9d06ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd72209-55f6-44a3-a69e-5adb499cbf57",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074679b3-3a0a-4e51-a51d-9072a35c6276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081d6e65-883c-4167-af7d-87b4ca800a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83097cc5-f0e7-4122-aeda-65ce6a9a32e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bda785-f5c1-4742-a68e-b43cbb143753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1e43b7-8772-4d1b-80ea-da514fea00f0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c421a1-e167-44e1-861d-cea2c9e3e494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e3fbdf-d741-4874-b652-1c9865b5e72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7409c85-38bf-471c-a434-27db3a15c6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff27b45-8892-4be6-bec1-31876f089014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591a5b20-0713-41d4-a13a-1643e085d9ac",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b49f72-664f-400c-a1c9-a514ad61bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c868c9-951f-4262-84b2-562f655e7581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aec62d-19db-43c5-80c5-93dacd7f8bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1dc4ca-caa4-4db9-bf19-dcbad8eb6238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c32aada-5e18-44c4-b193-e59f37fe0086",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19961b65-896c-46c8-9173-51d19bcd017e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa4e1a1-23a2-48c3-8863-b3e7478eecac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1276d10-f1b9-4dca-bc83-1f2e0081e399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d4185f-222e-48ea-bc80-94625cbb0575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba1e3ac-ef40-489d-933e-03de6f3c66e2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704dc497-b0e2-4b4f-a15c-1250bf815324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1294f8-79dc-44bb-8447-985b52c170ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0ab6d5-464f-4326-a277-b6fe724f9071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015f696b-ac20-4f61-a690-4632891ba095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5939d95-705c-46d8-ba50-17541da17eef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e2fa2b-018f-4cdc-8a88-82dccdcb8659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcba7a4a-b8e5-4c96-a648-4a3b96c9b4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a19896f-210b-45f7-828b-1103478fa59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab82c1aa-afc9-467b-89ca-b8947293adcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f64376-c74d-4ae7-8e58-8d1b4dd95ee5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496b39ee-854c-4418-bf56-2138faf79d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52da125-2afe-45dc-b0a5-477f09835a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cd57f8-7c98-48f3-b513-4618624c05d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e6d288-1268-4bce-8cd0-bea3855af9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312a9de0-453e-439f-b843-b88582a81fb5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52f03a1-a3b4-410a-8fd2-cef52be83bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1d6edb-5260-49d5-baff-37387e959831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a146d93-0283-4d2d-b336-466db647f053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c779bc-ef3f-46e1-9b43-57fa9faf2077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46deb8e3-d4bc-4f4d-acb5-a451d0f5aaf7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5c9960-1a8e-45de-b735-ebc2d830fc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff3deda-c23e-4185-b6e5-4f34fb4af42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3ece6-c096-4e3a-a7b5-cde891e1b2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6409712-e9f6-4044-8b04-f39465f97742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994fc083-1172-449e-a8e2-8cc029382431",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07437ba1-bcf6-4bae-a7e2-b0ab1e99d978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6f5d50-1258-437f-bab0-58a86e771b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b5cafe-0b69-4075-985f-5debe2be191a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26fdff9-1d48-43ab-88cb-a8768726f165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8869e62-6002-4f96-bf53-e4f2dbaf86b8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e8d73a-991e-4b25-8a4a-0cb19e962c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a484a6a-c0e6-4783-96d5-b26d4dc92fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb32020e-b67a-4b64-928f-98fa9c53d46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27d53e1-6c43-43cb-a6b7-bfd5d04377fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94983d6-0b23-46b2-9b57-e9290626978b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3f0023-2500-43fd-b32a-a0d9db568f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca3e2b0-dcd0-42ea-871c-fae3670fed5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d624e2aa-707d-498c-a6c2-96c1ad32735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ff5d04-227e-474e-b521-5e2600c29110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4326e2-a3e4-4e52-8885-772a09db1358",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3743562c-ce19-49a5-85ab-2c5d773d461b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66bb83e6-c121-4510-b9e7-0b4fcca36193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881ebc0c-6087-4672-8a1b-d7df3a9d2820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e250171-70d5-4cc2-90c7-b7e699b09f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcf69a1-d8dc-4762-8cd1-551cfe73c51b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e177f46-16a9-4e05-b0f7-bcce7c262b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c7f0d1-5586-45ed-8e34-a62c3c82e52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c685a2b6-fdc9-47cb-89e4-3e0cd71d2bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb49bab7-25d0-4b68-8b13-f5c7c989efaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcd4895-ff88-47a5-a426-f18b3a6b4f43",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbe227a-c29e-41d6-81e5-c46bbd04ceb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166a8fdb-633c-45e5-81d3-6bf5a7a429e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0bc907-ded5-4bbc-891a-4529ec776d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5317ea2-ef3b-49e6-b145-4fdd4f34f128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6add8a-f0e8-45a0-84f3-d399eba679b0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bef88c-4c74-45dc-a8b9-002f32ed18c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0cd0c5-a964-4916-a3d0-bb1677fdf697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46c3831-8ac3-4a82-b9d0-c1b28aded8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9801010b-c17c-4688-8e2a-6b677ea59d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11dca08-d097-4e13-a72e-32cdc81e1841",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd52930-8733-4081-8e61-28595755269f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc4c4b5-98a8-464c-b6d9-557f94116c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d5d042-4e0b-4937-a631-b051ebef6d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443598cf-2c89-4e9b-a04c-476cde6d10e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c11194-7f13-4188-a2cc-b1d6e2700648",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c91e13-8723-4b51-acf1-2d82dde7a36c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90f91c4-c67d-4a0b-995b-1094848ecef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95994b2-c225-4aae-9336-350192bcf22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28b8ba9-523b-4945-b0a1-7ff66af457c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a31c81-3d4b-48c7-849b-8625512e1f57",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1faa83-8fbf-4a42-acc5-0c55912d1215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17490e1a-0c19-49ca-b586-b2fb129ccedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345967c2-7343-4cbe-9d02-35281f6adbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a6c52b-9fcb-46fd-bc53-dbceff741ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc67231-7d2b-4df6-aeda-2cad22eddef2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee69148c-cae8-41d9-85c1-64de248df1ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da55c397-376d-49e8-9082-833a8ae90a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4e65d9-1933-4c0d-876c-29e8a00ab8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bd4812-4314-4f47-aec5-b9b8a588a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3a3fb7-563a-49cd-a0b6-2542b3e02398",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb6687b-6707-4390-a6f1-7acf3aa17dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e234c5a7-9758-480d-ab59-63ce7c716c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9da0e92-4c98-4e32-afb3-01279e59f972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8879faad-0e2b-4bdf-b737-e9005da5cb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb8d0f9-22eb-4c5e-b768-2bdcf4e8f8df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5a6904-55b7-49cd-af22-ea546866fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5b33c8-e14c-4158-8d99-69c8ce61ea78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014a5ad7-90c5-4e0d-9e45-cfe2c10eb30f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf1684f-ba52-451b-b8c3-1ab733563808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd58121-8638-4331-9551-e6e6c44d9ea8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98c008-4b0d-42b4-8749-9267a12678cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c566fc-b828-46f0-b9ef-05892c48810f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d1c877-c513-4340-b18f-3501b821fee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92713b91-8082-42c0-b90a-3c08a0d313b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aabe474-d7c2-4311-baef-4d87cf152164",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4239d6a1-bc1f-461a-8638-c0ffa479215e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23bc0c72-b749-49b7-b8f5-5e8a3adabb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d458f29-7ee9-402e-b7ce-93cbeae66e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccca620e-499f-4f2c-8e20-c702c3f8a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7b2599-52ad-4260-b5ee-8de4a8ac6834",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cd9d9b-f408-4dd5-be41-5c20a2a6132b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614302e8-540b-4a95-bf47-ebfd0aee9176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db962b1a-27fe-4873-b494-28f94c9ef381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9d8f5c-acb4-4119-9feb-486326d7a775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b26296-cc19-4369-a21b-f5d706447e73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfc6c0d-b478-4d37-b2b7-1531acf47663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1f8fd1-b0f0-47be-b204-cda4079d2f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649c6cf0-53f2-4bbb-97a2-0d5bbed409d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de438aff-8a84-4a7e-ac6c-bc4227c699fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa5d166-424c-46c4-abf4-353f41a0307f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2f4f4a-b611-4313-a33f-52c1b680d782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44343e70-04b0-4e79-abcd-f7d9931b865d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda5bde-dade-4129-ac04-a4c4c7d3a3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43411e86-bc19-4aa4-99f4-481f06468a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3d430d-14fb-43f2-b81b-f014b46828e5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d822d79-3682-4c64-a901-e45906940134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6032e435-c87b-4cab-ae7b-5cf9c767f3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da245028-47be-4ecc-be0d-78c13236d62c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0250ea3d-33c1-4895-b376-44863dbbba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebd7717-bb2d-486e-b272-602294d225bb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3778f742-5862-46ec-8049-bf47cd3d9b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c9e498-b743-4e65-aa16-0b6f4d69b4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3345a866-9568-4f4f-8c48-b85ae407fccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d4952d-067f-45f7-9f97-4f7c0f56932c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bd5195c-5d5c-49b7-a8fd-678381e6cfbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35397a8f-6f69-4426-a870-51c3a069a383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec5adbcf-6a39-4ac4-9843-bda3b4a6e7af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c8853b2-534c-4667-9394-2c7cf947c70b"
                    }
                  }
                ]
              },
              {
                "id": "fdfd0d0f-b5df-4ee7-96ad-f52380f518a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1775088-e455-4133-bf2b-6ca449b19943",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2944b008-92bd-4773-b11e-b6f2247bb1dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "441fea34-8d09-45da-a64d-e5425784dd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d679537-d668-4784-b664-46db4e37b2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4132091a-a175-4df3-842d-c6c4ca8aa8b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc51a010-66fd-4f91-a64a-c5d6be20725f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b5371e2-2124-4e86-8c9e-2e3ca8a38480"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8c0394e-5674-43e4-bebe-ce4d000dd508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f34226-2194-4ad6-885b-a17d1824fe7d"
                    }
                  }
                ]
              },
              {
                "id": "005d99bc-811f-4d29-9ff8-bed0eec9f328",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "29f8bf24-ac45-4393-b872-f3ed4aa89705",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c621f8d-7566-40f1-b1ec-b3ab5bda0dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cedaf9b3-62c3-4322-937b-7075f2d0b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15adbaf0-1ce2-47d7-9be8-aa7b3591bc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b757a0e3-ae89-4785-a478-8b594b412378"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dd16bcd6-a0d6-41b2-8b7a-07e73aa9cb69",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e38ab8d-1fbe-41a1-a7fd-1776b0b62a2c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0673e27-b854-42e6-b9a9-ae0d1da9ea49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e5cc1b38-e0b6-4c95-9d20-6bad702a1b80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044e4d85-b525-4b80-aa07-6b0971e0289b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8924c87-732f-40b6-8ff6-df8a52d2fa71"
                    }
                  }
                ]
              },
              {
                "id": "97c69fbd-a04f-4dbd-b9ed-fa836c4ead1c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe70611-d380-473f-a78c-b27516b662e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "09b0d6da-5e77-4e9a-8df3-3326568eba6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dc15b49-6a79-42f6-afa6-d93ac45be706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94c1e62d-ea9d-4867-86ae-c1949e8df64e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bdf8c1d-f735-4a74-9c20-63a047ce737f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "52b45f66-79ab-4de9-a47a-541723848fed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a47f79e-23b6-4c30-a9d1-07a55d51fc63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d9d3c88-257e-48cb-87b4-6d988d7c55d0"
            }
          }
        ]
      },
      {
        "id": "f5e36833-bf43-445f-aecb-fa5743395d2e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60242a7c-a3ed-440c-9a1a-d4ec95bdccd0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0e1e814-2932-4d63-997b-1a7bd783f59b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b1a11c5-068c-4cf5-9729-4e733c1d85e9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4cfa47-4a5b-4386-a6d9-039382b6136e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5bb010f1-946e-4fb9-aa9b-a467cbcecf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be96659-261c-4f03-bb13-b1f1cdc72dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35aceb69-95b9-42ca-9ae9-c58cd06936ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec1d3614-a8e5-470d-91c5-f9e3e77cbbb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "902ed09a-21d0-471a-92ad-385f81aa52fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80a062c2-9d9c-4d85-9afd-432292d78947",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54abb128-a70c-4ca5-b56e-c7fe2ca4c5b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9df78b64-7740-4b3b-8f42-dea460d18698",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "27fa8833-256b-438d-b436-f5286f032d75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f5eb937-f449-4ffe-adf1-0ec968ad6622",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d5e08c5-c895-4eca-b022-c83b55e8ab17"
            }
          }
        ]
      },
      {
        "id": "81611209-636c-4e2f-9720-bd0e1cbdad1c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e939033f-77ac-4a3d-90f3-58bd8f11dd62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "febbc628-8e2c-4bbf-b3e8-0bc0a9d8df59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2175efa5-e715-4e7c-8300-df91b1338381",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d430f8f-8347-45ef-8d84-820f68441253",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "090ef8f5-e4dd-42b8-8838-686b3eb7ab77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c308ac-18e7-4f41-95b9-bba9b3d8cddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f095177e-827f-4f0e-bed8-6510ac6096d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "399ca190-d2e6-4494-96e0-25bb6f62520f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4655eab-b9b7-4a1a-8e7d-5d2cb589597f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33a6d6de-bdd3-43d5-a4d6-3749aac5107e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b384f98-fcc7-462f-b09e-c3b7f052c1ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0deb8b9-4e81-411b-a638-9aa818b908df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7850de3-a5b2-4b43-a4dc-70a92f5ca65e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5890e7b1-4ea9-4516-8211-51f354071c55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c718d37-baa5-4bb5-8bb8-c137dee6b866"
            }
          }
        ]
      },
      {
        "id": "04d520ab-3695-41c1-9817-39142611a5fa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6d5e9f7f-bf61-4a2a-a3bb-1eacb6c0ed51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "146ac5fc-ffa8-41ad-a6aa-7684d5f1bc17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "388f7d54-d919-4e90-a786-f0fad026bfc7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad63acb-9f13-4a71-bbfd-4a5250043bdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9e6e4c5-f9e2-48c9-8553-7f47d2e808b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e863c03-83dc-4b10-91b7-2b1397a89c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "832e1f2f-03ca-44d6-9352-5197aa7ea9a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4737fde5-07fe-4326-86cb-fa51902b93f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8a5ef40-1391-4132-bb85-0826d74b936e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acc611cc-5d27-47d2-ab30-6138c8bf24d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a147db0a-fc47-4af0-9986-f10cfce64a09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5be80f64-61df-4c51-8c4b-6a8e0bf8799f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89a15e09-00cd-46a6-a633-2ea206c9338a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b15f2fc-d4f1-4917-9e95-cb0a66529f87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b744e5ae-9295-42be-b898-db57f4a1c137"
            }
          }
        ]
      },
      {
        "id": "097eb6c9-4866-444a-94d4-8c1900ad6e64",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10b32f40-3f93-48aa-b491-b3b761e418d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c41c8482-55ed-423c-932e-8f3f1746d08c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ff20ea2c-8510-4375-85fc-8d67c81e384d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b46f29f-02ce-4023-b93f-c25cfdffcef4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "852c32cf-e197-4806-a72e-9d7575896fc4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 83.09824561403504,
      "responseMin": 4,
      "responseMax": 7568,
      "responseSd": 510.56924972901805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711413259964,
      "completed": 1711413292830
    },
    "executions": [
      {
        "id": "d882f11c-1727-447e-9d24-29f988f8c0ce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "94a33670-e850-4e61-8e6a-26d3a0c645f2",
          "httpRequestId": "e8373c4e-ed61-4cb5-a8f3-85adaa59bc2a"
        },
        "item": {
          "id": "d882f11c-1727-447e-9d24-29f988f8c0ce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a3f2a4ab-9550-4e31-945b-db5852e788fa",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "06563dca-530b-423b-a8e5-1e26cc8d9183",
        "cursor": {
          "ref": "1d9c6798-81c3-4e22-99aa-952818b1702b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "18004f36-ebf0-4a62-8c82-4397edf374aa"
        },
        "item": {
          "id": "06563dca-530b-423b-a8e5-1e26cc8d9183",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "85145f96-7de2-4412-9a2e-920864727299",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2eb0eb6c-1ff9-40b7-b7a0-3d4b58ffb1fb",
        "cursor": {
          "ref": "0105eaae-a45b-4cd2-b3c0-771389fb73a1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "28a75a49-756d-4a37-a4e0-f1f632993ecc"
        },
        "item": {
          "id": "2eb0eb6c-1ff9-40b7-b7a0-3d4b58ffb1fb",
          "name": "did_json"
        },
        "response": {
          "id": "5e8e0761-b070-4233-9a68-8723f32520fb",
          "status": "OK",
          "code": 200,
          "responseTime": 267,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bd8285-6076-4f35-b373-12bda2678336",
        "cursor": {
          "ref": "cea25e40-f74a-4b63-be22-0d3f57d03099",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "90012c8a-b2b4-40a8-b3eb-d261bec81237"
        },
        "item": {
          "id": "f4bd8285-6076-4f35-b373-12bda2678336",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d28c51e-2268-4784-a16b-e67eb5266fd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 492,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bd8285-6076-4f35-b373-12bda2678336",
        "cursor": {
          "ref": "cea25e40-f74a-4b63-be22-0d3f57d03099",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "90012c8a-b2b4-40a8-b3eb-d261bec81237"
        },
        "item": {
          "id": "f4bd8285-6076-4f35-b373-12bda2678336",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d28c51e-2268-4784-a16b-e67eb5266fd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 492,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c04bdad-4ddd-4a7b-adb3-c193131326ba",
        "cursor": {
          "ref": "c82f76df-da27-4f8d-94fd-071c4aad0c5c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "83482f66-06e7-46e7-961b-d4bbb7633979"
        },
        "item": {
          "id": "6c04bdad-4ddd-4a7b-adb3-c193131326ba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c4d03811-118c-4aca-a1c9-0635be5986b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 19,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af704ec7-d9d1-47be-a73d-76fab816ce49",
        "cursor": {
          "ref": "4f4ecc20-1184-49f4-a722-09a87a5bcca9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "84f9bbc9-2acf-4b4f-8f17-176ea4918ca0"
        },
        "item": {
          "id": "af704ec7-d9d1-47be-a73d-76fab816ce49",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "79acaf5e-689b-432d-bf15-a4d7d5618f06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e9592a-9ac8-4105-90b6-27b1c65f7fd3",
        "cursor": {
          "ref": "fd088109-80d1-4478-bf55-e371782227e6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7eb15294-29d6-4f2b-b9a4-c23ca97617fc"
        },
        "item": {
          "id": "17e9592a-9ac8-4105-90b6-27b1c65f7fd3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8845fc92-00ca-463d-b7d9-cfb1409b41c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797850b6-90ca-468e-8ba0-a314a6619c01",
        "cursor": {
          "ref": "769e418a-a2c5-4bda-b9c5-5e84b60856e1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b635482b-9681-451a-a9af-09136070840f"
        },
        "item": {
          "id": "797850b6-90ca-468e-8ba0-a314a6619c01",
          "name": "identifiers"
        },
        "response": {
          "id": "017232bf-71d4-4495-a17e-824f32bfb479",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77e52d-96e6-407b-9a90-e586fdbf0c0a",
        "cursor": {
          "ref": "33a836fa-f1f8-4a19-a305-998694148f78",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "85b925bc-f0f8-4d16-8705-4b9b4a9b2cb9"
        },
        "item": {
          "id": "ae77e52d-96e6-407b-9a90-e586fdbf0c0a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4cad282e-1f7c-4250-a9ee-5d6d2b375c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f781a1-f0d2-4bd4-a911-df89ce0b8d7d",
        "cursor": {
          "ref": "ff2c6f7c-1814-45b9-8fbf-cbab02d86f9b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c58a76c0-02e9-405f-9857-6cc79ab05aaf"
        },
        "item": {
          "id": "01f781a1-f0d2-4bd4-a911-df89ce0b8d7d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "38ae6426-e35b-41d5-a165-e93235770848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3712672f-9496-4d7e-863e-e17248128acb",
        "cursor": {
          "ref": "2b12ed68-c7c3-4ee3-9f76-8bb41be1cf19",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e169a9ab-0e91-49d1-8985-21e71473d85e"
        },
        "item": {
          "id": "3712672f-9496-4d7e-863e-e17248128acb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1020bf0e-5db5-491b-8cd1-3090fcd8c262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d283dd-fe7d-454c-8db3-a99bf28163c2",
        "cursor": {
          "ref": "139a0c65-664a-435e-81fc-f38c271db13f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "93213668-0c7f-418b-a71e-ba8421ef7a9d"
        },
        "item": {
          "id": "c1d283dd-fe7d-454c-8db3-a99bf28163c2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "195382b7-da97-4c50-bf59-057c41d3c133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba51039-1c80-4d64-bff8-373fb0e56c7a",
        "cursor": {
          "ref": "484e6109-2fa7-4183-b2ea-de913d127453",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "effd12cb-5bb0-4762-a70b-dcef5360911b"
        },
        "item": {
          "id": "eba51039-1c80-4d64-bff8-373fb0e56c7a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "72ed2d84-fa40-46d9-aa7a-fb89743ce754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29cc592-5423-48d1-bc51-9c0ae367749b",
        "cursor": {
          "ref": "4f85a13e-ceda-46c7-8ad2-8331516f8bc3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7affe14f-4658-4d4e-8e40-9503473fbdb3"
        },
        "item": {
          "id": "b29cc592-5423-48d1-bc51-9c0ae367749b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee786fe8-5e87-4043-a6ad-d7d559856cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a8a32f-88b2-4018-8bd6-da5297c21d78",
        "cursor": {
          "ref": "af179584-019f-4fca-bdd4-c66928641e15",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a79a8153-1f5d-474c-8d63-96e6ef6e3b51"
        },
        "item": {
          "id": "36a8a32f-88b2-4018-8bd6-da5297c21d78",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a50fe1ca-d194-4821-9852-18a92d6fd02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd7fdd-c40e-4127-9c30-f8061c5bd998",
        "cursor": {
          "ref": "0d251432-2ed6-44be-b178-504ef4ed63ba",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c7eabc5e-9eb1-4759-85d3-a1a5d6cc88d9"
        },
        "item": {
          "id": "45fd7fdd-c40e-4127-9c30-f8061c5bd998",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4f43541d-8e95-4c6c-ba41-2fe18e4e78b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd777ae4-39a2-400d-adf6-d38c2d7376ff",
        "cursor": {
          "ref": "af96b2cd-7256-4ef6-b08b-e129a0183346",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e42231b-3147-4e4f-a751-144bc540ed34"
        },
        "item": {
          "id": "dd777ae4-39a2-400d-adf6-d38c2d7376ff",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6c92936d-afb3-42d6-8bfe-aba3b56eb4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0827d2-0ec2-4e6f-9932-bf60a8fb3ae6",
        "cursor": {
          "ref": "3150694d-ed00-4b07-a1bd-309acb8016e3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dd8ec6bb-15e3-49ad-a048-885ee8e3c748"
        },
        "item": {
          "id": "2d0827d2-0ec2-4e6f-9932-bf60a8fb3ae6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4a188c26-01d1-4ded-b618-9fe30c387387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df079113-3322-4288-a6de-6ef2914d10f8",
        "cursor": {
          "ref": "88ebb13e-4c85-4284-be5d-3ea89e52597e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "763e600a-1613-400a-a9ec-fa498054892e"
        },
        "item": {
          "id": "df079113-3322-4288-a6de-6ef2914d10f8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bce12ef9-6070-4484-a8c5-8854a097470e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80eea31-12a7-4551-a6ad-0e11223f3dcd",
        "cursor": {
          "ref": "a6479920-7f40-48e2-afc6-74c343866a82",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "17955e06-9698-4002-9203-380cce784345"
        },
        "item": {
          "id": "e80eea31-12a7-4551-a6ad-0e11223f3dcd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c327fba9-ee5d-41de-a021-715e9caba73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887b6281-693f-4268-aff4-263077916487",
        "cursor": {
          "ref": "167ac4f9-4223-4ae5-b8ad-ce9a105bea35",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c82eeb6a-7ee6-4eb8-9060-335b2ebd43dc"
        },
        "item": {
          "id": "887b6281-693f-4268-aff4-263077916487",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3d0d6f26-0d06-46a3-9456-80141dfec746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8bdb98-8ca7-4aab-bb33-4a4ff46717f4",
        "cursor": {
          "ref": "54dd8e83-488f-444d-a906-f5f64d24ea64",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "592b2049-fd3b-49db-83dc-abb76cea587a"
        },
        "item": {
          "id": "ea8bdb98-8ca7-4aab-bb33-4a4ff46717f4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "04e27ab8-9e6c-43a5-a503-b2452cb9dcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd60d16-e2ff-4cb3-a92d-2ed2d58caf30",
        "cursor": {
          "ref": "702af51e-4315-4d7f-8c25-81a1edfdbfd1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c1ef0b8b-0f39-40fc-800e-33c474371d13"
        },
        "item": {
          "id": "3bd60d16-e2ff-4cb3-a92d-2ed2d58caf30",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "23291b03-32e8-452a-85a5-4b7323229165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6ae414-d25e-4450-a9f8-fb1aa8ec1cba",
        "cursor": {
          "ref": "252f1954-e007-4e5c-8cab-8c00a74057ff",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "56f645bd-3edf-496a-8d43-13319f70a3d1"
        },
        "item": {
          "id": "ea6ae414-d25e-4450-a9f8-fb1aa8ec1cba",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "28940bc1-9f34-46bc-9ed2-b97bf23eb6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a470f849-702a-4934-9336-3f6c6d9c4c47",
        "cursor": {
          "ref": "8189f2e2-6a63-4cdd-8f17-a0ae95518910",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f8b6bdf6-5273-4b3d-8478-c300c54bacd5"
        },
        "item": {
          "id": "a470f849-702a-4934-9336-3f6c6d9c4c47",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "227c4d63-dba6-4ee9-ad55-0c001fe75b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da78930-11aa-407f-b027-42c53f63a5fe",
        "cursor": {
          "ref": "559bfa5b-6200-4d63-96d9-bd8c214e3590",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d25bce98-cc8c-4737-a57e-f5bf34969833"
        },
        "item": {
          "id": "9da78930-11aa-407f-b027-42c53f63a5fe",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "99cf1d40-c374-4e95-a5e2-c01d25445afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8867cef-f240-40b8-bbea-2c640846712f",
        "cursor": {
          "ref": "9900edef-af30-4934-ac9d-4c008d13d720",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fdfcc49a-fe0a-4067-972c-f928fe0bf5c7"
        },
        "item": {
          "id": "a8867cef-f240-40b8-bbea-2c640846712f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8a70d06-65b6-43b7-a07e-b589c42e0201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcf19ab-73e2-46bb-860e-645bbb79be23",
        "cursor": {
          "ref": "ecfb7110-a7ce-44ed-a700-66fb1a1877b1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7261d3aa-c286-421c-acf9-cc3915e41b1c"
        },
        "item": {
          "id": "4dcf19ab-73e2-46bb-860e-645bbb79be23",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6285ce70-2860-4a14-8315-fab4818d3a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5348d5-479a-471b-b18d-1c308320dc6b",
        "cursor": {
          "ref": "420050a9-dbe9-4a65-bb23-4e9fc1054638",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6731056c-52cc-438c-be1a-ced012a477bc"
        },
        "item": {
          "id": "be5348d5-479a-471b-b18d-1c308320dc6b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0fa15baf-30ab-46f1-a1e5-3d82ea0d1765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421e773b-3572-4461-9a83-abf23767de22",
        "cursor": {
          "ref": "9956e5bf-5568-4888-928e-477b3aa64371",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "41194e69-ac6b-4005-a07c-34fe2b7bc5f3"
        },
        "item": {
          "id": "421e773b-3572-4461-9a83-abf23767de22",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8905f53b-8227-44da-8287-3dd5bb04eb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b00209f-1309-42c0-8c0f-1ff914ba4a2d",
        "cursor": {
          "ref": "053dc091-9005-4524-8ed4-671b4d8446e3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c9fdbd64-5d7d-49ce-abb4-37e72c78d3bd"
        },
        "item": {
          "id": "0b00209f-1309-42c0-8c0f-1ff914ba4a2d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "84ad27c1-73e5-43da-90e7-c670d3035872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe128468-c396-45e9-b1ad-3c495f1621a4",
        "cursor": {
          "ref": "05efec94-8e57-4629-8861-035416d5cd88",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cadaaee4-b94d-4d46-b07d-81201f2364e9"
        },
        "item": {
          "id": "fe128468-c396-45e9-b1ad-3c495f1621a4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bd6a7426-4a35-4fbc-9439-12e4b702b164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aefe780-ca3c-491e-b4c8-1c723c938078",
        "cursor": {
          "ref": "a2b8d1c7-f156-4957-9d06-9b75271a9036",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3d4bcdc9-00cb-44dc-8eaa-3e2a23e93102"
        },
        "item": {
          "id": "9aefe780-ca3c-491e-b4c8-1c723c938078",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bf2f5598-1d8b-4f69-9947-2f1ccc960956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a01c365-8694-4e48-a6ca-82ebff529fe9",
        "cursor": {
          "ref": "f6ccfbcf-40d7-4b32-a025-d026ca7cee19",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "05719b69-8a11-401e-824f-788c6943d678"
        },
        "item": {
          "id": "5a01c365-8694-4e48-a6ca-82ebff529fe9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f080f26d-9870-4c4a-a45f-26ce4899f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05543f7-9888-4aed-a1ae-80f3ef18e123",
        "cursor": {
          "ref": "210ce5a6-7cb1-43fe-b3e5-6775622805ee",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fb75f9ea-9b50-40a4-9b30-08656637359d"
        },
        "item": {
          "id": "f05543f7-9888-4aed-a1ae-80f3ef18e123",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "314b3512-f238-42b3-8530-29f3e8610df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b480c00-e049-401c-8149-4a8f83dc214e",
        "cursor": {
          "ref": "65c6b899-9ca1-4bc7-a492-58e3221dd243",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "df678f9f-8157-473d-9e3d-c087c6883efe"
        },
        "item": {
          "id": "6b480c00-e049-401c-8149-4a8f83dc214e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5901ca4d-c096-4988-996f-5d286e0a8d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a68fa49-3db2-4576-923d-469cd6739286",
        "cursor": {
          "ref": "dea2c1fd-2d8b-4ce5-a9b9-8488cad5072d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "167d1390-bf75-4832-a184-56cd6343d281"
        },
        "item": {
          "id": "8a68fa49-3db2-4576-923d-469cd6739286",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ac9ff7e1-ac70-4d36-af9b-acf5b22aff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998bd4be-1671-4cec-bbba-9ef8ae235ed9",
        "cursor": {
          "ref": "7cfc7256-12d1-4270-8a67-fe68825f078d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cab35089-bbd8-4a85-add4-1ebbf1e6dde0"
        },
        "item": {
          "id": "998bd4be-1671-4cec-bbba-9ef8ae235ed9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "af9b6bff-34a5-44b4-b302-c07fc58af221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e79eab-79d8-4183-860b-1db40649741d",
        "cursor": {
          "ref": "0cb6c2fb-c47c-4324-bdc1-5ea30e727ef3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8b629c0d-542b-4b3c-b35c-5cf4bc35031d"
        },
        "item": {
          "id": "45e79eab-79d8-4183-860b-1db40649741d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2da99506-907b-40e5-a30a-dafab93aa36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6705e097-8ab3-4b3d-a354-4c0b85688e89",
        "cursor": {
          "ref": "aef76b55-32c5-4ecd-aead-9807b6416118",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a160fdb4-c176-4a36-9fe9-73bd40fad6c1"
        },
        "item": {
          "id": "6705e097-8ab3-4b3d-a354-4c0b85688e89",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "60ff48ce-337c-4df1-afba-c45d45d540cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef8ef28-c760-454e-82ed-f26934bdd7c3",
        "cursor": {
          "ref": "e5119875-3b07-4c7e-8e64-65816068eff4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5bb463ad-76f9-46be-b004-ba5ce9b06e3d"
        },
        "item": {
          "id": "5ef8ef28-c760-454e-82ed-f26934bdd7c3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "37dd2458-f7e2-4ce0-804d-3c9163940b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66564c39-9e8c-47c0-b64c-27ae5267d4dd",
        "cursor": {
          "ref": "e709f185-d53b-426e-9c91-f5092fa5f51a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "53778708-0f6d-45ed-9660-34696b59428f"
        },
        "item": {
          "id": "66564c39-9e8c-47c0-b64c-27ae5267d4dd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "150f4c1b-5f1a-4722-839f-1ae204958278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85d0f22-dbd3-43db-be10-b4530411c709",
        "cursor": {
          "ref": "d539f5c3-0107-4f7d-97bc-5884a1b2ab5d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "085de918-cabf-4586-9fca-9d8fb18d1570"
        },
        "item": {
          "id": "b85d0f22-dbd3-43db-be10-b4530411c709",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "db14f5cb-9ae0-4e48-877d-a51a74a923ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f048e01-6b8e-4d37-b7a6-d5bb2be92f28",
        "cursor": {
          "ref": "a1dabd98-8738-487a-ad19-96dd12242eff",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4a7068d4-d834-4dce-84aa-aa60aa75caaa"
        },
        "item": {
          "id": "8f048e01-6b8e-4d37-b7a6-d5bb2be92f28",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "066bea26-2f07-404a-86b5-41ab96a7aa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abfdbc6-2edb-4f1c-9f88-9e2667aa8fc2",
        "cursor": {
          "ref": "3f8713fc-773a-4d12-8525-f11979b9b00d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bc739b17-63cd-4eff-8668-369593eeab0d"
        },
        "item": {
          "id": "1abfdbc6-2edb-4f1c-9f88-9e2667aa8fc2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a0fdd433-ab59-4045-baf5-5b68f9083665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7febd4-f9ac-436f-bf40-b4b1e404e2fe",
        "cursor": {
          "ref": "8781d76f-94ba-476d-b7bc-565b134cf1e4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cd67345e-3cac-4acc-b488-67524748e3a8"
        },
        "item": {
          "id": "1f7febd4-f9ac-436f-bf40-b4b1e404e2fe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0bc95d49-7194-468c-97ad-21c9a21b6cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0f1ce8-deb3-40bf-b8cc-8ddeaae39c25",
        "cursor": {
          "ref": "0f200272-c374-414e-9f96-7ed7f4d3bd8e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "55693448-b70e-4437-8441-a26b214cb6f8"
        },
        "item": {
          "id": "ed0f1ce8-deb3-40bf-b8cc-8ddeaae39c25",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8abc12b-05d0-497f-97fc-fede18db91bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb69073-fbef-4738-9ab4-afb64df47b4c",
        "cursor": {
          "ref": "9a91bb9a-b126-4200-943e-170d78e78c43",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5f21fad0-1d76-4059-b1d3-0e8bf9c33221"
        },
        "item": {
          "id": "fbb69073-fbef-4738-9ab4-afb64df47b4c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7ce76eb0-de41-48cb-abe4-ba9f0081a0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd026a-8664-42d9-9424-4442ac53b045",
        "cursor": {
          "ref": "5f1a1ebc-1a24-4bf8-b662-4d474cff229c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "774f66a4-e997-4069-95be-6b98c39cba57"
        },
        "item": {
          "id": "9cfd026a-8664-42d9-9424-4442ac53b045",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e50d7ac2-f3c2-4695-a546-194f5442da12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b9e248-4d0a-45c5-9fa4-8fb2c8cf7b22",
        "cursor": {
          "ref": "a691052e-7165-4291-8f79-23a444259f63",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "515ba63f-4628-4bb5-9588-6129e178e0ed"
        },
        "item": {
          "id": "c3b9e248-4d0a-45c5-9fa4-8fb2c8cf7b22",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a554f297-241b-4b12-adfb-d2d33ce5cd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aa899d-0ae4-4342-8b19-b570943e397d",
        "cursor": {
          "ref": "b78407b6-fa22-4e0d-8759-feb9230033d1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0a3cb84c-2c78-405c-b1dd-de388e32f409"
        },
        "item": {
          "id": "06aa899d-0ae4-4342-8b19-b570943e397d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9b345738-1975-44df-9507-e430212dd4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e49b51e-e910-4aa6-a451-67af7ecc66db",
        "cursor": {
          "ref": "c7d58d3d-b763-49d1-8fd4-ea48bd804094",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "49c7118b-4a33-4898-a6bb-99d701e013ef"
        },
        "item": {
          "id": "5e49b51e-e910-4aa6-a451-67af7ecc66db",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5ea1f1f6-1236-4032-aca0-fa56dd3aa125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1223fd-01ca-4a41-a1f2-df2a0694d73b",
        "cursor": {
          "ref": "fef6b752-d573-4875-8f7a-0fd60a514fc7",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6ddf47cb-d283-4bb4-ba8b-8c11e84dafe5"
        },
        "item": {
          "id": "cf1223fd-01ca-4a41-a1f2-df2a0694d73b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9503b0dd-d1f9-4ce2-a892-d2560f3ea2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaee7e68-e410-40ab-96e3-bedd562cdce6",
        "cursor": {
          "ref": "8a6fe93a-79b4-4f79-bc4e-9723f143fe87",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "27249bee-0440-40b8-b10d-87384830353a"
        },
        "item": {
          "id": "eaee7e68-e410-40ab-96e3-bedd562cdce6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13c27f81-32c4-46ed-8796-3bb6591c8797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f17663-ad23-47b7-8a50-b9cab4c3a7d5",
        "cursor": {
          "ref": "0e22e780-73d3-4766-a149-ab70d19c832a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a4728a6-4f0b-4883-a261-eaf346efee8f"
        },
        "item": {
          "id": "54f17663-ad23-47b7-8a50-b9cab4c3a7d5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6dda21ca-2991-4a01-a6ee-7ca20456a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b29843-fc41-4b6f-9d35-2bc9c7849fca",
        "cursor": {
          "ref": "9dba03d9-6669-4c19-9e77-2521284f7f6c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a3d46b69-4e9c-49d8-b590-bd69380a487d"
        },
        "item": {
          "id": "a5b29843-fc41-4b6f-9d35-2bc9c7849fca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "01fad286-98e1-4404-bd48-9f7ce930a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fda250d-5465-4d7d-abc2-2d5e2ecaefb3",
        "cursor": {
          "ref": "9c209e23-e239-47c4-bf0d-c81b79ddc1e2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e0598b3f-99dd-4378-9fd6-b18fcb82a5c8"
        },
        "item": {
          "id": "6fda250d-5465-4d7d-abc2-2d5e2ecaefb3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "599d8e8f-9e68-4a70-a481-82c91af2e312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6f1486-f95c-49c6-a180-62514c972e9c",
        "cursor": {
          "ref": "34a0d210-aeb8-4fc9-897f-8a1190122599",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "08d98cd9-3853-433f-b39f-9ac98948fd39"
        },
        "item": {
          "id": "bf6f1486-f95c-49c6-a180-62514c972e9c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "70dd28e6-51c8-4346-b245-8e4acd014229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6cd4b8-3234-4dfe-bfc2-8b30fd70b9cb",
        "cursor": {
          "ref": "d23bf19c-1643-4edd-8094-2c5eb747ac96",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ae4ae157-ffb6-4945-8bc2-2b595921bb9b"
        },
        "item": {
          "id": "df6cd4b8-3234-4dfe-bfc2-8b30fd70b9cb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7d2ad4a-74d0-4f9a-87d7-78e97cb02f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0026f8-5e1a-4848-b746-fde2f8227c20",
        "cursor": {
          "ref": "3e7f1d4a-c3c5-425d-93c1-7224bcacd0ae",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a322375f-d0fb-4214-b84e-21a6b13eab3c"
        },
        "item": {
          "id": "2e0026f8-5e1a-4848-b746-fde2f8227c20",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b2fbb9aa-5778-4d08-99b2-9503879a8c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82276102-d025-4112-8090-1e0bb3422ea9",
        "cursor": {
          "ref": "8a777ac7-f912-4c2b-a803-dbbed3fed25f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ba5c4da0-4bb7-4409-867f-8d467b99654d"
        },
        "item": {
          "id": "82276102-d025-4112-8090-1e0bb3422ea9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "17ae48ec-a46d-44d8-9af8-96f40678fd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71108d0c-4037-424b-a4d0-ce7c5cffd34a",
        "cursor": {
          "ref": "1aeeb621-f959-4615-a673-9b9067c6517f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "de3dcb16-396a-49b9-9aac-88ba95c565ed"
        },
        "item": {
          "id": "71108d0c-4037-424b-a4d0-ce7c5cffd34a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "777a3a3b-5baa-4f6f-b121-973e61346ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be380670-dad0-4666-ac56-306ceb0d2448",
        "cursor": {
          "ref": "ccf42ff5-8abe-4222-a92d-c43cd9e4ccfa",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "705c6d9c-17f6-4a71-ae65-eb719906ab09"
        },
        "item": {
          "id": "be380670-dad0-4666-ac56-306ceb0d2448",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e5e9aa4-2137-4589-ba9a-156ca5c7a841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6890429d-4c2e-4295-9e5a-be1b785125bc",
        "cursor": {
          "ref": "7917de7f-7652-4baf-9a05-415b119418fa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6fb0cbd9-1567-4ccc-a25a-4bf0e993ab25"
        },
        "item": {
          "id": "6890429d-4c2e-4295-9e5a-be1b785125bc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4aa7e350-4dc1-4dd5-ac8e-01bd00365e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089a560e-2954-4f1e-8ab7-fc4f07a563e7",
        "cursor": {
          "ref": "d085a66c-ad82-4eaf-b888-eb7455df05d2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e4becc6b-2a64-441c-b96f-ab154ae046cf"
        },
        "item": {
          "id": "089a560e-2954-4f1e-8ab7-fc4f07a563e7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f276bfc1-db01-460f-be7e-0007320c2754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd38b71-9f47-4b32-8084-2a842ca780be",
        "cursor": {
          "ref": "6aa38eb1-41ab-44dd-bfe6-923cd7e23113",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "401e62bb-4b62-4fa5-9222-0c32e0291eda"
        },
        "item": {
          "id": "4dd38b71-9f47-4b32-8084-2a842ca780be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "80bdd89c-0ba5-436a-a25d-fa0669effd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b144f83-ec30-4ad4-b4c3-547698187301",
        "cursor": {
          "ref": "15598f3e-11ce-4fe0-95cd-bfc8c782fc81",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "82524d4a-7e01-4510-b2fb-3561385fe144"
        },
        "item": {
          "id": "5b144f83-ec30-4ad4-b4c3-547698187301",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b343484b-e053-4c84-b815-f460007888e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aba76e-8a2a-428e-a149-6fd735977b00",
        "cursor": {
          "ref": "ee9c0008-23fa-4478-8601-b806db6d0fa8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca835806-b81f-4036-974e-44267c60723d"
        },
        "item": {
          "id": "49aba76e-8a2a-428e-a149-6fd735977b00",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "91613d87-2152-411b-b117-d07c1ca13e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06369e11-1e90-4a60-b1bb-545968d3e3c6",
        "cursor": {
          "ref": "6196a109-abe7-43b9-bedb-1a1cd0efe9cd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cac34f38-93fd-4ff3-90ad-cf267948adf6"
        },
        "item": {
          "id": "06369e11-1e90-4a60-b1bb-545968d3e3c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f410f0e5-b6ba-48e2-90a4-e9aaaeed7f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755d3720-8d89-491e-a120-9be639450336",
        "cursor": {
          "ref": "0fb060ce-0d99-401f-8511-38ef288d9b6c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "711c0606-d3d8-4eaa-bec1-217eaf985f87"
        },
        "item": {
          "id": "755d3720-8d89-491e-a120-9be639450336",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b692e658-2d48-4d4b-8b85-c3e1afe8a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13571859-7ac3-409e-8fcb-494d96c8c1b3",
        "cursor": {
          "ref": "3a478847-8e9e-4a34-94f2-3e24a18ed992",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d594a0c-2f15-4eed-8121-78d749256a8f"
        },
        "item": {
          "id": "13571859-7ac3-409e-8fcb-494d96c8c1b3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1b548b17-01bc-4602-8427-a8b22d95b257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14753a30-4f51-4a07-a104-af67834e12c2",
        "cursor": {
          "ref": "4d9c5836-9af9-4b7e-ad70-a15b026820a7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "71df685d-f129-43d0-8175-34f9c131bed3"
        },
        "item": {
          "id": "14753a30-4f51-4a07-a104-af67834e12c2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "232e7a53-4dc8-4b16-bec7-df27ef66807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beed9e1-8270-4039-83dc-e40e52f57030",
        "cursor": {
          "ref": "b6ff49ac-4deb-41d9-97c2-1adc36949049",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3df17e74-a726-43c5-b7e0-dfb1f391ba12"
        },
        "item": {
          "id": "2beed9e1-8270-4039-83dc-e40e52f57030",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a9221d34-40f9-476f-904c-69625eea118e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac9bda0-c3cb-4220-9b26-f44a91b2f71b",
        "cursor": {
          "ref": "e5cbdcbe-d5d2-440f-91c4-edb8d4e518ec",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "277e9961-d97c-47ef-a433-68d9d12d734a"
        },
        "item": {
          "id": "6ac9bda0-c3cb-4220-9b26-f44a91b2f71b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4b8f5b10-e323-4cb4-8691-68ab1b7666a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d32274-0e8d-4658-8ce0-5cc172ff8fde",
        "cursor": {
          "ref": "d3c473d8-d8f1-43e9-adb3-6a438f8fdd9b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bba640dd-6cbb-4301-86c2-9e1b01606e6a"
        },
        "item": {
          "id": "82d32274-0e8d-4658-8ce0-5cc172ff8fde",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a3b5852d-2d90-458d-b2f7-cd2b361aff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ca83d8-a83a-4ee3-be5a-b2ab31ca8202",
        "cursor": {
          "ref": "006b3e91-764e-4cd4-955f-e974914e00c0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d7dd08fb-f5c8-4fd1-adb3-91e0a4aa8c7a"
        },
        "item": {
          "id": "16ca83d8-a83a-4ee3-be5a-b2ab31ca8202",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b3e42a1-7f61-43f7-b4ce-3a7a14e2f123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cc2896-c57d-4317-a17e-a03d7c99b0a7",
        "cursor": {
          "ref": "f900b34d-ea06-4c9e-b0da-752448ed270f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "92165491-3ac0-49e6-a79b-d4a7bc327662"
        },
        "item": {
          "id": "33cc2896-c57d-4317-a17e-a03d7c99b0a7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c6e6fae7-e031-4238-9d5b-403451c2b235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a64bde-e8c9-4e04-92b6-7eed40c40e8b",
        "cursor": {
          "ref": "561d4e46-4a96-482f-9008-a6f419ec0289",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8d972128-0981-4204-a925-c197f5664d70"
        },
        "item": {
          "id": "82a64bde-e8c9-4e04-92b6-7eed40c40e8b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6348fbfa-4687-47c3-a8ee-d1de49795a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558e2cde-21e5-4bce-804d-f17631809518",
        "cursor": {
          "ref": "7208b30b-1313-4873-b397-747a7747e052",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "97b85281-2a24-41eb-beb7-211c58addc93"
        },
        "item": {
          "id": "558e2cde-21e5-4bce-804d-f17631809518",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "995a0d70-84fe-4c22-8fce-fdab8e5b80a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206cac1c-fd9b-4909-a723-72bb833cf5ee",
        "cursor": {
          "ref": "353e0e2c-08ba-45ce-a426-c7f3b968cf5d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72dbb4a3-caed-4ba6-946f-0230e0d28707"
        },
        "item": {
          "id": "206cac1c-fd9b-4909-a723-72bb833cf5ee",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "64f2eec7-29a4-4aea-ba7f-6dc2c44fdb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2582c010-7026-4793-9071-9c41e241f425",
        "cursor": {
          "ref": "6879527a-48d6-4241-b4e1-2a7d47cac62b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "00c33ce1-c908-4bf4-8403-294d67967dd4"
        },
        "item": {
          "id": "2582c010-7026-4793-9071-9c41e241f425",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "20076a7a-293b-42e2-bbce-fd95efc240aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dd2fea-e7b9-43a4-b5db-b9463c0e2300",
        "cursor": {
          "ref": "c27ae94c-f14f-4a5c-8fa5-e4457b9fab5c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "44dc2c08-0c29-4a09-8014-46b93566f583"
        },
        "item": {
          "id": "30dd2fea-e7b9-43a4-b5db-b9463c0e2300",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b1fb2065-d3ad-42e0-a69f-50676b3b02de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b987d3-5b1a-48f5-b0d3-baa9f41cbd1e",
        "cursor": {
          "ref": "c1229027-6fb6-4475-afb9-d6b47ff44d92",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a78215ba-62cf-4cb7-9c7a-9ddaf416450e"
        },
        "item": {
          "id": "00b987d3-5b1a-48f5-b0d3-baa9f41cbd1e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6ccef802-63ff-4daf-ab8f-c977ebae15e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27269bc1-1d51-401b-8a89-4fd18ad7a887",
        "cursor": {
          "ref": "7b0ee457-20c6-4a84-9a45-9d55c6c2fdd3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "78bc23fc-11af-4f86-8812-a94f72b141f6"
        },
        "item": {
          "id": "27269bc1-1d51-401b-8a89-4fd18ad7a887",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3bab6a2c-056b-40e8-9513-b77977aaf238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1ac8ce-7f09-4c06-be48-5d10fd8ce9df",
        "cursor": {
          "ref": "472b5b68-1672-47b9-a18b-6151d812834d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "38c26540-8b08-4ed1-bd9b-63981b66a5e4"
        },
        "item": {
          "id": "1a1ac8ce-7f09-4c06-be48-5d10fd8ce9df",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3e6473a6-0494-465d-a12a-3224d851af86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a8fd28-cbc6-4a08-a600-65779e46f79d",
        "cursor": {
          "ref": "9c38a2a9-cf87-467c-bffd-d6bbe82eb01c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "82c3c42e-c313-432c-909f-035520c6f490"
        },
        "item": {
          "id": "65a8fd28-cbc6-4a08-a600-65779e46f79d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf2b0b6b-ae02-48d4-8740-4d8366d7dde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5b0d4e-335c-4589-82ed-982aa45d356f",
        "cursor": {
          "ref": "b359ca19-e054-4db6-8207-dd5dac26d4fd",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "99ba836d-0004-4fa9-bd77-10ad523ecf9e"
        },
        "item": {
          "id": "fb5b0d4e-335c-4589-82ed-982aa45d356f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1ee6caae-839d-414b-a35f-cb9eb3181467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55562934-7be9-46f2-b6a1-fdecd4b274d1",
        "cursor": {
          "ref": "d461ca0e-416b-467d-9998-fcadd641e976",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "14060b86-addc-4052-ac13-9661e8e7fd42"
        },
        "item": {
          "id": "55562934-7be9-46f2-b6a1-fdecd4b274d1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "66dfe449-f0eb-4223-ab68-335365913c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c880074a-c0a6-4ea0-bbf9-70f79ecfb300",
        "cursor": {
          "ref": "94d35ddc-03c7-4f6b-b338-fb0dc0958ab9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a1bc22bd-aeeb-4be9-8fac-4ed99c636eeb"
        },
        "item": {
          "id": "c880074a-c0a6-4ea0-bbf9-70f79ecfb300",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e13404b6-d22c-4839-b05b-a2e901c0f8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d70405-0f28-4882-bcc5-760b9d8ad2bd",
        "cursor": {
          "ref": "b31baf32-dbe4-4eba-9892-c6da0e55899c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "eb995536-a276-41e4-afd4-81ed61e5acb9"
        },
        "item": {
          "id": "93d70405-0f28-4882-bcc5-760b9d8ad2bd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aaf4bef0-c274-42fa-be8d-32bf9a326f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a0be33-ec55-4896-8ac2-b64aa1495542",
        "cursor": {
          "ref": "fb980a94-77d2-4783-a5b7-2bffc1e12527",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7183f216-2440-45b0-94d1-dda6d32b08e6"
        },
        "item": {
          "id": "b4a0be33-ec55-4896-8ac2-b64aa1495542",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a197bed4-389e-40d6-b389-6706980d9734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7ebe99-9944-4d80-9f9d-18755a6d34a8",
        "cursor": {
          "ref": "61184a11-aec7-43d5-928a-8d4339ef676c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0611bbd7-3821-4800-93b2-3a5220263361"
        },
        "item": {
          "id": "7e7ebe99-9944-4d80-9f9d-18755a6d34a8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "74b97e13-4af0-42ab-982e-1a67fb521482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e09ed5-1218-454d-9bf9-90cf19c1c67e",
        "cursor": {
          "ref": "b6b03d9c-ba1d-4b65-9edb-e34a8bb6f29d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6dd5ea31-2a64-4bbb-871c-2ca56ea6e7f6"
        },
        "item": {
          "id": "a3e09ed5-1218-454d-9bf9-90cf19c1c67e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "222ef147-312a-4429-9367-7ade32e7715f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a364488e-5c5f-4863-8863-210e7f7dc07a",
        "cursor": {
          "ref": "820cb62b-4214-4b27-8e31-6c1c2ead8334",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cf76ab6c-19b6-406a-a550-fa1d86030a18"
        },
        "item": {
          "id": "a364488e-5c5f-4863-8863-210e7f7dc07a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a02d01f-2de9-40cc-860e-65240ad958eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3374971-4046-4bd0-897a-3d0215c6ef99",
        "cursor": {
          "ref": "cdf44f7c-0760-450d-92d6-845b186e09e0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d145965b-bbe0-42a1-aadd-119f6cd009d3"
        },
        "item": {
          "id": "d3374971-4046-4bd0-897a-3d0215c6ef99",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0c07aae6-5224-4338-a14d-88eb7f659aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d730eb4c-0237-446d-a5a3-610d411eb4df",
        "cursor": {
          "ref": "11d2b68b-18b1-4ae0-b0ff-063dc279965d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fdda6566-8b81-40b8-bff7-b37729b31a42"
        },
        "item": {
          "id": "d730eb4c-0237-446d-a5a3-610d411eb4df",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "217cd56a-7606-435d-81b8-c044cb822b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fa90e5-d523-425f-9cd3-36b0cc1b7506",
        "cursor": {
          "ref": "16cbade8-1f1e-4d04-9d20-56c55a2c00de",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "67444df3-b5d2-48e9-bac3-435db29dd90e"
        },
        "item": {
          "id": "c8fa90e5-d523-425f-9cd3-36b0cc1b7506",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a079b1fd-4f25-4beb-9659-7e47faabd23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fec3b8b-2b0f-4120-8800-bdaf3d704d2e",
        "cursor": {
          "ref": "9fa5b029-df77-4cb7-b89d-d0ff39b86ad0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bf57f097-6342-47b0-a674-a1b0f87e0694"
        },
        "item": {
          "id": "7fec3b8b-2b0f-4120-8800-bdaf3d704d2e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7bd82bf5-5e15-4ad8-aabe-ce405ef5e2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd45e6d-ebc3-494b-9dea-6c9057c4fcc0",
        "cursor": {
          "ref": "55a575a0-e874-42b7-a1c9-c74eb157262c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "75c29839-d321-49d7-9e3d-05356b4d8f7e"
        },
        "item": {
          "id": "0fd45e6d-ebc3-494b-9dea-6c9057c4fcc0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ee352ed8-e939-4dda-ac7f-da4576d3b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c737763-800c-4206-99a0-efe88e8f2fad",
        "cursor": {
          "ref": "6f4db383-cc49-43b1-b68c-3f0cec977cc0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4b825da3-fb3c-4d03-86c8-1715e090e0fa"
        },
        "item": {
          "id": "7c737763-800c-4206-99a0-efe88e8f2fad",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5583d1c4-a4f0-4c66-9fb9-c49438bae33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8e731f-1298-4ca8-b93a-3a7c3b703c5a",
        "cursor": {
          "ref": "008167c6-c3a2-4202-8b4b-307a8c186c44",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b126fead-cfde-4b2f-9388-7cebe77581b9"
        },
        "item": {
          "id": "4c8e731f-1298-4ca8-b93a-3a7c3b703c5a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a4e8666-5e8c-46fc-b7f3-d12fe100cb71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670aa83f-fe17-41ae-8b85-10d6a8091b05",
        "cursor": {
          "ref": "77c7ec6d-a4ac-46c4-abb8-6a3dbfc958ec",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "09d29b7c-c540-4b28-bda8-f89cfcbcfeab"
        },
        "item": {
          "id": "670aa83f-fe17-41ae-8b85-10d6a8091b05",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e7390363-811e-4b0b-8a57-f1677bb066a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "93980b8f-32a6-409f-ac12-51d79775b2e1",
        "cursor": {
          "ref": "c5ee0826-5114-4692-87c1-70a00d617d4d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7bda883a-a212-4551-9863-27fed319ff8f"
        },
        "item": {
          "id": "93980b8f-32a6-409f-ac12-51d79775b2e1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6c5c7882-29c3-4191-add8-07d70732d126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5f85842d-99f6-47f4-8aec-465d1b0c8a53",
        "cursor": {
          "ref": "96fc80b6-01f3-47a2-ac3e-3ea69d452bcf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "13a0cdf1-a8f6-4f72-a39c-116ddc99e0bb"
        },
        "item": {
          "id": "5f85842d-99f6-47f4-8aec-465d1b0c8a53",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "06ffd677-b410-49cc-968a-9e5ffc6d8f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "410af351-daf1-4918-94c7-2dbee9c57801",
        "cursor": {
          "ref": "acb7994a-8a1c-491f-afad-0a5c296bcf58",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c335f273-2981-4601-aaea-f8d1104406db"
        },
        "item": {
          "id": "410af351-daf1-4918-94c7-2dbee9c57801",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e1607b51-b69c-4b87-8351-7b1eb4c0268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "17f10ca3-e40e-4725-b57f-7517a54d7128",
        "cursor": {
          "ref": "58771850-3fd5-447c-a301-e9188639c7e0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2448a699-e2fc-4ee4-af5a-5c45629ec6fa"
        },
        "item": {
          "id": "17f10ca3-e40e-4725-b57f-7517a54d7128",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0093f49b-dbc7-44cc-b7ee-a7b5b86400f3",
          "status": "Created",
          "code": 201,
          "responseTime": 7568,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1af53a2-eef5-4b04-8be0-22445535205a",
        "cursor": {
          "ref": "8cc9f87f-5194-4e0d-81f2-e8a8b3619428",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b3d6f86c-38d4-48eb-84b9-5a34e55e864c"
        },
        "item": {
          "id": "e1af53a2-eef5-4b04-8be0-22445535205a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b3628708-72c7-4cb0-864a-dd9ed6dd432e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0c91e3c9-292e-44ff-b6cb-cbc6540a99ca",
        "cursor": {
          "ref": "2fc6bbdb-355a-4290-94e3-a6b40f01a28a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a5df00e-54b0-46cf-a1dc-08f030aee243"
        },
        "item": {
          "id": "0c91e3c9-292e-44ff-b6cb-cbc6540a99ca",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "74b86d1f-1842-4dd5-b237-f0d74e29e14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7fb06a30-0a8c-4fd5-9f20-7f28f88ee26a",
        "cursor": {
          "ref": "5a562f53-a316-4515-904e-af8e09978122",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "16faebff-6906-4877-be77-10c61c0a128e"
        },
        "item": {
          "id": "7fb06a30-0a8c-4fd5-9f20-7f28f88ee26a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fe020856-06fe-4340-af95-015b30473aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4f9116-8f3d-4cd7-aad5-a01e55f9620b",
        "cursor": {
          "ref": "80660302-0d27-4112-aae9-dc78744fea4c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4d39dc9-42d7-44ec-814f-e6aadd31675d"
        },
        "item": {
          "id": "3b4f9116-8f3d-4cd7-aad5-a01e55f9620b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "78f6574a-f53f-4346-bcc0-0a8bd7520667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92329d2a-3f96-4138-b4de-f8f52d0e7683",
        "cursor": {
          "ref": "1dfddaad-f68a-4d18-9a78-ec8106f84871",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b9810215-0dc7-4109-ad7f-e920ad240c45"
        },
        "item": {
          "id": "92329d2a-3f96-4138-b4de-f8f52d0e7683",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19a8977a-39aa-4c7a-9476-091ba161a30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c84e55-3c46-422d-b7e1-c7d4b3871889",
        "cursor": {
          "ref": "35324f5f-0f9d-4550-b83c-ad694cae22eb",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00a89d6a-d455-4cd6-b44b-2092e76d1b39"
        },
        "item": {
          "id": "b9c84e55-3c46-422d-b7e1-c7d4b3871889",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3abb5052-ef79-4c67-9948-52b316e30221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e695a365-dada-4613-ba11-be0fc868a5a0",
        "cursor": {
          "ref": "46fa25fb-5dd1-4cbc-a589-4a9a2cf46182",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a5350dc9-2869-480a-a662-39c015d22fab"
        },
        "item": {
          "id": "e695a365-dada-4613-ba11-be0fc868a5a0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "666cfd41-5a14-46fd-ad16-48dcb54cb11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ecffc6-e270-4d3e-b42a-db957577ecd8",
        "cursor": {
          "ref": "a6a43d35-53ac-41d5-b15d-7299d4af8131",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ded8b72-c7ac-4ab4-9d08-e887b279fd4d"
        },
        "item": {
          "id": "15ecffc6-e270-4d3e-b42a-db957577ecd8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "23900c4a-5d30-4f42-9cab-7179b5d35ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa47c82b-d046-47c9-a6d3-60cb7a4ecb36",
        "cursor": {
          "ref": "d55a230d-a6b5-4655-bb5e-9ece6d544544",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "100b1ec1-41f3-4229-9eb3-35294814b6cc"
        },
        "item": {
          "id": "aa47c82b-d046-47c9-a6d3-60cb7a4ecb36",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "09e1b0b6-f5d2-4aef-be75-77b04dc6e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070afb7e-0001-4884-ae85-555ef03564be",
        "cursor": {
          "ref": "9e1a0cd6-2cd8-4da6-a09c-e566123ee721",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1829f09d-4dd0-49ac-ab9e-c6809788c1f3"
        },
        "item": {
          "id": "070afb7e-0001-4884-ae85-555ef03564be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2720bc6d-74e1-4396-a56d-5dc06ea8737a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd6464e-c7a8-4e60-aa26-7501436aa54d",
        "cursor": {
          "ref": "7d6808d2-3b95-4a97-943f-1ebcaec0bc3a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6719abf0-7929-4544-b178-69aef0174f40"
        },
        "item": {
          "id": "9cd6464e-c7a8-4e60-aa26-7501436aa54d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fa0817eb-82af-421d-8fd8-4c81dd194aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5d5f96-a8de-49b7-886e-b40186e6dae0",
        "cursor": {
          "ref": "54ddf193-6f57-42f6-9ee0-a6b843847400",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f40c5dcf-3d79-425a-872f-057035acecaa"
        },
        "item": {
          "id": "da5d5f96-a8de-49b7-886e-b40186e6dae0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ee377b10-e496-453e-90ab-dd24b657d2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c574ff03-f544-4d8b-b4b3-c145f0fc7419",
        "cursor": {
          "ref": "03860a27-c805-487b-8155-83cb67d39663",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4cbd61ba-dd47-4c75-829e-92d58034643b"
        },
        "item": {
          "id": "c574ff03-f544-4d8b-b4b3-c145f0fc7419",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4ad33cc5-946e-4911-905b-e0adbe653fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e6c3b-ed5f-4ea8-bd46-be7828eb3b8a",
        "cursor": {
          "ref": "3e82b13c-969e-473d-8000-4b8e37797a89",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4c3ba5b0-99de-4a75-8ab8-daa4bd995abf"
        },
        "item": {
          "id": "3d7e6c3b-ed5f-4ea8-bd46-be7828eb3b8a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d306f355-1b52-4c06-a44d-4e5c185991df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e936859b-ae24-482c-96a8-d3992a79425a",
        "cursor": {
          "ref": "9c2d1c70-5d5b-4e12-bd8a-40dbb08433c1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cac88718-a1a1-4831-90e0-4ff5cf7b39c3"
        },
        "item": {
          "id": "e936859b-ae24-482c-96a8-d3992a79425a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49310194-8cd0-499a-83a8-9d612e4f41a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a24d3ad-a572-4779-bba7-a1a7131dd377",
        "cursor": {
          "ref": "7c913442-5f19-4f27-91b5-7a8ab9d88daf",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "537d60e1-7b0b-49b7-b95a-c7b0b47ae2d9"
        },
        "item": {
          "id": "7a24d3ad-a572-4779-bba7-a1a7131dd377",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "72a535c5-108f-4236-ab71-d4b473388650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56b8c54-e04d-4fbd-92eb-8e1058955fc0",
        "cursor": {
          "ref": "5dd810ff-f24f-4248-9413-2d8bdddafc4a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "20f65f7a-59a8-4cfb-879d-97cfb06cea7b"
        },
        "item": {
          "id": "a56b8c54-e04d-4fbd-92eb-8e1058955fc0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c6fec7e-cf91-44fc-a0eb-f9933b08ee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c485c-1c8f-429d-84b5-771b97fa8d51",
        "cursor": {
          "ref": "bb0a10cc-bc14-462a-a012-27bfd521b733",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4f3774f0-4ca0-4394-8cfe-4b2252c49688"
        },
        "item": {
          "id": "250c485c-1c8f-429d-84b5-771b97fa8d51",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09022da2-a306-4688-826a-5cb27a4f2925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7354b8b9-564a-421a-9609-4fe620c82648",
        "cursor": {
          "ref": "27aeee61-1ad3-443f-aeab-557e6505a043",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3f7986df-76e5-4bce-9aaa-a56421a6ca18"
        },
        "item": {
          "id": "7354b8b9-564a-421a-9609-4fe620c82648",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b55d8484-c92c-4c67-b16f-a91375947b59",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c8395b2a-1fa0-4930-8906-8371c03de129",
        "cursor": {
          "ref": "1ec65c3a-5d58-4000-9ac5-4679138e9e6f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2eed0c43-2392-45ab-a9af-56a2d09f8c4d"
        },
        "item": {
          "id": "c8395b2a-1fa0-4930-8906-8371c03de129",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68210d62-1aa4-40d1-b5d4-bfbd9ad5c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8c9075-7579-4a76-b299-896e52c4715e",
        "cursor": {
          "ref": "7202a406-1ab6-41d3-8632-c32ca506a26a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0e845b2e-d2b6-4fa1-93f9-0b99962db87c"
        },
        "item": {
          "id": "4d8c9075-7579-4a76-b299-896e52c4715e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a37c834-e1ff-46bc-b924-8c9af484a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be1d402-4c94-43d5-8df2-1534c09a1d4b",
        "cursor": {
          "ref": "7885f236-ff68-480a-9384-53717ba59822",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "951326b3-4dad-460c-8f61-6ba58ceebc41"
        },
        "item": {
          "id": "1be1d402-4c94-43d5-8df2-1534c09a1d4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f6c2ce3-ce89-47ca-a52c-0e29ac5045e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00503fc5-8431-439a-b58e-3f811b8b3862",
        "cursor": {
          "ref": "a2b70733-cfe4-4263-a2b2-6550a1911e95",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7e0d9321-6a34-479a-8609-60aa910d76a1"
        },
        "item": {
          "id": "00503fc5-8431-439a-b58e-3f811b8b3862",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a1e34b9f-d4b6-4e31-ac12-80342fa9f507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4e8097-7e85-41af-b880-408946e9682c",
        "cursor": {
          "ref": "5f078942-74e7-477d-977b-7bf4a6f95190",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0817ecf0-48b3-4031-b608-0347572dfb76"
        },
        "item": {
          "id": "1b4e8097-7e85-41af-b880-408946e9682c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "38a4d5b0-99dd-4a2a-9c9b-7e722397d08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e523fab4-b38a-4994-8e16-8e111e090269",
        "cursor": {
          "ref": "7ade01c4-762c-4e3d-848d-106c250e5c55",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d97c301-ef77-4e1e-ae06-01668088e742"
        },
        "item": {
          "id": "e523fab4-b38a-4994-8e16-8e111e090269",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bd023b0f-f261-4375-9b24-b77291b883fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc5c5a5-4616-450e-86b3-47d2077bc027",
        "cursor": {
          "ref": "b78e15aa-b19f-40e7-9ac4-38dc00a62a0d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3199284b-91d4-4453-a57a-aa6a4592ce51"
        },
        "item": {
          "id": "fcc5c5a5-4616-450e-86b3-47d2077bc027",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa54a395-4ee9-4c95-8772-6ea480beb023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576012de-ea30-4e1d-b3c3-693ea7a509fd",
        "cursor": {
          "ref": "51d13be0-5402-4b5a-aed7-87854fd4ef8f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8ab5beaa-ed93-4828-8f44-131160927551"
        },
        "item": {
          "id": "576012de-ea30-4e1d-b3c3-693ea7a509fd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0affa0e-48f4-48c9-8115-f8d3e26b210b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 82,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4abd4301-8773-407f-a5b9-976b4dcdd6e1",
        "cursor": {
          "ref": "3c2acf35-daa3-43da-adbe-479e794d08f9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eb4bfd6d-7f5f-4f44-8d56-b548004a01f9"
        },
        "item": {
          "id": "4abd4301-8773-407f-a5b9-976b4dcdd6e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "651f50da-e390-43fb-bb35-486bc76b7b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6895d1-4141-4021-899a-d633e3d5c1e2",
        "cursor": {
          "ref": "462a3e46-7a3a-4170-b5bc-5a4e5158b5f8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "49d197cc-4146-4150-a1df-e04876302d1f"
        },
        "item": {
          "id": "9b6895d1-4141-4021-899a-d633e3d5c1e2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a9dec966-7eaf-4e3d-bc03-bd4b7c79c12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc14582-1caa-4ff8-a5d3-3de5a3417bc2",
        "cursor": {
          "ref": "6cb10015-a0ca-46c5-81d2-602f60df7613",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7aab1bae-4c00-45dc-9c19-0c1ddef3858a"
        },
        "item": {
          "id": "dbc14582-1caa-4ff8-a5d3-3de5a3417bc2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4da79cd4-cd22-479c-a3e4-948f8f1b4723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abee8e64-cc13-4127-98a0-2c5f93bc8e9c",
        "cursor": {
          "ref": "315c20c3-084c-4b58-83da-291890efafdf",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "054aea20-44cb-4b4e-b521-e5b659abcbb1"
        },
        "item": {
          "id": "abee8e64-cc13-4127-98a0-2c5f93bc8e9c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0fd843da-ebf2-4dd1-9365-16464cf3ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4d0b80-534a-449c-b646-24d841eaeae1",
        "cursor": {
          "ref": "42ac49ae-b461-42c9-a264-7eae5076e41f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ac2b0112-378b-43d9-922a-58abfec7d9c3"
        },
        "item": {
          "id": "8f4d0b80-534a-449c-b646-24d841eaeae1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9462b7ff-9b16-446a-8340-b27e2a14023d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4469c0b7-c1fc-4589-886e-a9adc20694ab",
        "cursor": {
          "ref": "6b99a7e6-5361-4f9e-97c0-257a836aee14",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c80141ea-3d87-4dfd-9af6-baaf8e6dba06"
        },
        "item": {
          "id": "4469c0b7-c1fc-4589-886e-a9adc20694ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "16daddb5-0b40-4b46-a25c-19fa235a7e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00332764-232b-4ff6-8893-c0010a16fa59",
        "cursor": {
          "ref": "111df1e8-2d1a-449e-ace3-8817eaab0427",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9f4cea00-8f3b-4802-af03-4c8ef14fd9f4"
        },
        "item": {
          "id": "00332764-232b-4ff6-8893-c0010a16fa59",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6b058cb0-240e-4fac-a54a-cf2218ecf056",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 114,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "423db33a-61e7-40ce-bbe7-57c41822b237",
        "cursor": {
          "ref": "d5531420-f78c-4d6a-a8ac-63e3b699b487",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "94325f2a-ff02-481d-ad85-a80b4b5814b6"
        },
        "item": {
          "id": "423db33a-61e7-40ce-bbe7-57c41822b237",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2f8973c8-c472-41ed-ba4a-9a504a46880c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629db2f1-0f64-47df-97c1-e281a888be47",
        "cursor": {
          "ref": "8a578474-1a14-4a3c-969a-cf9c627ae800",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f8c6e9a-6d94-409e-9c46-63762dd57457"
        },
        "item": {
          "id": "629db2f1-0f64-47df-97c1-e281a888be47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "591e7de6-b430-41ca-8938-f64971a5ecbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cb7058-301c-4314-bb40-8f972de7498e",
        "cursor": {
          "ref": "cb86e469-6e4e-4f48-a188-3f537b71b0a6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f0f93f7a-91d0-4a97-82ee-c19c4bbd03ea"
        },
        "item": {
          "id": "82cb7058-301c-4314-bb40-8f972de7498e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0e4c4d71-60c4-4a42-9b7f-58301ff0604b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df27b603-36dd-4e35-910f-e469028c26b0",
        "cursor": {
          "ref": "729295d0-6b00-44c3-b09f-37a5ed17b928",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d666b961-317b-418a-9bbf-d2db53ad7d3e"
        },
        "item": {
          "id": "df27b603-36dd-4e35-910f-e469028c26b0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "48b6960f-3b01-46d8-b1ba-fb183b410b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fc9e35-c531-44d3-835d-37f3a48efd07",
        "cursor": {
          "ref": "3c1de9d2-59ff-416d-b19a-6c761c0c7277",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c828f7ed-17d4-4555-a4b2-0f495e617350"
        },
        "item": {
          "id": "29fc9e35-c531-44d3-835d-37f3a48efd07",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f8e1dc10-f417-4f5d-8f8e-5303f1364d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cbcce6-45ab-454f-8166-efaaf308817e",
        "cursor": {
          "ref": "de296a28-9c96-4a2b-a8c3-3bb14ed0941f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a9589924-4a5f-4d4e-bc7d-58e32df25947"
        },
        "item": {
          "id": "37cbcce6-45ab-454f-8166-efaaf308817e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b54d8cf7-e5d0-423e-8197-8d50f607792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51867d48-3ee9-447a-ade3-992693e9e2f3",
        "cursor": {
          "ref": "20b8db80-45cd-421d-a74a-faa397dcef6e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7c2b6bd8-d486-4e6c-8036-251fdf275051"
        },
        "item": {
          "id": "51867d48-3ee9-447a-ade3-992693e9e2f3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe3d6345-08eb-4b8b-8ccf-af85e91eb75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ca93da-7313-42d8-8eb1-1452397e090a",
        "cursor": {
          "ref": "7083fd25-f19f-431e-b0e6-19b1cd42788e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "626eda42-5f03-41c1-9688-d74a6c6a4fb9"
        },
        "item": {
          "id": "63ca93da-7313-42d8-8eb1-1452397e090a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5a07167-71b9-4fa4-be74-242e486f7308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f10c303-fd50-4fc3-82fe-d3cdde7fa7b7",
        "cursor": {
          "ref": "37ee966a-87d9-4ac5-a89f-bc5b3b0ff36c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "31fca804-c391-4f55-a091-aee49181aa2f"
        },
        "item": {
          "id": "0f10c303-fd50-4fc3-82fe-d3cdde7fa7b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8eb4e543-45a3-4507-89c8-88fedc5644de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f099e22-2ce8-4a02-b184-4dbfa4a55f8d",
        "cursor": {
          "ref": "aa0f49fc-13bf-4e16-aac7-8c99da90b51e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b16e95e-91a8-4a65-a59f-884bd04f2273"
        },
        "item": {
          "id": "6f099e22-2ce8-4a02-b184-4dbfa4a55f8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6c9366bc-064f-42e7-a0a4-c2893e12d1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82be96a-f01f-4b3c-8ef4-42c1b6540962",
        "cursor": {
          "ref": "c9373a5d-0da7-4f0d-9e8f-503640f846fa",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d5ac361e-2b9e-452e-b0d9-8e39290c474c"
        },
        "item": {
          "id": "e82be96a-f01f-4b3c-8ef4-42c1b6540962",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b2186b15-b862-4e91-8645-a887cc459f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9608217e-ec4e-4122-bebe-a4730d8d5847",
        "cursor": {
          "ref": "f1ff00aa-33ff-4019-8e56-4e2e7aed20dd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4543e572-60f0-46d6-b7bd-8941c74f13d4"
        },
        "item": {
          "id": "9608217e-ec4e-4122-bebe-a4730d8d5847",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b430809-2ab9-42fc-9a96-5131c0831bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859bd8b4-2716-4801-a179-3f90f278e58c",
        "cursor": {
          "ref": "f09b6eda-f0e8-4345-9a1b-fb322a8222cb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7e53862f-f83d-4863-9ce2-d51d1a0abc16"
        },
        "item": {
          "id": "859bd8b4-2716-4801-a179-3f90f278e58c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dff6aefc-46b4-47f1-a0ed-87ced208d1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293b0fe-c6f1-4fac-9fec-8a9cc86fea27",
        "cursor": {
          "ref": "471826a3-6008-4d2a-81a9-3bbe84807a06",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3812e87e-d551-45ca-8039-eb452d7dd610"
        },
        "item": {
          "id": "a293b0fe-c6f1-4fac-9fec-8a9cc86fea27",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e220fcae-b35e-4515-ab3c-20ad2395a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a529b918-ed4a-47f1-af10-12531a8448fd",
        "cursor": {
          "ref": "55b811db-c204-4cb8-bcaa-9678d8eced68",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ce9147b1-8d1e-4427-9529-69076958bea5"
        },
        "item": {
          "id": "a529b918-ed4a-47f1-af10-12531a8448fd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9b3e6cc6-df07-4115-9b1f-c19b86f5a0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7b2cef-c135-44ac-9c80-f352971b2f03",
        "cursor": {
          "ref": "253037da-5b4f-4299-90ee-0d9ddb7e3652",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c98cd766-7b38-4743-b300-b392552fce72"
        },
        "item": {
          "id": "ba7b2cef-c135-44ac-9c80-f352971b2f03",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d04d6759-d7e7-40d2-9f65-d43054b317f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed982404-8bfc-4f47-ad80-73306e25a5f4",
        "cursor": {
          "ref": "40b4b68b-22e8-41dc-be80-b5e678acdb73",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ddc0fd1c-7178-4e87-87c5-f426a6270e8f"
        },
        "item": {
          "id": "ed982404-8bfc-4f47-ad80-73306e25a5f4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b7ce127c-c417-4237-899b-29a31b8521a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3db33a7-c3e8-4e6e-8cec-fc481beaf1b3",
        "cursor": {
          "ref": "6858b33f-d475-4c65-b706-baf89986081b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dee93e28-dda8-4290-8eec-98c2bc1b3e57"
        },
        "item": {
          "id": "f3db33a7-c3e8-4e6e-8cec-fc481beaf1b3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "86926cda-beb1-429a-b1c4-0398163b8493",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "66f42e01-35a1-4065-8b16-d62f35de9012",
        "cursor": {
          "ref": "ecfc231f-8f15-4834-9a5c-f1e350980a25",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a0c16827-fd3f-4289-b2ea-e46653f7d614"
        },
        "item": {
          "id": "66f42e01-35a1-4065-8b16-d62f35de9012",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f67cdc4c-c3bb-4ab5-8d2d-4c18720f50fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cb9d0a-7a7a-4e3d-bd3c-fb210d76de80",
        "cursor": {
          "ref": "8d7d4cc7-8fd2-4fc1-aad9-6a649b367a56",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "152f3c6f-0901-4f4c-9ee3-3f25583656b3"
        },
        "item": {
          "id": "63cb9d0a-7a7a-4e3d-bd3c-fb210d76de80",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "154d92c4-b91f-4e1c-8593-cc78dc58989c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbf4e04-ab7e-4b14-972b-71e7d7538ab3",
        "cursor": {
          "ref": "17ea1a2d-6544-48fb-a79e-648a366c7843",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "acb1e46b-7446-4680-a2d8-ae22ed50bdf1"
        },
        "item": {
          "id": "dcbf4e04-ab7e-4b14-972b-71e7d7538ab3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4e4fb171-e549-4fca-806d-716499ca001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552efd4-1ac8-42f7-a458-d33bb6d5061c",
        "cursor": {
          "ref": "68c9a52f-ca26-46c4-bf4f-ada7fd3859a5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "02b63734-77c2-4556-a160-5be6b5c5cb55"
        },
        "item": {
          "id": "7552efd4-1ac8-42f7-a458-d33bb6d5061c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0c81b014-da91-431f-ba5d-5fadb8094ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fa4fc1-361a-4da9-b2e5-a890e03c0a38",
        "cursor": {
          "ref": "9a5913f6-c5a5-43ff-8652-ebfecff15093",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eedc3c2b-e4fe-4c23-a6df-87e487fc835e"
        },
        "item": {
          "id": "62fa4fc1-361a-4da9-b2e5-a890e03c0a38",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f1fa3c55-6bc4-413d-8b0d-3b091b814a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aaf7ec-ddc3-4c71-af9d-8a8cbb22f3c3",
        "cursor": {
          "ref": "421b8eca-3cfc-4919-a2ad-5c6197cbc741",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e3dc3028-20ff-4da9-a256-26d7915fdc37"
        },
        "item": {
          "id": "05aaf7ec-ddc3-4c71-af9d-8a8cbb22f3c3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "955bc99f-ae4a-42a5-8de1-b32b959fcd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcc60ee-aaa6-428d-9702-7fd649a99ec8",
        "cursor": {
          "ref": "66011109-ab57-4713-97ab-d4448ccd1c9f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "77b18c7b-afc7-4022-b32b-3efabb4d2401"
        },
        "item": {
          "id": "adcc60ee-aaa6-428d-9702-7fd649a99ec8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e30d43fe-3464-4798-8618-ab79ef2ca32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91b47eb-c194-4bdf-8810-abee5304cf6f",
        "cursor": {
          "ref": "81730434-41c8-47b7-bcce-6d519626e516",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8953fdb-3f66-4a27-acd5-073b848075f7"
        },
        "item": {
          "id": "d91b47eb-c194-4bdf-8810-abee5304cf6f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b1508d8a-972e-4f0f-b91e-d3c02d1116da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "ed62af2b-0b40-4579-82e0-475cc38394b0",
        "cursor": {
          "ref": "098f0b86-1031-4560-8af5-3cda9d77df4e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8ba029a8-4035-4876-8c8d-9b65e9eba4d9"
        },
        "item": {
          "id": "ed62af2b-0b40-4579-82e0-475cc38394b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab9577e2-9d8d-49a5-abf9-6044c3dedce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e850c9-d8e5-4bd2-b9c2-0988379a4434",
        "cursor": {
          "ref": "9ab02c50-c9be-4052-bd60-3600374bdf87",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ab2d7139-2cb0-4d56-8e01-f491721523e7"
        },
        "item": {
          "id": "c0e850c9-d8e5-4bd2-b9c2-0988379a4434",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "691df4fa-8cf8-47db-809e-c32bb2bf7481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869fc7fe-2944-4a4f-ae84-05820afd526f",
        "cursor": {
          "ref": "8055e45e-f103-4ae7-b933-2607fb72bce8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "48318b76-34e5-408c-acc2-507b95fa4452"
        },
        "item": {
          "id": "869fc7fe-2944-4a4f-ae84-05820afd526f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d1fc5d9-c857-44c5-8fbb-32af48726f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200ec6a4-b638-49d9-9710-a6ad39629736",
        "cursor": {
          "ref": "876a99e2-47eb-4850-a534-517216de199d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f5fcec7e-ecf8-4752-aa28-def5b8921237"
        },
        "item": {
          "id": "200ec6a4-b638-49d9-9710-a6ad39629736",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22a00f46-7a5c-452f-baea-f5e503397f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbd3acf-1bd5-475b-ba68-4066277430aa",
        "cursor": {
          "ref": "b510423f-5aea-49db-b1ec-fd6b292ab1a8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2470d0eb-4458-4d5f-8544-224c384c4463"
        },
        "item": {
          "id": "0dbd3acf-1bd5-475b-ba68-4066277430aa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f94798c3-7c90-46b4-bbca-2aa6557b0456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccefc33f-40af-4e58-b190-410d43441901",
        "cursor": {
          "ref": "cec4c713-d4b5-4e4f-b45b-58c3ea3db809",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2c014da7-f750-4aed-96a2-c57a6221f1d1"
        },
        "item": {
          "id": "ccefc33f-40af-4e58-b190-410d43441901",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c61e9f35-f069-4552-9d1b-d76971c1207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f3d5f2-4018-4497-ad69-e00cc6d363c9",
        "cursor": {
          "ref": "df7e8d18-bdea-49fb-9bde-13e335dfc642",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7f9ffcfc-a2ae-4c77-9935-0d13f993b560"
        },
        "item": {
          "id": "56f3d5f2-4018-4497-ad69-e00cc6d363c9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "713a3bee-cfc4-4da5-9616-8631f4c118a5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "94d6b67e-bfa9-42f9-9290-80644b042a16",
        "cursor": {
          "ref": "fa0ff538-cfde-4924-bbc5-95776e5acafa",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e81babae-5a8a-4cc5-895f-0d34a8cf5492"
        },
        "item": {
          "id": "94d6b67e-bfa9-42f9-9290-80644b042a16",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d1d67629-24fb-4735-b555-f04ecb75f0ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "5a7d2ce2-e6c9-4c9e-bcab-9e1e56d8882f",
        "cursor": {
          "ref": "a04b33ab-8412-4be2-8197-3f46bfd2fa91",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "da871c73-468e-46ce-85e1-802d71494ad8"
        },
        "item": {
          "id": "5a7d2ce2-e6c9-4c9e-bcab-9e1e56d8882f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "60f3909e-dcc0-46e9-a77e-d3840fd755e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "751b3b37-70b6-4697-acdf-2884adf75a81",
        "cursor": {
          "ref": "7092dc1d-f520-4a3f-8de0-b4349073ca35",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2d00e349-e430-46fe-a193-ad5d2ce9dfe0"
        },
        "item": {
          "id": "751b3b37-70b6-4697-acdf-2884adf75a81",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "54bb9fe4-bc4f-4382-ba36-c1489494788b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "09ef0749-3e09-41ab-9cfc-917353d5d75c",
        "cursor": {
          "ref": "a443b056-7638-4ff9-9a8b-0e9926eb7230",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f9a1ae52-d642-4e8e-bc63-208e854d7449"
        },
        "item": {
          "id": "09ef0749-3e09-41ab-9cfc-917353d5d75c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "29da97b7-742e-4935-b5b4-11cd30fac8bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "85c2b931-4806-455d-a68e-b8097c99f484",
        "cursor": {
          "ref": "ffc2b912-c406-496c-80b1-88b99969f509",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5b933357-52ae-4068-bf74-d0489a512874"
        },
        "item": {
          "id": "85c2b931-4806-455d-a68e-b8097c99f484",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b242072f-4cf1-4616-858f-471b7628f977",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "b91b6d4d-510b-44b9-aa44-7f10d247cfc2",
        "cursor": {
          "ref": "fe8c50c3-a43b-4484-93ae-a400c6deaed7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "98d57c15-14c0-42b7-9d4b-b450a1875226"
        },
        "item": {
          "id": "b91b6d4d-510b-44b9-aa44-7f10d247cfc2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43b20b63-535d-4c77-9dfe-561b47f0734a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f255557f-628f-45e0-a5b6-92fe2c4d8eb9",
        "cursor": {
          "ref": "6256749f-0ec3-430f-8751-e418dc4e6f22",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7b63228c-309f-4aff-a97f-72f34c22f43c"
        },
        "item": {
          "id": "f255557f-628f-45e0-a5b6-92fe2c4d8eb9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "41252717-8c1c-47d8-b86f-9156b33e1a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d863b99b-0ac4-46f1-a395-99d532c33e9d",
        "cursor": {
          "ref": "505f70a1-ebfb-441b-9333-c419a27edbfd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "768e9cb1-358f-4c38-b965-5ff81cf288fd"
        },
        "item": {
          "id": "d863b99b-0ac4-46f1-a395-99d532c33e9d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "767e5268-01a3-486e-958d-111e000376ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a4bdd0-40c6-468e-81a2-7229752ac37a",
        "cursor": {
          "ref": "25c8dabb-698b-4d22-bb92-253680ec156c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5937b947-c7d5-430e-9552-204aaef682ac"
        },
        "item": {
          "id": "d2a4bdd0-40c6-468e-81a2-7229752ac37a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "49535a43-f3e6-4bdf-9649-8c2312438f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ce6a07-54b0-4029-806f-722e12ac102a",
        "cursor": {
          "ref": "e65fee41-3ef9-45f7-af2f-e5cd52db7860",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2be95f65-100a-4036-a6b2-b6a52c5f1002"
        },
        "item": {
          "id": "41ce6a07-54b0-4029-806f-722e12ac102a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7482bd22-a129-4aaa-9162-b4fffb967fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa53b127-ea55-4452-8e6e-efc97ecca74d",
        "cursor": {
          "ref": "12436fd4-2af5-438e-bb07-dda51fe39b90",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "276f57e0-ad32-445e-b4d5-fb86a6571504"
        },
        "item": {
          "id": "aa53b127-ea55-4452-8e6e-efc97ecca74d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "992ed5cc-be65-4a0e-861c-c5850294d629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d71b0e-9f68-4fba-ba2b-3cb870f26b94",
        "cursor": {
          "ref": "1c85485e-c213-4e62-abf7-b0fa78bdc604",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "940f4aa2-5fc8-4dbc-ad02-54bbb8e9a897"
        },
        "item": {
          "id": "a4d71b0e-9f68-4fba-ba2b-3cb870f26b94",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "64931996-df86-4db7-9f13-8ccf3baa1523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6668fa2-4cd6-45dd-90c9-76166a9426a5",
        "cursor": {
          "ref": "cf1267de-4c55-49d6-9ae9-5fc9da88fa1a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ff0458d6-115a-423e-96fc-f2d4e23d9e6d"
        },
        "item": {
          "id": "d6668fa2-4cd6-45dd-90c9-76166a9426a5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ac65f848-278a-4a35-83f2-ecf22cb90152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8330feb-7f58-4138-be23-abde53e4cf8f",
        "cursor": {
          "ref": "d6dc5387-cd04-4e9f-92e2-9ad53f822470",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e901e445-d96f-4037-98bb-1183f7bc2f22"
        },
        "item": {
          "id": "c8330feb-7f58-4138-be23-abde53e4cf8f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "80170ebf-2cc4-4117-ab21-560223b78185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e83e262-7fba-430e-bd6f-e530a3292489",
        "cursor": {
          "ref": "3a43441f-6392-4fdf-bf04-28981c05bf75",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1025a6c2-a095-417a-8178-6db260d0d2c1"
        },
        "item": {
          "id": "8e83e262-7fba-430e-bd6f-e530a3292489",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7152fb10-bc21-46be-9aaf-2fdd1940ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d2825-0581-4f43-9562-523425a47d37",
        "cursor": {
          "ref": "1f2b70ba-46fe-4288-b0fe-8fecf6801c66",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7766267c-7384-4016-ae93-0af64c47a1df"
        },
        "item": {
          "id": "117d2825-0581-4f43-9562-523425a47d37",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6c21a761-9116-4f3e-ba57-1ba339b5fad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd92231-f82a-4ae2-97f9-ea459ed9809d",
        "cursor": {
          "ref": "e008c22d-d129-42e7-9e2b-618343a1673b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dba5ce3b-ea61-4fdd-b95e-15d195c19a96"
        },
        "item": {
          "id": "dfd92231-f82a-4ae2-97f9-ea459ed9809d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a10cf34c-d7d3-4e59-8d87-e65449095906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2c44bf-896b-4f3a-9047-b6cadfdb74d1",
        "cursor": {
          "ref": "7728b5b1-3562-450b-98cc-0e03e453d598",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6a4d7adb-4ae6-4827-a6aa-5c0d9777076d"
        },
        "item": {
          "id": "ff2c44bf-896b-4f3a-9047-b6cadfdb74d1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cceca23e-a858-4ab5-bf5d-2fce2c672729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49b56d4-e49a-49a2-a758-cb38f976e335",
        "cursor": {
          "ref": "969d4314-fd7d-4ef2-a55e-aa2d1be6c75d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a60f1641-894b-4b59-859c-c0ea9b084c75"
        },
        "item": {
          "id": "a49b56d4-e49a-49a2-a758-cb38f976e335",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "139a063c-12e2-4ffc-9bec-dde65980a5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883113cb-36b8-4408-a614-018015a9be5b",
        "cursor": {
          "ref": "781b30a5-f571-4c56-804f-6de3771e8e3e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "570b4aee-c0d0-454d-afb3-addd633ae09e"
        },
        "item": {
          "id": "883113cb-36b8-4408-a614-018015a9be5b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9e2a362a-3d4b-4f11-a9ee-c93dc4aec167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed6f90d-a515-454e-ad32-07854667d534",
        "cursor": {
          "ref": "679e42c5-2302-4436-a9af-9052fdaed31e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ed3fe784-3de4-48bb-9aff-e9bfafc47441"
        },
        "item": {
          "id": "aed6f90d-a515-454e-ad32-07854667d534",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c9314ce4-a179-4606-8bb0-c3479877e687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10376c70-1c45-410a-90e7-501c42e10031",
        "cursor": {
          "ref": "a67b851e-a049-4336-ab51-f252b6126d57",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73e1d249-8cf9-4b23-94a7-e070f62c493f"
        },
        "item": {
          "id": "10376c70-1c45-410a-90e7-501c42e10031",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c5a0ca07-10b4-4967-97f6-16b99e04d06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba3c26e-ffed-4761-8a2a-814ac0d9928e",
        "cursor": {
          "ref": "c4219961-9eca-4a76-8d7a-f2c7f9d7a947",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bcb0ff19-a84a-4c74-b9dc-594bf0cc8603"
        },
        "item": {
          "id": "2ba3c26e-ffed-4761-8a2a-814ac0d9928e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6de7bf38-9533-445e-8c4f-23e5227aafd7",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "bbb7a4c9-0a84-47b0-b9f6-72352d4888ac",
        "cursor": {
          "ref": "413b956f-37e3-4dbb-8883-4768cf6b3c44",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "55682911-7229-47f1-a85d-f857d9deab9d"
        },
        "item": {
          "id": "bbb7a4c9-0a84-47b0-b9f6-72352d4888ac",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9dc5c1e4-5723-4840-bdb8-39ff47e4fcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869ca3e0-98bf-4c14-afd4-6b212c222cf1",
        "cursor": {
          "ref": "69b48ac6-6e5d-4659-b4e6-e49290f8d148",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "53d289ad-b54c-4d8c-9d39-ee6ac9022ed3"
        },
        "item": {
          "id": "869ca3e0-98bf-4c14-afd4-6b212c222cf1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "824dc505-5cee-46c2-880f-c92e218e4f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98615b75-7bb9-4ab9-b2b7-24ca7c7adc53",
        "cursor": {
          "ref": "09e1668c-e115-435b-bd32-4673bd62fb09",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0d28032-9b47-46c9-8484-b2aa99299100"
        },
        "item": {
          "id": "98615b75-7bb9-4ab9-b2b7-24ca7c7adc53",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "018beda6-904c-4361-bc05-6b0e4396220e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9e4fe5-e369-43b6-af13-474cb305b9a0",
        "cursor": {
          "ref": "15a10038-cd48-48f4-8855-2082f70ba119",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2d570ef3-850b-47a7-87f4-61d77645d858"
        },
        "item": {
          "id": "bd9e4fe5-e369-43b6-af13-474cb305b9a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c80de00b-b289-4e60-8af1-5365f84e1fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e52759-0c2a-465b-80ce-19621ed7686b",
        "cursor": {
          "ref": "1a6fae00-8659-4f44-a93a-867abc7229c4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3eb952a1-22a1-4bab-95a6-58577db9a845"
        },
        "item": {
          "id": "d1e52759-0c2a-465b-80ce-19621ed7686b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f98600f0-d102-4a54-b4b4-ca8b2631cefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74887d43-7137-48da-b5bc-b2f1ee6a9537",
        "cursor": {
          "ref": "9f9aaec8-076a-4ebc-b4eb-5402fe1e83ed",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fa48fe8d-338a-424d-8549-ba69bb360682"
        },
        "item": {
          "id": "74887d43-7137-48da-b5bc-b2f1ee6a9537",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6bfc0f1c-a985-4cfc-8a63-b3596394959b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a85b79-2822-464f-98c5-ca51a062097f",
        "cursor": {
          "ref": "9bbe5b23-1043-43f1-8aea-c7ace86f219a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c0a099ec-e191-473f-ba0e-e09894a63f6a"
        },
        "item": {
          "id": "b4a85b79-2822-464f-98c5-ca51a062097f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "401fe998-c523-4efe-ae82-0960f529ac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459400fc-fa0e-4c49-9531-d9e08eb3fe22",
        "cursor": {
          "ref": "a6fe6bd4-dbe8-46d0-8161-750c84208c34",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "611f037b-e812-4ed0-87ac-c526275fc745"
        },
        "item": {
          "id": "459400fc-fa0e-4c49-9531-d9e08eb3fe22",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ae89aee5-ca10-4f86-9321-d2011b8906b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddb6f75-8f44-4c48-91d3-dca25a5edd94",
        "cursor": {
          "ref": "20dc19c6-50ee-4dde-a843-7a28c15f2692",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "504200f1-67cc-464d-b793-b75bd7076812"
        },
        "item": {
          "id": "dddb6f75-8f44-4c48-91d3-dca25a5edd94",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40548084-1406-4faa-acf9-c4b2e4bb3bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81aa34a1-2ad5-460c-a65e-a2085e5f5da2",
        "cursor": {
          "ref": "d96b1cdb-15e9-4159-8ec2-e24bb39036fa",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "795b4c9b-06c0-4a75-a7b4-f41fa82a11e1"
        },
        "item": {
          "id": "81aa34a1-2ad5-460c-a65e-a2085e5f5da2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4ce225b7-b3a1-4f6d-8f9a-d88f70c17cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b6bb9f-9d1e-4a90-ad56-bdf33c16a86d",
        "cursor": {
          "ref": "4b49a271-f728-469a-95cd-567318f0bb90",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "98f71706-7691-45f2-8d5e-d935c6a4cc40"
        },
        "item": {
          "id": "56b6bb9f-9d1e-4a90-ad56-bdf33c16a86d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "70380ad6-be8b-4cf1-96c0-97853ce85f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3dd9f-6f76-4a93-bf94-2bcecb92dd14",
        "cursor": {
          "ref": "82a3dbd6-22b6-4e57-9347-74fc6382991a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4aa9fab5-d6b2-4431-8f38-e51cfec1074e"
        },
        "item": {
          "id": "e4f3dd9f-6f76-4a93-bf94-2bcecb92dd14",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "33cf7cb6-3f1a-4ba7-b338-656f29ddc189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad4becc-d815-4d88-b3e9-6179b00b0178",
        "cursor": {
          "ref": "08289271-3e3e-46b0-9f68-e84bc968a51e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cd7f8826-2adb-4378-af7e-0c4d91d0445f"
        },
        "item": {
          "id": "fad4becc-d815-4d88-b3e9-6179b00b0178",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "91db3c0e-9c38-421e-9860-2dce09e2cd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205f44da-dd06-4079-973a-c171108cdc20",
        "cursor": {
          "ref": "efa5f919-b88f-431b-a361-3691652165d3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f2d4a6d7-2cc3-4870-885d-178800fa2fcb"
        },
        "item": {
          "id": "205f44da-dd06-4079-973a-c171108cdc20",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3ea930ba-f74f-4993-b0f7-0d05d5ea0b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3f3079-971b-4e25-bc23-99d62a579b83",
        "cursor": {
          "ref": "74b7af21-65a1-489f-9b2e-131350ce1ef2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bc5d6fd2-1863-4e9e-b661-e0989e32b2ae"
        },
        "item": {
          "id": "0f3f3079-971b-4e25-bc23-99d62a579b83",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "55c36217-49ee-47c3-8753-1b7231910f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c88f80-b12f-4343-ac99-e4d3adbc1949",
        "cursor": {
          "ref": "1c58472d-b85b-4056-a856-e6c7546d7561",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ecef962b-685b-4548-b2f7-9089cde8720f"
        },
        "item": {
          "id": "19c88f80-b12f-4343-ac99-e4d3adbc1949",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "24f57e89-b487-488c-9209-6633a52b57b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d15f37f-e9f7-4279-8663-7a025a94cfd4",
        "cursor": {
          "ref": "548d363b-f8e1-4883-9b7c-e290636c022c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d48f9e96-3f8b-4630-ad43-801f79d9ee45"
        },
        "item": {
          "id": "0d15f37f-e9f7-4279-8663-7a025a94cfd4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3c134142-dc26-4e8b-9bd6-aa3c808d7dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428e6fcf-d540-411b-aaba-e7a22242d15b",
        "cursor": {
          "ref": "aad4dd64-6ef4-4313-bddd-648da9ac6c71",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bdbd1df4-ade9-4420-bcf8-729a2c220f40"
        },
        "item": {
          "id": "428e6fcf-d540-411b-aaba-e7a22242d15b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "50164711-921c-4c8e-b3d8-5d650c09d5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037bb479-5756-446a-81bb-016df02e448e",
        "cursor": {
          "ref": "60536187-c985-4b6a-ab3b-75d38c499820",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7eb900f8-7601-4bb3-ad7a-c26a0fd2fc66"
        },
        "item": {
          "id": "037bb479-5756-446a-81bb-016df02e448e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bcb6d4b5-c21b-410c-bedd-84d903eb81cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da3352d-b531-4178-b6af-0e75f8cdd1b0",
        "cursor": {
          "ref": "c6a306ab-30a7-44b2-b6c0-eef8a88a4e27",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "548381bc-f2f1-4f01-b960-bcb07c1d9db9"
        },
        "item": {
          "id": "8da3352d-b531-4178-b6af-0e75f8cdd1b0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "20d6d9c7-9ec4-4fb7-a5e7-fee00a14c1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c4ef92-22e8-4c83-a3db-e29bf9d8d500",
        "cursor": {
          "ref": "86b7fc08-3d2f-40cf-9f80-be90f886e58c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c55b171f-d82a-4b47-9a4f-73c41c84e907"
        },
        "item": {
          "id": "e5c4ef92-22e8-4c83-a3db-e29bf9d8d500",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d26c2733-ffb8-497e-86b0-7bc86f751354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741f7294-e5f9-4738-be31-7a7ed82cb094",
        "cursor": {
          "ref": "6f990910-77f1-4eca-8918-d72936cabf1f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "63c009c5-e8f1-4192-92f3-166e21a4c3ba"
        },
        "item": {
          "id": "741f7294-e5f9-4738-be31-7a7ed82cb094",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "33aafb96-e3a6-4853-8596-e19fc3694d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270ed15f-f979-46cd-8689-9bea3576c5dc",
        "cursor": {
          "ref": "af65a076-49ee-45b1-9619-4d23ccdd805c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e510c816-0302-4a1b-bf32-44993a0c80f6"
        },
        "item": {
          "id": "270ed15f-f979-46cd-8689-9bea3576c5dc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3cd8d20e-8c64-460c-8f62-b1399bf2ac7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d589ab58-3a6f-4999-9e4d-431495768d48",
        "cursor": {
          "ref": "1450b879-d457-456f-8e7e-005c926dde85",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7831d078-8206-4a2b-86cf-ea82d5a5ec24"
        },
        "item": {
          "id": "d589ab58-3a6f-4999-9e4d-431495768d48",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a10b4506-7955-455f-be73-72c09f396560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb2bd02-fcf8-4274-bae9-a5ad0557432f",
        "cursor": {
          "ref": "2233e3f8-6b34-4269-804f-bd5ff3687c9b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3cb18753-f5a9-480b-a91d-834ea9a48d7e"
        },
        "item": {
          "id": "bcb2bd02-fcf8-4274-bae9-a5ad0557432f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4a5b9f48-ee70-49b0-bca3-28aee9b189f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec8931e-68ec-4f56-bf90-4ae11194c3ec",
        "cursor": {
          "ref": "96d5b422-6ac5-4f01-8c5f-c4332e3af912",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ea7fa4e-77e7-44fe-9115-014e6f0ebeed"
        },
        "item": {
          "id": "5ec8931e-68ec-4f56-bf90-4ae11194c3ec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "86d773c9-b583-421a-bc07-4599e04ccd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5096e52-779c-4f85-9bae-9343b08bfef3",
        "cursor": {
          "ref": "d7eedae6-632c-4f8c-bd51-255705c84500",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "18ab608a-d523-4551-bdcd-f1952dc3d8f1"
        },
        "item": {
          "id": "f5096e52-779c-4f85-9bae-9343b08bfef3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "adb7e261-3553-4f19-aacb-a9adb20a2031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137b6ac1-b94c-4ba3-9aab-6bf8b9ae9541",
        "cursor": {
          "ref": "2693ef3b-7db6-4b79-8923-49b6632874e3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f2b07109-4e4c-491a-8259-08e778989878"
        },
        "item": {
          "id": "137b6ac1-b94c-4ba3-9aab-6bf8b9ae9541",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4c33901b-ceac-4938-b3a1-13c662167823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33418823-a81f-47ba-9729-3e2e237aacfa",
        "cursor": {
          "ref": "6cf9548f-39ef-4063-873b-9ec7e976cf0c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3f255b57-78ba-4369-adc6-5c971985899c"
        },
        "item": {
          "id": "33418823-a81f-47ba-9729-3e2e237aacfa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aea685ec-afaa-4571-8318-52df7fbf4e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6125ef-45d9-4265-9096-3dadc6329896",
        "cursor": {
          "ref": "a107e8b1-f46e-44ff-9d7a-e1f68760e682",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8464dccd-6dde-413c-a5b7-31905b455919"
        },
        "item": {
          "id": "2c6125ef-45d9-4265-9096-3dadc6329896",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "11c948e9-e6ea-42b8-abe2-61ad63904315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb29f4e4-b4ef-4563-ae3a-a56acfd0c8de",
        "cursor": {
          "ref": "f5c6c213-d432-43ee-a8f4-8a07909c01b9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8061f7d6-bc70-44b8-ab94-ea1a1711dce9"
        },
        "item": {
          "id": "eb29f4e4-b4ef-4563-ae3a-a56acfd0c8de",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1bf78795-ce5a-4566-b1b1-ee8115505b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e4e392-0401-48f1-9b8f-cface49cf7ed",
        "cursor": {
          "ref": "9e7c34b2-6488-4db9-b319-992076ad4ec2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5eba555a-5d6b-4b96-aa1a-be3f38705569"
        },
        "item": {
          "id": "83e4e392-0401-48f1-9b8f-cface49cf7ed",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "50e648b3-e664-4008-b366-b1e41b82fc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e675bd-d9f0-4ace-80a6-138197361a03",
        "cursor": {
          "ref": "2715a688-94ca-4863-995a-209e94fe62b6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "28415d35-9972-4479-947d-334b44afa1f4"
        },
        "item": {
          "id": "57e675bd-d9f0-4ace-80a6-138197361a03",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "426858f1-aab9-4cf7-b811-586c8cdbc089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580beff4-1080-4c89-bfce-b3ae0d086746",
        "cursor": {
          "ref": "24336166-c536-4ffb-9db2-3c932a9b7557",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1b4686ea-3a74-4428-ac58-473ecebda218"
        },
        "item": {
          "id": "580beff4-1080-4c89-bfce-b3ae0d086746",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9eec6970-c7f2-4294-824d-108929c4507d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa7849-fc6b-444e-94da-d35145835c42",
        "cursor": {
          "ref": "c014f00c-e0b4-49b6-916d-26b6336df1d9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2425db5d-11ca-4b39-ae6a-5075bd812e54"
        },
        "item": {
          "id": "10fa7849-fc6b-444e-94da-d35145835c42",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "80c81517-07a8-4e3c-a5ec-e0bd97735d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ded8da-b632-4534-b11c-03561f0b1564",
        "cursor": {
          "ref": "36171ea8-0e5b-4945-a714-d574e7e371f1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "37eae555-f6b0-4f05-a9c8-adeb336b2b86"
        },
        "item": {
          "id": "78ded8da-b632-4534-b11c-03561f0b1564",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "49b2955c-34bf-41bb-aaa9-75b83caa77a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50032059-0373-4194-87b9-53ec26f190fe",
        "cursor": {
          "ref": "90431dba-6bd3-4b3a-86bf-923615334549",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "720c74f9-ad91-459a-8ce6-a07d0952d230"
        },
        "item": {
          "id": "50032059-0373-4194-87b9-53ec26f190fe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fcbb9ed6-9e5c-410d-85fb-dab3c2ffc005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057b9156-30de-4c0b-9329-98e802a42aae",
        "cursor": {
          "ref": "77fe3079-fca5-475e-908d-5ddb2eae7074",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "49d63e15-b2cd-4cff-bf2a-cea28e2cb6da"
        },
        "item": {
          "id": "057b9156-30de-4c0b-9329-98e802a42aae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "517c5ae6-11d4-443b-8d8d-8dca1102d612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d92228c-d9a1-4a2e-8580-65dd74451c43",
        "cursor": {
          "ref": "4c7c156f-a7fa-47e3-abe5-a44391de1efc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b6963d19-3812-487c-81e6-8a94db2ed0a8"
        },
        "item": {
          "id": "9d92228c-d9a1-4a2e-8580-65dd74451c43",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "087a435d-7086-407f-9a45-77f942c99f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159f1916-a616-4bda-95df-99d3224fe48b",
        "cursor": {
          "ref": "ea5ad955-35a0-4d37-bb2d-b02a4d2beca4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc14e7fb-d9ee-405b-9e5e-f67f94af6182"
        },
        "item": {
          "id": "159f1916-a616-4bda-95df-99d3224fe48b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4e430bc6-e874-46d2-b86e-e134ec322a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478fc46-d434-4ef1-8515-be79180ebd8f",
        "cursor": {
          "ref": "3ac845e8-cdc7-4e8e-a14f-b739d24342a9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "323c207b-05e3-4127-b1f1-b9f37d63bab5"
        },
        "item": {
          "id": "e478fc46-d434-4ef1-8515-be79180ebd8f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e0e768cf-ffe8-4919-b6f9-9c89e8b57d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf177111-51ec-4642-861d-f32737451943",
        "cursor": {
          "ref": "53d593d6-5bce-4db6-8843-040860d81eab",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f6ad1729-32aa-47b0-8b7b-d47cf0ac1971"
        },
        "item": {
          "id": "cf177111-51ec-4642-861d-f32737451943",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "95ae6aae-98a0-449b-b522-1b4bb6c88c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e620947f-726c-4b94-9d74-36cb53e5b7e9",
        "cursor": {
          "ref": "c6a058c0-2e89-48ff-9fb5-380a13d3d01d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d5ec1279-1675-477a-920c-6d7ec17f3822"
        },
        "item": {
          "id": "e620947f-726c-4b94-9d74-36cb53e5b7e9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "61b0c341-b78e-47b9-9d25-c57e203eb607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a44d22-3641-48cb-be70-9b283b7d33ef",
        "cursor": {
          "ref": "30d57026-d5cd-424f-8542-acf516f62c78",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b6f2db95-da42-4ca5-9db4-49b6bb6207b2"
        },
        "item": {
          "id": "b7a44d22-3641-48cb-be70-9b283b7d33ef",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "94a29b1c-b0cd-433d-b603-8263473b59d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b72a039-7728-4cfa-9e15-a4251b156ffb",
        "cursor": {
          "ref": "89e863a0-7f8d-45ad-9e81-c0fbaa94c0d3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b16b4880-6457-4b5b-9769-748a2148ea88"
        },
        "item": {
          "id": "9b72a039-7728-4cfa-9e15-a4251b156ffb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8332bf41-9f3e-4440-8fd8-54f050baac35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd19f26-206b-49ed-a1e9-78a1e2b83aff",
        "cursor": {
          "ref": "6867e731-48e5-4a39-82e5-4446e98177bf",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "de18b5f5-f1c0-46da-bf32-1e0b29e52721"
        },
        "item": {
          "id": "7fd19f26-206b-49ed-a1e9-78a1e2b83aff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a7c409dc-6aa0-4ba8-8122-98a2b63c404a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d330d-ed31-46a3-b29b-302aec7a88fc",
        "cursor": {
          "ref": "2ade4fdb-d6b3-4ef0-a32d-08189ae591be",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8e7355a8-a7bc-4283-95c4-a24b0e5449da"
        },
        "item": {
          "id": "504d330d-ed31-46a3-b29b-302aec7a88fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8af7cad5-5d78-406e-9859-23ad6991f84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadaee40-1f39-4e94-9c3b-add96f7bb4a8",
        "cursor": {
          "ref": "49d89999-e442-460c-a6b2-6e908b9aef4c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ee90a622-c69a-4e63-b06c-be6bc6c70eae"
        },
        "item": {
          "id": "fadaee40-1f39-4e94-9c3b-add96f7bb4a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f40785f-10c2-43a4-96cc-f32b3b37f52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae48b8e2-97f5-49e5-ba38-f1ba423dd8a7",
        "cursor": {
          "ref": "bc3af1fa-3d16-4a36-b60e-9cb6905bf129",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "772bdb7f-f756-40da-8c92-e2a96f12a882"
        },
        "item": {
          "id": "ae48b8e2-97f5-49e5-ba38-f1ba423dd8a7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2935729e-c481-4d2e-aa4a-491d6044128f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad58d2a-5724-437e-93bb-dd6f0b9522de",
        "cursor": {
          "ref": "0d9fc1a4-0c41-4364-955b-3cf373a5bd6d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "19b5d76e-6e26-4e73-923f-66cd6c856464"
        },
        "item": {
          "id": "aad58d2a-5724-437e-93bb-dd6f0b9522de",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "16ba5a42-ccf2-4dd5-bc75-43fba7710643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce78019-a6c1-4322-acdd-398d0b214b80",
        "cursor": {
          "ref": "252ad306-c94d-4f4c-a402-ba8ea0d13df4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "44e83e16-1c8e-468c-85aa-09c7baf4f37c"
        },
        "item": {
          "id": "4ce78019-a6c1-4322-acdd-398d0b214b80",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a0e4750b-8caa-4c06-9f3c-54c1cc3be3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd72209-55f6-44a3-a69e-5adb499cbf57",
        "cursor": {
          "ref": "5062f595-d58a-4ab4-8903-a397addf5e97",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa17c920-ab87-4024-8b3c-0c389af9d99a"
        },
        "item": {
          "id": "4bd72209-55f6-44a3-a69e-5adb499cbf57",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb53ae15-eca4-494e-85a3-4cc76551e8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1e43b7-8772-4d1b-80ea-da514fea00f0",
        "cursor": {
          "ref": "34dd6929-3472-455c-929e-f60fe606d2e7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c1c78a3b-5340-4738-8a94-d7e025d84e92"
        },
        "item": {
          "id": "1f1e43b7-8772-4d1b-80ea-da514fea00f0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "918302f5-5bd9-43c0-aba5-5ea2ebe91627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591a5b20-0713-41d4-a13a-1643e085d9ac",
        "cursor": {
          "ref": "a09e337d-af5c-44a4-b0e0-ab5d37dba797",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ad021ba-8e43-47a9-90d6-7477a09f329e"
        },
        "item": {
          "id": "591a5b20-0713-41d4-a13a-1643e085d9ac",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66ab6e34-b3cc-427c-9fc9-92620b1140b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c32aada-5e18-44c4-b193-e59f37fe0086",
        "cursor": {
          "ref": "578dbc2f-813d-42b1-a5a5-b7bd8328fda2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67f7d4e0-3983-4d14-85c1-9d5593cfe8b4"
        },
        "item": {
          "id": "5c32aada-5e18-44c4-b193-e59f37fe0086",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ed8b1b03-0072-4f98-a241-bda29bef051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba1e3ac-ef40-489d-933e-03de6f3c66e2",
        "cursor": {
          "ref": "275be660-f818-495b-a996-825bfdab2006",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ca3ef66-5a1f-4818-bd3d-8c60560f7573"
        },
        "item": {
          "id": "cba1e3ac-ef40-489d-933e-03de6f3c66e2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fff48343-1a7e-4d79-bdb6-a6b88058e751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5939d95-705c-46d8-ba50-17541da17eef",
        "cursor": {
          "ref": "af7cd322-ff2d-41b0-b1c3-60c86818fcff",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0ec38682-3249-4ab5-827a-191bfeb6c706"
        },
        "item": {
          "id": "e5939d95-705c-46d8-ba50-17541da17eef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "384ae30f-8428-405d-bae5-44dd70fc32b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f64376-c74d-4ae7-8e58-8d1b4dd95ee5",
        "cursor": {
          "ref": "c0f4f37f-54d5-4c7c-ad4e-a763d756d9ed",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f9cef17f-7b64-4986-8e9d-d9899ba4d1dd"
        },
        "item": {
          "id": "39f64376-c74d-4ae7-8e58-8d1b4dd95ee5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4763b2bb-cea5-4ec1-9a96-a77ab704c0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312a9de0-453e-439f-b843-b88582a81fb5",
        "cursor": {
          "ref": "c3777313-bc05-4974-9cb9-d8f9b82c249d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9f73addb-41ad-415c-816d-4d4deef7b4f6"
        },
        "item": {
          "id": "312a9de0-453e-439f-b843-b88582a81fb5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1e93969f-9ede-46b2-8301-8be727b316cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46deb8e3-d4bc-4f4d-acb5-a451d0f5aaf7",
        "cursor": {
          "ref": "4fe77ac6-707c-4bae-8684-7a85ddb2a87d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b686aa85-1919-4c73-a72e-9e4adf9df1a8"
        },
        "item": {
          "id": "46deb8e3-d4bc-4f4d-acb5-a451d0f5aaf7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "086e5602-4e15-44f3-ba53-6ab58389563e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994fc083-1172-449e-a8e2-8cc029382431",
        "cursor": {
          "ref": "45d4d331-d941-47a9-a77b-a77f21239db6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "020c24ca-142f-4b44-bd96-d4e0fe84e8b2"
        },
        "item": {
          "id": "994fc083-1172-449e-a8e2-8cc029382431",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "80b281e6-747d-44e5-af6a-e642903fa377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8869e62-6002-4f96-bf53-e4f2dbaf86b8",
        "cursor": {
          "ref": "c52c6702-fb2e-466c-a81a-de83c4e78dbf",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b44f52d9-5909-4084-9d74-6ca175249f7d"
        },
        "item": {
          "id": "f8869e62-6002-4f96-bf53-e4f2dbaf86b8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b2910f1-55bc-45d3-b8e2-6e59f4a718ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94983d6-0b23-46b2-9b57-e9290626978b",
        "cursor": {
          "ref": "acb068af-ef75-43da-b99a-8dda64c72810",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "28d4d433-f821-4949-b3af-7dd771bad753"
        },
        "item": {
          "id": "a94983d6-0b23-46b2-9b57-e9290626978b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "747aa5b3-590c-4be9-abb1-81e4da447c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4326e2-a3e4-4e52-8885-772a09db1358",
        "cursor": {
          "ref": "e75362c0-c778-43e5-b6f7-5c97fce4a98e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "afa190e2-d78c-449c-9cae-98f34ff0ee16"
        },
        "item": {
          "id": "2c4326e2-a3e4-4e52-8885-772a09db1358",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e5266bab-9985-4eeb-954a-8068fc9a5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcf69a1-d8dc-4762-8cd1-551cfe73c51b",
        "cursor": {
          "ref": "57ea8bbd-8692-4b09-a082-eb50598b70f5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eb168c6f-25e5-466b-aee5-b218318e5436"
        },
        "item": {
          "id": "6fcf69a1-d8dc-4762-8cd1-551cfe73c51b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f81e877-3b0d-4151-8b6b-8f57caee9d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcd4895-ff88-47a5-a426-f18b3a6b4f43",
        "cursor": {
          "ref": "85f8a09f-30c7-49bc-a9c5-3dc80f1c33f4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "823725bd-126c-4ba7-82b6-37277a28cc2a"
        },
        "item": {
          "id": "9dcd4895-ff88-47a5-a426-f18b3a6b4f43",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "575a80b4-f053-4af9-ab1f-d5fd35230e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6add8a-f0e8-45a0-84f3-d399eba679b0",
        "cursor": {
          "ref": "5eee0d73-328d-49ae-9f90-814e30353aa7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f146d413-f371-489a-b84d-e0a7a7d64e0a"
        },
        "item": {
          "id": "ac6add8a-f0e8-45a0-84f3-d399eba679b0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6945c3db-a99a-46c7-8f2d-0ccca464cef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11dca08-d097-4e13-a72e-32cdc81e1841",
        "cursor": {
          "ref": "e8f7fb30-ca56-4070-b0dc-9a5a879c05f4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "138ab2c9-852b-4afa-88c9-436cad167ae6"
        },
        "item": {
          "id": "b11dca08-d097-4e13-a72e-32cdc81e1841",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bd485009-c807-46b2-adef-fdf3c3f819e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c11194-7f13-4188-a2cc-b1d6e2700648",
        "cursor": {
          "ref": "2ea18957-db2d-4dd0-a218-86c7320c6336",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "da37b547-c539-4798-a561-ac493304d397"
        },
        "item": {
          "id": "39c11194-7f13-4188-a2cc-b1d6e2700648",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "75dfabcd-c786-4fb3-8f3d-857ae9df8e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a31c81-3d4b-48c7-849b-8625512e1f57",
        "cursor": {
          "ref": "61677839-93e0-4f77-994a-38a15911f953",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "74af1ae5-eb98-45ed-a3db-6ac49429b6e1"
        },
        "item": {
          "id": "50a31c81-3d4b-48c7-849b-8625512e1f57",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f6dae6c6-a889-4fda-96b6-0b2d51416366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc67231-7d2b-4df6-aeda-2cad22eddef2",
        "cursor": {
          "ref": "c268df38-6787-43ff-8adb-2891643a6458",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a4d628bd-6825-43df-a9fc-50130f790021"
        },
        "item": {
          "id": "8cc67231-7d2b-4df6-aeda-2cad22eddef2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "20b1bf1f-d4c0-4fbe-91a3-8a1b8485c83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3a3fb7-563a-49cd-a0b6-2542b3e02398",
        "cursor": {
          "ref": "669f8b69-5816-4e84-923e-5cb23122de75",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "92dcc858-0515-4298-95fe-d701e777707d"
        },
        "item": {
          "id": "4c3a3fb7-563a-49cd-a0b6-2542b3e02398",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8129acef-a16a-47ca-8309-3d47f299bfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb8d0f9-22eb-4c5e-b768-2bdcf4e8f8df",
        "cursor": {
          "ref": "7a7f579f-d25a-4f9e-ab3a-9cc8f16de5d3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2da5e6e3-27da-4be6-9ddf-bd6d74120a59"
        },
        "item": {
          "id": "8bb8d0f9-22eb-4c5e-b768-2bdcf4e8f8df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "59b376ed-a0f2-4e54-8387-2efe2036e2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd58121-8638-4331-9551-e6e6c44d9ea8",
        "cursor": {
          "ref": "0c665877-121a-416d-bb0f-7eb1fc0ca77a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d4387757-a136-48b2-8355-71e35955a742"
        },
        "item": {
          "id": "8dd58121-8638-4331-9551-e6e6c44d9ea8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72396323-4fcb-442e-8914-8a45f3fa5135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aabe474-d7c2-4311-baef-4d87cf152164",
        "cursor": {
          "ref": "2892e3a5-a446-4487-8ff7-5ea1cd3bee73",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d94d29d2-2d83-41e5-b72d-8a04e34a8084"
        },
        "item": {
          "id": "3aabe474-d7c2-4311-baef-4d87cf152164",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9b24a646-e20d-432e-9ee2-ee6c6646b4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7b2599-52ad-4260-b5ee-8de4a8ac6834",
        "cursor": {
          "ref": "14e26453-5b77-4872-8641-b513e8b0b5a3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "00e9b901-0e7b-42fa-b95a-41c9a00ed4d0"
        },
        "item": {
          "id": "4e7b2599-52ad-4260-b5ee-8de4a8ac6834",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d4bbe072-95fe-4e51-b6c6-98ce0552edd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b26296-cc19-4369-a21b-f5d706447e73",
        "cursor": {
          "ref": "5b7fbbfa-932b-46f3-8b92-d9fca3286471",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bc19687f-aba3-45e5-9588-b9477fc3a30b"
        },
        "item": {
          "id": "b6b26296-cc19-4369-a21b-f5d706447e73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bf3c07e4-696a-4f7b-9fdb-367d4dae3eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa5d166-424c-46c4-abf4-353f41a0307f",
        "cursor": {
          "ref": "0a8b73f0-38b2-4a1a-b93f-02a96215cd8a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "44567367-e96d-4936-b0aa-45d3ed844e18"
        },
        "item": {
          "id": "7fa5d166-424c-46c4-abf4-353f41a0307f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d8d46a85-2204-4085-9b4d-68b5a3bcbaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3d430d-14fb-43f2-b81b-f014b46828e5",
        "cursor": {
          "ref": "800b1dc7-e5a8-4c5f-938d-dd2596c84d15",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0136bfd0-6942-4b3b-8c51-3223e0441c5d"
        },
        "item": {
          "id": "9f3d430d-14fb-43f2-b81b-f014b46828e5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b54723b8-e2cb-4c34-8296-edb2a53f8c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebd7717-bb2d-486e-b272-602294d225bb",
        "cursor": {
          "ref": "f91fc849-e462-454d-a444-a5a5d71f332a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "12382741-f1df-4ea5-8b49-b0bc7ddafb4a"
        },
        "item": {
          "id": "aebd7717-bb2d-486e-b272-602294d225bb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4fae2686-83d9-427f-9d81-bee7f67b0b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1775088-e455-4133-bf2b-6ca449b19943",
        "cursor": {
          "ref": "da6a6c5f-cef4-44de-821f-482d3b0909e2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dd12f53e-97e8-4fd2-b36c-d1e1d741902a"
        },
        "item": {
          "id": "d1775088-e455-4133-bf2b-6ca449b19943",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "87807edd-a1af-4a8e-b05a-3fccf8f02ad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f8bf24-ac45-4393-b872-f3ed4aa89705",
        "cursor": {
          "ref": "15df51cc-ae86-414c-8e82-c741e1aad6cf",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ff68070f-b936-4c0b-93c6-ca2a6c7a3214"
        },
        "item": {
          "id": "29f8bf24-ac45-4393-b872-f3ed4aa89705",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63dfe3dd-0815-4c5d-95d4-848ba9df4319",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e38ab8d-1fbe-41a1-a7fd-1776b0b62a2c",
        "cursor": {
          "ref": "36ef3296-86d6-4a84-bf93-4235cefb63b6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "efb1b835-a1a6-40ec-a90a-8524859db783"
        },
        "item": {
          "id": "0e38ab8d-1fbe-41a1-a7fd-1776b0b62a2c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9cc36845-e364-4d99-a556-db9f6f32f79e",
          "status": "OK",
          "code": 200,
          "responseTime": 3243,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c69fbd-a04f-4dbd-b9ed-fa836c4ead1c",
        "cursor": {
          "ref": "cefd3b54-529d-4d00-a639-e6204f439fb0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "20592a01-fb61-4c82-8b7f-69c53bc3b983"
        },
        "item": {
          "id": "97c69fbd-a04f-4dbd-b9ed-fa836c4ead1c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e2437a32-0d16-4cc1-96f2-9a24b4c861dd",
          "status": "OK",
          "code": 200,
          "responseTime": 2456,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1a11c5-068c-4cf5-9729-4e733c1d85e9",
        "cursor": {
          "ref": "c1ac9524-7a6f-43f8-851e-d797ec42a025",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b826625f-90c5-4f33-9745-b99f2485835c"
        },
        "item": {
          "id": "3b1a11c5-068c-4cf5-9729-4e733c1d85e9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75e07813-c22a-4510-9a35-ae2372accf24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1a11c5-068c-4cf5-9729-4e733c1d85e9",
        "cursor": {
          "ref": "c1ac9524-7a6f-43f8-851e-d797ec42a025",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b826625f-90c5-4f33-9745-b99f2485835c"
        },
        "item": {
          "id": "3b1a11c5-068c-4cf5-9729-4e733c1d85e9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75e07813-c22a-4510-9a35-ae2372accf24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2175efa5-e715-4e7c-8300-df91b1338381",
        "cursor": {
          "ref": "483cd9c0-3e01-49a6-9fef-df2c139cf26d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3a7fb440-650b-4010-83c0-f14a728e2e17"
        },
        "item": {
          "id": "2175efa5-e715-4e7c-8300-df91b1338381",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9869fc66-f20c-4b96-8c25-d4cb7c2ed919",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388f7d54-d919-4e90-a786-f0fad026bfc7",
        "cursor": {
          "ref": "d9f97c52-59bf-48bf-a50e-11d250c153f0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a7a85a47-8253-4f9d-8f75-fbd7f6eb9852"
        },
        "item": {
          "id": "388f7d54-d919-4e90-a786-f0fad026bfc7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "678bad7d-2abe-4bd7-955b-064a1203e689",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}