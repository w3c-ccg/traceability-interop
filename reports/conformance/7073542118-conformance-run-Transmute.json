{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "727aa30a-e061-46f1-8f78-4cf986bee962",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4ccd43b7-1717-405f-9612-e595c5c39280",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fdd366d-a797-4760-877f-05535fd9172a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ecd1a4d7-ca9d-4d1e-9238-f8f81c29dd54"
                }
              }
            ]
          },
          {
            "id": "3d4ac83f-9806-474e-8f0a-9da56cf9f153",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3007e34f-987d-461d-a213-dfc5211b9012",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31577310-c7c9-4fcd-9c31-9734487acd43"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a0843ccc-6975-4c92-8e67-0252748a51e8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "de9ddad7-77b4-4f3d-94a2-01731ab4e35b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef648d94-f4ab-4958-84ab-7ccb533cab87",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "952926ed-c661-44e7-bf91-fc91433600ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3083e47-2dd2-47e6-a984-6c62cd32c505"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d8699b5-2167-410a-baff-2bc1d87943a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3500f1ed-0c7d-4400-9d4f-cbc3d0bf3ebd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78ecfb0c-8985-4a51-a6fb-1d37623a8f79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff8e4fb2-190f-4ec0-aaaa-cf334aceda04"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e3c51c6-6a12-4fc6-b41b-10e6a5620d2e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "06d74f2d-e9d6-4333-9bbd-387eb0351ea0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ff26c77-de6a-440a-8466-22ae58b0f214",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3a1fea0-18ef-4c53-82e1-7df3dcff5a4f"
            }
          }
        ]
      },
      {
        "id": "97597795-1fc8-478c-943a-768d10decf6c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "196c9db6-a913-4c06-bf1b-18f9f50a3f98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00e11f17-7737-416d-9a00-94a38302757b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa8c7edb-edd3-4d50-8897-41471f9a0ad0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7e1eb2-7563-4369-9b05-c1af7b1d20f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b33b51d9-fa31-4d6f-94e6-a119080bfb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952f8df1-a3da-4279-96c1-4603ff6a6384",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5d4baa-e956-4ed6-b198-4d9cfd4ae830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2c6d175-2ed4-48f1-9636-132e5cb23289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4788788-e8f0-4adf-8d7c-f062198b3257",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0accb5ad-09c9-4923-a724-4cda9bccfe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc63d7d2-fef5-4577-859c-dd7328333b4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67ae76b7-328c-4f4c-80e4-7f52364991cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "005ebbc1-e3da-4480-842a-d885579f6947",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44807202-1758-4e49-b266-f3b90e629fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7f894ad-9eae-4bde-a007-5fadb8811cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661d4d8b-01e5-4cdb-9dc4-0caa23f90d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7589c44e-da48-48be-ad49-25997406b5f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96aa58fa-2091-4c4d-8e9a-f89e5079f17f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c29ebb3-7eaa-40d8-b8a5-f90f23d15ec0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68b4df9b-77c1-4270-b3c2-1121275fead6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c699e542-eda7-4b8e-9600-3d159afff349"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bab408d-0671-445d-8d7d-b7c24953e48a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4e2a6c14-d774-4921-94bc-4fb3554b6760"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "273928fd-e7cc-430c-ad95-8ef4790335b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbe1c159-3d27-4b72-9aba-38b0ca3e30c7"
            }
          }
        ]
      },
      {
        "id": "8a42de55-bb95-43ba-a110-306d79a7ca4a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e40609cc-b124-452e-b831-45845d2b5660",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a87e389d-19a4-4043-a153-c54fe0006018",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3731765-825c-40f0-8c8f-5ed68991d4f1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f098765e-cfb7-4752-ac44-f74130fb38b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899a0836-2b1e-4ae0-aaa7-57d7a38e1abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3444ef23-ac18-4a4f-9728-7b9d84c313da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "779e7e6b-d31e-4229-8924-fe74537c97da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60931056-dfd3-4b5a-9f52-b4a9e1d1c2cf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf393a5-0662-496e-942d-535c9009a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434d5e47-8b02-4c4f-aa32-be94ab894375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a78828c-d90f-4904-b78e-fda813bccd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b7ca36e-6c75-47d8-828c-be014e9508e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa6b3a-b183-4929-8d8d-336b5ec5fd22",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daa9051-3dcc-46b3-9747-c29c454d627e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a847f5-2785-4e19-b947-5f983f1d4910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62398a6b-16bb-4f06-97f3-e824a1014949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5a1d426-5b47-4a67-8559-7a3e21653a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf32c181-c17a-451d-93af-60b50849a8c8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4206956a-4479-4e13-8ff3-2461d5d1ff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf996c5-ecb2-4812-a983-45f6b968c1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d56e75-bd17-470e-9079-82c8b8ccbe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53abfdea-0e70-42f9-a1e9-a7cc85df582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc401d-0f02-4d22-9855-af9ce47236b3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0adb691-ced4-41c6-91f3-d91e87739dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ac8cea-da37-45e2-bcae-f568dd730ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3b98a0-23b5-4368-89c6-64978c9a72eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20a4f81e-3cc7-4e1f-907f-1e9d412b973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144bbda9-b15b-4f26-904d-b2ace0e6f042",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1328ee38-b27d-4d9e-8420-aff357ae14a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6f0e11-cd92-4ba7-b6ad-caa288167670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc14b817-7ddd-47d8-a0ba-b6aeba2905c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f727f7c2-6d5f-4d0b-9601-0ce039be4554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da60024f-3fd9-47a1-be53-cc1e66451d6e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e43d18d-7bac-4b6b-9c71-260064b7b940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6647e39-95fd-4862-8f0e-009ffe37cdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52fce6a-2592-4d30-8da4-4288126c20d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b0fc20-80f5-4c5c-872b-71f06ca39a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d056b2-b545-4fda-9e09-c75564bbd88b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a5340f-e7c0-4947-ac25-c49a50e8c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e25ddd7-d4ec-4484-9d2f-bb3f6c120e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa05851-9b16-4b99-a69c-e35bd5b01f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57bb21fe-6bd7-493b-bb90-0454050b389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47753414-ffd5-47fb-9290-0f6a29e95f74",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12b0cea-21fb-4138-9219-248dfdfb939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261c58a4-2403-459f-b138-2f171471d1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9677e907-87bd-49e0-9b06-82d9305fe1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f117d01a-dc67-4b48-81cd-9e2d04459c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b64f3d-d93e-43c8-a527-9122de64dd7f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6a6f35-982e-49a9-8380-b660c0bc87aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9005e0e5-6b14-43ae-b573-8dd093a3367e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c44b5dd-0cb6-4fca-a632-b53e8bee76ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b828fa-a193-4d2b-ab4c-6df9dcdd3e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d81646-810c-4a14-a12a-6b21a090d8fb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dcaece-33a3-4c6c-935c-769a4381f174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e97c751-bcaa-4195-bcb3-ac987638cf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c05611-9c12-4008-8b55-30a2ba3e8734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9285b49e-7f0d-4b5b-9c3a-b47d273a0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fff57a4-1faf-47e8-a052-450ba4f962cb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c832f9-aaa9-4adf-9799-976e8bbe09c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c550940-2577-4b34-95d2-85d085f7138f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26a7b57-4bbd-4972-8cf0-3e738e786bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2bf5e69-79ca-4709-86d2-9d399f7ba486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f34a00f-bb2e-408e-82f0-7374129fd3d0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bba266f-9aa7-4785-8c3e-c104c2bade7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548c4583-93c7-46c1-9604-37d163acbadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e494f784-7d9c-4da0-878a-63fdb18b3b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fe85d6a-4ace-4789-be13-7bd86bb3442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6804560-4084-4099-873a-b0f746a68333",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b175ef-26f5-4827-b98e-362471d958b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bd02b6-e10a-4b45-89e5-96c259b98ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15086a40-2b89-4cb3-b801-eeccd1b501a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24e9bab4-cf8d-4d21-829f-1347e0bcf08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002dc748-ce42-448f-99e1-8258850ce595",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0abab0-387f-4585-bf79-77a2aabdd443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6397a76d-087b-4b59-a4dd-76d01b910134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b61916-b7cd-4607-b815-92136e488db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcae9094-de15-41cf-999b-ddb5c361c046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9b2008-ade8-4cf5-9c0a-369cbb1174c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99845e06-cbc1-42ec-98f9-1e8a9df319b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0985fcf-c5cf-4a02-be1e-7fb56868a461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21aaca0-97ec-4657-a33b-7d2c61c39cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a546447b-0aaf-4cc0-ae46-de64a7b0c2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d990de94-8f52-4365-ab4f-4baa30b82856",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d67149-714e-425e-803f-56f98c2a32e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229ef5f5-1a43-43b8-82c2-893bdf19da01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdd45ba-905d-4d7a-8f25-1d9062f40a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb98e317-3704-45e0-8a4a-436825803a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b10d186-b5ec-4a9d-9ed0-be344a3d74f4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68075a5c-4fde-4e94-a548-ef6e6bc87203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73660b5-b1e6-4af0-a5c2-aeacab912860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c00022-7c0e-4c2f-bf12-bcfd1cfe34d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "acbb6e14-138d-4808-8c01-45bb3b09545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f987258-757b-406b-8c55-d45c4f15b0f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301c4615-d245-45ae-b9f0-b5b8b8608c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fee1b88-6e1e-44e7-a1c4-b77827515340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643a102d-5fc4-4900-93f9-58812e8bdc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33f863f8-c0ae-41d4-8ff7-0ab0ce37ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb72c9b-6e04-4a57-9554-9798a8cf227b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceb841f-5fe4-446e-934f-6a4707edc3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0674e54f-0425-4e50-9bef-f58964cc5c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74457439-0ad2-462d-9176-32f2e39e51ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc66abf-75b8-4dd5-b8bf-cfc8a483a910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f570fd-9e09-4103-92ea-fd805b6a8782",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cac9e5-01f7-42f6-8d73-8a7cb03c2d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d249fd-ba5c-4bfd-8fb7-90e198f687d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1299c1-85fb-474a-99d3-0858de5154b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e9d2eb-3867-4bd4-afa0-664c25a99d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5b99b8-0fd6-4766-9f8e-a33cc9ed8e6c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291877f-13d1-4d34-a604-8bde1d94d2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660fbf3e-3c41-4aa9-adaa-aaa71d02e96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbaab29-d1f2-43ae-8701-1bb3f4ed506c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdad7e94-a5f3-4f4e-9832-1d67bc53ecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a9f87b-27c8-4560-8690-77b30bdbbea0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46883932-102f-4806-8801-73f09ec070cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a2ec0a-312e-4c1c-8fd9-b855a84fe3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9111c4-99b1-4571-9e70-20d940b41d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77ae5f96-48a7-4583-bc7e-d24a0b6ec8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8926e28b-f9da-46cf-afe8-3b6b9ef7c5e8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa30b68-7b43-4680-b1fc-6810ec185d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32187878-f75c-419a-90fb-7d590b40e20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb16cd6-027e-41a5-827e-a7f04122d359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "538c2bf1-9939-492d-86fc-ccb5c99b9ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb6c1e9-0805-4483-bfcb-c3c5b939a8e6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151405bb-9976-438e-8816-8cf38f601676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b09b8c1-6143-40cb-8281-9bfec80b39d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c1f0e0-07d9-44c7-bca5-2890d3eb751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d96a86-4791-4d9b-9d42-39d927c49bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf77438-fa03-477b-99e8-b500f3a48a7d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6b4598-5869-48e8-9af5-6a366032f201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bda59ca-63b4-488e-ab44-5eeb81c04413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd85c2e0-6134-480e-b899-78420a4f4fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab7e91d-29eb-408f-83b4-04a77fa13a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b11d1e4-d48d-40e0-a8c8-94ddda8c55d5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378aef13-616b-4fba-873f-c279a66e1ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a11fc2-ecf7-437a-bff5-57b45420f0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3abc976-bd93-48d6-afab-93fcf91edccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a56bee4-dc9a-460a-9165-dd154b1844df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1110d1f-7642-4880-bf86-6e7c85e38138",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14b57a3-836d-489a-96ce-78fbfbf4cd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab88d6db-6db2-4b5a-9ec1-4523be072819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5162a97-b094-408a-829f-06c914d3bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27488bf5-8775-4921-b5e7-621c5ef6f133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7370f5-5f15-42dc-b664-ea66e8f52a61",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8341157d-5210-4d77-b683-5ca75a747157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd33e46-77d5-45a9-8791-4eb5eaf40479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bf27f5-5f4a-4a95-9168-4c95f34e2a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05c3151-014c-4ed7-b74d-c0eadb9f908b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75eb9aba-8859-4b42-a66c-1118d88f446a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d79251-190f-480c-91ed-2e70ab90f1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696d8c96-65ff-4241-8f67-205682633832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b746605-c232-4222-b70d-cd58bf091b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f872318d-9021-444c-8993-cd9560fabbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2bb7a9-347d-4f53-a1ee-208548dfba96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f83c54b-4f86-462a-98c3-f84ace32cb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1a8752-995f-4507-95de-7ebb9b873c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c63e367-92e3-4a05-8c63-1c3b0b91081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9ea569-03cc-4805-8a6a-a411488af363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc6c482-d75d-4fc7-9ce3-bd5ce66f01db",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5bbb69-032b-490b-ab5d-6267bbe3ba89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36130891-ba93-414e-8ca2-b7e615b04633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3950f63b-c386-49eb-9fad-8e38efefdd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1c1694-62ad-4271-9dd2-1bd538314e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e5ab7a-d7e0-4416-90ed-47f7cf300f7f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43991e-e5e6-48b7-b891-9d62deafc578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edacb595-e6c3-44d1-9ca8-f2fb049108ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4cb65e-f943-48b9-9d9a-f37a17ace137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b268fe-f86e-4e03-9579-11616bf18344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc667b1e-5e3f-45a7-a3b8-5ad72723f753",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e840150-caaf-4acf-9520-0569a60abd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c4144e-d5ad-47ef-97ce-7d86b27c3a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e589f6-b821-4d38-862c-9eebf782f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "120db498-f3e1-4eb6-9bef-d00a22758866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febaf129-8960-49bf-8ff7-05d41d38f7c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05354a24-8e44-45f8-b499-2e5693cdafad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75a21ba-96f9-44d3-903b-0d5bfd72637c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbd7621-70c1-4a50-8f81-caf075d2cabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "617de90e-daa7-45eb-b8b1-831177c96e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413419df-e271-438f-83ff-2e1c087a7cfa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8618188-195c-4b39-9579-279ce6bdd674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a64bad4-bd8a-4aff-a8ce-13abbfad7fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488cb5bd-ca67-4539-b81b-b2c91bfaf05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f529f59-0acb-48a7-8340-c3c8cf907175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac0157-c205-4a38-b6ca-9d23e2caa527",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda84e1-7d98-4f6a-921e-4ad509aa860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c5c1db-afdf-4e96-b113-a775ff571acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a433fe3-9741-4921-b0af-f34010c2d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2898748-47d1-4ad9-8a07-e4adc0058445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2753e5a2-f4fa-40c8-b672-720e2437e8cc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e834d5d-22ef-40b3-881e-998db157dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac8adfc-54a0-444f-b6a4-4c724c7389da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a713af1a-ea0a-4c8c-9d10-abc7d675f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d60e73f2-17b3-4f96-a041-5d8a55b8201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15e6f58-e7f1-4454-87ae-21c099229298",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277214fd-7ef3-412d-9d07-fda7bf7d582c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec8d43c-6539-4604-b01a-e76b954c4259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbdf3f8-6902-483e-90b6-3a5bd4c2b0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "815b1078-c411-4a9c-b436-0d2c9d34fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7383479b-8997-4c32-bd45-b9b9f913c853",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5694442b-49e8-4c2d-896e-5d3ae86547ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32b7fd8-d087-44f0-99ff-598382c80635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095c32b3-0994-4f18-acd6-7d4c5ff738e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c038654-bc6a-466b-94f5-0f9c0691b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2a1e61-c2ea-48a8-b5df-d290fa2759f4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725b793b-17de-4352-9311-f4cee24af536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaf5e13-e959-482b-bb67-eca179a31498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e95a6e-bb0d-4c7e-bc4e-192baa1f72e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9316b5-3207-4b82-beef-2952906c1744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2e583b-76c7-414b-9f07-10fac4ce8aa9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aab0eb-2f0c-4224-9160-1146c29298c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310e2531-15b3-4656-a7c4-0a83f162aea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d345cd61-b063-41a4-b610-f3301b4aee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "65d8d9f9-795a-4a27-b09b-17bfd6965d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b10fdaa-b40b-41ff-aca9-11f86aabeeac",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d806085-cd14-45f2-9284-0ded9ac6b5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596bbabe-bb57-440e-b5c3-3cb4379abd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be11c0e-9597-40fe-b8c2-193a7a2de62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a44a2f-ce4a-40ce-825d-29ef0ba756e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033e5d03-5248-4488-bb6d-7dc61c708d32",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95d3cd5-fb7b-4def-8ef1-f374cc5b2f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5af4366-98d7-43a1-bd7c-d175cf2fc4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6222453f-60c6-407a-8fbc-9f9d62ff3392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61629d9-3941-4fad-a426-626b5bfb6c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9137f4e-fecf-44fc-98c2-ca535419264e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf057cbd-e9f2-47dd-a676-d3126df8dcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74fb89c-089a-40d3-9ccb-cd16a85f68dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895a2fe7-20a1-41da-8dcb-03b66358777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc7c4cf-6c52-4470-8458-3a802e40f45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23534f4b-2961-4bf3-92f0-06d306a6fc96",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146c1dde-9052-4721-a002-f512ebe57e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26872c7d-57d6-43fc-be5b-4bf889113803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11bd782-0553-4f5e-a778-ffaf9b67a74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9310c682-3161-42ca-bc99-0f5fbe34aae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3fa0ce-1368-42c5-9593-634811cd3f75",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be08f2fb-78b6-4446-845c-83de7e8afa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1617fef0-77f9-4423-a7e1-3b6f74c27ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e90a3f-a30b-42f1-89a9-fc1574dea7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65af802e-bc55-4a42-88b7-0fff7c40701a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb46ba2-990a-414a-8c80-99bcfb35852a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25745ad7-93b1-48f1-8e38-38b32f480a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473c5466-9b9e-4a5e-b134-a7ac33a1ef2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79761ed7-64e9-4a7e-bf44-43c5a37ea7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68339032-e8b1-4b85-8f90-df29ad766b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b36e56-873c-416e-949e-6da968d5a2e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7554e2a2-6712-4299-a470-804a90952d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ebb8e4-da52-4c03-9502-f66d3c6586c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503a0093-fef4-4a9e-ae00-8b0e4a05dc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "204b783e-0de9-499d-bf74-a4e982384d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d395c5-87b7-4489-b0ee-cfc1d446bac2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b66677-5072-4bb6-830a-c8b0a0b57eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f0875f-49ac-47ce-95bb-90166bc8a36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6995bc38-eb68-4134-aa62-607adb9d7db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcfe100-e3bf-4dcf-ab47-c5f1a8bf0ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a578f4b-09e2-4fde-b20a-0ec979ba5b7f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98498a50-b706-40bc-89ee-4452c80cc14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d84ff5c-28d5-4e4b-a683-0ed41a4d0a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb72150-0654-4cdc-a968-2b752634bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1acdfb68-512c-4901-b6b5-520d920e4ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031d8005-f288-43e9-a6c0-b510f4f326e1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc73dc-517e-49e8-8a39-b729ee25cf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6149b3fe-f008-4985-81c6-5085fc2f5861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b844216-9452-445c-af99-3a81b83a8684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a619dc40-a009-4436-8201-a95e78c66d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ec64a3-9047-41e1-9f74-dcd4ccd21683",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f0aae-3572-49aa-b321-04639e4f1f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f476e5-d2c2-4e75-bc45-e86b039b8f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ead9bd-7f59-477c-b9f3-66295c109033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2bcbd5-cbd2-4279-9591-1b5379e4ea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2ea74c-53ac-44ca-88b9-dd353888c35b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcca5f1-b5fe-44a4-aecb-e65ad60e20c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bc5cec-60dc-4778-8ffd-31b42279c882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0b6aa3-eda8-450e-8aad-d40c9b21352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "764dac98-dfaa-41c3-b316-bc6fa1cdb6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86241572-7a47-4ef3-8ca3-0437157394e9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f3df16-78d6-4fe0-8c01-be803228adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf007213-506d-4955-89ad-43a8da9608f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f404ba6-2090-4eba-a6d2-56227fb815ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a00206b-acf4-49d6-8d8a-14582798e988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbc7f26-606a-4904-93fc-ad48406c67a5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cd77bb-5529-4116-b875-22fb6bc2068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044803eb-9d4f-4fbe-b0fa-590e84276e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6ec89-30a8-433a-99c7-bd79bfa373a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a43383bd-d0fb-4db7-a26a-3c69e54a1752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6f07f5-b1f4-43ac-971c-590df8c4ca9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e030833-2487-43bb-83ff-6c4edf45b087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7fddc5-5c12-41bc-9d5e-bc224adc96ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6c3a4b-5e0b-4b8b-831a-f94d8f8d2da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08c4a1ab-2f45-4007-a887-7b8d005f35ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8219de-4bd0-4749-8929-f3d58876ee5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd63e68-f7d2-40fd-a72e-c8b59209913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f687d498-8d9c-4d08-972d-53bd83b0d1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec714ed6-329e-448d-8b1f-f3b840e7e880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3541d456-d070-4930-93e9-acc8c6cbe953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5eb395-fdb5-4168-a2dd-12ec3b477b8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b093be2d-b25e-4468-8e5b-211d5e3f3ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4456cb5-6844-4557-a6c8-561deeb26a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7d3c1f-fbc3-48c8-be06-3182d2863e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d0ec58-62ac-4b9f-8d5d-f06cecbb0f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5613b1-a16a-425e-b791-4c5f5ac0b46d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1940d0c-07ad-4e1b-88fc-1e91ce6001da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59135b93-58fe-4815-92a8-01f78e2ad6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcb8331-6d16-40f3-baea-09eef2d7f4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "170b3d4e-2587-46e0-9d23-62ea0144a45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35f7798-2185-4ad0-834a-ad72007abcf6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe18b61-e1b9-4870-82ea-12714b223d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9510b5a9-5038-4610-a771-ba093076e222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a9cba-cdb8-4742-b7e4-77d94005afc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ee18de-6c0a-44ff-bcbb-a1b8772f576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bd6205-66f3-4995-9c0c-c7547e7db8a7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845c788-f0bc-4e5e-96d8-a37a3d3c4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce03959e-a7da-402c-a134-35dadae89413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ba7549-4b72-4e25-ad84-b71cfecd9cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "77390d2d-0ad0-423a-b791-95adbe902cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0257f89-1a02-4593-82ff-d90ee767c547",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ce2241-250e-4f45-b91f-2008adce6427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38076451-dab5-461f-b4ec-3d31c1840a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b7d9b6-28ae-4577-96aa-81ce1214aa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d0cf64-1bd1-45e0-bae2-f9313f689783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e897cc92-9967-4ad9-bb2a-13d1fb3ee6b2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2dcbae-1db5-4053-b2f2-fa770dd4f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d207b9-e179-4bf7-9993-34170dd225fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371fbbd1-4fd3-4ad9-9cea-1df4ab40df3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5ded18-85d7-4ae0-ac33-bf269dec59b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e30adf-76c7-4a13-8789-297a7d656351",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4e3b9b-f70a-423a-8b6a-6717dd139fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a1e946-1c46-4446-a7bf-6f942b00edae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424daa34-a126-4a05-9116-a1283f055b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa13fe0-3676-4df4-aebf-c9e2358b3845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aae7a7d-a744-4367-a662-86058e7f687d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d0a678-9367-4d18-9c06-18f83b43733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e177438f-bd0b-4f56-bc7d-715ed1c5edba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f27039-d2e0-4627-bc72-3a4646dc840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdc2b33-a948-4987-ab78-0d60717c8516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c4547c-0902-4f91-928f-610f6d94f8e6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7807636-c9bd-40f0-8901-412685bf3dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4448fb7-9635-4d46-8b0d-5df23f98198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b02537-a3a0-4dd6-b869-53fd3eda81da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3aea705f-e6f3-4bf2-b03e-944fb7691f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f350f89-f42e-4b55-9153-7cd11b791ac4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ad7c2b-a2ae-46de-82f4-273b08ca432b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e249976-9074-4691-aaba-1515c2a723b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a884f731-dc7f-4e04-9f7c-f836fd2b82a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5ee443-0689-4cb6-af13-6b56bf386aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58742466-23d9-49bd-bee3-f4ca28d58929",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2785ff84-e3c5-4306-9597-4fa468840c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d271bb04-f2cd-43e5-889e-f60ab64d9fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b826772-bddf-475a-9d91-e4b10992d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0954c176-0944-43a0-a70e-18b466ffd951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a96b111-bd15-44d7-8f3f-1d4a345e2e3a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2bfd3d-9f14-4ce1-8f80-7e0fc306c255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d664b829-bb9b-4ae0-b2e7-d409e51d6b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d77da6-82ce-495d-9f63-731cd2b9a6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "035b4aaf-171f-48ec-a556-da57d1078326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36ecdfa-b6d1-4bd5-8fea-33a688c86599",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332d18cc-cfbc-488d-abb6-573dab5cd165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10234d5f-ed5e-46d8-8f24-59f5e6443ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779dac83-c219-4564-afde-929fc06f6ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf8b83f-c1dc-4912-9716-c7b2c7c13ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb061075-9254-4494-9f5d-52fc065a94ca",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17456e72-c4e1-44d2-b960-f846b2e96d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fdc753-798b-4331-a008-b3ee587c95bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f418ff-93fa-44ad-9ad5-f79748eb3bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a69e04-ade8-4cd1-9b21-4928af53228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4583cd41-23d6-4988-a7d8-ff6f15c929de",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16330a7e-d49b-420d-b9c5-151114fb2822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325f1fa9-bd97-492f-99c6-b72d3b5f38c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56eef80-e640-4f36-9d5a-6de72a55f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e626339d-63f0-4a44-998d-01597173ef1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61148ef8-fb93-4a1d-91de-487672c70aac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585fecc-052b-42af-bb33-71b4773b20bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fca25a5-c3c8-4f9f-b471-92375f5badee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62871b8f-7df8-44f0-8985-38861e0ae99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b97aff9-e4a5-456b-b946-68b9d46ed56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cd7e10-75cc-4963-a5d8-5368a01f89c3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1875c454-45b9-492c-b24a-ec2c93766eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabda5db-7c32-489b-a837-098e31367c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec61d84-8aa6-4b32-a80b-128ba514756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "411b8d89-b598-4946-9027-04163bfaa592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2025ac8-4581-49d4-8d42-fe4051831beb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2da404d-77be-42bb-a092-e14a8604c8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410b7805-b4f9-4b15-ae12-6fc626be90bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef5d47a-9e96-41b4-ab39-cbf4f35cf17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf6f9c7-e1c0-4b97-b7c7-e8c7eeba2b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793cfb47-23e2-4b64-9600-f9f228c437b3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c3bf2a-057d-440d-b96f-bc388d75b52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df46f02-f0c0-432d-aaf0-802589d89d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccfc508-c64b-4ca9-b63d-41c4ebd1088b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf7a50a-6ba0-4fd5-ac52-6b261fa8d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c743a5db-95c5-4016-9ce2-5628098c505c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c433e4-c007-4c8e-8efd-ac15d4b8df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c412de12-eccb-4988-a802-d9c216598119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44aac9e-1f28-48d1-842a-86da226b54e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e31b0ce7-b22f-4124-ba3c-70dd966d8254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05ad430-663b-440d-973e-50eac4494eee",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77c1ca1-300c-4bb4-9a19-86c2b7503c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62a7738-f97f-411e-b772-a206cf614d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d98157-62b5-4a76-a85c-1cca746b2369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "799036cf-95bb-46b4-94b1-30eff4bfb214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662c7c47-ad7c-439c-bf42-3d8d4a0c596e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ee33d5-aff6-4e1f-b5bc-186d158d9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bd7893-5e5f-4a00-b60b-8a5165baf488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce986e7e-3f17-4572-8f1c-217c1784c69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbee10ee-e9d2-4f5e-b238-d4008c462298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c6088c-6e9b-44bf-9ffc-0bd723b63165",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a926e057-dcb2-4f14-b0a0-19c1421fcec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab128a9d-7145-4eda-a4ac-b7d8ff7c14c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd69e1bc-6cf0-4c4d-8956-bf1f7a410667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b928d0-58ae-465d-8b57-9ddf3439d654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a4049-8961-4672-a071-4b469aba3069",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3958aa-432f-4c90-960c-08347542cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b99ccf8-b0a6-47ea-88d0-584e861d472a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6338540-51e4-4833-94d2-75cf0057493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccf3699-08e3-4fcc-8025-afbb2e11209d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bc887e-3835-4f9b-8b4c-0da8987a42c9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13603e8-0964-4302-a980-4c0eb0857755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e104e4-e673-4c38-9606-5a32ecd595d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766949f2-2386-42e9-adaa-4bb8a6ea63de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a94bdd3-13a8-46c2-a730-6b44450b720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3427b099-d3f8-43ed-95bd-1b286a40ffe8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc80e617-894c-42ce-b2c7-dbde5eff9efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491b7b96-8513-4d3d-a8f6-1b4b62e025aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64f2840-0416-416b-8f5b-690ac83cfa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "435a724f-13c6-4e2e-8b46-f06a12c9d094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fe43cd-63aa-40c4-b953-eee9dd140803",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962d8c40-51de-47f7-9b6b-9a29ab34ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783ca0b3-62b6-427c-b4db-a9baaff387ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab0365c-6148-4b8f-9ced-e43b59e69c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "267a635b-a9e0-4d0c-9596-a688f23ddbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34609862-8c94-4a3f-a485-bd53fb83cca5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e047d-aebd-41e0-af8b-8f1afb63ea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b144f70-8edd-4b90-a700-ef9a2f48c07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491fbb2c-290f-4c2d-b0bb-e1f2e725b709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e948ac-e8f7-44f3-a8ba-dddf61a97afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea114f0-ad9f-4e1f-a3b8-0e125bfa76a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b03de-84cc-4f42-98cf-d60ccea14cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27860b0a-892d-4b73-99e9-7d32e19a512a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6decaaf-d723-4b2b-ae59-f5569f71b80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e776e835-cfd7-4a6f-b350-121919007974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95be9e30-60f1-4043-acfe-8758c43f4e7e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bff2634-c0fa-4385-ba3c-5cc30887127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbe8be9-bfac-4c56-b206-e9db7fa9bcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537420f-c40b-4719-bf6a-8d65d746f3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29da13b-e197-403d-b7a8-93648b318171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2569bf0-7b1a-4306-932e-ebcef38d5c75",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d5a5e7-a22c-470a-8bc5-1a157ae75620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e24f4f0-30ee-4015-a0d1-a8518a1da7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1d4505-9cfb-474f-80f6-fc9568cd804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22053c1a-c5c9-4421-a243-2cd2719df59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78e2f19-c8c6-42e2-9427-278b46e20b1d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144b3e56-71fe-443f-8776-27503ed17def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5140d5-e7cc-49ed-9989-d050f59ff426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2472508-7097-4ccd-bb3a-b512636bb9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69523518-f2c4-4461-a4c3-76e5806757b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff73ece-3373-423f-bb4f-80dc30cb6feb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9380765-0518-45ef-969f-75795eae5bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7122e1-5854-4363-8260-12966e3d5c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b180c4c-0d24-49f8-ba34-e11465d5628b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6742e62e-3a4d-414d-afdd-ed841274ed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6021b0-5346-4164-898e-c01efa5ddb91",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4da32f8-f865-4b3d-92be-fe22166559b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30fa9ca1-ee45-4da0-9f36-18960cfe3c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a61d330-8ef8-4250-b983-1c59abe2a5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e89b86-a653-4e7c-83db-8f8c357c7e31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7206cd98-381a-4c92-8750-397e773cb3fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1675009f-6ea8-47a7-af85-22c96e5847cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24af92e-44c8-49ce-b1f3-b06e61457909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd032abb-e414-4a80-88e2-e38e0ae13047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd07bd2-4733-4bbd-9063-4489c10a9098",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec3e2426-2a32-4be9-94cb-efa18faf9d51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7103b06-4837-49a4-b8fe-5f6f6328ae36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd072177-2364-400f-82dd-ab47e7f0969b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a74c02d2-05a5-41bb-aa3c-535b87f79d8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "712d7657-08ec-452e-bbb1-0170fb843e4f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a83c1dd3-4590-422a-836c-52995064c522",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9971475-9272-4849-9356-5d526cb5e7e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2401f1b-8057-4088-8817-938fe25b6e09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab321462-8e56-4631-8232-1a8aa23b4352"
                }
              }
            ]
          },
          {
            "id": "468a3bae-7862-460c-abbd-4c06a1cbf899",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbe124da-dbc9-4e2f-811a-8f3dd23a9e29",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5c85ea3e-8c4d-45ba-a05a-4829e5da2c39",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0912a7be-310d-46e9-96c1-3baa6300a7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7acac7cd-7f00-4c4d-8db3-ef36bae77f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641db26d-3816-4505-ae94-1d74cf649e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996bfe57-1423-4884-8b17-dcaef7db5b26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12737d5a-7d63-4eec-945a-be219f6994f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda00e64-1212-40c5-bf63-690ae7560dc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b032df5e-49ba-4011-b3e6-e97a1ffc26fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48cbfeac-7b71-4311-baab-12953c2c8442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bb30b3e-20c7-4574-8c99-924705bbbfd0"
                    }
                  }
                ]
              },
              {
                "id": "301458c8-137a-4eea-96cc-0c47ea406a59",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5ba3ea6-69b6-4213-a0a5-be43038da8a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1eaafd28-27c0-4fd8-b440-3ec883ad639b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a061959e-93cf-4b8b-ae91-f3e8a2ca1605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25de8d5b-6b3e-4864-a9ab-2deae9c334b7"
                    }
                  }
                ]
              },
              {
                "id": "11c74315-7b8d-46b0-b6eb-585ea171b2f9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e440c870-3ed9-4a71-9d52-f25cfa9af0b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de4e35b1-05b1-4fac-901f-ae4b8fe7773e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "478014f3-dd30-43cd-96f8-0b329bcbfd0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98bcc860-d618-4b76-b0e6-c2080d727766"
                    }
                  }
                ]
              },
              {
                "id": "d79256ab-1c6f-48eb-a984-d78684415897",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a196da14-9651-44ba-8fea-2fdc3fc31be2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e04bf04-82f7-4a35-b495-e8c2f42f38c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b905b40c-31ae-4e11-bd08-ac0aef38b06c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7da2b59e-5341-4a05-8cb8-46cec1234d6e"
                    }
                  }
                ]
              },
              {
                "id": "18137b71-9b0b-4c80-9717-a093f63227bf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78b1fee1-e468-4a94-bb32-d8c860742413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "126ac4c4-201d-463c-b855-3ddcfec293b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "870dd4cd-f7af-49d7-a9f4-7e6a70115355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "712b6c38-aac3-40d8-93d3-237dd67bb316"
                    }
                  }
                ]
              },
              {
                "id": "b50af14b-f05c-4ed2-aaec-a4ebc0224938",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7627fd7f-273e-4c24-a4cb-14c3513666b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "892e588e-9217-42bc-914b-2d03cb9169a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0825dff-ba57-4784-86e6-d5447d51b139",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "275b7c51-d751-4a11-93b4-dd85a1581dcb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19376371-124b-40a0-a499-b91cf26d635b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0cbe219-73bf-4be6-a927-702197f4c036"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "461e02a6-81bc-4cfc-be00-a361228f4702",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aec759f-15ac-45cf-b58a-423dd3f92805"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bb893aa-fb43-4c24-b30b-35c8d88702cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3f96905-0d30-4ae8-b777-fae3014eebc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c41e819-2126-4b4e-a527-ed1ec7b3a2d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9621df14-1073-4b8e-849c-752f73e0399e"
            }
          }
        ]
      },
      {
        "id": "e3a73870-dfa9-473b-a5c3-8971f0bc9455",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "77aae7a5-15bc-473d-bb62-caa0bd2152e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c78aca02-8cf8-40ba-b07a-e73915999e80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66752036-abf8-4382-ae67-4682e7c405d7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d19dfa-0f8e-4b01-b1b1-301386a9d44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1cc583-c620-4502-82dc-662b4c2b2b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1868ccf9-aef7-43d1-bd72-5fccd95de96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2876c44-8ca1-4fc4-bf98-f53b6d29de44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfbd074-4a00-4baa-8831-7815d13e1ef6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabbbefb-81f6-43b4-b218-d99b3ba294ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c1c078-5a5b-432e-b8bf-97be90bd0756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c91419-3472-4215-b741-96fe390104e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "231e0914-66a0-4763-9e4e-16f2fdbd2066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487a768-7c28-4555-b406-9498df5c1a0b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821101be-99e0-4cd9-aa4d-c8556d6b664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df26c64-84a9-46d7-8bec-d42f34d60601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b782e6-8c6b-4cb5-aa03-fbb4bc7af4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4c8f00-4637-4785-9d0d-4b4c6dffede7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b3a613-42cf-44b7-84ea-2a53f05c32d5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902d406d-aef6-425b-b473-3ead19218ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac086ce-de6c-4727-a31d-953f1282cc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7228839-443f-429b-9f0f-5259f59b4be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdb3084-add5-4ee7-a2da-3bc6df8440a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52776ab2-6a57-4c48-8bea-9d6aab810a3b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffa72f8-fec4-4b54-b0e9-329e75be5e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d1abb4-e5a6-4133-8788-6d0477902a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee754174-fafd-4ccd-b973-26c72ceac4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0b81a1-8c4a-4b53-942d-eb81a650dde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61040eb6-6ef4-470f-aa84-da74a7f11b09",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1951b9-fdc0-421f-bd50-544acc676b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0826c9-1ec0-4af6-8d3a-c75ce4a811cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea2839f-c94f-44ac-aa6d-04873b3178bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f422ee47-2e95-46d5-b0b8-87227c2ffc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed90571-54af-40f5-8df3-fceb394b8840",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e25c9b8-8ac9-4016-b6bc-c0cea95468fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff5f4b0-fe75-4384-8e36-428e594ce229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91a3130-49c1-4d3a-9385-b37cdc95a517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "289bc5fb-1083-431b-84fa-168781945647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7768af-c734-4a89-bfca-ac3eb59dd591",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d24d6f-4802-4567-b3ba-b3fcee66beb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18e468e-cf35-40be-bb1f-b5c72b03a837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40031130-3e99-4e69-83f6-d96f77945032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f12d3832-22c9-48f6-b508-553aaef4210a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01564ba8-615f-48c6-858e-bae6dafbdfcf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d847bf2d-3516-4e94-add3-ca0b1ff27f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf440fe-f7b9-4aa1-81a3-54c7290bbba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e157cb21-5558-498b-ba46-e068a1d014a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9eee2b-1016-45d5-be31-fa8a1d4b45d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547f5aea-0a93-490c-b8d2-3d3d88a5acc3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe78c526-2c0d-4266-9676-a9bfe133f5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd7a224-19ab-490e-8e1a-c855724e7361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d895e894-afe6-4adf-9147-f85f9516c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "145e7961-72ee-4d2c-9106-803d197616d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d3c41a-6cf4-41ed-8403-9cb04a8281fe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58093c6-59f5-4336-b435-5bae83fff83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9824c98e-cc1c-491a-944d-052e6e26b73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf83ee8e-9fe4-4ab3-8cca-0f50ff19dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd07625-0cc5-44d6-9375-dbb9d7ee94ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e43a4a-1c9e-43f8-aadc-37810f6e2595",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515f7bc4-4f2b-469e-8469-b0f41ea29b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb030a23-a2a1-4cf9-9d8d-5383d2d10e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd717681-a118-440d-8a1b-a20db4dd6f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40dd9e9b-35ce-4a26-82b2-9c4cc640efff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cec143-45de-4d46-91c3-deade9bf491d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db02061f-ba0e-4745-b659-7e534ddd8b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411bb38a-af42-4fbb-afb0-f0cc4023993b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015bc495-64fc-4781-9960-87eb97a3b2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a56c5ec-8717-4120-ab09-5005bba62e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b5ee59-5b58-4850-b89a-0e765ff15c11",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0e5b4-bb82-4cdb-a459-9fb5068139c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5316474-37ee-4029-b654-8122436e8741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f80eab-6234-4c62-b36a-a00cbcf0d745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "311bd486-a662-4c9a-9d5d-4b1c197fd389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e874771e-71e7-4fb1-918b-d12d3be76c0b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981a3164-eda6-41c0-a03c-31a1180bb965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90098e6a-c189-4a92-803b-f373fff19eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d9d10c-bfdf-481d-a4af-0827383d4655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9932c983-913e-4b38-a5ff-d75b58767270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50351776-04dd-4f95-8887-3d5c48c627ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa9e6d6-28c4-45ff-96a7-299d4b871a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514725f7-f063-4bad-888e-e78556627a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b904323a-bd83-4665-97f9-45f7017d0cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e3539a-5db5-454b-a219-ebe2a6666343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111c569a-8225-47c5-9f67-e0c41819c1a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8f43e-d0bd-4bd9-9e22-56429b4a1655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df51d154-5931-4889-b0c2-f06a0ca70422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e82e7f-c85a-4c42-bcad-dffe6cd502fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c896c92-1323-4008-9491-4f4bb88e93f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fa9849-0530-4729-896e-ef1a4367e9b5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1399395-038d-4006-b4e6-baf6180a9512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81af9b7-287e-4fb0-bbd3-b8f39b19a121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c84b6e-5e9d-4068-b1dc-e8f138bd2b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38afabc2-b1df-4247-a967-cb9fb4848b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65fb54-c0c5-43f1-b755-07ad0e1c27f5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c76d76d-ff2a-47ba-b107-042febdd4aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd75ba33-5769-4db8-9fe4-e91317372b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f5b78-7182-4822-a57a-83fdbdc3fd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe78ba1-fcd2-458c-b127-1685f10a3dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca6b384-4ec2-4c06-9ace-560f8ecdbf00",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c12a5b-c748-454e-8d04-159fce5f9110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb63c303-5b2c-4d1b-b3fb-92d4db06fa36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c496f4e9-76a1-4328-8c69-c74d21eeb966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de11c43e-bbb8-4462-84b2-619069622f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee05345e-09ed-4906-b585-c18c54e8f2b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e6df9c-bfef-4fe5-a5a6-41aefc83d1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393afa91-31d8-4b2e-bfd3-2d27bf8e0434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b92742-ad21-4ba6-bc23-391c73769e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f2e1a1-753f-47fc-a728-1727551077db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a7c638-0339-4275-a512-52da401306bb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f808b7-50f9-4a6e-9d35-545058b0c82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7846caa4-1309-4de7-8fc3-a9335db49870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bb039a-93e1-4639-8595-349a5cfe3a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51dce6d-7f4b-4958-89d1-addbb11f2de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc82482b-61df-4f70-a135-2a0715bf9459",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518b46e2-5fd1-47d5-be90-c3015f92eafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b203351b-a82f-4d3a-b0e4-96d3184a459c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399d417-dd28-474c-9798-6fc5e5bb282f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b532b5-d005-44ed-a65c-b5e88fe9af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ecbbf0-ce31-459c-ab56-fce736a8a2ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1ca57-00db-4cab-9fd4-aa0f68534244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4051fe-bd16-4559-b8fc-1ccc997ef868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beed158-e76f-4868-8ffb-153c216117a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9eee4a-2177-4c58-8657-41fdee123823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776cfc0a-d1d3-4e44-a3c9-d1aa6b51f71c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5754c48c-895b-4a3e-a43c-0e06083df9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847e8d0b-d709-48d7-b5b5-00920a8a3a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747b7512-c640-45e5-92be-dc7e4b4f8580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91079c27-3c6d-4c20-a66d-deb9633df29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa7d456-e9f6-4d42-86da-40e7092d5a1c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988f0969-fc35-4b3a-a096-8bb94e4be453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49c543e-bd1f-4ea2-9d53-e6b541b6fd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c683c3b7-ca4b-4a2b-8815-b912a77d9d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0fad2d-b2ba-4cb6-82fa-5a4d41ed50a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37af65b3-9f4c-4c7d-9bb7-5374d9f987cd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8473060-47fe-4ce3-809d-121c0a0dc540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc80180f-8fdc-4105-9bbf-8115a55a004b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b50f61-cf8d-48fe-b81f-bc4ab2de7211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a414417-ed29-4e06-ad05-307a110df922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbee96e-6ae3-41d3-80af-d0a7c0ff4a80",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69046398-c419-42e9-8ce1-20bc8728ef72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e40851-d5d7-4c65-828a-be0855ae50bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b56452e-45e8-4868-b7c6-c1d13ae90c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98de2c03-dcf8-4b9e-8cb2-a4f9ee543939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1c9b7e-e57c-4687-b3b6-a545f7a8e534",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553b05e1-abe0-489b-8022-a23d059402aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc73935-cb80-4c48-ab00-e3582274dd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3376e2cc-9efd-4052-8be0-d0548b240b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5badcb7-8332-44b8-8491-bda0354aa289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff2df7d-dad8-4f98-b82f-fcee03394e21",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79312a7c-c276-4375-b835-1ae954b43979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c8fd6f-fd14-4708-a2b6-985c0bc3ff51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f3dc82-63d5-4ade-8e0c-8f5670be8b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05e9f3c-33d7-4be0-9d55-3888bb5e36f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872e0988-7e74-4ddd-9840-d37a8e489d9f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc52d16a-692d-489f-a6cb-318f6bc24c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790b90f2-8b44-4149-b45c-542b8da74204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec97ca5-8411-4cb0-8b45-3577fde6ddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84646ae1-c1e5-4cc0-95c8-8feb0b2566f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f0d665-efee-4890-8e7b-fef4c7502d51",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d066fd-5120-4a66-9743-65ef205ace3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f854b94-379a-4315-8c9a-b987deaa4060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517ab1a3-d056-4f90-9bdd-84cf7bf02822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fe05da-9bd8-45d3-9afc-10bf3f370e08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71c25746-09ca-4e17-a49c-6c8a98b8fefb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c2d2db4-b742-44e8-89f8-18ab7e8815aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e443a3be-611f-46db-879c-837dff93652a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d208f7a-5853-451a-a518-8215af9f05fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874c02d2-8219-4c42-a7c7-de9f54912e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a43a8869-24a8-44a9-b4c9-92ccdbe5c10b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f3a637a-d395-426f-a72a-c81905ab9ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87e3b7e1-14dc-4acc-937e-bcdf9fc2145d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eea06bf4-839f-46bf-8bd6-5e9dbc131f0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcdd0099-bec8-4f9f-9002-dc3ba62bbf13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d660fa-9dfc-45ce-ab77-c4851f83dea0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a828419-397d-4eb2-a94d-4e50ccc8fb02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86a13c01-148d-4b91-8833-67acec2f9efe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68666add-f181-4326-a343-c475f3b07fcf"
            }
          }
        ]
      },
      {
        "id": "d7feb895-eebf-4481-92ec-aaf38fe44d72",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "795b6248-c5ac-4f87-bc96-896bd2ec46e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd231724-bf7d-4f4f-99b7-a821b45b3676",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4446a1f2-fb75-4f14-a7d8-2f698856b443",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30e1382-a1dd-410e-911b-0e2c99b8e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf09c9e-b741-409d-89ad-be4e3f9ddeca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c337bd-c30c-4f9e-8cf4-ca25402eebd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "047b51d8-0484-451c-b665-c165f91b4c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f92a34d-6132-4db0-98df-0083ddbcb654",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b2ce3-d263-4a60-845d-c5b5c1136597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c9deb6-de5f-4c29-bff7-860acace00b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491fd75d-9201-4064-9b3b-4356a623234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4c0fae-b678-479a-8ad8-b0206b5a5e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34958f5-6bc3-4532-9cf9-108ad65fc094",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b49cdd-0eb5-4b6e-a5f7-dd7b9786a1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89455eb2-0977-46a9-ba37-9a72f6a4fd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae99361-dab0-45e1-a12f-75f9b0d6d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b65ed0e-869c-471a-9dbe-3a3b43c6719d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15c78d1-59df-4122-91c9-633cca2ead71",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9e09fd-7031-4cb9-9887-5b17ff1d3b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58c0a48-2e92-4682-b747-e9fa56ae6191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017dc65f-3ff1-4d34-ab86-d0ee659a683c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55718d0-1296-4f96-ad04-b159feeca2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063b437d-323e-4c00-9547-dfef24a7b2d3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0150b56c-c129-4728-8ae9-b491de11c3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad80339-1adb-43ef-967e-d2a8ad43ca47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e8e31d-a605-4d12-92c8-3e456b1a115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd13e9d-4722-436f-8a1d-8adf04552917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9d4820-56dc-4f08-8e3e-f5976ad60321",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0341adf-1abc-4c46-9bdb-8f542a247484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8a85ab-d246-4365-aab4-dfb9304202d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f8cd92-8b1e-4e8c-99b6-8e422de3b5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a3938e-1501-4917-99aa-de8b17acad4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49523d9-1d6c-4fac-9f0c-27f15af5fc5c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b12540-79e4-4c6a-a277-29e7f02812cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c717f5-59a4-4e12-9d9f-9fd4958a6db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc61b7d0-af46-4642-a75e-8d203406462e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5a4141-e093-4444-86e6-8073a0850fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82d64c-3681-49e3-9b52-647d753ec30d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8c5bc0-ed5d-4c36-acef-d6ed620599b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e52583f-954e-4e3e-8e5a-0250cf7db457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d337751b-c5a2-463a-8253-5329b3652490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e58b21-3e03-4128-9caa-57641cfca61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9de309-3169-4e12-9b58-3871bb21c7b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7404e1-0417-4039-bbeb-f39dd6cbce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54f2048-36e4-4d6d-aef4-49cfb16f4bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6d7485-66d0-41d1-8615-d81b86c1f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c050dcce-d0e4-43ca-a709-45af799b5c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730d98a0-0f44-4356-a8d3-5f4d3a437837",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c739814f-49e7-4ef4-bd73-eb4939ae2ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1323ce80-9a23-43b8-9cc4-c5774400bd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314c070a-bd76-4f26-bed8-4661a2824c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89affd8d-6ac3-4ad2-b073-bb8d697e9028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772446b4-0e22-4ad0-b13b-0945f55fa691",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12c2dc7-89bb-48a5-97c0-d071b9a83664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7945a20d-ffe2-4d42-b3b4-cec00f9dcc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06a6be9-6ee9-49b4-92a7-c125d9eda6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e2e241-e665-4e62-a29f-eedcbbe3215d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944f747e-b3af-4192-9bfe-6ab06de35673",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e4334e-0a04-453e-baf5-4abc20f77830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7137507a-7c49-4636-9300-bfb9944f4dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1639b28-3a8a-4d39-a304-13178a623d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63e9f6e0-eca8-445c-a751-fbb6a09056f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df902932-e8c3-478a-8daa-ee12b335bdeb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec2d2d3-c9cb-4286-8322-e920e19cfc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e4b200-03bd-48f1-beb9-531ea80fcf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f98314-b1f1-48d9-83e2-55b2f4ca5199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4995269e-f4d5-4704-a98f-0aec89c63433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8102b0ce-3415-41bf-aeaa-8c84778bc9ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e240ea5d-a313-4f95-9c4d-88f2a45d790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fb8e4d-68dd-4751-9b3a-696919eafa73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f60820-3142-4a90-a3a6-f68e0b558676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "730653bc-fe28-4914-a23c-fd93ad492818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf7ef81-6a94-4768-8690-1babf4c061fe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d9eedf-c4f8-4d00-923b-4f0a25818fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de047e9b-5d22-44da-a604-30b09df59c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612e1a9a-b0be-4428-9d84-e81277365b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa57e7a-7b31-4b8d-978a-33e1b64f6fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb3209e-cb2e-40fd-be1f-eb89bc7bba4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f761db3-15aa-4611-89e5-6f3cef328164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0ddfea-6625-4f15-9d55-4b1875eb3a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc2e693-e2fb-411c-8d64-bd4bb5c7c405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d77e3bf-96fc-4a5d-8007-24fa4db684cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b52d33b-83d5-4706-ada0-6b425c5290e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71c95c-bd2c-401d-aa3a-b7f93d172408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3fe54d-c2d3-461f-9668-90f90e12cf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a424370f-df24-4f68-8d3e-5d2c634aed85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc32518a-61fe-4d3a-9db5-bee8dc1f71a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718174af-50bc-4caa-8917-7fa3a07c583f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2500c245-062f-471e-82cd-3300e17469dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bc9f09-271f-446d-9c10-4018bba7b643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5b0d7e-b0f3-4149-9b56-db4033677e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1356ee-cd49-40bb-aee4-5c1db5553bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf86157b-41d5-4fd8-8816-b95265a5c383",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c73c714-d621-433c-b72a-137457832730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47261cab-13fc-4dd4-b8c0-1c7d8b34a4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb05d20-2f37-4e41-8fe0-17e5abcae19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1428b68-25f2-41f7-ad2c-7c4929b99ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4205378e-fb37-4fb2-b87e-ed40f810da3a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e46add7-3529-49bd-8cd4-b69f7496e265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a6527e-d89a-4de5-b703-9f523826c6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f498e621-895c-40cc-a146-8826abc52fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e2c449-02ef-49a0-bdb3-0375d1740810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9b3d93-bcd0-40f5-b47f-f23379d455f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc0d548-7c79-4dc5-83dc-57431966f37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb72008-c1cc-4c42-b382-cb1fda1ada3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f019387-1b34-4af3-a87e-9934653e8f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e90e0e-56d6-4a90-9fd3-b6854e4662dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8285d0-95dc-49e7-8e95-739bf61cdd70",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559b5333-89fe-4587-8e98-54f62f35fb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e069ce14-ec1b-4909-baad-ad063e5dbd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d2e7b3-87ef-4c0f-b55b-0e53bb07c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a794086f-a90f-433e-98ec-b63cd479656f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be7efae-88dc-4a6f-9657-3178c9dceeee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908b2974-fb71-4b23-9465-c240f5ab5eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cda10e-21c7-415b-b7f2-3513cceafd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d29c21-e783-44bd-ada3-e3ccc62b0e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "639bb22d-91b2-4bda-ad1f-5b574afe6da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0047771-af42-4e2f-b016-4eca71c7ff13",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d11529-6caf-403e-971a-444a66c9b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de53048-9a22-4ec4-82cb-b2120c1a19ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be96e12-d007-40ab-9eb0-aeefad54f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66949ebb-917c-43f5-9b8b-38100457cbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1972d8dd-c605-4d11-a442-a21d6c17b88b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdee541-9f03-403b-b93c-c6e8b7fe1cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce994521-0801-47ce-86fb-6d61d857a71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716e8103-b352-49ad-96fa-f5b6cf28f257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482db861-c2cf-4c16-aed3-10888c539083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f11069-2449-4f93-88a0-5e15df92bbb1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3e6e87-9538-42ca-888b-ac1c89dfcbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d765811-1813-4167-af57-5f052b249f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc3351c-9fc6-43b9-b654-6713ce0ea4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5917e7-f918-4ce3-8186-76e786d81808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a1c05d-83b3-46fb-8b9c-f61bd1b72c8f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c2beb0-ed31-4d76-8b96-488a590d11f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4e3fbd-f73c-4753-8ff0-8b2349a24967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c46eebd-a201-4044-94c5-ec98b872b05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af920c0-5f18-42c7-ba95-003cb9d1c776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcda09d-ff8a-48c0-bbcc-9e0a59d6c7c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58836850-e340-4615-806f-6099bd41ce5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afde5db0-06bf-4cee-8edc-82672811a662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b20460-2048-486c-adbd-11307620e751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35017e41-857a-441b-8f44-b4f61cea76ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00e5be8-e87b-4195-bdf7-5e23c6bc3a86",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5484e929-9a9a-4274-b079-401904a149d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325e275a-c9da-4d85-b83b-33b1cbf6707d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60e7825-d756-4292-b258-c4e5298e3e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6373ed24-9c6f-4e1a-bddd-62a84b61d20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1211fe16-dfa8-4f60-aec9-5045441aaab2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba9cbc4-c4d1-41ef-ad71-ff172fc46fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456fa799-3726-4b12-a67d-f32d68563234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0466bd30-6f68-438a-9cd9-32bd30c43c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14df0a25-f605-445f-b695-44afc1ac7269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030a06ce-140e-49bb-898e-60e15d7a8002",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998f7782-7d6b-4786-ab22-11b3865c186b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ddd119-857c-4b5e-a100-15bdbe05a859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ebeb8e-c61d-41ce-911f-e9655c8bc996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "882255b5-322e-4440-8c59-80371213f016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3469b1a5-8115-4e57-8576-43e69abcf7c2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5d5b4-896c-40f5-8919-4b8be5faa296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442b2d97-fd29-4d39-9457-8361e928c9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa598a05-5b7b-4dea-a4e8-2d1dde76fc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb2ed3c-bea7-4632-b140-f2a76b75a327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be384b00-b3f6-4362-815e-f70fd7eed1bb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7f8eb7-9205-474d-8f54-d0ff1c32cbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb564135-20d0-4fe8-b3f7-1995d6d7ca6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d48d5e0-78ea-4b97-88a6-0ccc75377ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "674080f3-71eb-4ae2-a365-baa0e21346c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d3bb4f-0d74-40be-943f-a0d313a9c0ba",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df88b0e-8b4f-4b84-988a-1b61487acba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fccb70-898f-4b50-ba93-f736b8a94393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c59abf5-48e6-451a-8ea0-16bcee1871cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd8b469-b47e-433a-9bd8-05c00fe813d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da3346d-5274-44a5-bdc8-11d68244d2b5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b5fa12-48ae-4d23-81ae-45a205e15fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf042379-410d-43af-9eac-946a60b7d015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e55ee5-0c87-4f93-9d07-c9d8eda0e2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76716f26-a4f0-4184-8935-1c528edd319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3614fca7-770e-43da-9dc8-3208b135afb7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c590310-16dd-4c85-b89d-39540e51d96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6c5962-7cad-4be2-a3ec-0ebba4797309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c991c0fc-f5fc-4947-909c-2c0c258927c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb48df1-5645-4d7b-b77b-ce83694e1e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1403360-d470-43a6-a2f5-6653a11771ee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26e2ad1-230d-4e13-8e57-fa21bae5a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cae65d-0b7c-4b90-8e81-b0e5f9ac2d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ba7048-c798-430d-8370-4ebf3516a515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50276d2-ff17-40b9-9f3f-7fa6f3df9e4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4c60deb-e648-478f-9042-31b98c9b98f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6aa26c63-1bc4-48fc-beec-04658ec69d24",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd0828a-7358-4d55-b5ac-bc7b0c443c4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81b5d0ea-56d2-4fe9-8259-33eed38995fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fc8a7b-9867-4bb6-8f62-b6eed1211a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cace1ca5-5948-4b4e-b1dc-ffa24344a2e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "789b2d9f-bc64-43eb-b1e9-2466d7bffeb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93517fd6-5558-44f7-822b-59d8c66e6ad8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6e00fcb-c153-4b4f-9aea-863d79ccbaea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b85ea97-de8c-41b9-90c9-363763adc4e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8797e074-3725-41e1-8d39-e564668bd726",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7dd91650-d7d3-42a5-b3fa-cf52db657d5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "550eebdc-81be-49df-b0de-37f88ea8acc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71718981-2248-454b-8157-5fa50d2f0340"
            }
          }
        ]
      },
      {
        "id": "79654a2c-50c5-4529-8379-a8a43552a9f1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "60740a9f-7346-4cf3-accb-2c98530f556c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d443f3e3-fdc1-4993-b291-8f70494e2098",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b4b4575-420c-4eeb-8ca3-a5390aca3186",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c82401-5ab4-4f30-a11d-d54e8c5a1ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2959e1-41df-44c2-9719-55c12b05f0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72af7889-8811-4901-bae8-c67f94f9779a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de945a2f-e648-4ab3-ac5f-24769c50fb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5a4168-46c3-4405-9e3a-e4e1cca451ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4057400d-e602-4671-9daf-bb464579f79a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e3cbdc-c380-4636-9338-9cfc190e14f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a78fb74-cb80-46c0-8e3b-c0156bea1dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06027b3d-7236-49a2-bdb2-91394ac7169a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b8f3e6-3658-42fb-a457-524e16377e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fa1431-0d2e-4401-81ca-19e3e4d4d239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54d33fb-7878-4cb8-8ae9-87b6b33d1270",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d289a32-6a13-44d7-8191-a41c2068b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19bc619-12f8-47d7-a729-72d508f0b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0f2792-59e6-4f94-bc18-9f4f79131b5e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510817c1-06b7-4bbd-9785-bf7a81fb9127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c6dff0-6382-43b6-857e-72528ca5f7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d09423b-3e8c-4578-9123-0ad43308f111",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c45bf25-f277-4b8b-9a81-0eb9a4f181da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c2688c-baca-4941-8cce-1f63a1e2a1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939b1fef-a385-4bca-9081-65d19b7249a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81159af-b808-4dc9-8f2e-d41810534275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265c90d7-17a2-45d4-b9dd-81432e736d68",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21559e3a-0187-423d-ab48-fc084259dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189bb2ac-f275-4e16-999f-d954e13960d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83f296f-8a45-4c45-9940-458e29dad20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af8ff16-0e34-4dab-9ef8-d78a32c795f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbc6bfb-5b02-4395-9c77-6913473839e7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5694dbe-305e-4b92-8dae-f09aee7eed9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a1fe159-84bf-418d-aacd-1ec44a71824f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a9448-5821-4416-818f-94fc0d09fd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dac25b-857d-4eba-939c-224017507fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5da746-6c45-4cf2-b32a-71a1b9003baf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d181a-e34d-4a6a-a270-811e7b9a9800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e781c39-cf90-4c5d-8c70-b7e389142b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bef4e5-95e0-49aa-b23d-8f9c1d93deb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a22f10-ee95-4565-9067-cf30ac695d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d9714b-5f4a-4cc3-837e-7a41e041c96b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc3404a-c0b9-44b9-a8ee-cf59ed89e157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa49c65-0eac-440c-b158-c0eeb73e35c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3853d9d-4923-4c81-9415-88a85613c8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af19fca8-f5d0-44e8-8609-b7f847813a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f2760-b1ab-48bb-9265-e4b2ebc4687d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6062f068-9a93-44fa-955d-f3ed8968e4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62ce873-07f6-4a1c-9699-d4540bd32995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cacfede-bb84-4b37-90a7-c5faa26658c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4979cdd0-024c-47e3-8fa9-1d2fc1f20236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ca2f6f-852f-4a21-bd22-37981624eece",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b0c3ba-ba70-4b25-8cdb-e13db52cd67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb9c77b-ee78-466c-a596-fe9ba89ff059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dfcf59-839e-4582-b849-a3b5bfe0f57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e27704-3dc5-4160-8df8-269a9ae684b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cda267a-2eee-4b3b-8d5a-70c13786e874",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ea9c4-daaf-4642-9f4d-dc44b0c42745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7baacbb-e79a-49b0-b5be-8e32bab98d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae909d55-37b1-4682-b90e-dbb56972062f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e30095b-0a1a-4623-980f-787f21a4e824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45b4e21-0e40-4b2d-807b-9e57dd442924",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57455d0c-a061-420b-afb5-d203c5485921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c5ea45-78b3-45ec-a92f-dd025734bf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934eca2-50f6-412b-9bcd-849fbb14bcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34582a16-3e46-4d87-a469-94aee7c50c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683597ed-6bc3-499f-aef4-2a98c17c9965",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b6b1f3-eedb-4f81-9315-e5b66cb10b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44dbacd5-6f3c-4a51-adf9-c1234e6f8886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e721ad35-de13-41f7-aaae-e4ba07b42c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4069c97f-71ad-4656-8635-a60045667cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d4ddce-53cc-40d9-9f98-599cdd7932c3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86444cf-64b2-4c6c-91a9-86b614308797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccbc833-cd1a-40cb-a5b0-f574978c35bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c1846d-48f2-42bf-a33b-09726c063ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f077748-ee12-4470-b924-6dc99beb05a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b03603-eace-477f-a3ef-967fbdcbd620",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504f7edd-cf6b-459d-b143-0b7af388a980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32af167-b32e-42f5-9b6a-92442d429b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcd8803-d93e-4df7-88bc-638850e4b97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943366d0-1ce1-4464-81be-43ac42e5f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e652c-3b3d-4757-9623-445ae4fc454b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d98360-925a-4840-bbc8-399771001a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b748eed-4166-4951-ae5a-983ba0d6389c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e59d612-4e32-4c69-b2bc-696499a64362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccec16d-edc1-4bae-be10-590bc68c32c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecbc67e-1799-47ee-9ffe-62e09406264c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120c4217-4678-4485-9cca-8c1683586a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6172b977-1851-40be-8002-db1004cc626f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967b15c-8fa3-4cda-a702-a3c86908e762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3955d7c-2689-4dc4-8f96-df637737bce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1027015-e9d3-41ec-86be-8a62209548a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f514567-6763-431b-9b02-0d9b0902cdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634e68a4-2b24-43dc-adc8-0752807c1207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18612363-e7df-4ffa-8e56-49411302f9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85faa71-391a-4104-abc1-7c3a2c96822a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8dd0b-43a3-42ca-bc6e-45cd59011126",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db83168-1010-4f19-b87f-d03082699c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f058e081-472f-4d43-bac0-2a08568b72ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b111c0c8-3562-4799-940f-3eabf7320433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914fa1de-7ecc-40f5-a48c-36149eb44f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5591c208-878c-4421-852d-f330a723c097",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b42df4-a333-4e2d-b9dc-b8f353472179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1c8bec-1747-43a1-92a1-a118b2ac640b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab81c31-f997-48a4-834d-a3451b9a2ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2d588d-58c8-4374-8fb1-130b72c706b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c79a106-1478-4e0a-bb57-4fdcdf59cd8c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fd8fdb-aa79-482d-b3e5-a53570a360a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e406ca2-ae5a-4acd-9e5f-218a9974f0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66925af9-196a-43a6-ad53-0f3e53950cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5374de6a-e310-4db1-bc78-f335b8330137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026c4da3-0689-4531-bf98-3195b2a5614a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f569d56-e439-4518-b811-4fbfc13f3878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2959b36-386f-40aa-bfcd-a929cd07571e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9bf57c-f56c-458a-9f79-b4fdd9bf9ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dd861d-1b6c-419c-9c1a-42bdf2da7b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a81abf7-51c2-4a7b-bf0d-371abbee246b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f584947c-398c-46e9-881d-6e9282d195ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a7bd8a-a1da-4e78-939d-31205b132d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3164fc6f-18dc-498a-b9f9-12c034723829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbff8096-55d9-4cdd-b040-b32039f2ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58858592-5e97-4231-92a9-8f098ac5f6f0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157bf3b-c28f-4cd4-9e91-fd2708a3da63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73e1c45-8dc1-40ff-9bd8-cbf3277f5480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3153655a-76e1-42ef-9c33-e4c121663d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac00d54-31ca-44c1-b564-7be38d7b2c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b806d61-0311-44d7-99aa-02ec11a722a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c3473-cd37-4e8c-b73e-2c5beaac03d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f2e544-33b4-4ecd-b909-74355e092054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc71a6b7-e38f-45d4-9c46-fde945355d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801e24cc-ab54-4806-a624-7372cbecbf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8846b403-6513-4777-9817-cb1ffc81cdd0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fd765a-9ad4-47fb-919a-a5af453a710e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2198e079-6076-4481-9f76-56a793f65730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08847b5-8957-423c-9064-ac3ae7f212b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c365b866-b826-4089-8b3f-7f16be4dae33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048fc19e-cb01-48bf-ab49-55ae7a10a718",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415edd6e-24cb-43b8-8234-fbaaa208a26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a2fd9f-2717-4039-b116-83171e49067b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be346cb4-8acc-4f41-ac64-5bfbc0b1354c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620a4494-d66f-4043-ade6-55e29d6c94cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5559ffb-fe2c-4281-a6c8-f4f7fed87876",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79c8f1-7063-4910-9688-317a372fd3b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2146428-0ec0-4969-953c-c5b2fa291f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119d355c-10a3-4426-91eb-5d15759f3d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76b6daa-ae2a-479b-9c9d-b2ece9c33490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290e8952-c8cb-4fe3-8f8b-3fe8b62c1e1b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72631ea1-a5ba-4547-9c5d-a66a0824b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f55a0c4-7268-469c-ac9f-ca99826a9310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827fef03-ece0-4dea-9b00-58dd94d53264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d54f04-6962-4552-a196-8a6a2b292f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9920894-b5a4-4053-8ddf-1e1784833bbf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93914eb-a986-4f5d-b638-33416bffafe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8867b77-679b-4005-9cba-ca29c977b158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d810220e-98c7-42ca-af04-6a069a645e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880f2c8c-bca9-4dd4-9492-c7aed97621a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d91f5ad-c064-410f-a68a-71fc7c85a804",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a6f21a-c558-4d33-9717-e3eaf300b0ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65964401-3235-4507-b971-20ca8e8f6b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca1f04-27b8-403c-b575-c96c420f96dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f201b88-aa4b-43fe-ac81-d9d94ff27699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d425fcc-3f38-4b95-8469-1cef604daa3b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b4be57-e4e9-4d3f-8206-9da6ab6e27a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21196137-09ef-4f9b-b0b8-16c594497b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8fb47a-ae66-48b2-aeb4-4f4ee839f143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01d76d2-86f8-4156-8513-17db4bcc08c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36469c23-5533-48ac-b346-20fbd9c3e918",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20346d28-fd07-4599-af60-424003f8fbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c91c329-4a0e-455b-9273-aefec1b00e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031c93f1-b0db-4ab2-a55a-2d8229eb1dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c667743-6f6c-42d1-aa8d-b92e2a1dd1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8d3411-1d12-4c86-a800-d2d57e7ff20b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95f2f6-b7ca-43b4-aa6d-b8b447a0c1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ead149-41e6-46b2-a172-7ffe61ea1c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d8584b-68b6-47a5-b4d0-d7130112a11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3caa0f2c-180e-44a4-9de9-680a4643ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6e26c1-134b-49da-ba40-f2100d02ef00",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b41a5d-21a6-420e-bb7c-e11966c76d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0889b292-80d4-4295-b3aa-d2a39fa86b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81850b88-d71f-44f5-8f4a-b1df2b57e384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f7b081-761d-4da7-89a2-f7258e324808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a9977a-3768-4c40-914c-05c89d86a661",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6784f9-42a2-458f-a70d-ef6f77136b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc2a8f8-e700-476d-880d-44e7c233404d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe29b452-97d2-46fb-a2fd-822343b98699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d396ab64-ae31-40b5-bd99-3ff286fbc270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3addd426-2138-48ae-88a6-14b62ff0a9c2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8261a450-5b69-49ca-be11-9c561a55e47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b91d4e-2aac-4810-82c4-fe19ed285329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95258425-4115-40d6-aa4a-8ab53d4be348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a936c9b-277b-4766-96f8-db5cd9384665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69b5ba2-6a4d-4ae9-9762-8704fb9bf976",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2083cd-eb51-419b-9446-65fa7e5ee7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c93191-a542-4094-a3e4-112716ee79aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcb8c0a-5596-4e93-9c1f-46e998cf24ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ead3273-8c93-49d8-9732-85b02ca8ccc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea413de-4adf-4390-905c-47dfa0dd085f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cebc2e-4f7d-4c0c-a03c-3588ce5836a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e8ea1e-6953-43a6-a0d0-377693032778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a545e5-a77b-40f5-a892-9d39e7a067d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb53bed-f036-414f-a0cb-71539430c272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077e7a8c-9a81-4c5f-9f4f-daf0b461b763",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459d79e6-13e5-4dff-ae0b-335dbdad5715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a16798-5896-40e3-b5dc-3fe4fa6f16d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2fbf18-7684-432b-8aae-b20bfd10ab01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9218480-f1da-404d-8eda-b8e360ca5847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91a2e42-4f81-4f9e-bfe3-4e6afb20bb6c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd93c99a-48e1-4633-b4c4-a8bcd29f7a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3798f1c0-0861-4ce6-8493-ecae3ff3ef42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8b63a1-21b8-47b1-b6d7-d3140eef1544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a55fa07-ce19-4ba9-955a-8140bca6b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f63b770-c5d9-4acd-bc4a-6b6ff5935acb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc387856-8ce8-4710-8d73-92e1e42d4df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7876c2-f5f1-4624-8382-b679037f7be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836f12b6-ef3f-4a79-a3ab-fa3ca726f43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecf3581-eac4-460b-a7bb-43f838d258ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60b37e-b6c5-4821-825b-0b9fa7185199",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010370de-219f-4626-8136-5e81c19f0200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd0b948-254a-42b9-8f12-189b2a87cf2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a9fb66-fd3b-46aa-97ec-0d662cbc3d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0326d90f-c285-438d-9034-e235dd159398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc200477-bfa6-42de-8d71-074bed31a7c4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c1d30a-7f5e-4672-8783-c696ab6c1d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb18d0-aad4-477a-ba1a-0cd1caa0b7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e016524b-ee70-41e1-aa2a-dafecc93ab54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c5eceb-6a42-472b-b70b-82154e24a5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6426803e-acac-4b53-9de6-cbb31f700dbf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996ade54-a7a3-469a-a16d-7da5a6e6c7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d96f2f7-ebca-467f-8b6f-75ae7e751ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2ab00-c135-43ff-b943-edc542c8e9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb8fbc5-2902-4466-80a2-cf98203e9671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27a36b4-9b86-4407-b46f-52424449ff5a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70203a69-1eb9-416a-aa4c-23105290748a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45096a29-b8d0-4218-afed-9c9ee37c3632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437b6d27-c5c4-40b9-accc-f5f8a4dc6342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9842344-cfe3-451c-b4af-12cf6b05ac8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba41a047-fd78-4ffd-9821-06a35aa4f489",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c47496-c6b6-4698-83c6-5b4697428c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170185ea-5e74-4c76-9ce8-bba56e4f26be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c93753-8d71-435c-ae9d-0ffcef98e8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439e3e5f-c112-4b85-86b9-f50960a6bdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fc2bc7-2582-4368-bff0-55bd6d628cd9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532db3fc-100a-480c-b1c9-47bf25f68e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba70aa1a-cfbe-46e3-a31d-742f72113872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f4ae86-26a9-4573-aa78-5139771bd220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499e3b77-0049-4014-aae3-5df0ee037ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40569bdf-6d92-4274-a7c8-b21ff10f87cb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a91139-525f-47c1-8c39-604915d02580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fb14ab-81d6-4549-bcc6-d0a287aaa86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc52183-4660-4c7e-b8ff-675b74818604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e64e46-4a9d-4cde-b0cb-f757f2239904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160e0dc3-69f9-4767-9669-df4ec5d9edb7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d5a80d-3792-4191-898f-b1ccb6adda60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea0499-2574-4adf-a9fd-fbfb16af0be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b056bc1-659c-493b-881b-7aa79a0e544a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63abaa32-39e2-4e7c-8ed4-9213ae471416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6819fdc8-78b8-4815-a586-6ab786cec1c7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b585bf7-2978-4100-ac58-be140390b152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b65124-5d91-499e-80cf-03d7e25dc868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e700f91-d6da-4387-89a3-a101a7713cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f3f9b6-d5b5-480c-813a-d45b60aa1b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a240c02c-f328-4546-b4ad-9da426bb6a6b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac159c4c-edf5-4a0b-8f1f-e69ac7ddb4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea9eaac-4ead-4a8c-b8fc-3f3f0a7bc056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c17832-6857-4e22-aab5-b4877d18fef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59cc6e2-2f43-4390-9a28-adb9c44ef98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67e1df7-0bf7-448c-912c-33e864b3562c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb57a7c-358b-4cff-ab77-579ede1e7ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e83fe3-dc05-45e0-ae99-a7dbd952716b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14bc585-3854-4365-8746-e6cb51650611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96274540-8d0f-44ac-a2af-911b9b660269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cb5b80-8dad-45be-ba4d-085f9448cd9f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597a9e96-c0d0-4bff-b63c-b5812e240589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d1afc1-5f4e-4979-bee3-7680aa3b8974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3eeb46-166b-4fa6-9ae1-b8ad68635b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c52a01-4a2f-4440-b1b5-b693739cd2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a838ca30-b9cb-4b81-98cd-ac3673e31468",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c83933-810c-45aa-95d5-fd939e04282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49e20f5-0ea0-4a12-b5e6-2eba30368479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf5eb0a-5768-49ff-8c38-d8ef4da10056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca09f3f-9670-40b4-95da-760102e3710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed55b63-1bbf-4338-983e-c208200d31b7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27eb4b6-b59c-4c80-92a5-d05248f7d297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a922a0-527c-48ba-8792-147b57c233a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef05644-881c-4aba-815e-c5344d36962e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfaecc1-7f8f-49ba-b1bc-f20f5768affb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4d75ce-03e6-498f-8093-9bf718368504",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a42114a-f132-4db0-b408-8cdd348f388e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8588809-087f-400e-bf45-d8fbd85f8b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00d8555-c9ae-42fc-9650-f4e7be9cd9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fa2e05-3646-480e-9444-170239900c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfabcac-2568-4ac6-8b31-deb7d451fc78",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d06946-651d-404d-9fb1-d063d3f3ac2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9ef960-f42f-4d3c-89b8-7548953936b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5183b1d6-5f15-4421-9589-b0320ab55cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8d4cdd-f9a2-4f56-8657-146721cbfdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9619834b-6edb-4814-9ac3-3150e6be00c6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31109f1-1838-49b1-a578-38e7e2c989f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e5802-6f34-4981-b9d9-265d484da77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c820a42-c750-4269-8a87-51822da06214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74c2aff-f1df-4264-9cd8-6a257b220405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2247c233-93d5-4444-8cd4-a4cb571f40fd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faa96ca-aeba-4026-84da-f260b4a20a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3726a1a-8f9b-41e2-a6ea-8396c9f9e08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c0ab3f-791a-4a4c-8289-6ea8f7378332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377abd27-71d2-4acf-a3aa-607e47c0cee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b51ba39-2020-42ec-9101-4b7ca04ae6f1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09cee3c-fead-4344-9a63-427d9cce45aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f261e8-d946-4d64-a9a1-49542ba9ffdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cc642c-c750-4918-9f56-544bb6e7ef81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b579045-7011-4378-a830-3745974385b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaddad5-3e06-4d8d-bd5c-e98795500874",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8d172-10e1-4721-bd81-c232515b03a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640a8b32-0fa3-46f7-89bc-724b34122bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eab6ade-003c-4e1c-a5bd-e4720dd489c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140ad7b0-0ce3-4b37-b70b-1e6737f8e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8614a743-a5ac-4095-bd28-6b31ab49fa59",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38763afb-5bde-4731-b1c8-947e66efb45b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b264564f-a9a3-4d62-89c4-377cd97ea4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c504bebc-7fb7-4085-a4ca-0c78fcce6e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02293ce4-341e-430d-9c2d-85f5813b636b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07e220f-e225-4f98-997f-a61e759d4fde",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdf0391-dd31-4b22-8a14-89649802f517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b272013a-ef04-4642-9361-0067a9074f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5e614e-1747-481b-9a96-9ddb70053473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a361ec6e-85a0-4190-b3ca-646e9968dc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a01a18d-b0f6-4b3d-a8cf-abede9a5a002",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc06d1f-ec11-4a5e-8f32-c2023f2a9442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f3a7df-25a4-45ef-a93e-5d845d46a812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f1f1e1-baaa-469f-b03e-96eed01e8b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051d86df-205a-4879-a553-01d6bd6d0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0b0de0-869a-41ca-9100-8e6026d2fc3d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2917b93-5705-44a8-ab1e-392b4e91589c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa27225-6891-4e29-b901-2c189461b7a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d201b9-5802-4a3e-92a3-23d084697928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5545478a-ea76-4904-be16-f5acf831aa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf75380-5870-4bed-834d-10f27fe5f964",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bcf8f3-bb31-4a51-9f7d-9ee9b574a6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274c4686-acfe-42d6-a6d9-7c61ecaac122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc6e461-7acb-4c19-bacd-0d6543bb32b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d50c5b7-1a07-4595-a41f-d93cdcefd002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503ddc7c-682c-4aba-8731-2dfa74550782",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5e7cf-0ac7-4b9a-86a3-caec5bd3145c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b32093-0e82-4f30-a7f8-29266451dfb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b4a9b3-68cb-4115-8b49-596d81a80c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634618c0-6359-4a45-9b5e-1cffbf9e563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313dadc0-0a5d-4455-b72a-76b18b8de8ad",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47016d4-f6fb-4a10-aab6-27e5e0ef2e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576ec0af-9f2a-4bf7-a321-8463a1325292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2e2911-efd6-4f47-9498-d5b789a55dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1825ca2-3c40-405e-845d-0fb8e17c9664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90743036-ee78-4c16-87e3-361a0f0b0474",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7589e6aa-f69e-49f8-bd5c-df6ecc920a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28abb191-4acc-4a62-9ae3-62cf309c42ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02600e9-52f4-46ae-885f-013cb93671d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea75aa93-0ffb-4c01-bbfb-ee865feef394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8805fcf4-9ce0-407f-b337-2f0dcb0bf5b3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b0f01d-972e-4ff1-8753-97b4770c1100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ee71b6-7a86-4a31-b983-0aa9c3abc6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02903c04-3d59-4943-b202-a06d2843d32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fee227-086c-4f1a-a48b-f1a25eaf1515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553b8727-0b89-4bdd-a313-1b57b1a53c6d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8782b9-4bb4-447b-bd48-43bb53009b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d602aae-03f6-438f-b628-e90a28a2be89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cde5493-9b73-49a1-8641-9b427cb35740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3e6260-696c-44a9-b870-c949f0474312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e36eef-d173-4dfe-bf65-7214613c0b79",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9976788-641f-4411-8fca-17018441b378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992281e4-ffa0-44ef-a22d-f802c723a1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84854e32-2c10-4583-bc2d-469a7e3f1b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93293f1-4eea-416f-bb62-2e66654c2f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2963fe-620b-4beb-b995-019b5e9973a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc47d62-3181-4ce4-9fff-0ed289c5243d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6e3c4a-0210-4c7a-b297-c8f3ca9a3172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9446d57-adc5-4a6d-8cb1-f53d8c9d1afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f07fe31-df17-445e-914e-1d3d1a252ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5bef14-d1b7-479a-8ea5-997412fec223",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0d5127-709c-4421-9c8d-3f984b6939a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d59c00e-1b13-4766-ae6a-fdc7f278fa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e44b35-ad70-4f74-9414-d0869e6a5c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2c65d2-68f6-4904-95e3-83db2accd368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344f0eb4-adc6-4cfe-88d8-84a5552a138a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56884fa-bd57-4f51-b56e-d614625daef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597ba932-8378-4ae1-a02d-5721c3c7f04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7439e66-4a79-45e0-b7cc-e352ae0028c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721bd13e-15b5-4707-a8b1-fa85f1797ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6f5565-b6b4-4723-bf68-a986e97839e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731a4b1e-11f5-480d-98fc-be6d5af6e878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fcfe3b8-82ff-4d3c-acf6-6eff6c2e59f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b4085b-aced-4226-82d2-d8549906cfe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c611ad5c-8c33-4bc3-8819-0a684e91cb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd12db6-5a5c-4431-b9cc-c2d4b990d413",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e5ce01-fdb5-4ef1-93c1-5addbed0e068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfffe959-538b-4728-b0b6-a05025e2aa0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a62ba51-db86-463e-916b-a241491d8a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c1fa57-8185-4a00-a888-a4bef9304f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09059ce-6178-449f-9ce4-39b12c93dc44",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84ed043-86f3-4e42-8890-2a4cfaf22e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f7d295-b9c6-4ac9-a3e4-d0f86ab910bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02198242-c879-473f-ad07-280831383fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba08eeb-f37b-4e22-9000-385f79633bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3a1c62-db0f-4dca-a4db-2943bd5fd04b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fe0d91-4c8e-4f42-9b1f-c80ca4ae3954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b88158-5c2c-4d26-a3f7-a4cb708aa10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7d632-4bf2-4f0e-8dfa-98b5f258cb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daad56d4-6dcb-414b-aa5f-54b3c4c42a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016ab26a-1a18-49fa-9c10-80d66684f13d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a636ad9-fa4c-4994-93da-dce7b57d1033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad62d17-6daa-4b31-8f36-2ca093a1a163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88714bd5-a1f5-4f96-82a4-ba78b4d695df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75209c5b-8269-4f10-a531-77a0549e4ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94a3a74-2169-4201-98f9-99cf09b6e1b4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafb5aee-058a-41a2-98cd-70217fbaf504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204dd76f-443d-4923-98e0-eef4e5269609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec32e1a8-20c1-407c-86d4-87d9fa47f72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c982671c-40a7-4704-8d22-8829756a80da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b4b7e1-ee16-450f-8b8b-cf7767bdfa04",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a69729e-8d9c-42ea-a82e-6f57b27736f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5897d9f9-7de4-4be7-91be-b1ed5582f9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695c1e1-72fb-4423-9a8c-778c781a0af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f59f0f2-692a-42e4-8b3f-18694a9c2a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac6f2f5-b418-4ab3-a9ce-96b625c5ebdf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bfade4-d64f-4696-a35a-3bf70828dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb9b302-eb76-42da-afbf-9afdaf26d1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108283b2-4d27-48c6-9b6d-1091fd23dc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c97855-7fac-42c1-80a9-cb35a19154fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4015f373-ce78-4d15-a04d-406411079af6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ce2c57-8040-4015-b3d7-26f3b995702f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb88fbe1-e763-4fea-89c9-c9179fca7a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12916bd1-4e88-4bd6-b606-add8fafeffd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e33093e-c442-4c70-96e3-ef6491ec522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b823b9-06a0-4d27-ba59-268ea4e7aea8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccfb2fe-17c8-46da-bfee-62f1e636895d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c69d5d8-4358-45e3-9c61-15b3ebab07d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e55b12-3a9a-48d9-a734-8d1bc019cbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28d617c-0282-40a1-bcea-e0bdc2f4d583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4fdacf-8f6a-45e1-a543-225ef518359d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f3a081-588a-4fce-b26d-7f5dc5ef32f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ef8ff7-efaf-4925-a795-dd7ad7572e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07788443-06c6-4fd6-bb90-221b2b8a60fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30411b4-7003-4517-8c1d-ad4e028de45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14268af8-9e1e-47dc-ade3-32007678522e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abde20e9-8545-4310-b513-752c94edab05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323cd2c3-1b4f-4cf5-a6de-4d1edd862f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1785cc27-2a72-4a23-be9d-e77aa4e4a75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5f3fdf-3fcb-4efe-b0ce-b419851b1b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a91e44-114b-4bd4-ab7c-5c3a16d22502",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dd8185-8c17-47d1-8306-807821534237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51cc691d-b140-4025-99a6-7e0c31fec595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33525f52-2a32-4f5e-b915-aebb40822a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b95b85-c9ca-4d56-bbbb-1c8994fee1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95718e64-7f7d-4a0e-8f5f-50343545ad1f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3369f0d3-4f9f-4698-9a06-c02a3eb7f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013056af-cbb6-46dd-96b1-c51098faaa8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590c1744-28f3-4159-a832-181b1163e45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f931481-3d7f-4a2b-a8f9-6d524694a5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fe820c-559a-4244-96dd-e87155919a1a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaec961-b45d-4b7f-9d62-00011ff88aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f0f52a-b4c8-41d4-8f46-c9cecc6f4544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335880a3-ec79-4563-9c76-63a879efc26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78370b15-4f5f-483e-a6a5-3215a5950219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324358f5-8b6f-4e16-8903-b886876b3692",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d86284-804b-4a3f-9114-8a7ce4342f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6455c93e-ea9e-4557-803b-02e9c10ae100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28d2316-ce22-4631-907b-14315e3bb8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326312fb-896e-49bc-a858-7a53e9a5df24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00641d38-9972-4658-bd54-d5825a71d20f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e69e34-7c40-4cb8-b2bd-3165b4c2a86c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c04cb8-3697-452e-b28a-cebca82a5216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a3c70-612f-4b28-8be9-34ff1f109031",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6124c5c3-1f2b-4b49-8de7-e1b8137b2b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc358082-5760-480d-a734-12cb437d9bd5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f15a93-9afb-4f55-aaff-a5f7100c88ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a417688-b4e7-494f-8ffa-c75077a9218d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb06f7a-4c6f-4ec2-b543-0beb0137c782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b064180-e5d4-4073-bf39-37368f2dcad9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6c68073-a129-4296-951e-b46b0b2efb7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4fa39c2-e17f-487d-9046-756942d38ae1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4ddc769-91a1-4f34-afd6-c88df7125dfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e62fce60-fd72-4ef8-99ac-b0fba300f2c3"
                    }
                  }
                ]
              },
              {
                "id": "163e8821-73a7-421d-b321-346b4ede69cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "874856b8-c24c-4364-ab4c-cf249001619f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047d5e27-d79e-49c7-97d2-9a9ed8408b03",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b68c6ef2-874e-4488-b0bd-d672df83399b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9b194f-c6ee-48f8-a16a-eabc0dc5772f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e32c4601-3da5-4daa-b19d-65ad41797b7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7935ce0-5b5d-4acb-ad51-0675d1e52605",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "606588e2-dfae-4f39-9801-9e5734a20e06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4677a08-366c-40a0-8681-1be525653fca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "785c053b-5e8b-4af4-aae0-10a6c487ee3c"
                    }
                  }
                ]
              },
              {
                "id": "4e913d54-585d-4635-9c9d-33d8a31d3d56",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f3d1c096-699b-4c7b-bdb6-dd9c8f5edf3e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b2ff86-955f-4f1d-aed8-6c16cdac182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e50746a8-1183-444b-86e5-969b41fe4743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229868e5-6345-46a4-ae35-9cf2d9712119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a78a3b0-a7a6-4426-9d14-db123661b5c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "22d171f2-0415-4ce9-969b-035f0759d6fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52baf24a-c3eb-4d53-a3d0-32d5a7f54e77",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d415da31-3b77-40be-842b-f4baf83a0f73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "60fbb809-6946-4563-893e-35d982f6d626"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acd099a9-6942-4ef8-9e2b-d90135490263",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42d0a5f1-661e-4ec8-8da1-5d2b43daf8ed"
                    }
                  }
                ]
              },
              {
                "id": "2399b812-2976-419c-b3d0-a488c1ea03ab",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de5fa496-5945-4d16-90dd-3b8de447f6bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62a51002-7f40-40b1-91a3-4ab1c7fcf43f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c5c9ac2-0aeb-4fe4-afe0-ebf7436bf359",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d74cb75e-3900-4fe4-88ba-fd597953feb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4df64613-8966-4703-b86a-01b26183768b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c07d76f0-fd26-432b-bf9b-b1756a63f133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e9b5b06-6fcb-482f-8274-eebb138185c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dae69531-201f-4cbd-b70c-c5cfd7dcbcf0"
            }
          }
        ]
      },
      {
        "id": "a357c6a7-241e-446a-86be-63db1f6e4bb1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "059614e3-cb4c-4ef5-ab0a-f3e65d8cf29b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8e2b61d-eb2c-4f42-972a-add21718d521",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa7dcdb6-c137-4154-a7f9-81b33f1f9dbb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c9c089-4478-4b14-b848-55f3ac4b5ba1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35216906-a008-4c00-906f-56e3d73c9f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaedf72-376d-459f-89e3-b577b5170365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66429704-68c6-4a66-954c-8d6e4cd24ea1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e3fa2c0-da94-473f-8088-2f2482d87f8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75e82b18-82bd-460a-a710-c4955f73fc2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "943a1837-98a7-4cd9-af72-7677aa235dc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cd8c016-d73c-41e9-8f9f-ab8cc8faef87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6dfbd916-a019-4a09-aab4-cceec606d909",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c8af7b7a-49b4-42ca-b41c-25fcf8e9a82a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5a55d35-be90-465b-b1c7-5686bd39aece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6186cff-a394-492c-966c-54441c7ba7c8"
            }
          }
        ]
      },
      {
        "id": "092b37ae-e4a9-4f79-9a8c-4cb7307f74c2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6091fc04-c44a-4dca-8653-5d289bb1653e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d576218-eb92-4263-92d0-c406baf257ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f2bdeb5-d8d3-4dc4-9095-dad566f0f3d2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d23e2f6-26aa-404a-be02-e9c547b301db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3abf9b7c-e97a-48b6-9c87-b217873b1bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a640ad01-17b1-4b6a-a1cc-6852a050da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1807d9e6-3ab4-49f2-8283-a85a8f9047e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "810703d4-835f-4bfc-9f73-c597f36ce3b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efe797aa-6b9d-4368-a6d5-4040776fd245"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f2b3cae-93ed-4d5c-ba9d-4dfd10b5e1a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f983927-400f-4101-a452-64809112c476"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0ddbe41-07d0-4ba7-b912-3a2b28e5837a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "907b541e-5e86-4d5e-b5a0-a280c4f93eec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd56ae94-2a59-4ad2-a33e-a694828a9635",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc6387fd-2189-47a1-a14a-3c8f52d1a9f0"
            }
          }
        ]
      },
      {
        "id": "39033df8-9ef4-4b1f-bd0a-e13348b41804",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "70c7d96e-d8ee-44e1-bd8f-ac32d39dbcb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9af15c8b-dbbc-4621-a87c-877da3b984e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec6a370-508a-45e9-89ab-a336c7d46cdf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07377a9a-ef01-4e36-a6e1-e569debc89f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beca0db9-eccc-4c72-99c6-0133d5550d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95197bd-434b-4526-b40a-f3e8a5b30a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23ca6189-8a57-4e7d-88bb-591fee4075ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99534466-f062-4d7c-9c03-e6c6ae2fa092",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51449efc-132b-466f-b8c9-e03cdde1982d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb38424-fc25-4ad7-a088-1068f504baef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4594479-b082-48ef-8d1b-87f2c79d3f96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8806658a-8a49-481d-82ae-d647cf794963",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2203e80b-5c34-4d13-b321-18406982ac41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "511485a8-244f-422e-aa22-6f929b360a83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c669acd-c19d-4830-a7c2-4e0e272d7ee5"
            }
          }
        ]
      },
      {
        "id": "886b0e0a-dc1c-45bf-92ce-4c60cb27f674",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b64598b9-c039-4282-b5cf-16b970a0a586",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "924f89af-0d97-45a2-bd6e-c6bc8f9195f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b933e09d-e3a2-4a3b-8a8b-baf1f64b4aca",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ca9e7c0-8c94-40d7-beab-42cf845aa657",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faf32c49-41cb-4788-b662-11bc3bb9e384",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.05614035087714,
      "responseMin": 9,
      "responseMax": 3032,
      "responseSd": 335.3646515061476,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701563878654,
      "completed": 1701563920631
    },
    "executions": [
      {
        "id": "4ccd43b7-1717-405f-9612-e595c5c39280",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9da3a82e-6d18-4ab4-8b22-cfb842076772",
          "httpRequestId": "2f6e7d06-ba4d-4a72-850e-0f368ddffeac"
        },
        "item": {
          "id": "4ccd43b7-1717-405f-9612-e595c5c39280",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9dbf3405-237a-4287-ae26-4ca09f330742",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "3d4ac83f-9806-474e-8f0a-9da56cf9f153",
        "cursor": {
          "ref": "76a4dc07-cd37-4262-9074-9032539c48db",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cee88122-ea84-477e-8183-3121c05df0c1"
        },
        "item": {
          "id": "3d4ac83f-9806-474e-8f0a-9da56cf9f153",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "081c2aa2-d462-42eb-b548-ab00deb37354",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "ef648d94-f4ab-4958-84ab-7ccb533cab87",
        "cursor": {
          "ref": "d970561d-c605-4903-af7e-24a26c4c5133",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5152b6f1-9997-40ac-aa1d-2a0e217d8459"
        },
        "item": {
          "id": "ef648d94-f4ab-4958-84ab-7ccb533cab87",
          "name": "did_json"
        },
        "response": {
          "id": "775b27e2-33d6-45bb-873e-b71ed29a7bc5",
          "status": "OK",
          "code": 200,
          "responseTime": 644,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8c7edb-edd3-4d50-8897-41471f9a0ad0",
        "cursor": {
          "ref": "5360c54d-6959-4b3d-acb3-624680f9c977",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3330a6c4-085d-4fd8-a6ca-939b994b66fa"
        },
        "item": {
          "id": "fa8c7edb-edd3-4d50-8897-41471f9a0ad0",
          "name": "did:invalid"
        },
        "response": {
          "id": "9369c528-44d2-4f92-9db3-f3ed9f2f780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8c7edb-edd3-4d50-8897-41471f9a0ad0",
        "cursor": {
          "ref": "5360c54d-6959-4b3d-acb3-624680f9c977",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3330a6c4-085d-4fd8-a6ca-939b994b66fa"
        },
        "item": {
          "id": "fa8c7edb-edd3-4d50-8897-41471f9a0ad0",
          "name": "did:invalid"
        },
        "response": {
          "id": "9369c528-44d2-4f92-9db3-f3ed9f2f780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952f8df1-a3da-4279-96c1-4603ff6a6384",
        "cursor": {
          "ref": "2dbf4e81-b8fc-4ec0-a945-b16667b3dc95",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "11cf4247-7944-4fda-93fd-72d76f5f1568"
        },
        "item": {
          "id": "952f8df1-a3da-4279-96c1-4603ff6a6384",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c7f6726-653c-4ab0-bbca-73e60c813ff1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 119,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4788788-e8f0-4adf-8d7c-f062198b3257",
        "cursor": {
          "ref": "eb711827-b832-444c-9481-6ee03f4281bb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d0fe13ad-a6b2-4417-b2bf-c53baa2d47f9"
        },
        "item": {
          "id": "c4788788-e8f0-4adf-8d7c-f062198b3257",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3f944642-0ec6-47ce-a7a3-2d88d2c4f4df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005ebbc1-e3da-4480-842a-d885579f6947",
        "cursor": {
          "ref": "db0149d2-f9b1-40ba-a79c-ea7e1510d9e1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74f02cce-bc82-404f-a556-dce865fa8484"
        },
        "item": {
          "id": "005ebbc1-e3da-4480-842a-d885579f6947",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "700d5f9e-630d-4a4f-a842-58823ff3a8ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c29ebb3-7eaa-40d8-b8a5-f90f23d15ec0",
        "cursor": {
          "ref": "ab79dfe7-0e09-473f-b374-f9a4c3edafbe",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f7b334a3-1031-4001-ac71-9f651659fce3"
        },
        "item": {
          "id": "5c29ebb3-7eaa-40d8-b8a5-f90f23d15ec0",
          "name": "identifiers"
        },
        "response": {
          "id": "4db7476a-2fd6-469c-8433-e23a1a19c16e",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3731765-825c-40f0-8c8f-5ed68991d4f1",
        "cursor": {
          "ref": "67a09f61-bc0d-4386-b251-b9a5e8abfbc4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f2e120cd-a9ee-4788-9bc1-9107070edc17"
        },
        "item": {
          "id": "b3731765-825c-40f0-8c8f-5ed68991d4f1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "de509dd0-cf40-4804-950f-54dc7982aa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60931056-dfd3-4b5a-9f52-b4a9e1d1c2cf",
        "cursor": {
          "ref": "348b6c68-3b48-44e7-a963-2b573ad6dbb4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25c87b94-7377-4414-88a0-8297f037c653"
        },
        "item": {
          "id": "60931056-dfd3-4b5a-9f52-b4a9e1d1c2cf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "840cffe7-018c-4ea0-b2d4-727d8021042a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa6b3a-b183-4929-8d8d-336b5ec5fd22",
        "cursor": {
          "ref": "76c1875d-40e4-42a3-860c-6d260497a5c2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa05971b-c467-4d26-b194-52dd188e69d4"
        },
        "item": {
          "id": "f3fa6b3a-b183-4929-8d8d-336b5ec5fd22",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f17bfec-0cc5-4a45-bd11-569448d7b746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf32c181-c17a-451d-93af-60b50849a8c8",
        "cursor": {
          "ref": "9427b28c-3a1f-4310-9a12-6ff7c60ed0fc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7bf70d01-991a-4bc2-9f49-3e9b794fdc58"
        },
        "item": {
          "id": "cf32c181-c17a-451d-93af-60b50849a8c8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f7badf71-7f86-4338-9e46-0f4ede0293bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc401d-0f02-4d22-9855-af9ce47236b3",
        "cursor": {
          "ref": "013e8a1d-c203-4190-b495-2cadaafee40d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e556de71-b7a0-4284-b599-aa16da5a7f23"
        },
        "item": {
          "id": "63cc401d-0f02-4d22-9855-af9ce47236b3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "56056656-157d-437b-9ff5-ad4c827576a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144bbda9-b15b-4f26-904d-b2ace0e6f042",
        "cursor": {
          "ref": "f220b5fd-7c66-44e3-bffa-5548cbaa28a9",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3ff9165b-aea2-4291-9346-88018be6c086"
        },
        "item": {
          "id": "144bbda9-b15b-4f26-904d-b2ace0e6f042",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "48a02d72-5ba2-4364-b2c6-60a9e9bbfed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da60024f-3fd9-47a1-be53-cc1e66451d6e",
        "cursor": {
          "ref": "32008b78-b5f9-4173-8a16-369222819334",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "262890da-16c7-4504-a35f-3f20f79e022e"
        },
        "item": {
          "id": "da60024f-3fd9-47a1-be53-cc1e66451d6e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "32308d9c-8e8a-4ef5-b05a-eaed5e5818d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d056b2-b545-4fda-9e09-c75564bbd88b",
        "cursor": {
          "ref": "bd83a6e5-fd44-49f0-a1c3-3078553947e5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8eed9d3c-63cd-41bb-aad9-45995190c8dd"
        },
        "item": {
          "id": "29d056b2-b545-4fda-9e09-c75564bbd88b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "947828c7-ee04-478f-b4ec-5acdce45294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47753414-ffd5-47fb-9290-0f6a29e95f74",
        "cursor": {
          "ref": "186e7b4b-60eb-41a0-9698-9168f76461e0",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4f568289-3c82-4966-9471-c67ff2e0654b"
        },
        "item": {
          "id": "47753414-ffd5-47fb-9290-0f6a29e95f74",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b9ba36ba-c29f-4e76-bf64-999629416de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b64f3d-d93e-43c8-a527-9122de64dd7f",
        "cursor": {
          "ref": "71f4b8e9-b709-49b6-b921-c8dacf9dc76e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b4128a3-a144-485c-9554-7028a08904a0"
        },
        "item": {
          "id": "d8b64f3d-d93e-43c8-a527-9122de64dd7f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b1a20256-1097-4165-a799-77ff9b533d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d81646-810c-4a14-a12a-6b21a090d8fb",
        "cursor": {
          "ref": "f544c4ef-1e44-467f-9c91-bf37806e9208",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "73fd389f-5427-472b-ba52-41c13608b775"
        },
        "item": {
          "id": "c9d81646-810c-4a14-a12a-6b21a090d8fb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7ec45c2f-029e-4653-9684-c5c39c5f96d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fff57a4-1faf-47e8-a052-450ba4f962cb",
        "cursor": {
          "ref": "37e9000f-a869-42ec-84ff-a26c7e66651e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3ea55798-db46-4f10-ac96-4f9952b18fc1"
        },
        "item": {
          "id": "7fff57a4-1faf-47e8-a052-450ba4f962cb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "16ecec4c-d5c3-4199-831a-c5ae9bb9159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f34a00f-bb2e-408e-82f0-7374129fd3d0",
        "cursor": {
          "ref": "a8f534cf-6ecc-4522-a163-6ce4a6c33298",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7fb7637c-4442-4ee4-a714-d8fa198f9950"
        },
        "item": {
          "id": "6f34a00f-bb2e-408e-82f0-7374129fd3d0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "853c1f1d-6e58-41e3-b243-4837b8870483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6804560-4084-4099-873a-b0f746a68333",
        "cursor": {
          "ref": "cdb64317-c452-4b6c-9ae5-580d762a3427",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e4a0b443-f769-4c04-84e7-34fb889b7d7a"
        },
        "item": {
          "id": "d6804560-4084-4099-873a-b0f746a68333",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b953b25-1369-4600-a568-23535c304084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002dc748-ce42-448f-99e1-8258850ce595",
        "cursor": {
          "ref": "e18a05af-8f09-4aeb-9ff0-5533a91d99ad",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58ebd15c-3934-4e79-8e0f-5921ba2b664a"
        },
        "item": {
          "id": "002dc748-ce42-448f-99e1-8258850ce595",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4476978f-574d-4594-b36c-4bfcc6096a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9b2008-ade8-4cf5-9c0a-369cbb1174c1",
        "cursor": {
          "ref": "af811c41-f4b6-4323-b87f-a77a2af30ce3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6786d7e0-6713-4590-9c88-af5be5480c9b"
        },
        "item": {
          "id": "ca9b2008-ade8-4cf5-9c0a-369cbb1174c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "61a1d8b3-45f3-48ea-8137-8226ba9663b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d990de94-8f52-4365-ab4f-4baa30b82856",
        "cursor": {
          "ref": "0a69982a-0bbb-4298-a80d-bc2d8124252e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ed1f04d6-7566-45e4-85dc-1022bc9734ea"
        },
        "item": {
          "id": "d990de94-8f52-4365-ab4f-4baa30b82856",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "31af1ba1-1e8f-4a8b-8db1-54bba35f3688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b10d186-b5ec-4a9d-9ed0-be344a3d74f4",
        "cursor": {
          "ref": "3ab418bf-e6fa-4914-84c2-97bd96965713",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b03d38f7-4da9-4cca-a42e-c747332bbdc8"
        },
        "item": {
          "id": "2b10d186-b5ec-4a9d-9ed0-be344a3d74f4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "368861dc-f859-4fcd-98be-99123f27260d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f987258-757b-406b-8c55-d45c4f15b0f7",
        "cursor": {
          "ref": "445cf08a-ae3a-458b-8792-110487c6bcfc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "980d5aa3-0bb5-4f94-9e2a-46564ef428e2"
        },
        "item": {
          "id": "9f987258-757b-406b-8c55-d45c4f15b0f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "de353ce2-e5c9-49c3-b66e-eff2aceb7ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb72c9b-6e04-4a57-9554-9798a8cf227b",
        "cursor": {
          "ref": "ff079a6a-521a-4f14-aaea-5581c1f4cf7f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "902ad7fc-b5d1-4760-956e-10254947bbb6"
        },
        "item": {
          "id": "3cb72c9b-6e04-4a57-9554-9798a8cf227b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33f56ca9-650b-4a3b-ba8b-f6bed620316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f570fd-9e09-4103-92ea-fd805b6a8782",
        "cursor": {
          "ref": "e635be25-036f-4355-8089-6106b35f55ef",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d3324ba8-d0a5-4a61-af86-779f4fb6f449"
        },
        "item": {
          "id": "c3f570fd-9e09-4103-92ea-fd805b6a8782",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fcb7942b-d7da-4861-94b7-e01006e45f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5b99b8-0fd6-4766-9f8e-a33cc9ed8e6c",
        "cursor": {
          "ref": "21585054-46ce-4181-8d43-01e3e087d0bc",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "716f8a61-7dfd-458c-b35b-2855d2be0c2c"
        },
        "item": {
          "id": "2b5b99b8-0fd6-4766-9f8e-a33cc9ed8e6c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0051071e-0758-42da-990e-3f525a3f7234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a9f87b-27c8-4560-8690-77b30bdbbea0",
        "cursor": {
          "ref": "35ddd894-a60a-411e-abfd-cd5f6db82e2a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f7ad8887-4fcc-4260-9e26-87db0dfa28d6"
        },
        "item": {
          "id": "02a9f87b-27c8-4560-8690-77b30bdbbea0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f694b8f-3721-46c8-9662-4d707e6228ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8926e28b-f9da-46cf-afe8-3b6b9ef7c5e8",
        "cursor": {
          "ref": "d52fe5c8-5019-4847-989b-dcd95fc5777c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a9ede71a-d5d2-478c-9a3c-3625b85306ca"
        },
        "item": {
          "id": "8926e28b-f9da-46cf-afe8-3b6b9ef7c5e8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f245fba3-7cc7-4dec-8c4b-63a2c4397bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb6c1e9-0805-4483-bfcb-c3c5b939a8e6",
        "cursor": {
          "ref": "6d36c1cb-a9b1-4e21-b59d-2e6785d3c7ba",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "202c25d0-5f2b-4c47-95e9-be9f9bf7baa6"
        },
        "item": {
          "id": "6fb6c1e9-0805-4483-bfcb-c3c5b939a8e6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a6585c7f-222e-46c4-a4f5-df4463c03f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf77438-fa03-477b-99e8-b500f3a48a7d",
        "cursor": {
          "ref": "405e46ff-2320-4458-a923-b1e52d0f73e0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ee0417fd-f3a4-439b-bd1a-2d6fce65bb87"
        },
        "item": {
          "id": "fdf77438-fa03-477b-99e8-b500f3a48a7d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "50fd6290-5628-46bd-8746-7b67c62e9a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b11d1e4-d48d-40e0-a8c8-94ddda8c55d5",
        "cursor": {
          "ref": "c6bd5a52-bd9d-4c97-aa94-4d12dc55960f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f273582e-20c0-4c07-9f1b-48777bd275ea"
        },
        "item": {
          "id": "0b11d1e4-d48d-40e0-a8c8-94ddda8c55d5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "feffc083-78b5-4542-873d-f103f12e0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1110d1f-7642-4880-bf86-6e7c85e38138",
        "cursor": {
          "ref": "43f44324-f94c-457d-b9c7-8c8ead7f1dda",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1f7e71b0-0e4a-4c65-b62f-bd77899595bd"
        },
        "item": {
          "id": "f1110d1f-7642-4880-bf86-6e7c85e38138",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b5d0ba84-5f7d-41c5-a1ca-216ce3a94cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7370f5-5f15-42dc-b664-ea66e8f52a61",
        "cursor": {
          "ref": "182cdc7b-7c71-425e-ab78-697a542e042d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "57c58abf-2f19-4d47-8016-42bfbdcfa7e1"
        },
        "item": {
          "id": "cb7370f5-5f15-42dc-b664-ea66e8f52a61",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c5ead5a0-d866-4d3f-aaff-b22c0856faa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75eb9aba-8859-4b42-a66c-1118d88f446a",
        "cursor": {
          "ref": "0c138783-ef8a-4662-b468-8fce2583e9a3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dedabe0b-dab3-49a8-9a7c-91b9c059e159"
        },
        "item": {
          "id": "75eb9aba-8859-4b42-a66c-1118d88f446a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "62590c98-a735-4860-a64c-d26f612f7c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2bb7a9-347d-4f53-a1ee-208548dfba96",
        "cursor": {
          "ref": "bd86fe6c-7580-4c37-9387-874b7400d52e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d8335325-d3a9-4fa2-b3b5-6191ee9a7475"
        },
        "item": {
          "id": "7a2bb7a9-347d-4f53-a1ee-208548dfba96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "18d7270d-10d5-47c1-8144-fb41293cf0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc6c482-d75d-4fc7-9ce3-bd5ce66f01db",
        "cursor": {
          "ref": "52d51dea-fdbd-4a3d-8ca9-18fb714af9a1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0eb499f0-e096-4a7d-9913-f313d0fba591"
        },
        "item": {
          "id": "3dc6c482-d75d-4fc7-9ce3-bd5ce66f01db",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c12158b5-95af-4a71-9ea1-f78c5dfdc890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e5ab7a-d7e0-4416-90ed-47f7cf300f7f",
        "cursor": {
          "ref": "0968f71e-83d0-48de-814b-737841dd2506",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a514dfc1-15a2-4350-b9a9-eb149a4e76c8"
        },
        "item": {
          "id": "75e5ab7a-d7e0-4416-90ed-47f7cf300f7f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "452126d7-3b69-4210-8c28-0bfce0bb9219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc667b1e-5e3f-45a7-a3b8-5ad72723f753",
        "cursor": {
          "ref": "16b89ce8-cc1a-4a2f-9ecc-e9ee7e9c895e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "59b2bdc9-cb72-443e-9482-9f549b606631"
        },
        "item": {
          "id": "bc667b1e-5e3f-45a7-a3b8-5ad72723f753",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8e06f259-5fc1-49e7-9b79-c7708be6dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febaf129-8960-49bf-8ff7-05d41d38f7c1",
        "cursor": {
          "ref": "05cde355-3af6-4414-abb7-7f3ddd1c32c2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "000e515b-ec7d-4ac0-9483-018b6f27aeef"
        },
        "item": {
          "id": "febaf129-8960-49bf-8ff7-05d41d38f7c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f94f536b-e59d-4a16-b2bf-3cf1e0b6b9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413419df-e271-438f-83ff-2e1c087a7cfa",
        "cursor": {
          "ref": "a9a8f81f-acf1-49d3-9377-08ce8518ac9c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "95caa74a-6e1a-47e2-bb8c-444a900d21e5"
        },
        "item": {
          "id": "413419df-e271-438f-83ff-2e1c087a7cfa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c57aa6e5-27b8-49c6-b902-a60ef6455410",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 333,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac0157-c205-4a38-b6ca-9d23e2caa527",
        "cursor": {
          "ref": "eb74de9a-7078-42bf-9a0f-805403c474a7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0de9d7a3-9af3-4048-ac52-dc97c128d70e"
        },
        "item": {
          "id": "4cac0157-c205-4a38-b6ca-9d23e2caa527",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ba9a2e78-14b4-4e36-85c4-4ab51bd0953f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2753e5a2-f4fa-40c8-b672-720e2437e8cc",
        "cursor": {
          "ref": "cfaecbe7-2093-45f5-9829-f2dba1359165",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "08ccf40e-c940-456b-80e8-2c8b6a8e444c"
        },
        "item": {
          "id": "2753e5a2-f4fa-40c8-b672-720e2437e8cc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5517c6e6-2b2d-46e3-94f9-8db00a4fb039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e6f58-e7f1-4454-87ae-21c099229298",
        "cursor": {
          "ref": "fe55b599-841f-49cd-987d-914fe482c979",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0595e17f-a695-4a4e-9fd1-ee4cb6bd4bb7"
        },
        "item": {
          "id": "f15e6f58-e7f1-4454-87ae-21c099229298",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d1a42a7f-0057-40c3-91b5-636441b9e945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7383479b-8997-4c32-bd45-b9b9f913c853",
        "cursor": {
          "ref": "9deb506e-d60b-4726-8e05-c9c55b62df5c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80658653-2413-4b89-bb6c-2c569d0337b2"
        },
        "item": {
          "id": "7383479b-8997-4c32-bd45-b9b9f913c853",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c584f7a-a0e5-4abc-8002-dae5d48a23bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2a1e61-c2ea-48a8-b5df-d290fa2759f4",
        "cursor": {
          "ref": "577af937-fe74-47a1-bad1-ff4cee671920",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5de39da7-40c9-49a4-9128-957fb5cdf300"
        },
        "item": {
          "id": "fa2a1e61-c2ea-48a8-b5df-d290fa2759f4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "342b9fd0-fd56-4649-bf26-49fb424b6467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2e583b-76c7-414b-9f07-10fac4ce8aa9",
        "cursor": {
          "ref": "5944f598-68bb-490c-88c5-de0ce7a44940",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "05d5db6c-5eef-492d-84b5-539f71b0b50a"
        },
        "item": {
          "id": "3c2e583b-76c7-414b-9f07-10fac4ce8aa9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "da676e56-489e-4f9e-bf6d-b6ce648d0fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b10fdaa-b40b-41ff-aca9-11f86aabeeac",
        "cursor": {
          "ref": "80d99df9-be2d-4e80-b1e8-4d2f8aefb523",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "39e2dded-6a2d-4841-9629-6ee9012bf243"
        },
        "item": {
          "id": "3b10fdaa-b40b-41ff-aca9-11f86aabeeac",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c85d034d-3ef8-452f-bc2b-1bb6dfdb04fd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 337,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033e5d03-5248-4488-bb6d-7dc61c708d32",
        "cursor": {
          "ref": "3858182c-ee49-414c-9e1c-db97f5560a78",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "59198776-50e9-4c10-9639-11e6af3f05ed"
        },
        "item": {
          "id": "033e5d03-5248-4488-bb6d-7dc61c708d32",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b9ce130d-2bf1-458a-a556-35bc9a3dae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9137f4e-fecf-44fc-98c2-ca535419264e",
        "cursor": {
          "ref": "2f77e8b8-350e-4295-8443-1f3263b826b6",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fadfb0e4-0f5d-45cb-a9a6-bdd79f2846a6"
        },
        "item": {
          "id": "c9137f4e-fecf-44fc-98c2-ca535419264e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fecd0df3-64e2-48b5-9c36-d7cdc865fc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23534f4b-2961-4bf3-92f0-06d306a6fc96",
        "cursor": {
          "ref": "3dd33809-ecee-4468-8223-525e9e182f5e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "99194494-0008-4419-b69b-40c0ce46ea96"
        },
        "item": {
          "id": "23534f4b-2961-4bf3-92f0-06d306a6fc96",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b600fb56-5a7b-4e20-9158-372e54029d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3fa0ce-1368-42c5-9593-634811cd3f75",
        "cursor": {
          "ref": "6c1a42ca-151c-4b84-a357-e2db45ae5120",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69476d71-41d7-4747-b40b-a3082f902738"
        },
        "item": {
          "id": "ce3fa0ce-1368-42c5-9593-634811cd3f75",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f4d6f11-a013-4c57-8c8d-a6e20f8be9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb46ba2-990a-414a-8c80-99bcfb35852a",
        "cursor": {
          "ref": "f0aae7d4-aa76-493f-8afd-144dd159ee57",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6cd66569-bdff-4cd1-946d-e2f89c976721"
        },
        "item": {
          "id": "ffb46ba2-990a-414a-8c80-99bcfb35852a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "22d366fa-663f-4d14-8487-3b42dc078609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b36e56-873c-416e-949e-6da968d5a2e3",
        "cursor": {
          "ref": "b1f2845e-cf77-4b45-9ba5-5de85e3f4ddc",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b84c3f6e-d78a-444d-b09f-c4368fc7d5c9"
        },
        "item": {
          "id": "48b36e56-873c-416e-949e-6da968d5a2e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4ade4a3a-f931-4aea-ad41-db0d91084d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d395c5-87b7-4489-b0ee-cfc1d446bac2",
        "cursor": {
          "ref": "c09a027b-8816-4ea3-83f1-3633229e5d52",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3f074a39-5f3e-4d2e-9093-5688ea974137"
        },
        "item": {
          "id": "69d395c5-87b7-4489-b0ee-cfc1d446bac2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b2445863-beb8-4e97-89ae-b99fe9ca9f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a578f4b-09e2-4fde-b20a-0ec979ba5b7f",
        "cursor": {
          "ref": "2c52d54f-c2b6-46f0-8611-63173941917a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7a49115c-703f-480e-9f62-18fdf287c5c5"
        },
        "item": {
          "id": "4a578f4b-09e2-4fde-b20a-0ec979ba5b7f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f358d21-4a91-4e49-b1b9-40610db73469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031d8005-f288-43e9-a6c0-b510f4f326e1",
        "cursor": {
          "ref": "26f7ec0d-c174-47d4-aed4-ef8cfafb02c4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9636c16d-fa0d-4cca-9aaf-92365d42afa2"
        },
        "item": {
          "id": "031d8005-f288-43e9-a6c0-b510f4f326e1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d25179d-f8cf-4948-8eaa-e54c2661d555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ec64a3-9047-41e1-9f74-dcd4ccd21683",
        "cursor": {
          "ref": "5e4aec1e-5cfa-4edd-aa7c-fd388f297d0d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "da562bc2-5b8b-4611-9061-128fda113027"
        },
        "item": {
          "id": "08ec64a3-9047-41e1-9f74-dcd4ccd21683",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e61a425d-fa13-4413-be6f-a50854d95ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2ea74c-53ac-44ca-88b9-dd353888c35b",
        "cursor": {
          "ref": "c1a2b171-4126-4191-9107-3e76e4fc2bf4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4e876f10-2800-4f27-abe6-9bdf3e2be612"
        },
        "item": {
          "id": "af2ea74c-53ac-44ca-88b9-dd353888c35b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b657f298-e851-4789-94ae-4890d3264b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86241572-7a47-4ef3-8ca3-0437157394e9",
        "cursor": {
          "ref": "338242a1-21db-4fa4-8182-5536c2d6447b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "595db754-b667-4db9-a3e3-91dbda4ec7dc"
        },
        "item": {
          "id": "86241572-7a47-4ef3-8ca3-0437157394e9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "829fee4e-3eb5-4622-b188-df2c0cf5fed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbc7f26-606a-4904-93fc-ad48406c67a5",
        "cursor": {
          "ref": "72051700-ec2e-4006-a858-bd01efe58455",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f5c11b72-4488-4372-9468-6ffea5ba84f1"
        },
        "item": {
          "id": "9cbc7f26-606a-4904-93fc-ad48406c67a5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9ce481f-19d1-47ae-ad8a-3408fc3d0d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6f07f5-b1f4-43ac-971c-590df8c4ca9b",
        "cursor": {
          "ref": "43d16dff-8a7b-4e2e-95a2-dc1012efc61f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fc7d57ed-b8a8-43a8-9c78-23542acea590"
        },
        "item": {
          "id": "9e6f07f5-b1f4-43ac-971c-590df8c4ca9b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c7e9e921-b71f-4de7-9b34-a372b549b8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8219de-4bd0-4749-8929-f3d58876ee5e",
        "cursor": {
          "ref": "344490a7-9dea-4f66-8866-2e7a5c6a8111",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4ddde6b4-5869-439e-8534-ec0cf55cf98b"
        },
        "item": {
          "id": "fb8219de-4bd0-4749-8929-f3d58876ee5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "68d5cc3d-4aba-41ee-bfa9-d5410b816e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5eb395-fdb5-4168-a2dd-12ec3b477b8d",
        "cursor": {
          "ref": "6d4123d5-10d1-413c-abd0-38548d63a0ee",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "352c3208-955c-42d9-9332-8b584b2f9cdd"
        },
        "item": {
          "id": "be5eb395-fdb5-4168-a2dd-12ec3b477b8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6e90c12d-c6e5-4cb3-8afa-3463950780de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5613b1-a16a-425e-b791-4c5f5ac0b46d",
        "cursor": {
          "ref": "b9986794-6ad7-4006-bc93-f3651b54a3a8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ea8b8bb2-9db7-475c-8a2e-fbd1573a962d"
        },
        "item": {
          "id": "ac5613b1-a16a-425e-b791-4c5f5ac0b46d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6153e42a-9b05-452e-9634-2f6e3d746e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35f7798-2185-4ad0-834a-ad72007abcf6",
        "cursor": {
          "ref": "7039ec6c-0466-4bc4-b8a0-74dc08f5f48b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8c719acf-926d-45ac-9422-19c014e0e037"
        },
        "item": {
          "id": "d35f7798-2185-4ad0-834a-ad72007abcf6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6096a780-c18b-482e-b065-a880013751c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd6205-66f3-4995-9c0c-c7547e7db8a7",
        "cursor": {
          "ref": "1cfd75f3-2dce-44d6-b679-3eb5f1b942bb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e4c97d42-71ad-495b-9f09-bd531b59b863"
        },
        "item": {
          "id": "d5bd6205-66f3-4995-9c0c-c7547e7db8a7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "630c0044-bc1f-43b3-808d-8aa9efeb42f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0257f89-1a02-4593-82ff-d90ee767c547",
        "cursor": {
          "ref": "13cf8267-d102-49d2-9cae-156c7f9cf2cb",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e5807a57-097c-49e3-9242-18b4f2119181"
        },
        "item": {
          "id": "d0257f89-1a02-4593-82ff-d90ee767c547",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bb994f55-bf2c-4f62-8695-0b3908239ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e897cc92-9967-4ad9-bb2a-13d1fb3ee6b2",
        "cursor": {
          "ref": "d120adf0-3378-4ac1-b862-ad785dfc063d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8746ad02-1ae9-4032-ab36-f772f4d26c36"
        },
        "item": {
          "id": "e897cc92-9967-4ad9-bb2a-13d1fb3ee6b2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "385f1074-6a2f-40cd-9ea8-877bdf926ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e30adf-76c7-4a13-8789-297a7d656351",
        "cursor": {
          "ref": "ae442adf-8c9f-4d29-b85c-1eb765bc382f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "39705aef-9398-4415-a914-0a1fe3b0ce8c"
        },
        "item": {
          "id": "a0e30adf-76c7-4a13-8789-297a7d656351",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "892f0999-0eba-4b2e-b70e-2748299e4b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aae7a7d-a744-4367-a662-86058e7f687d",
        "cursor": {
          "ref": "b4c111d8-55f1-440c-b71b-bd4d73b1f29b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6e9c1dd5-0d66-4d3d-958a-2a65025347b2"
        },
        "item": {
          "id": "2aae7a7d-a744-4367-a662-86058e7f687d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "35193c5f-353b-407a-970e-a07962e22a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c4547c-0902-4f91-928f-610f6d94f8e6",
        "cursor": {
          "ref": "d1d85c43-9a53-4c42-b064-b148c6a1bc01",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a1114e5c-780b-4fd5-889a-140443e5da26"
        },
        "item": {
          "id": "21c4547c-0902-4f91-928f-610f6d94f8e6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b93c87d4-2d4e-4cde-9fcd-92e153cf92a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f350f89-f42e-4b55-9153-7cd11b791ac4",
        "cursor": {
          "ref": "bef47c68-6763-4255-bd26-854dde74d6e0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f2890f6a-4ddc-40d8-8a3e-8d9b0d4dbecb"
        },
        "item": {
          "id": "0f350f89-f42e-4b55-9153-7cd11b791ac4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "068cbd04-e60f-404b-9078-a257a2c34af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58742466-23d9-49bd-bee3-f4ca28d58929",
        "cursor": {
          "ref": "74cb2124-8199-442f-9bfa-fe4ef820e0e6",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9ed1f8ad-206f-4a05-b591-208c10daf28d"
        },
        "item": {
          "id": "58742466-23d9-49bd-bee3-f4ca28d58929",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "184407bf-3ffd-442d-8067-7b9ee06acc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a96b111-bd15-44d7-8f3f-1d4a345e2e3a",
        "cursor": {
          "ref": "0a009f6b-cb7b-4550-8ce0-72b2e2ec9ca3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "17dc7b6c-6f3b-4ce6-ac97-648110a6be09"
        },
        "item": {
          "id": "5a96b111-bd15-44d7-8f3f-1d4a345e2e3a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "904e32ec-e6af-40a8-94df-37d0cb3e38b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36ecdfa-b6d1-4bd5-8fea-33a688c86599",
        "cursor": {
          "ref": "ab0a7ed5-f3f9-41bc-a3ac-f14a648dfe76",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5dbe273-6edc-4e5f-9229-90e339d9e128"
        },
        "item": {
          "id": "d36ecdfa-b6d1-4bd5-8fea-33a688c86599",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "960c4482-afb2-4be2-b268-020ce62c8d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb061075-9254-4494-9f5d-52fc065a94ca",
        "cursor": {
          "ref": "01457f57-30f2-4b2b-b861-29f6682a5937",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "de2f8626-8fa1-4642-8c67-ef384a2097fc"
        },
        "item": {
          "id": "cb061075-9254-4494-9f5d-52fc065a94ca",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f16b4bdc-10ae-4524-b665-cf4e4255fa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4583cd41-23d6-4988-a7d8-ff6f15c929de",
        "cursor": {
          "ref": "e25fdb17-a171-4805-b697-c7334091699d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "33ac305a-6f39-499f-b108-8aa00ab78024"
        },
        "item": {
          "id": "4583cd41-23d6-4988-a7d8-ff6f15c929de",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6e9129d1-fd54-4055-ab79-3559817450c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61148ef8-fb93-4a1d-91de-487672c70aac",
        "cursor": {
          "ref": "d78faa48-eb6c-4c82-ad25-7fcd30206037",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5e6a9332-a2e5-4f2f-9514-55f8eff251fc"
        },
        "item": {
          "id": "61148ef8-fb93-4a1d-91de-487672c70aac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5c4647fd-616b-4104-a58d-56e05bb0d205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cd7e10-75cc-4963-a5d8-5368a01f89c3",
        "cursor": {
          "ref": "4ee4c0e5-370f-430d-afad-cf997c85e833",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "686403dd-677a-463f-aa28-44fd16a8f53a"
        },
        "item": {
          "id": "c5cd7e10-75cc-4963-a5d8-5368a01f89c3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7fe3edc0-1d81-4d00-9ece-69118f35396a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2025ac8-4581-49d4-8d42-fe4051831beb",
        "cursor": {
          "ref": "305b947a-2f29-49c1-a29a-a700795bf8af",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6aa5c91a-afdc-44f6-9091-732362597c87"
        },
        "item": {
          "id": "a2025ac8-4581-49d4-8d42-fe4051831beb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e5809043-7ae1-4f65-a9ce-3037da86df9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793cfb47-23e2-4b64-9600-f9f228c437b3",
        "cursor": {
          "ref": "c616096a-fd93-45dd-b7b4-2f1bb8a151d7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c6d74c01-3d3a-451a-b511-fdd3a1de3244"
        },
        "item": {
          "id": "793cfb47-23e2-4b64-9600-f9f228c437b3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "55f84fc3-9e88-46f1-93d6-b7ac5eac287a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c743a5db-95c5-4016-9ce2-5628098c505c",
        "cursor": {
          "ref": "23e57070-700c-476d-b825-a5bcf26c5670",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "23d30427-342e-4742-bce0-5df2e32d2a4b"
        },
        "item": {
          "id": "c743a5db-95c5-4016-9ce2-5628098c505c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "53f7a0da-67a8-45a9-890f-d465320ee44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05ad430-663b-440d-973e-50eac4494eee",
        "cursor": {
          "ref": "4f68cf84-25a0-4177-9f80-b55981c74d89",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4dc5a98b-9dbe-4dd5-aa72-032ab1e97c0c"
        },
        "item": {
          "id": "b05ad430-663b-440d-973e-50eac4494eee",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "880e7b97-a837-4b6e-8ebe-f0e7f670abe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662c7c47-ad7c-439c-bf42-3d8d4a0c596e",
        "cursor": {
          "ref": "253ea08d-12b7-4738-9d69-2402731b6a93",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92d521d4-c4dc-430b-b6a2-707696e54572"
        },
        "item": {
          "id": "662c7c47-ad7c-439c-bf42-3d8d4a0c596e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "30620908-627d-47b5-8efd-7ef2f0067ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c6088c-6e9b-44bf-9ffc-0bd723b63165",
        "cursor": {
          "ref": "a96155b8-0730-47f9-b7e7-ce2da21c0376",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "21d47626-579d-4a12-8f80-c29835c07df4"
        },
        "item": {
          "id": "46c6088c-6e9b-44bf-9ffc-0bd723b63165",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3c653643-ead1-4583-bde7-c35092a0a2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a4049-8961-4672-a071-4b469aba3069",
        "cursor": {
          "ref": "fbbb7ac4-3fcd-4115-9993-3144b0e5cb1c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d852339a-1ead-434e-95fa-53a29f117710"
        },
        "item": {
          "id": "973a4049-8961-4672-a071-4b469aba3069",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bfb37c19-c772-4ade-a2e2-17a4fdb7d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bc887e-3835-4f9b-8b4c-0da8987a42c9",
        "cursor": {
          "ref": "a9f39702-e5f1-45f6-a5a7-a5f8648e6d00",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ba429c7b-40f4-4d07-9c5b-9e4706b5615b"
        },
        "item": {
          "id": "41bc887e-3835-4f9b-8b4c-0da8987a42c9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4d24e2bd-026a-4555-a872-d53f0703218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3427b099-d3f8-43ed-95bd-1b286a40ffe8",
        "cursor": {
          "ref": "48def3bd-c048-4706-9d39-7330da4cc39b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6d5f9bcd-716f-4518-940d-860e2fab5937"
        },
        "item": {
          "id": "3427b099-d3f8-43ed-95bd-1b286a40ffe8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2324b4eb-31c2-42a9-9cff-668ee980f99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fe43cd-63aa-40c4-b953-eee9dd140803",
        "cursor": {
          "ref": "8cd3da1f-f381-4107-87b0-f487fe5fff60",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df964650-a219-4da1-a652-7d3d086d5f3c"
        },
        "item": {
          "id": "24fe43cd-63aa-40c4-b953-eee9dd140803",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3083a42d-f46a-40a5-8efc-3103b1e929ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34609862-8c94-4a3f-a485-bd53fb83cca5",
        "cursor": {
          "ref": "bf1456b2-40c8-4ff8-b9db-85c432549ff1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9de5c65e-33f3-4366-9d37-028b7f4090be"
        },
        "item": {
          "id": "34609862-8c94-4a3f-a485-bd53fb83cca5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e93ac539-b094-4714-9878-7f8745401385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea114f0-ad9f-4e1f-a3b8-0e125bfa76a7",
        "cursor": {
          "ref": "0d7c3fb0-0d75-4395-9506-610798050e01",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bece14ff-6bff-463e-a511-880138d69a8e"
        },
        "item": {
          "id": "aea114f0-ad9f-4e1f-a3b8-0e125bfa76a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c6ed6aac-b7f4-42c6-82b0-a2ef0be5b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95be9e30-60f1-4043-acfe-8758c43f4e7e",
        "cursor": {
          "ref": "a82fe5ff-cc9a-4305-a033-0d0296b5c7b6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fcfc0b9d-94a8-4b9b-ae26-fac4d2df4dac"
        },
        "item": {
          "id": "95be9e30-60f1-4043-acfe-8758c43f4e7e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d263ea6f-bcc2-4d47-b72d-47dc246e8a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2569bf0-7b1a-4306-932e-ebcef38d5c75",
        "cursor": {
          "ref": "41660621-7bc1-4fab-ab60-ffa7c792cfad",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e1ea8203-8f22-4156-942a-7ab5f21d7875"
        },
        "item": {
          "id": "e2569bf0-7b1a-4306-932e-ebcef38d5c75",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "78ee5d60-42e7-4fe5-91bb-ddc0e8e6e25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78e2f19-c8c6-42e2-9427-278b46e20b1d",
        "cursor": {
          "ref": "d92381bb-e1c4-43d7-826c-ca836efd5773",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "42b72d7c-c459-46f4-80d6-a8ab747b8cca"
        },
        "item": {
          "id": "f78e2f19-c8c6-42e2-9427-278b46e20b1d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8024494f-9fc3-46e5-bd59-172a363f79f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff73ece-3373-423f-bb4f-80dc30cb6feb",
        "cursor": {
          "ref": "182553bf-612d-457d-a892-77aa08da1f55",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cf22a5bf-6eea-47ef-a09e-495f4fa6860d"
        },
        "item": {
          "id": "6ff73ece-3373-423f-bb4f-80dc30cb6feb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04cce6f0-add5-4e33-b631-0f483896e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6021b0-5346-4164-898e-c01efa5ddb91",
        "cursor": {
          "ref": "6844cae0-ccc2-48ce-abf7-d1e6c2b298f6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fbfb9bfe-a701-4bed-b153-ca5a3c792ec9"
        },
        "item": {
          "id": "8a6021b0-5346-4164-898e-c01efa5ddb91",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ab8356bf-f9e4-4038-a879-d3e2046314a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1675009f-6ea8-47a7-af85-22c96e5847cf",
        "cursor": {
          "ref": "0cf43c3f-7eaa-4ba1-bbd4-bbedd4acf110",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9cdfb6b5-7f71-4099-83c6-23974097dbe7"
        },
        "item": {
          "id": "1675009f-6ea8-47a7-af85-22c96e5847cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "954ac47a-e57d-4779-ba80-fb8bdec3c248",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c85ea3e-8c4d-45ba-a05a-4829e5da2c39",
        "cursor": {
          "ref": "28b76566-0ae5-44ed-94dc-fee99fd0e2c3",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "764ae84b-a50f-40f2-9935-7186c4292c0d"
        },
        "item": {
          "id": "5c85ea3e-8c4d-45ba-a05a-4829e5da2c39",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9ae2e7e3-8fc7-455b-9973-3429f7e26323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "12737d5a-7d63-4eec-945a-be219f6994f7",
        "cursor": {
          "ref": "2c7888b4-bdbb-43f4-8e74-d28ed90d95c3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c94d2b8d-80f0-4ca3-a509-1376e973106d"
        },
        "item": {
          "id": "12737d5a-7d63-4eec-945a-be219f6994f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bb6960a4-12a8-48dc-b6d6-fbb1a9c7cc66",
          "status": "Created",
          "code": 201,
          "responseTime": 3032,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "301458c8-137a-4eea-96cc-0c47ea406a59",
        "cursor": {
          "ref": "036cb2eb-8bfa-4bb0-8f06-f3377e149d1e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "28d34e4b-b665-48b5-99e7-8d5e67cbdd85"
        },
        "item": {
          "id": "301458c8-137a-4eea-96cc-0c47ea406a59",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2a6342ee-1155-4447-8bf0-8b5b74e4ccf7",
          "status": "Created",
          "code": 201,
          "responseTime": 2031,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c74315-7b8d-46b0-b6eb-585ea171b2f9",
        "cursor": {
          "ref": "224b8e77-2965-4879-95b0-ad59a325cd78",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "91c9d11c-1b5d-4dea-901c-d31b6da80278"
        },
        "item": {
          "id": "11c74315-7b8d-46b0-b6eb-585ea171b2f9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "acc1e365-8749-463c-8a24-720283808164",
          "status": "Created",
          "code": 201,
          "responseTime": 2036,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79256ab-1c6f-48eb-a984-d78684415897",
        "cursor": {
          "ref": "544ece9a-0f9e-4a2a-bf5b-57d906dabc6f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "53fb07cf-0961-4685-8daf-b353775f0208"
        },
        "item": {
          "id": "d79256ab-1c6f-48eb-a984-d78684415897",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74b38cfb-36b6-4cf4-bcb0-dcc799a5725c",
          "status": "Created",
          "code": 201,
          "responseTime": 2146,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "18137b71-9b0b-4c80-9717-a093f63227bf",
        "cursor": {
          "ref": "3b43b902-d881-4c24-b469-b7d94bdd6e85",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fc5a2873-41e0-4a08-834f-59b76d857622"
        },
        "item": {
          "id": "18137b71-9b0b-4c80-9717-a093f63227bf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6c3cebfe-8fee-4a4d-b2b3-97e5d835763f",
          "status": "Created",
          "code": 201,
          "responseTime": 2814,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50af14b-f05c-4ed2-aaec-a4ebc0224938",
        "cursor": {
          "ref": "8219d319-9c80-432a-b854-ad2d1976ea20",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "85fb440b-837c-4e1f-bc0e-d5b342105bf8"
        },
        "item": {
          "id": "b50af14b-f05c-4ed2-aaec-a4ebc0224938",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6bf1f31b-3602-4fed-bf39-ec1f43b4caeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "66752036-abf8-4382-ae67-4682e7c405d7",
        "cursor": {
          "ref": "b97f6f62-5ecd-428d-8523-0b483ddf95c7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "da0a75c7-98c2-4359-92fb-f3f566ffc15e"
        },
        "item": {
          "id": "66752036-abf8-4382-ae67-4682e7c405d7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "399c781e-568d-42a6-9a50-a6d7ea20b68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfbd074-4a00-4baa-8831-7815d13e1ef6",
        "cursor": {
          "ref": "687546b8-43b0-495a-8e7d-d1094bcabb2c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "49114eef-e4ce-4241-9514-3b69fb21460a"
        },
        "item": {
          "id": "4dfbd074-4a00-4baa-8831-7815d13e1ef6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "22b049cb-161d-4ef0-b649-46a333cc281b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487a768-7c28-4555-b406-9498df5c1a0b",
        "cursor": {
          "ref": "8d4dd20a-f364-4ff1-9788-55c7508e2f59",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6a233d20-3c4a-4956-8790-2ce3b11c2125"
        },
        "item": {
          "id": "7487a768-7c28-4555-b406-9498df5c1a0b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7a08a99f-5a85-4fb7-9331-42dbbc922ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b3a613-42cf-44b7-84ea-2a53f05c32d5",
        "cursor": {
          "ref": "59171b51-750f-42cc-98fa-69e263cf10c6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "14f23a77-bf96-43e7-b2ec-45ec2b409592"
        },
        "item": {
          "id": "e6b3a613-42cf-44b7-84ea-2a53f05c32d5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fff14aff-da1f-4050-8ba9-cd1ebf8d5cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52776ab2-6a57-4c48-8bea-9d6aab810a3b",
        "cursor": {
          "ref": "a036cf51-3f7a-4ef9-8104-eab5afd97fa2",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "56fde508-f6c7-455d-b44d-108d6fee0865"
        },
        "item": {
          "id": "52776ab2-6a57-4c48-8bea-9d6aab810a3b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f138ae14-0bc4-4a91-a1a5-077904b7b8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61040eb6-6ef4-470f-aa84-da74a7f11b09",
        "cursor": {
          "ref": "972d0084-fa9d-4f20-9831-85ca5b795e1c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8675294e-69b5-4611-a6ea-7f75ac3558f4"
        },
        "item": {
          "id": "61040eb6-6ef4-470f-aa84-da74a7f11b09",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0dad5483-8884-49df-9451-258393315fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed90571-54af-40f5-8df3-fceb394b8840",
        "cursor": {
          "ref": "4e3b3964-c95b-4ac6-9606-4350592e36db",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fbb8ba51-a4aa-4065-b6c7-c248b6936689"
        },
        "item": {
          "id": "6ed90571-54af-40f5-8df3-fceb394b8840",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "845cb12e-ff12-4a79-9745-bb05e2db925b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7768af-c734-4a89-bfca-ac3eb59dd591",
        "cursor": {
          "ref": "8d6f3d49-353a-4cf0-81fb-17afba592810",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "31aa020a-44ce-4a88-a7b0-8b7ae28dc2ef"
        },
        "item": {
          "id": "1f7768af-c734-4a89-bfca-ac3eb59dd591",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4c5ac32-348e-4bfb-8a29-24ec4dadc99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01564ba8-615f-48c6-858e-bae6dafbdfcf",
        "cursor": {
          "ref": "79e25a67-837b-4e12-b85d-b959a0fd921d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7d2245f-abb7-4011-9e29-31b1e9c826f8"
        },
        "item": {
          "id": "01564ba8-615f-48c6-858e-bae6dafbdfcf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a0ddc2a8-494f-4972-93e5-44be9249ffee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547f5aea-0a93-490c-b8d2-3d3d88a5acc3",
        "cursor": {
          "ref": "d564c3ec-7da5-4f6f-88ff-eb8689339c97",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac017ed1-1d82-44a0-b634-b0642741d78c"
        },
        "item": {
          "id": "547f5aea-0a93-490c-b8d2-3d3d88a5acc3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e89570a8-1403-4b79-8e44-43ee38fa2100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d3c41a-6cf4-41ed-8403-9cb04a8281fe",
        "cursor": {
          "ref": "0f7840b5-9711-4208-948c-5c032cbb1acc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b3c6dbdc-d5cb-4c07-b122-0d9d17a99724"
        },
        "item": {
          "id": "85d3c41a-6cf4-41ed-8403-9cb04a8281fe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f9618b6-d238-489d-a03c-096e5e53f37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e43a4a-1c9e-43f8-aadc-37810f6e2595",
        "cursor": {
          "ref": "12be48ca-5d61-4de0-86a7-c7760a92c939",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "35c7f28c-9000-43f2-97f4-a0d6da4687ee"
        },
        "item": {
          "id": "41e43a4a-1c9e-43f8-aadc-37810f6e2595",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2f629bc0-f377-43f9-b312-ae0a1871fd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cec143-45de-4d46-91c3-deade9bf491d",
        "cursor": {
          "ref": "25947aa5-30fa-492f-9027-5dea3ed20fae",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4718425a-0401-4333-a18b-e33dc105b046"
        },
        "item": {
          "id": "30cec143-45de-4d46-91c3-deade9bf491d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ae20827-dec0-46e6-87a4-f14d7321c3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b5ee59-5b58-4850-b89a-0e765ff15c11",
        "cursor": {
          "ref": "609555e5-d519-4061-9f6e-4856c276fd02",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c4f5ef8d-0afe-4f9f-a360-91ff44ac38ab"
        },
        "item": {
          "id": "18b5ee59-5b58-4850-b89a-0e765ff15c11",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5c44f76c-dc37-47e2-9e79-4deaf5112494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e874771e-71e7-4fb1-918b-d12d3be76c0b",
        "cursor": {
          "ref": "0359255b-803b-4e5d-ab2b-90b7f8e42a5d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "614ab41a-4bff-46ff-a1e7-c2d54ca6c4fa"
        },
        "item": {
          "id": "e874771e-71e7-4fb1-918b-d12d3be76c0b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "544a198a-f322-485f-8804-4a076231b7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50351776-04dd-4f95-8887-3d5c48c627ef",
        "cursor": {
          "ref": "c0b4c10f-d532-4cdf-9653-b4061255d525",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f6d5882a-875c-4509-b923-e7956165e04a"
        },
        "item": {
          "id": "50351776-04dd-4f95-8887-3d5c48c627ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e0718d35-c36e-4ac8-826a-7de7ec7fb2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111c569a-8225-47c5-9f67-e0c41819c1a9",
        "cursor": {
          "ref": "48cb837b-b4ad-441f-b817-01a0ac1f3f05",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0b722ab0-9977-4d38-96c9-dd0e02243772"
        },
        "item": {
          "id": "111c569a-8225-47c5-9f67-e0c41819c1a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "62f3d476-b31d-436f-8ccf-99b9154f75c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fa9849-0530-4729-896e-ef1a4367e9b5",
        "cursor": {
          "ref": "748d7382-b2b3-4bee-a55a-25c96233ec8d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e2f08432-0a61-4b2c-aa1c-d584126f3378"
        },
        "item": {
          "id": "b0fa9849-0530-4729-896e-ef1a4367e9b5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17249ad6-8b72-4326-ab48-b75cecfe8a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65fb54-c0c5-43f1-b755-07ad0e1c27f5",
        "cursor": {
          "ref": "a88c94c9-c462-4fb8-9c5b-3a9ae9a537f8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1c9f155f-08d5-4558-bd6f-18bba6e1d3d4"
        },
        "item": {
          "id": "ac65fb54-c0c5-43f1-b755-07ad0e1c27f5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e183c775-dfc1-4518-ae02-49df4de35124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca6b384-4ec2-4c06-9ace-560f8ecdbf00",
        "cursor": {
          "ref": "1bf32a83-501f-4403-9946-121017fff09a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "43ce8921-9982-4289-b683-f4adf1df9862"
        },
        "item": {
          "id": "5ca6b384-4ec2-4c06-9ace-560f8ecdbf00",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "80f9b942-8649-470b-a578-11e84ea38f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee05345e-09ed-4906-b585-c18c54e8f2b2",
        "cursor": {
          "ref": "04224020-8cce-412f-a262-df831f6952e8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "681cdccb-7874-4a3b-855e-303382754339"
        },
        "item": {
          "id": "ee05345e-09ed-4906-b585-c18c54e8f2b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7e4d872b-e162-4665-b9d5-3c153ef7bc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a7c638-0339-4275-a512-52da401306bb",
        "cursor": {
          "ref": "bbc12fde-9f79-4719-8138-c92705e27b7d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "da070155-a77b-4253-8fa6-abee204eab1e"
        },
        "item": {
          "id": "93a7c638-0339-4275-a512-52da401306bb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "444f4077-0077-43d0-826f-731b201e4788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc82482b-61df-4f70-a135-2a0715bf9459",
        "cursor": {
          "ref": "c1481437-7664-420e-a3d2-8fe15e6de8af",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f322288-6b38-4aab-9fed-49e1ea84faf2"
        },
        "item": {
          "id": "fc82482b-61df-4f70-a135-2a0715bf9459",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "62425459-6ad4-4776-89dc-07bd1caa3522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ecbbf0-ce31-459c-ab56-fce736a8a2ed",
        "cursor": {
          "ref": "416cc392-5cd7-4bc6-8541-690c90182afd",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "545eb4ab-74ec-4e38-9995-6a3cb9a8e1fe"
        },
        "item": {
          "id": "23ecbbf0-ce31-459c-ab56-fce736a8a2ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "39f8ff04-9358-42cd-b61f-9e8e8affde01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776cfc0a-d1d3-4e44-a3c9-d1aa6b51f71c",
        "cursor": {
          "ref": "cfb478d6-8a9d-43eb-a0bb-952181b0258a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "da28b5c9-8e15-4dc9-bd74-df60f390b15a"
        },
        "item": {
          "id": "776cfc0a-d1d3-4e44-a3c9-d1aa6b51f71c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bdff078e-91fc-42b1-a30b-e05a4bdf7755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa7d456-e9f6-4d42-86da-40e7092d5a1c",
        "cursor": {
          "ref": "f883711c-650c-4c7e-a209-1de86cebbed9",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "27182143-d43a-4431-a5d2-4bdf45ef4c60"
        },
        "item": {
          "id": "6aa7d456-e9f6-4d42-86da-40e7092d5a1c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad6e23fb-b69b-4c61-b533-d37c96b517b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37af65b3-9f4c-4c7d-9bb7-5374d9f987cd",
        "cursor": {
          "ref": "ceeb86af-acbf-4d7b-ab11-0a80016ff54c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "edbc5f1a-e0a9-4c62-83f3-7dd828a37caa"
        },
        "item": {
          "id": "37af65b3-9f4c-4c7d-9bb7-5374d9f987cd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0fc4f11b-36f4-4306-8209-1b966f9d3e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbee96e-6ae3-41d3-80af-d0a7c0ff4a80",
        "cursor": {
          "ref": "5e738b91-0cbb-4d51-92ce-fdba749306d8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6be4f211-10a3-4b62-aebf-252e303b39cb"
        },
        "item": {
          "id": "5fbee96e-6ae3-41d3-80af-d0a7c0ff4a80",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eb401682-15dc-4555-b4cf-334aa9f82c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1c9b7e-e57c-4687-b3b6-a545f7a8e534",
        "cursor": {
          "ref": "21d20ad7-edeb-430d-8ab1-00eba29ddf06",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "01894031-06c0-4f4b-9273-368a49c34510"
        },
        "item": {
          "id": "1d1c9b7e-e57c-4687-b3b6-a545f7a8e534",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7bf9671e-3d71-4c45-95d2-30bc7f590b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff2df7d-dad8-4f98-b82f-fcee03394e21",
        "cursor": {
          "ref": "6cbd6b8c-04c5-48d3-9bbb-30e390c9c2fc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "373a996e-5610-412e-b3d9-ce526ec5f90e"
        },
        "item": {
          "id": "2ff2df7d-dad8-4f98-b82f-fcee03394e21",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f967c11f-c39f-4ee3-9f9c-1fb101abc234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e0988-7e74-4ddd-9840-d37a8e489d9f",
        "cursor": {
          "ref": "2b7cddd8-b1c5-43e7-b315-c7579aeb47f7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aec58d89-bda5-4abe-9461-09fc8e473032"
        },
        "item": {
          "id": "872e0988-7e74-4ddd-9840-d37a8e489d9f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ab3bf0f4-edc7-4697-9d42-de3f02ce63f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f0d665-efee-4890-8e7b-fef4c7502d51",
        "cursor": {
          "ref": "eb49b9e9-cd36-4f22-ac51-04c15d443a18",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2832e21b-f647-4ec4-9a27-1225e74dc447"
        },
        "item": {
          "id": "07f0d665-efee-4890-8e7b-fef4c7502d51",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4ec65eed-1f3b-420c-a90b-ff01f7b5e51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2d2db4-b742-44e8-89f8-18ab7e8815aa",
        "cursor": {
          "ref": "d39bf83d-1d27-4756-825c-602be9a6a16b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "03b96faf-7b61-40f7-a4f0-d20fda3a8402"
        },
        "item": {
          "id": "8c2d2db4-b742-44e8-89f8-18ab7e8815aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "90a30d03-2c95-4f25-a664-b4b940df7bee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4446a1f2-fb75-4f14-a7d8-2f698856b443",
        "cursor": {
          "ref": "f4451abf-b786-44f0-9a9d-a49deaf5394e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1f49d456-dbb2-486a-b364-3949201c308a"
        },
        "item": {
          "id": "4446a1f2-fb75-4f14-a7d8-2f698856b443",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9980fc57-8f3c-4a33-a9be-d571caf753ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f92a34d-6132-4db0-98df-0083ddbcb654",
        "cursor": {
          "ref": "c358fe51-69a1-4887-bf8c-015742abce08",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "207871e7-f876-4e73-9e60-ed5eb9c48944"
        },
        "item": {
          "id": "3f92a34d-6132-4db0-98df-0083ddbcb654",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40b1083d-9583-4faa-be61-73698a06c601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34958f5-6bc3-4532-9cf9-108ad65fc094",
        "cursor": {
          "ref": "d7437e49-bedf-4fcb-96d4-3996cce067fb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "99f85703-dc25-47e2-bb0b-b720221a9cf9"
        },
        "item": {
          "id": "a34958f5-6bc3-4532-9cf9-108ad65fc094",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06d3e8c0-4a40-4dac-9a26-54a730169a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15c78d1-59df-4122-91c9-633cca2ead71",
        "cursor": {
          "ref": "3eeecf9d-8412-4ed8-a25a-7ee6b90ccd15",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "945f3e7b-2920-4397-a7d2-c376991b1f20"
        },
        "item": {
          "id": "e15c78d1-59df-4122-91c9-633cca2ead71",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "26a25df0-bcba-454a-a965-0cba6f0d6ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063b437d-323e-4c00-9547-dfef24a7b2d3",
        "cursor": {
          "ref": "05791c5e-839e-4118-8ed4-c4f8da847cc8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ff29f215-d5c4-4475-a7c5-4874ff698ac6"
        },
        "item": {
          "id": "063b437d-323e-4c00-9547-dfef24a7b2d3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e000df63-6409-4949-8655-d46db9c8aa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9d4820-56dc-4f08-8e3e-f5976ad60321",
        "cursor": {
          "ref": "e5cd7b7a-1be0-4d1c-afe4-f0349b0925a2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "22997163-8e9a-46b6-acf2-0020355078f0"
        },
        "item": {
          "id": "0f9d4820-56dc-4f08-8e3e-f5976ad60321",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0e282864-b935-4f74-9662-19b4a0248e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49523d9-1d6c-4fac-9f0c-27f15af5fc5c",
        "cursor": {
          "ref": "edc5d527-2f25-4956-8c51-3a543b977dca",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7bfdf853-7d4d-4a25-9de5-076be19bc15b"
        },
        "item": {
          "id": "b49523d9-1d6c-4fac-9f0c-27f15af5fc5c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "13a55c09-8627-49e1-ae5a-c790033dd65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82d64c-3681-49e3-9b52-647d753ec30d",
        "cursor": {
          "ref": "c47d156c-bbb6-4286-bac4-e41800da9e55",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f7548ea-a9fd-4fac-888d-9745152830db"
        },
        "item": {
          "id": "ed82d64c-3681-49e3-9b52-647d753ec30d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c858843b-636a-4092-ad9a-0957acb58b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9de309-3169-4e12-9b58-3871bb21c7b6",
        "cursor": {
          "ref": "040c0757-3e88-4cd3-bb07-99c2533d98ad",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e7ec7838-9c5a-4104-9ac1-97261a3e6edf"
        },
        "item": {
          "id": "fe9de309-3169-4e12-9b58-3871bb21c7b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e4c79931-e2f1-47d7-bad2-307d491810b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730d98a0-0f44-4356-a8d3-5f4d3a437837",
        "cursor": {
          "ref": "66a7c75c-6613-4564-ae3e-d8821eb0415b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "248d22ab-5b00-42ec-b8f1-52d43b68cfc0"
        },
        "item": {
          "id": "730d98a0-0f44-4356-a8d3-5f4d3a437837",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01ed190d-77df-4282-a19f-93e368b38714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772446b4-0e22-4ad0-b13b-0945f55fa691",
        "cursor": {
          "ref": "1cb67c9c-8c7a-4fe8-a443-37de76f7042c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c013a1bb-888f-44b4-b578-f5799bd0629f"
        },
        "item": {
          "id": "772446b4-0e22-4ad0-b13b-0945f55fa691",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fe42b8c2-0bdd-442d-a809-f6e0a8cd406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944f747e-b3af-4192-9bfe-6ab06de35673",
        "cursor": {
          "ref": "994857f0-8946-4b2c-9a2e-4480304e3b26",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2b332bf2-ee41-4c2f-b2f1-94cecb89a825"
        },
        "item": {
          "id": "944f747e-b3af-4192-9bfe-6ab06de35673",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fac97ce3-0ca8-4cee-91bc-acecd47f6228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df902932-e8c3-478a-8daa-ee12b335bdeb",
        "cursor": {
          "ref": "e24f333d-f069-4eaa-b9f4-c735fcac234d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "302be048-2f63-470a-ad86-5d9947837428"
        },
        "item": {
          "id": "df902932-e8c3-478a-8daa-ee12b335bdeb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "390adeca-dc97-4727-a3c5-328a6fd777f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8102b0ce-3415-41bf-aeaa-8c84778bc9ea",
        "cursor": {
          "ref": "6d40ab58-0e2b-4f34-b04c-5e36f27b6716",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cf5fac3c-30d0-4d78-b184-21f1f141bbae"
        },
        "item": {
          "id": "8102b0ce-3415-41bf-aeaa-8c84778bc9ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2039d512-929b-4f1e-804f-439d9ff69941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf7ef81-6a94-4768-8690-1babf4c061fe",
        "cursor": {
          "ref": "ba6acdc4-9d24-4123-a0f7-a5e1cdd5e428",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1836e9e5-7efb-4ce0-9abe-cf2836f251c1"
        },
        "item": {
          "id": "8cf7ef81-6a94-4768-8690-1babf4c061fe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e069d1a2-1eca-47b5-9b27-33aad5c05286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb3209e-cb2e-40fd-be1f-eb89bc7bba4b",
        "cursor": {
          "ref": "5d395cf9-10f5-493b-b14a-b2f5b0c33eda",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "86066cd5-c5ab-4c89-a592-b954b03297ff"
        },
        "item": {
          "id": "7bb3209e-cb2e-40fd-be1f-eb89bc7bba4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "220c99cc-1737-4720-9c9e-d5a019f05f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b52d33b-83d5-4706-ada0-6b425c5290e3",
        "cursor": {
          "ref": "48e18826-ece2-4520-93cd-8030689bd048",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ac18f8d7-c69d-4ce3-8a76-ddeac76062d4"
        },
        "item": {
          "id": "5b52d33b-83d5-4706-ada0-6b425c5290e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "aa2f9d73-62c3-4054-b6f6-638f794dec0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718174af-50bc-4caa-8917-7fa3a07c583f",
        "cursor": {
          "ref": "b11a4a3c-8875-44d9-ae36-b7f1934bcf22",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "99981ba2-5352-4af2-8cf1-8ff3d2f8b9c0"
        },
        "item": {
          "id": "718174af-50bc-4caa-8917-7fa3a07c583f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "901ef002-1d9a-4224-96c9-354ee629b1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf86157b-41d5-4fd8-8816-b95265a5c383",
        "cursor": {
          "ref": "ac193ab5-8e49-45ed-a659-ab97ffa173e6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "771a1031-4568-4cf1-a249-e6f32766c6e2"
        },
        "item": {
          "id": "cf86157b-41d5-4fd8-8816-b95265a5c383",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71ccca88-230d-477c-a1af-2e15599e639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4205378e-fb37-4fb2-b87e-ed40f810da3a",
        "cursor": {
          "ref": "88fef1ad-2942-4308-95dd-05b712d4d61c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "70fa8ba1-2d58-4c76-a9c4-fbb63901a101"
        },
        "item": {
          "id": "4205378e-fb37-4fb2-b87e-ed40f810da3a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b518ebf4-27cd-402c-aee8-1a1d4a22fdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9b3d93-bcd0-40f5-b47f-f23379d455f1",
        "cursor": {
          "ref": "87db6496-7bbc-4d2b-b8c2-2958cca10e2c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "32c9d432-f657-4d94-a6f0-4c2a277ad4e3"
        },
        "item": {
          "id": "3c9b3d93-bcd0-40f5-b47f-f23379d455f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ecce008-75be-41ef-8539-de4ac1f24e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8285d0-95dc-49e7-8e95-739bf61cdd70",
        "cursor": {
          "ref": "82806e81-69d4-4959-8ec6-b9ea0cb49219",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "39d9732e-f238-4d9f-b28a-59137380222f"
        },
        "item": {
          "id": "0e8285d0-95dc-49e7-8e95-739bf61cdd70",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7b5706c7-bffc-471c-8ebe-28f39df14f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be7efae-88dc-4a6f-9657-3178c9dceeee",
        "cursor": {
          "ref": "8d40ffe0-dded-4ed0-8108-a137d5ff38a4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "084fcf8b-28c2-460b-8022-9803d5a8b35f"
        },
        "item": {
          "id": "7be7efae-88dc-4a6f-9657-3178c9dceeee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7b190bac-47fc-407d-8b9f-86717de25efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0047771-af42-4e2f-b016-4eca71c7ff13",
        "cursor": {
          "ref": "ac4f9433-8f85-4df4-83c5-b45fc0bb011d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "40a35898-ff69-4a3c-ac42-36ac82b39366"
        },
        "item": {
          "id": "f0047771-af42-4e2f-b016-4eca71c7ff13",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9b53b16-4c19-40f5-bc41-61511227ac82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1972d8dd-c605-4d11-a442-a21d6c17b88b",
        "cursor": {
          "ref": "575e75f5-e6e9-4f08-bfd1-93f5c4f52cfc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c45c15be-3e63-41ec-b93b-c7e0fee757c8"
        },
        "item": {
          "id": "1972d8dd-c605-4d11-a442-a21d6c17b88b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2fb407dd-06dd-4e13-b75f-a7edc2eaf47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f11069-2449-4f93-88a0-5e15df92bbb1",
        "cursor": {
          "ref": "cb0af18e-e915-439f-baac-7cae284ab1d2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cda7ab72-4d39-477e-aa16-2350f8150860"
        },
        "item": {
          "id": "77f11069-2449-4f93-88a0-5e15df92bbb1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "069c3bcd-6fb7-4f63-98fe-741b6228937a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a1c05d-83b3-46fb-8b9c-f61bd1b72c8f",
        "cursor": {
          "ref": "d23cef54-13d7-4dc4-8cde-4f81cff3c2b0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0cf19c87-9ed3-42fc-aaf3-7a58e759b7cf"
        },
        "item": {
          "id": "b8a1c05d-83b3-46fb-8b9c-f61bd1b72c8f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a63e2198-d259-4c0e-be06-2059ef84a480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcda09d-ff8a-48c0-bbcc-9e0a59d6c7c9",
        "cursor": {
          "ref": "b86e3f0d-2ea9-4fee-a80d-97677e585037",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8d7f73be-a259-469f-a0eb-25bca91df7b2"
        },
        "item": {
          "id": "5dcda09d-ff8a-48c0-bbcc-9e0a59d6c7c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2e6f526-9660-40a9-b26a-2aabb58fbacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00e5be8-e87b-4195-bdf7-5e23c6bc3a86",
        "cursor": {
          "ref": "1fad9db6-0e8f-4f35-9d44-be5954a0f48c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b7d17d0e-b46e-49b1-a35b-3863b56c2c6b"
        },
        "item": {
          "id": "e00e5be8-e87b-4195-bdf7-5e23c6bc3a86",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bf3cd19e-a8de-479a-aa3e-0c5ba02102ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1211fe16-dfa8-4f60-aec9-5045441aaab2",
        "cursor": {
          "ref": "859455af-5fc0-46b1-8a71-f2ff3ccc98ad",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4546a14e-30f7-445a-b67c-532a54bf19a0"
        },
        "item": {
          "id": "1211fe16-dfa8-4f60-aec9-5045441aaab2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "18ce125c-4c02-4d5a-927b-3863976e265b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030a06ce-140e-49bb-898e-60e15d7a8002",
        "cursor": {
          "ref": "f4643049-abe6-48e0-8d65-d8ee53ae0c08",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d9ad9b3a-aaab-4f87-92b9-0d14a5f0c328"
        },
        "item": {
          "id": "030a06ce-140e-49bb-898e-60e15d7a8002",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22169c01-0fef-4fb1-bb09-71d8c5469f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3469b1a5-8115-4e57-8576-43e69abcf7c2",
        "cursor": {
          "ref": "ef3b06d8-82c1-4d2b-a10c-db2f3f291c42",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "36d03b95-1dea-4de5-bd82-5516d9b20dab"
        },
        "item": {
          "id": "3469b1a5-8115-4e57-8576-43e69abcf7c2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "327ee5dc-5efa-4cc4-bfc7-fe8eebec99f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be384b00-b3f6-4362-815e-f70fd7eed1bb",
        "cursor": {
          "ref": "d9c2006a-9274-437a-a50d-b46cc8f3df23",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7639e3ff-5099-4188-8f3f-ca8fc12850fd"
        },
        "item": {
          "id": "be384b00-b3f6-4362-815e-f70fd7eed1bb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "968c3586-b067-4ffd-8a75-787875284a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d3bb4f-0d74-40be-943f-a0d313a9c0ba",
        "cursor": {
          "ref": "a3ca5da8-b277-4f78-a85b-0cec2a541438",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0a5f73af-e42a-48f4-bc6b-edeb8cd7dba7"
        },
        "item": {
          "id": "94d3bb4f-0d74-40be-943f-a0d313a9c0ba",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a5b9e7b9-fcae-4825-8668-4acbd6de8fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da3346d-5274-44a5-bdc8-11d68244d2b5",
        "cursor": {
          "ref": "e52c798b-6001-4f83-a619-18a086fb888e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "42e20aa8-a210-4ba6-a1b5-4987d27068b8"
        },
        "item": {
          "id": "2da3346d-5274-44a5-bdc8-11d68244d2b5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cdfd2284-5edb-4812-9b41-4302ce093ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3614fca7-770e-43da-9dc8-3208b135afb7",
        "cursor": {
          "ref": "2a5ab44b-dd9d-478d-a972-fc80de241de3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02ce5228-8293-4550-bee0-8a8766ba5ecb"
        },
        "item": {
          "id": "3614fca7-770e-43da-9dc8-3208b135afb7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "28e592ca-c22c-4ca7-b61e-6d601d31890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1403360-d470-43a6-a2f5-6653a11771ee",
        "cursor": {
          "ref": "1674582d-a164-4143-84ec-b3c22c2de2fe",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bd71407b-4e05-4c34-b385-1a5d3b528b60"
        },
        "item": {
          "id": "b1403360-d470-43a6-a2f5-6653a11771ee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b91a3afb-a097-4630-9000-eb6eaa3067f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa26c63-1bc4-48fc-beec-04658ec69d24",
        "cursor": {
          "ref": "e7c0f8b9-f94a-4436-91c9-0d5160c5eb89",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "37904001-ed7e-48d3-8150-2ec062c914b5"
        },
        "item": {
          "id": "6aa26c63-1bc4-48fc-beec-04658ec69d24",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a2a7d2e-5d6b-4a27-a75f-b13fdc38fd10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4b4575-420c-4eeb-8ca3-a5390aca3186",
        "cursor": {
          "ref": "dade6c55-3085-4805-b16f-f1468c034c14",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "057d6f09-06f2-4057-9ab1-f138b533c243"
        },
        "item": {
          "id": "5b4b4575-420c-4eeb-8ca3-a5390aca3186",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "479799d9-d732-4f9a-a062-af3a6ac8aa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72af7889-8811-4901-bae8-c67f94f9779a",
        "cursor": {
          "ref": "6760d19f-c335-4093-b37e-5211cb2c8c33",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3c315fb8-fa78-4fe4-aa73-212f193d65b9"
        },
        "item": {
          "id": "72af7889-8811-4901-bae8-c67f94f9779a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "98452fa6-1a59-4830-b5b4-f834965eb25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4057400d-e602-4671-9daf-bb464579f79a",
        "cursor": {
          "ref": "ff0efacf-7227-4a0a-919b-e3f4561abf61",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a4d07d68-ccc7-441e-a510-de34cc39dd64"
        },
        "item": {
          "id": "4057400d-e602-4671-9daf-bb464579f79a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8177657f-62ed-4063-8352-0100da686237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06027b3d-7236-49a2-bdb2-91394ac7169a",
        "cursor": {
          "ref": "d636222b-195f-4ffc-bf1b-6fefa682969c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "99cd8fbe-9feb-4297-ac08-558d557b89a2"
        },
        "item": {
          "id": "06027b3d-7236-49a2-bdb2-91394ac7169a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe2bd39e-1f8a-42c9-a0cb-5ad8c6c4e6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54d33fb-7878-4cb8-8ae9-87b6b33d1270",
        "cursor": {
          "ref": "28f79722-827a-4438-92df-46a64030f2d7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a03034e9-60ee-4750-bf88-1fc587726248"
        },
        "item": {
          "id": "f54d33fb-7878-4cb8-8ae9-87b6b33d1270",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b10db983-8213-4af3-a79e-925425e1b95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0f2792-59e6-4f94-bc18-9f4f79131b5e",
        "cursor": {
          "ref": "19836d78-7182-4504-ad9e-80eef88d03bb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7087a66e-416c-4a90-9c89-3dec99e4fc10"
        },
        "item": {
          "id": "8c0f2792-59e6-4f94-bc18-9f4f79131b5e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "11b5c44d-c301-44c8-9cca-18439c00421b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d09423b-3e8c-4578-9123-0ad43308f111",
        "cursor": {
          "ref": "2fef4e28-4331-40d0-b176-b4ab64fb37c9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d5b7120d-d22f-4e9c-a790-5a0c05fcce79"
        },
        "item": {
          "id": "7d09423b-3e8c-4578-9123-0ad43308f111",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d4c05b4f-5e18-4b05-8436-fd131d4e2186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265c90d7-17a2-45d4-b9dd-81432e736d68",
        "cursor": {
          "ref": "d30fa5d0-26b0-422c-9c66-aff6a26f2221",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df490071-54ea-48e2-829f-89ac4d09175a"
        },
        "item": {
          "id": "265c90d7-17a2-45d4-b9dd-81432e736d68",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "217eed86-e0df-4b8b-8f5b-de29b8572094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbc6bfb-5b02-4395-9c77-6913473839e7",
        "cursor": {
          "ref": "26880514-9d8b-4e9e-83d7-a9b16605bdf7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8068d508-85c2-44d5-937b-b90f7f919efa"
        },
        "item": {
          "id": "edbc6bfb-5b02-4395-9c77-6913473839e7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7986de6f-8177-4fd0-b539-aa72e6de1323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5da746-6c45-4cf2-b32a-71a1b9003baf",
        "cursor": {
          "ref": "71917624-4427-4485-80ae-a9edd5cc25bb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "47c9ab0c-6c7c-4ac4-946a-047c78db7e75"
        },
        "item": {
          "id": "1f5da746-6c45-4cf2-b32a-71a1b9003baf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2521bb15-7c7e-4948-8065-2bab3e9711f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d9714b-5f4a-4cc3-837e-7a41e041c96b",
        "cursor": {
          "ref": "03ededa5-ae83-4958-8b62-81ed8f11caaf",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d8d43c0d-7d46-4b87-a33d-60eb9e4594e1"
        },
        "item": {
          "id": "48d9714b-5f4a-4cc3-837e-7a41e041c96b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7ef587d5-14b7-4af0-b223-5b3cd9e94dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f2760-b1ab-48bb-9265-e4b2ebc4687d",
        "cursor": {
          "ref": "fb84fcb6-d92e-4e40-b9ef-b36b342818ea",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e6f6a430-b378-45c8-afa9-f377e9b719a8"
        },
        "item": {
          "id": "280f2760-b1ab-48bb-9265-e4b2ebc4687d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "be87d43f-2901-449b-8445-1330c0a4c79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ca2f6f-852f-4a21-bd22-37981624eece",
        "cursor": {
          "ref": "9adc2072-678d-4639-b342-d255015b92f3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bd870f24-a0e1-43b5-81b9-b9094124768c"
        },
        "item": {
          "id": "39ca2f6f-852f-4a21-bd22-37981624eece",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "69a1dbf2-292e-4614-9a44-1b58b6f3b407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cda267a-2eee-4b3b-8d5a-70c13786e874",
        "cursor": {
          "ref": "acf53727-a0a5-46e1-b348-3096db219715",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a1d204fc-73fc-4d62-8524-ce96431013ea"
        },
        "item": {
          "id": "6cda267a-2eee-4b3b-8d5a-70c13786e874",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a7266623-4dbe-423c-a156-f52c10ee4126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45b4e21-0e40-4b2d-807b-9e57dd442924",
        "cursor": {
          "ref": "87f850d0-a82c-4486-8322-e6b4deb872b4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d977f50-e383-46b6-ac88-a5b5770cdc9a"
        },
        "item": {
          "id": "c45b4e21-0e40-4b2d-807b-9e57dd442924",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0162592e-a7de-4548-adf5-4d3c1735e58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683597ed-6bc3-499f-aef4-2a98c17c9965",
        "cursor": {
          "ref": "89c70ede-3366-457d-8c8a-e495c4b4f4b4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b55e11b9-4a14-428e-adfd-5a3ca2b68d48"
        },
        "item": {
          "id": "683597ed-6bc3-499f-aef4-2a98c17c9965",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4841e9aa-df05-4ae7-9ac8-280970464733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d4ddce-53cc-40d9-9f98-599cdd7932c3",
        "cursor": {
          "ref": "98620305-f5ea-405a-aebb-5358c7acfa3d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e45054df-944e-4d86-a878-07bea554fbfd"
        },
        "item": {
          "id": "58d4ddce-53cc-40d9-9f98-599cdd7932c3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "db95b066-ddb8-4615-9cb3-b9e6392324af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b03603-eace-477f-a3ef-967fbdcbd620",
        "cursor": {
          "ref": "7b2e9ae1-f934-49c2-bcc0-188d406b3148",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "00d6b832-af4d-46c2-b379-ce2f32ce43ee"
        },
        "item": {
          "id": "49b03603-eace-477f-a3ef-967fbdcbd620",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "01b53222-86dd-4d3c-973c-86879f0fe362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e652c-3b3d-4757-9623-445ae4fc454b",
        "cursor": {
          "ref": "8a68b06b-ff1b-4c36-b103-68c377cd5d39",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d76d551d-69ac-482f-a1cb-ed749d34cb76"
        },
        "item": {
          "id": "986e652c-3b3d-4757-9623-445ae4fc454b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1d982302-9cca-48b8-8ef5-0a9e2d114016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecbc67e-1799-47ee-9ffe-62e09406264c",
        "cursor": {
          "ref": "24bb6941-9160-4d94-b301-8a12ce7f2c97",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d6fe69fd-d08f-48ac-944d-ab001b4f907b"
        },
        "item": {
          "id": "2ecbc67e-1799-47ee-9ffe-62e09406264c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4f1eef82-1ebb-42ba-9433-3afbaca5e100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1027015-e9d3-41ec-86be-8a62209548a0",
        "cursor": {
          "ref": "04cc3396-1143-4a13-80c5-afe62ca61150",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "46189f51-5175-46f4-89dc-2a7aa9d50ac8"
        },
        "item": {
          "id": "b1027015-e9d3-41ec-86be-8a62209548a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "671f5e67-f519-4c3c-9722-f1728a4e4920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8dd0b-43a3-42ca-bc6e-45cd59011126",
        "cursor": {
          "ref": "b0e6d9dc-d725-4a32-937f-35dc5403f404",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a5e67593-b7d5-4d4f-bcb3-6b35031544ba"
        },
        "item": {
          "id": "eaf8dd0b-43a3-42ca-bc6e-45cd59011126",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eb5961c9-0bc4-4c2d-96e9-424c31d33ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5591c208-878c-4421-852d-f330a723c097",
        "cursor": {
          "ref": "fa7773ec-e333-4c03-970d-d915c379c0bb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "042bc50a-d828-4d3c-a224-66dca028ef04"
        },
        "item": {
          "id": "5591c208-878c-4421-852d-f330a723c097",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "effb1125-405b-4abe-9859-0ec31298a352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c79a106-1478-4e0a-bb57-4fdcdf59cd8c",
        "cursor": {
          "ref": "ec5943e2-9d1c-48b6-a1aa-d95b25f5359a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c00e9707-a756-4c10-abf7-dadc9703cf86"
        },
        "item": {
          "id": "1c79a106-1478-4e0a-bb57-4fdcdf59cd8c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7473ebb0-bfde-4bd8-b5a4-abc2b6514bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026c4da3-0689-4531-bf98-3195b2a5614a",
        "cursor": {
          "ref": "116922b1-0ab7-4c96-b967-067e6c647a8e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d0837f8f-d48f-4300-aacb-4bfaa051c7ce"
        },
        "item": {
          "id": "026c4da3-0689-4531-bf98-3195b2a5614a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b30b6be4-018d-4e25-934d-531bebc0d25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a81abf7-51c2-4a7b-bf0d-371abbee246b",
        "cursor": {
          "ref": "fd019d68-546e-491d-beeb-d3c47def7c96",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e0056c5e-fbc9-4d25-8468-e00e7c136b6c"
        },
        "item": {
          "id": "5a81abf7-51c2-4a7b-bf0d-371abbee246b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9cff4cc9-d897-48f8-b104-6e84ed87cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58858592-5e97-4231-92a9-8f098ac5f6f0",
        "cursor": {
          "ref": "e46a03ec-21a2-4e72-b886-00f245c06a9a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fecd9964-3bdc-487b-bfc3-887f5061e4ed"
        },
        "item": {
          "id": "58858592-5e97-4231-92a9-8f098ac5f6f0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ddd79ef0-f462-4fae-92ac-930c957c0fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b806d61-0311-44d7-99aa-02ec11a722a1",
        "cursor": {
          "ref": "aa15a5f4-617c-4c6e-8f2b-f638b7d983fa",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6aa6b025-6881-424c-bf25-9cdc1449684e"
        },
        "item": {
          "id": "7b806d61-0311-44d7-99aa-02ec11a722a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "92bb0186-f1c1-4f43-8b94-e26919d67a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8846b403-6513-4777-9817-cb1ffc81cdd0",
        "cursor": {
          "ref": "e398a1ed-d8e3-47aa-8812-18c99db26150",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e4ed11a9-0058-4a71-a540-3c773951e7a6"
        },
        "item": {
          "id": "8846b403-6513-4777-9817-cb1ffc81cdd0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5184132f-3e95-4301-be23-688aff867ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048fc19e-cb01-48bf-ab49-55ae7a10a718",
        "cursor": {
          "ref": "b352f761-2c01-451e-aee7-779b96228f3a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "36bd3fd0-f9f6-4a89-ab33-336d0eef684a"
        },
        "item": {
          "id": "048fc19e-cb01-48bf-ab49-55ae7a10a718",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b540aa14-11af-401c-9df9-8aa370915493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5559ffb-fe2c-4281-a6c8-f4f7fed87876",
        "cursor": {
          "ref": "383eb0ba-1363-4bbf-afa2-0675256419cf",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "24674867-a5db-455f-952e-bb9544b925e8"
        },
        "item": {
          "id": "d5559ffb-fe2c-4281-a6c8-f4f7fed87876",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a42d7624-5de9-4f2d-b0c9-bc1d748d9391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290e8952-c8cb-4fe3-8f8b-3fe8b62c1e1b",
        "cursor": {
          "ref": "86622724-7773-48f1-b81a-8108c0e5ef4e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "33d4c4e4-3a1b-4e98-a1e8-fdf5e97775a7"
        },
        "item": {
          "id": "290e8952-c8cb-4fe3-8f8b-3fe8b62c1e1b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b36034d-ddd5-4c45-bccc-64cdd655e5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9920894-b5a4-4053-8ddf-1e1784833bbf",
        "cursor": {
          "ref": "6dde422f-cbdf-4a9e-b7d6-aac11a51ef6f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "590b182a-231e-4c2b-913f-918734e6aecf"
        },
        "item": {
          "id": "b9920894-b5a4-4053-8ddf-1e1784833bbf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9723048b-f84d-4d15-93f2-10ae3c226e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d91f5ad-c064-410f-a68a-71fc7c85a804",
        "cursor": {
          "ref": "dfadad9e-bcea-4171-bd94-97b2f52697d9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "591f6f69-da9e-4da0-8aae-3838e53eb17e"
        },
        "item": {
          "id": "4d91f5ad-c064-410f-a68a-71fc7c85a804",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3d9aa2d9-219b-4cee-b7bc-fd13eaddb45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d425fcc-3f38-4b95-8469-1cef604daa3b",
        "cursor": {
          "ref": "aacf7232-e8da-411b-9319-ace27ceca1fb",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50f8f500-d981-4fa8-ae1f-bbb9ad6d97c3"
        },
        "item": {
          "id": "0d425fcc-3f38-4b95-8469-1cef604daa3b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "993fe480-53ec-471b-a196-7dc1f4fa3874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36469c23-5533-48ac-b346-20fbd9c3e918",
        "cursor": {
          "ref": "100f8f18-0971-4dec-a32a-d8a56a795cc5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "244f36ca-955a-414a-8c9e-e324db5005ac"
        },
        "item": {
          "id": "36469c23-5533-48ac-b346-20fbd9c3e918",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a51b1b3c-bc5e-48e7-a050-3fba8be91684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8d3411-1d12-4c86-a800-d2d57e7ff20b",
        "cursor": {
          "ref": "f927ee00-b2df-43de-9c50-1ab077b6ebd6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "00591811-005a-46ed-b5af-541a465aa118"
        },
        "item": {
          "id": "6a8d3411-1d12-4c86-a800-d2d57e7ff20b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "028a0a2d-5f6b-4f8d-9e62-10fce0f3a0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6e26c1-134b-49da-ba40-f2100d02ef00",
        "cursor": {
          "ref": "a85ec7d2-2d4c-46b5-9e95-20f499a7fc11",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "26605730-b32d-4b3a-8cb6-c4266818287f"
        },
        "item": {
          "id": "ef6e26c1-134b-49da-ba40-f2100d02ef00",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a2c20a6c-52ea-4b70-9336-ac469e8b0f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a9977a-3768-4c40-914c-05c89d86a661",
        "cursor": {
          "ref": "3704bf59-249d-4415-b128-17ae9ec1efda",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "117c97a6-d1f1-42d5-9041-8c78d237cfbd"
        },
        "item": {
          "id": "64a9977a-3768-4c40-914c-05c89d86a661",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd097cfd-7af6-4210-bb1a-2d587bf8b3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3addd426-2138-48ae-88a6-14b62ff0a9c2",
        "cursor": {
          "ref": "67bfcc4a-00fa-430c-a0af-dc2b5b96908e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "507affaa-8605-49cb-ad4e-7c15cd1de943"
        },
        "item": {
          "id": "3addd426-2138-48ae-88a6-14b62ff0a9c2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "99af526f-0b27-4a51-bf6c-0d483beb417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69b5ba2-6a4d-4ae9-9762-8704fb9bf976",
        "cursor": {
          "ref": "3d8baecd-2372-498b-9576-ee69b409f965",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "00f6a68f-482b-4d60-84f3-9aa5366ae6ef"
        },
        "item": {
          "id": "b69b5ba2-6a4d-4ae9-9762-8704fb9bf976",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9f0518bb-5bf2-4826-a83e-ecd3e56b387a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea413de-4adf-4390-905c-47dfa0dd085f",
        "cursor": {
          "ref": "a9f27646-4332-4a1e-9135-f70754ed0dcd",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7159d005-5668-4c84-b669-1993b0b3d463"
        },
        "item": {
          "id": "eea413de-4adf-4390-905c-47dfa0dd085f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "21449357-8469-4f04-9c6f-8a941eda98c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077e7a8c-9a81-4c5f-9f4f-daf0b461b763",
        "cursor": {
          "ref": "eb439184-2220-4f22-ae50-6c73b01c5530",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "67936b56-bfb1-4cee-9da4-07cf8c0dd23d"
        },
        "item": {
          "id": "077e7a8c-9a81-4c5f-9f4f-daf0b461b763",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "57138339-71d2-4780-bf25-f9cca9c97f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91a2e42-4f81-4f9e-bfe3-4e6afb20bb6c",
        "cursor": {
          "ref": "9b827d08-136e-44a6-a5d1-907dd7bccb85",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "88c80e1d-bb77-4889-9560-02be51574f81"
        },
        "item": {
          "id": "c91a2e42-4f81-4f9e-bfe3-4e6afb20bb6c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "17e22641-b88a-4a1a-8a80-a1448fed98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f63b770-c5d9-4acd-bc4a-6b6ff5935acb",
        "cursor": {
          "ref": "c4d9230e-78b7-43fe-af03-4ce881c3a8b9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e7fade26-7a0c-47c1-ae5d-cdd59e300d52"
        },
        "item": {
          "id": "9f63b770-c5d9-4acd-bc4a-6b6ff5935acb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ffe825c4-2320-4e79-8f65-5d4c6cbdbe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60b37e-b6c5-4821-825b-0b9fa7185199",
        "cursor": {
          "ref": "5be2f175-5880-4803-859e-7bdc7dadf039",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a7db91d3-6145-4c4d-99d9-daca24e33ebd"
        },
        "item": {
          "id": "fe60b37e-b6c5-4821-825b-0b9fa7185199",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8679415b-6fd1-42ed-9ee9-553ccfdd4eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc200477-bfa6-42de-8d71-074bed31a7c4",
        "cursor": {
          "ref": "e98f5a08-654c-48b2-bd96-c3f7e16320f8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1a3098b5-8331-4a2e-b60e-1d592fba4151"
        },
        "item": {
          "id": "dc200477-bfa6-42de-8d71-074bed31a7c4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "17495370-da51-48a4-ad17-6d94ed0aed42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6426803e-acac-4b53-9de6-cbb31f700dbf",
        "cursor": {
          "ref": "4a33e8da-f34e-4b8a-b375-1dfe3fc26881",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5c19de8a-9773-417a-a8eb-d6947a42e069"
        },
        "item": {
          "id": "6426803e-acac-4b53-9de6-cbb31f700dbf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "49f1c6b2-7cfd-4519-812b-d9ae308cb810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27a36b4-9b86-4407-b46f-52424449ff5a",
        "cursor": {
          "ref": "cfa61564-e35d-44eb-962c-373e00434eed",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8fde44ab-ed11-4019-841b-a038118226a2"
        },
        "item": {
          "id": "c27a36b4-9b86-4407-b46f-52424449ff5a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f52ca652-aba7-4875-a934-a119ed117040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba41a047-fd78-4ffd-9821-06a35aa4f489",
        "cursor": {
          "ref": "ae2f4ee2-a037-4aa8-b492-2dc0e62d458d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "588a18f5-a690-4b91-b043-970618fdd4d5"
        },
        "item": {
          "id": "ba41a047-fd78-4ffd-9821-06a35aa4f489",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bdc4cb79-4455-4a70-8621-08a4dcde5c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fc2bc7-2582-4368-bff0-55bd6d628cd9",
        "cursor": {
          "ref": "387ee0ee-779a-4ba9-9db0-559e34a23b7e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dd33e381-03e5-4bae-9608-9f7019934259"
        },
        "item": {
          "id": "28fc2bc7-2582-4368-bff0-55bd6d628cd9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bd583d92-c8af-49b1-9b43-7b5987c05ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40569bdf-6d92-4274-a7c8-b21ff10f87cb",
        "cursor": {
          "ref": "1bc57bb8-42fd-4d87-b86d-6e26a1d09833",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "770f63ea-943d-4c9d-b4c1-b3f6a3e6ce67"
        },
        "item": {
          "id": "40569bdf-6d92-4274-a7c8-b21ff10f87cb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "00e06def-4490-42b1-952b-cca6d2d4e9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e0dc3-69f9-4767-9669-df4ec5d9edb7",
        "cursor": {
          "ref": "fe129b7a-df2e-42a0-a3c9-2f348282e1a5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "89320bbe-baa8-4ea5-b9ab-ec7641add0c7"
        },
        "item": {
          "id": "160e0dc3-69f9-4767-9669-df4ec5d9edb7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8af583c4-c854-4679-8183-3397cc2a7d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6819fdc8-78b8-4815-a586-6ab786cec1c7",
        "cursor": {
          "ref": "aaa62a68-0dac-4ac5-94b9-47fff1745417",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3dc3564a-7f17-4eb7-a058-60eef5175c80"
        },
        "item": {
          "id": "6819fdc8-78b8-4815-a586-6ab786cec1c7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4d7b558-35bb-4edc-98ab-87e34bbbfab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a240c02c-f328-4546-b4ad-9da426bb6a6b",
        "cursor": {
          "ref": "69daff32-dea1-40ef-9b91-24f151aa2626",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "43e38a88-1c77-431a-8644-f897f47774a7"
        },
        "item": {
          "id": "a240c02c-f328-4546-b4ad-9da426bb6a6b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "564976c2-a819-491d-891f-e9db49525c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67e1df7-0bf7-448c-912c-33e864b3562c",
        "cursor": {
          "ref": "f77ecf06-16b1-4884-9cef-7531ee332696",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b8e71e6a-8533-4870-bf70-a0b71a5556f4"
        },
        "item": {
          "id": "b67e1df7-0bf7-448c-912c-33e864b3562c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "287b3745-24d0-4bff-92b6-147f93a34cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cb5b80-8dad-45be-ba4d-085f9448cd9f",
        "cursor": {
          "ref": "375b0f5a-1ced-4557-8cf5-cd4dc43f6eee",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "90b807cc-2ece-43fd-8c26-29a0245d2382"
        },
        "item": {
          "id": "69cb5b80-8dad-45be-ba4d-085f9448cd9f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f0f9c606-691a-48b3-8687-0e4402c89d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a838ca30-b9cb-4b81-98cd-ac3673e31468",
        "cursor": {
          "ref": "a74cf5a4-d089-4ff6-9555-77d5325d8ba2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f0ad2c26-09c2-411e-9712-3a85cf818f0f"
        },
        "item": {
          "id": "a838ca30-b9cb-4b81-98cd-ac3673e31468",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "410f0950-0da7-47d8-a920-b710e195d11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed55b63-1bbf-4338-983e-c208200d31b7",
        "cursor": {
          "ref": "572d27cd-f7eb-40f7-9d81-63db1516e5f1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b618f8e8-5b25-4dd0-a539-5d61c5ba1d38"
        },
        "item": {
          "id": "6ed55b63-1bbf-4338-983e-c208200d31b7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb20c981-e270-4bca-b5cd-973d46f01625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4d75ce-03e6-498f-8093-9bf718368504",
        "cursor": {
          "ref": "e79531fb-6fd8-4c81-a58d-7d4f84de2978",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2963c874-3b25-449e-b385-b58901820d27"
        },
        "item": {
          "id": "9d4d75ce-03e6-498f-8093-9bf718368504",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1d5dbd6f-bc90-4230-924f-d5a6632bbefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfabcac-2568-4ac6-8b31-deb7d451fc78",
        "cursor": {
          "ref": "36b604da-8291-4833-abf2-df9c6d08f8d9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6cb0bca8-4392-47a4-b4da-6078536bf7b8"
        },
        "item": {
          "id": "1bfabcac-2568-4ac6-8b31-deb7d451fc78",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e082dd4d-49e2-45fa-9c68-60cd43778c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9619834b-6edb-4814-9ac3-3150e6be00c6",
        "cursor": {
          "ref": "dac36448-d6eb-4d85-844e-be845af0243b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a6fcc301-df74-4372-b8ef-6a4ca306a772"
        },
        "item": {
          "id": "9619834b-6edb-4814-9ac3-3150e6be00c6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "41e91860-e8b0-442a-8310-14ba2001dcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2247c233-93d5-4444-8cd4-a4cb571f40fd",
        "cursor": {
          "ref": "5a9f9493-8331-4294-922d-f52826c1933a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7863b755-a469-4faf-b3f0-812b444fbab1"
        },
        "item": {
          "id": "2247c233-93d5-4444-8cd4-a4cb571f40fd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "60233194-59c5-4217-a6c5-de846d2ace57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51ba39-2020-42ec-9101-4b7ca04ae6f1",
        "cursor": {
          "ref": "75e2d846-9d34-4382-9706-3678962a02fd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c7bbef3b-14b5-414c-8998-fa35b8c0d26d"
        },
        "item": {
          "id": "7b51ba39-2020-42ec-9101-4b7ca04ae6f1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9194dbec-b528-42a5-ad97-dee7d9c374b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaddad5-3e06-4d8d-bd5c-e98795500874",
        "cursor": {
          "ref": "85e20fad-4e73-48d1-ae82-497d340ffe26",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cc406aae-1fb7-4b45-93d7-fd816a864f60"
        },
        "item": {
          "id": "cdaddad5-3e06-4d8d-bd5c-e98795500874",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "12d428b8-04a9-48ba-94ff-fc7056bae74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8614a743-a5ac-4095-bd28-6b31ab49fa59",
        "cursor": {
          "ref": "be504384-64fd-411c-9cfa-7b69d6caeb0a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2ecb714a-4ed0-4c07-a996-d50785d1759e"
        },
        "item": {
          "id": "8614a743-a5ac-4095-bd28-6b31ab49fa59",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3a3c596b-c5e2-4dc1-9aa4-67f16b8092cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07e220f-e225-4f98-997f-a61e759d4fde",
        "cursor": {
          "ref": "9451a64e-1f77-412a-a7fa-311b5c31a6f6",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78c47c5b-f956-40fe-9342-3ae1f27b5b73"
        },
        "item": {
          "id": "a07e220f-e225-4f98-997f-a61e759d4fde",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "451dd518-d28b-42fb-925f-90e034de7b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a01a18d-b0f6-4b3d-a8cf-abede9a5a002",
        "cursor": {
          "ref": "47626ed0-1f24-471a-be5c-f0154f8c49ab",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7a192dbc-6f52-435d-9659-af3fb7b0bb2a"
        },
        "item": {
          "id": "1a01a18d-b0f6-4b3d-a8cf-abede9a5a002",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6e7b4d44-3a85-4d66-bfd9-64c1db1db72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0b0de0-869a-41ca-9100-8e6026d2fc3d",
        "cursor": {
          "ref": "e0e6b380-d4dd-4458-8c47-7b52f39d41e6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "404170c2-a1e9-42bc-9e88-af98cf92fad4"
        },
        "item": {
          "id": "ce0b0de0-869a-41ca-9100-8e6026d2fc3d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d864665-108e-4f8a-81d7-5a142424d50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf75380-5870-4bed-834d-10f27fe5f964",
        "cursor": {
          "ref": "957613c7-aa28-4a3a-add6-765d435ed18b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c7d9dc80-1393-481c-8424-8dcd88d87d76"
        },
        "item": {
          "id": "cdf75380-5870-4bed-834d-10f27fe5f964",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a3b06f31-42b8-47e3-9961-e72ba64640a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503ddc7c-682c-4aba-8731-2dfa74550782",
        "cursor": {
          "ref": "fbf8f261-23ef-4a1b-b6d0-b89995fdd33d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b7cde697-68f7-4778-98c3-e850eafb6669"
        },
        "item": {
          "id": "503ddc7c-682c-4aba-8731-2dfa74550782",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d47b3222-d6fc-446c-963c-5b105c76aa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313dadc0-0a5d-4455-b72a-76b18b8de8ad",
        "cursor": {
          "ref": "cc1efa48-8fed-4c35-973e-0b54b5409c97",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e7bcc4cc-803f-41f8-ad83-765e9064539e"
        },
        "item": {
          "id": "313dadc0-0a5d-4455-b72a-76b18b8de8ad",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "131bdfc9-b5f6-486f-9b2e-df0cc9ecfbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90743036-ee78-4c16-87e3-361a0f0b0474",
        "cursor": {
          "ref": "bfd88ccb-bf8c-4ff3-b707-ec06490195f6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ae7bca8c-aa99-4f20-8ab4-fd2099851a70"
        },
        "item": {
          "id": "90743036-ee78-4c16-87e3-361a0f0b0474",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2aaaaabb-2c96-4ddb-831f-278c653fc5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8805fcf4-9ce0-407f-b337-2f0dcb0bf5b3",
        "cursor": {
          "ref": "c4107cab-46c5-4aaa-9d33-616961e55c4e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c3fb5cbd-0320-4f8f-9590-ee9f7fb35518"
        },
        "item": {
          "id": "8805fcf4-9ce0-407f-b337-2f0dcb0bf5b3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a8cf6f1c-0a39-4722-872a-a7114a641dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553b8727-0b89-4bdd-a313-1b57b1a53c6d",
        "cursor": {
          "ref": "f38bf6dd-3c6d-4499-97d1-4c5ce2c79466",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a920b728-d02f-483a-bf02-d89221e5bcb2"
        },
        "item": {
          "id": "553b8727-0b89-4bdd-a313-1b57b1a53c6d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c23dc201-4049-4f48-93d3-f097b3d26222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e36eef-d173-4dfe-bf65-7214613c0b79",
        "cursor": {
          "ref": "4cb1d468-9ad4-4fd2-b729-8781e8f2431b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1ac195d5-05cb-405f-8cd3-a84155ff43f1"
        },
        "item": {
          "id": "10e36eef-d173-4dfe-bf65-7214613c0b79",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e474df0a-f5d2-4f9f-8795-b3ee8ed517ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2963fe-620b-4beb-b995-019b5e9973a4",
        "cursor": {
          "ref": "6d00d225-85fe-405d-b543-3baf9a896d7f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a04e4458-8396-4ed8-8669-4d7e86d0a70f"
        },
        "item": {
          "id": "fb2963fe-620b-4beb-b995-019b5e9973a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "deb02ddb-641d-4efa-966f-a191af08f96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5bef14-d1b7-479a-8ea5-997412fec223",
        "cursor": {
          "ref": "5e06c3dd-979d-4a4c-afef-66a088505f3a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bf3b9b14-6539-49b3-b775-4c12402e3f1b"
        },
        "item": {
          "id": "7f5bef14-d1b7-479a-8ea5-997412fec223",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eae6ff1c-5095-4aaf-b456-2511b9a85849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344f0eb4-adc6-4cfe-88d8-84a5552a138a",
        "cursor": {
          "ref": "548a4950-c832-415c-8a05-951215ce98ce",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f6243608-5a0b-4313-be3b-f3d65c711e71"
        },
        "item": {
          "id": "344f0eb4-adc6-4cfe-88d8-84a5552a138a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4714741c-7249-4b1c-8381-dc5a62666c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6f5565-b6b4-4723-bf68-a986e97839e5",
        "cursor": {
          "ref": "03b9f15e-e756-4c62-aad0-681d8f5dbe64",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7de9341e-d050-4d49-814f-b1e09fdee033"
        },
        "item": {
          "id": "5d6f5565-b6b4-4723-bf68-a986e97839e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "38bd4cf5-d80b-437a-91a7-9791be2b42eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd12db6-5a5c-4431-b9cc-c2d4b990d413",
        "cursor": {
          "ref": "4d9a6bdf-26d2-4cf7-bcc1-3094f11f97c9",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "db063e9e-1012-4fc1-8fbb-fcdcb076a77a"
        },
        "item": {
          "id": "9bd12db6-5a5c-4431-b9cc-c2d4b990d413",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "610530f1-68ed-40d3-acb0-59689557ebda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09059ce-6178-449f-9ce4-39b12c93dc44",
        "cursor": {
          "ref": "0ba54f49-cfa6-48fa-a079-de3c3362ac1a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c31db47e-2351-42cc-97af-d2ad3bf0588a"
        },
        "item": {
          "id": "d09059ce-6178-449f-9ce4-39b12c93dc44",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9644fe5e-a741-4ac6-8d11-d105d2712480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3a1c62-db0f-4dca-a4db-2943bd5fd04b",
        "cursor": {
          "ref": "239c8281-38a4-4316-b010-eb0478803161",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "400ccae4-967e-4bf0-8e50-0057a4fd5b6a"
        },
        "item": {
          "id": "8f3a1c62-db0f-4dca-a4db-2943bd5fd04b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "941f1cd8-7087-472d-b4db-1f71ca61402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016ab26a-1a18-49fa-9c10-80d66684f13d",
        "cursor": {
          "ref": "1085fba2-8120-4b85-89a8-546f207b9108",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e7a0200f-fb80-4888-962c-06c27d1a82f8"
        },
        "item": {
          "id": "016ab26a-1a18-49fa-9c10-80d66684f13d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "37d8596a-f181-49f0-9b82-0b81bc169271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94a3a74-2169-4201-98f9-99cf09b6e1b4",
        "cursor": {
          "ref": "b4350d8b-061e-4268-9d9a-2857994c162e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "06e3e93f-9a34-464d-b14c-fcedc33163be"
        },
        "item": {
          "id": "c94a3a74-2169-4201-98f9-99cf09b6e1b4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "70cec892-20a3-42b4-b655-af5702a62eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b4b7e1-ee16-450f-8b8b-cf7767bdfa04",
        "cursor": {
          "ref": "0427a9c3-342d-4efe-876a-0509dec86587",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a97af13d-730b-444c-aee1-b30716ca13b0"
        },
        "item": {
          "id": "63b4b7e1-ee16-450f-8b8b-cf7767bdfa04",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "78356e28-afb6-4910-9794-ae00a3f05be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac6f2f5-b418-4ab3-a9ce-96b625c5ebdf",
        "cursor": {
          "ref": "19af7ed1-5c37-49ea-8fe2-c74d217b1d69",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3d21a53f-4a6c-4c95-a0d6-c06de9396e93"
        },
        "item": {
          "id": "0ac6f2f5-b418-4ab3-a9ce-96b625c5ebdf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "650988a6-0261-4d03-950f-16241cf32ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4015f373-ce78-4d15-a04d-406411079af6",
        "cursor": {
          "ref": "96b50e4b-342b-49eb-9710-46045648f5d3",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0ff5ed9d-7b55-4cb4-a4db-f21efbf3d388"
        },
        "item": {
          "id": "4015f373-ce78-4d15-a04d-406411079af6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61ed4452-2b91-477a-9691-b8be679eb27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b823b9-06a0-4d27-ba59-268ea4e7aea8",
        "cursor": {
          "ref": "024cbfe0-2090-4267-af08-ea81ed8c4f00",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0309c23a-b5ce-4490-88af-ddd4a01837db"
        },
        "item": {
          "id": "26b823b9-06a0-4d27-ba59-268ea4e7aea8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5931b73b-6241-4fa0-94b7-998b47d50fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4fdacf-8f6a-45e1-a543-225ef518359d",
        "cursor": {
          "ref": "d267d1bf-5013-49e2-8022-f9c102266cfb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "39a2a8a7-d990-4ee1-9161-ea704f9729a5"
        },
        "item": {
          "id": "3d4fdacf-8f6a-45e1-a543-225ef518359d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c016ec00-55a0-45c8-bc16-ade293db12af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14268af8-9e1e-47dc-ade3-32007678522e",
        "cursor": {
          "ref": "8e915c74-fb2f-40bf-b5ae-fc1d172325a4",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f4346329-1c4e-43df-b2fc-afdc259a0957"
        },
        "item": {
          "id": "14268af8-9e1e-47dc-ade3-32007678522e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6718bb49-7abd-47e8-b30b-3a87f10ac5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a91e44-114b-4bd4-ab7c-5c3a16d22502",
        "cursor": {
          "ref": "cd33633c-72b8-442a-835b-bf7085aeaa29",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c7941b8b-2400-492c-bb2b-b3d9830c7cf4"
        },
        "item": {
          "id": "d0a91e44-114b-4bd4-ab7c-5c3a16d22502",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "47b5eada-b911-4160-a058-6ea5aed43389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95718e64-7f7d-4a0e-8f5f-50343545ad1f",
        "cursor": {
          "ref": "58852adf-8a99-4deb-a9fd-347dadc90e45",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "87b94019-03b3-4e23-89ff-a6065fdf6c69"
        },
        "item": {
          "id": "95718e64-7f7d-4a0e-8f5f-50343545ad1f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f68cf367-2cbc-4625-854c-93babd5630f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fe820c-559a-4244-96dd-e87155919a1a",
        "cursor": {
          "ref": "1f68ce1f-824f-4028-b728-a909e36198ab",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c7bcfdb4-f8ce-404f-b507-b0931b54faf1"
        },
        "item": {
          "id": "36fe820c-559a-4244-96dd-e87155919a1a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0ee6236d-ed53-4064-abe5-3a666f37c4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324358f5-8b6f-4e16-8903-b886876b3692",
        "cursor": {
          "ref": "b15af0fa-c26e-4042-b966-c75d9987fefa",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "35c00fdd-cb15-49fb-9cd8-badb2ad4fd15"
        },
        "item": {
          "id": "324358f5-8b6f-4e16-8903-b886876b3692",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e7063942-7ebd-4df9-8db2-8b03560c7979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00641d38-9972-4658-bd54-d5825a71d20f",
        "cursor": {
          "ref": "bb1ef349-b0ae-4a46-a105-868af674328c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "526dec79-69a6-4df0-b0d5-c9e3a50f21df"
        },
        "item": {
          "id": "00641d38-9972-4658-bd54-d5825a71d20f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a487a4ee-df5c-40ad-ba05-98e73d445203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc358082-5760-480d-a734-12cb437d9bd5",
        "cursor": {
          "ref": "fddabca4-3f58-49ea-9ef0-b7fc65dc12db",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "dc28c9ff-6de3-4d87-8a40-74fa2f5cd9b6"
        },
        "item": {
          "id": "dc358082-5760-480d-a734-12cb437d9bd5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7856f059-bd7b-4153-a003-9ceec143077d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874856b8-c24c-4364-ab4c-cf249001619f",
        "cursor": {
          "ref": "cc6ff4e5-dc32-4347-99d6-ecc85adeb588",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "960aa858-b769-4380-8e51-dfe87d278233"
        },
        "item": {
          "id": "874856b8-c24c-4364-ab4c-cf249001619f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a8d728d-fc68-4bb7-bf7e-9c00f88019fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d1c096-699b-4c7b-bdb6-dd9c8f5edf3e",
        "cursor": {
          "ref": "4a696a2f-cf41-47cd-8bbc-d66dbbfa17d3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e1e44cbc-043e-4db6-af08-0a0914e4bb46"
        },
        "item": {
          "id": "f3d1c096-699b-4c7b-bdb6-dd9c8f5edf3e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c28943e3-6467-4dd7-9a83-829ed5ea297b",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "52baf24a-c3eb-4d53-a3d0-32d5a7f54e77",
        "cursor": {
          "ref": "a462e96d-376b-4b41-b912-1f1fb22651d8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "708e45d2-261d-475a-811a-6e2aac1f8c2c"
        },
        "item": {
          "id": "52baf24a-c3eb-4d53-a3d0-32d5a7f54e77",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4eb75528-dcff-4ed0-b152-bf8a8ed5a697",
          "status": "OK",
          "code": 200,
          "responseTime": 1454,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2399b812-2976-419c-b3d0-a488c1ea03ab",
        "cursor": {
          "ref": "138efbcf-c1cd-436e-8f78-b8e15020149c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b66650f5-d729-475a-8bf2-0896e35c0b3f"
        },
        "item": {
          "id": "2399b812-2976-419c-b3d0-a488c1ea03ab",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "05d42419-c203-4ce7-ba95-496859134946",
          "status": "OK",
          "code": 200,
          "responseTime": 1315,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7dcdb6-c137-4154-a7f9-81b33f1f9dbb",
        "cursor": {
          "ref": "09f334e1-b0e1-40c2-a52f-514abadfbd61",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3390db78-f234-4ff9-b967-3a44b89851b6"
        },
        "item": {
          "id": "fa7dcdb6-c137-4154-a7f9-81b33f1f9dbb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f09a4e03-f278-4433-807d-7a1ac4476d6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7dcdb6-c137-4154-a7f9-81b33f1f9dbb",
        "cursor": {
          "ref": "09f334e1-b0e1-40c2-a52f-514abadfbd61",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3390db78-f234-4ff9-b967-3a44b89851b6"
        },
        "item": {
          "id": "fa7dcdb6-c137-4154-a7f9-81b33f1f9dbb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f09a4e03-f278-4433-807d-7a1ac4476d6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2bdeb5-d8d3-4dc4-9095-dad566f0f3d2",
        "cursor": {
          "ref": "e8b39eb1-acde-4f42-bd00-4ba5655647aa",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c15d4dec-dc5f-4cd2-8e3c-4d2eae8d0928"
        },
        "item": {
          "id": "5f2bdeb5-d8d3-4dc4-9095-dad566f0f3d2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0a5954f8-f24d-4355-8749-4d58b5d7c433",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec6a370-508a-45e9-89ab-a336c7d46cdf",
        "cursor": {
          "ref": "5963ba36-1d28-4cd1-9180-7f62dbd5a171",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fccb39b3-436e-4de4-a88d-3f633404057b"
        },
        "item": {
          "id": "8ec6a370-508a-45e9-89ab-a336c7d46cdf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0766bd44-d59a-4f3c-aa08-3ed7da527f6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}