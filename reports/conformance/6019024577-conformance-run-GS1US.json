{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c97196a0-c439-4158-b929-5e245f702bef",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f73b7d79-7ca1-4ac3-ac2a-c8c93e462fca",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "756b0c8b-3092-4747-9e8d-22a34b4698c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36218d3a-3d5f-4677-8e91-bb9ed69f7128"
                }
              }
            ]
          },
          {
            "id": "ad419beb-f124-4bac-95e5-8b3842963271",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e3207bb-06a5-4524-9f74-04f49bcabb04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f8a6bfed-a42a-49ef-ae7b-83dced1c68f9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0dd71119-b04c-4676-a081-bd9def588de5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57c2726d-2542-4ae3-b789-2fb98ea8d7a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61f77891-24a9-423c-8455-339a47eacfda",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "781b6c89-0e52-4841-a10f-32d015e7b377",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b7da3c4-79d9-44d8-8591-47056b44d585"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a68d107-145c-47d7-a97b-212fa9c7ee55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf3a3fee-10f5-4a1b-a73a-706af3d40516"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4908e3a8-51d3-4147-b359-4ae08448ae8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1345a738-ba25-43e2-8ab0-68922332e557"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6ec1e78-fc83-4aa1-b1d2-d714a929c294",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9881329a-d161-4e7a-835c-f89200b0c659"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4eb3e30b-5628-4438-9cc2-58b9a7f8620b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58265a1f-aedd-4371-b308-b3f0c515f504"
            }
          }
        ]
      },
      {
        "id": "316922d3-0d13-4a3b-8b48-499c58ac022f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "82893b51-2928-43d2-bbe5-293b0c8a4fd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c12ec2c-fd36-4f52-b165-99eb83353215",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "759d8ffb-123c-4caa-af4c-05f9ba244fbc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b771f0-7363-4862-9e23-f64a05fb50af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c2c1431-89b9-4eef-b98d-1ab3a229ced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14a2f42-1f61-45d5-b3db-1d2e4403c417",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01891cbb-00e0-46d7-93d5-25e4cb1ccf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63cd21df-0af9-436a-bc0a-6c159d92082d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e3a4a3-f9dc-42e1-8cfb-0d75418f7258",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5400f4-f289-42b3-9735-4d3d588e8a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "595b3a6d-8dcc-4e9d-b8bd-2a427d2c2307"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdbb94f8-2d6c-46d7-a3ff-9a6181b03fd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "943e4f59-453d-4e9a-8c5d-c332ff623782",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09182e7-cb36-4339-8754-87fdff535ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "056f7a0f-5ad0-41d7-8002-b9ea73759406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5cbbd7-3ee4-455e-b41e-49161cfd5277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52812adf-7174-4689-9e9c-07ac90fb0f0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6117bf3e-530f-44e4-b8a3-59621637f619",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57fa6254-4571-48ab-950a-c6f6d816e341",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e978613-e903-4f4c-a71c-29a9fae7e107",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "95af4533-fe07-4eec-b9c4-05bef5f92131"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf54f6cf-c2a9-43f3-8c09-488b8b0b52c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "45a92c38-5a31-46a0-b88c-319644dd56bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7110ecf-d922-456b-a645-1c4ad20ff2d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2eadb83-88e2-4727-9ffd-7c779b62dce7"
            }
          }
        ]
      },
      {
        "id": "b52b3030-acc8-4b2c-a202-df6cb869c39a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ff24b7b0-daa0-4bc0-a063-81c6f74eddf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8346db08-934a-449f-a50a-32ba5cc44452",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b46b46a5-9393-4e42-8dbf-a7aa3b0868ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021b9997-e17b-4b0a-b506-4366062dd6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf06959f-b5d8-4331-b994-f32025b25bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6d5722-c2c5-4393-b68a-2b408ffcc35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6f1436e-19f7-4fe4-b2af-f4539cd55f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1a4c84-d088-4b9d-b63d-fa94b02c1ae8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7035f102-7b06-48ec-8600-6280399a9d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b8c021-0a59-4d06-95fa-2152ceff380e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3463d0-31d0-404c-bf7f-d4568eacad67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b7d6e37-53e3-46a8-ab74-c0171b86ad42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af32ae7c-4447-451a-af2f-07700cfe0347",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a828ed-300c-457f-b779-c12bef6e4cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b350544e-43a2-4ce0-a76f-a0b5ee6a2726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada415b3-2cce-440d-9ad5-9b5c06459164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a8bcb37-fe42-4b7f-a505-b32ab1ab2ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a240a5-d3c1-4db5-82ae-fba9ccadb062",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60adbdaf-a9f1-4370-91b2-150a248a669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784336f1-89d6-4f43-8dad-d5d702418759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea6f8dd-02be-4325-8fa4-bf60a3c3ac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b31e6d-3c23-4ca3-b48d-037117aca1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba8a0e5-d2ec-4515-9418-c5592038a2b3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2962ffe7-2e3e-4195-8a04-eb4453ded003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fef6cc-4d65-4698-9637-827a20df381a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b883e670-c00a-41f9-9fe7-4432b21497f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a79a47-c0c1-4f6e-ab37-73b012925048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3876d279-df16-45b3-a886-2c390aaf645a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f571738-3b81-4e89-a41c-b45b2573de19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e3e153-a218-4770-a83e-7b76ea6c486e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6ef8c0-1a63-4c1e-b5ae-5ff428eced26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "915f9dec-8481-4bdb-920c-629753b614eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3c7614-4fbd-468d-9df4-1620f95d4b76",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5df808-de77-484b-baf9-2308cab87a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cd9705-f9a1-44e0-b030-7ec75c2f3e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d244b9-361e-419b-9581-e61ef6616a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "564461a9-bf3c-49a3-8211-54f821172646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87079c9b-3283-4c43-bb0c-bd6bb1af32f7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46130e11-d97a-4237-b33d-e9434fb5da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c2a7d4-baee-4201-909c-5bf0723fe217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc17825-ff6a-4cc1-ab74-a6907687f087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9faa5127-07b3-47ad-9b9f-7620e9d146c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3b1497-2d91-47c3-91d7-31cff48dd3eb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0269a3dd-ea0b-4559-8ec4-c5895bc21e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4644d95-b452-40af-b54b-26540b9f5bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e257e8d-ca7a-49ae-a38b-ec4a313e413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c97e971-64ea-4a40-9689-b2b4d36355a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e816e-66b8-465c-995e-65538f6aa2e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc305c7-e432-4562-a413-70d21545bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4726b929-2361-4d21-ab01-498e2a41ed98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed5b1ad-b914-4f4c-92d2-5cd37778a49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c1c60b2-4bab-4998-9bb9-05414142a970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801aec28-ac9f-4ef5-84e3-13cb03e57c13",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180c144b-d90a-48bd-ab8a-665c94c17ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac2245d-b762-4fb2-b0a1-18ce53cc5181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21d5800-81c3-47ab-8d1c-791b15491be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c32c85d0-133e-4507-a34c-1485e34860b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9627fd-67a0-4205-adfe-cd70730c00c2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333445f8-eebd-4e54-a147-cb5a4a6c38ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5bd1c4-90b4-46a5-b340-21c32e8eb189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3e5b7c-7d82-4c23-9eeb-adebb025d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8a64f77-42f6-43ab-8fc8-1ce3c1256a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8646ae91-d194-4eca-abbb-a09229dba417",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef22d710-e9e3-4d4c-aa54-6b3111f5878d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8109278b-c727-42e0-b50f-bd0ac43c695f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4f4b12-190c-41ae-a50f-d85a2cb2ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad82bf3e-565c-40a2-bae2-7c8926ef0ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2826bb-4b89-48ee-b566-949756343639",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36662805-35e4-490a-b6ba-af8d5a83c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c511ef83-a3e0-4abd-95c3-363e17f3864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9db90e0-ee18-4e14-ab85-2d970750a690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67b48935-0cf3-44e3-85a3-28147b255206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4908c8-0d05-4169-aa9b-f774e53bc4eb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bfd6d4-7d6d-4598-a19f-ea62b7358837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6590321-8564-47a1-8510-00645ecf230a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d881f15-b4f7-4f9f-8465-df90a9e54eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c476407-d660-4382-93eb-e96f096b3cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc7f16a-8afa-4d43-89c2-19bb3e05fe99",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b2844c-25b3-419e-be2a-274755d5f3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7458a910-95df-4d81-a822-03b99b3aaaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac6ef12-01e0-4fde-bdf2-11322f4338f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "559d2886-e582-4ff8-aeaf-b941efda98a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebdb852-3719-4f1a-ad04-ca771c28b711",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa5dbf4-ab81-481a-9276-7a2364200fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364fad7f-1a2c-4741-b7c4-5eb6c5aaa6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e5184e-869b-4d07-b59e-2c5f8e534c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63a234df-324b-4d72-bf44-9f6912680cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36647c21-a513-4e4b-8800-2bf3ccb77158",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430405f3-621a-4480-92a4-20c746894424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c7d3e8-c94f-44ad-901b-3d5950bce008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abcc798-a186-49d1-8ccb-ad3bc3a62ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ec7f82-fd4b-4895-bd28-96b2740eb15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc36d5e-323a-4877-b316-d388415390a6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f5889-4557-4a61-9834-208829f3c496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475e7319-a342-4853-920f-6fa3e56df7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd717d8-0171-4066-a4cd-6c16160367de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2eb4f4a-3b9c-4fe4-b0d9-e3c9db06420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42197e1-e23a-47ab-93d7-c67dd1b4fb43",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b9f02e-743e-4f2e-8715-18e67125de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0f5139-7707-479d-ab0e-c132b46d36b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0392244e-68c7-4e27-806d-4053f8615acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "313047dd-ea36-4ca4-bf4b-7ad08854c3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf7b08c-b752-427d-b216-d22fac7c4130",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaefa34-891a-49e0-8b41-f23c8ca07b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4951d47f-0e70-45a6-aa4c-a7f27663f19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14567b1-b758-4e8a-a15b-4d9c462b9d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08511b08-b27c-4ed1-8335-fa1b75f53981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fe151d-48b6-4f63-ae32-94bfea42b545",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d828d68-c65f-4cd2-882c-a8c3ff136aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85d2272-ea6b-4feb-a715-b5a5a3bf3e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a32735b-e054-41bc-a70f-49798e9af9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f8dfd8-190e-40f1-b55b-a542497d2962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8681a-c3fb-4727-a3e7-7ad4934ba40f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc86c1f-4096-4495-a6d4-09d486f5fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00089e75-5ce0-444f-ace0-acb165198749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e10481e-7364-41a1-bfcd-8fc228ec6c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6b0052-4b06-4eea-9f85-466724a68f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869387e1-7d68-4fcd-89cc-8b04a9ed3db1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152a6630-c15c-437f-9f87-30c71ef48bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fbb7c4-de83-463b-8d1b-160277829fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cd6cc7-1588-4297-8c60-086eb28be1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c341f0a7-b64b-4e12-9dc3-46c7b629b387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e22752b-9837-4da5-b50c-eea89bdedd15",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84e3f75-d99f-4588-b08a-34991f98d635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4062085-9064-4973-b5d0-b43b7b5fd343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a94b711-9205-43f0-98b1-088848742f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a65c6f-ca20-414a-842d-32d80458c6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07519a58-33e8-4599-88b5-46af6042cfce",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a38f5e-36d3-41fe-8690-0a4ff0768f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f47fe-faaa-473b-959c-93596d041cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6adbd4-34a9-41fa-b7e9-f4e39a745b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "796e5a6c-4c79-4272-9b2b-5970530abe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c850c8-824c-49cd-838d-96dfa50111d3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b373432-9165-4652-8225-891aa2ec4a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed306e8-df92-4ef9-afdd-1d9c7461dfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ce82e2-6eec-4fdc-8ef9-a2d8c6d8349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c263e7-5926-4bcf-ba4a-74eb3b10dbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19be1c1e-c4b7-4d44-97a9-958156b37c1f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9a0a12-3400-414d-b707-83e996fe7d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81576b30-fcbb-4a28-a31b-e95fd91cb510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4f06c2-f8e7-4830-b56f-079a7157b0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38bd9862-2934-4bb2-bbb0-b33bdc5349c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6a46c1-dd16-4028-87d5-006de6ce9a86",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40f8821-c95a-435a-8684-fb3e61d3c5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534cf493-5c5f-4237-bab8-93ea1f924f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc585514-6674-498a-9e01-2270fd9c1256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a90188-d034-4653-bf8b-2e8c4ee8c8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350113f5-1b41-49e9-9b65-b31811ceb815",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8953d91b-2dbe-4499-ba16-e3003e11a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39924cf-3202-4df7-8e21-fe6733815396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c703ab-8e08-4988-bd64-18b110ef5ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84460c1-4566-43ec-b74a-fd2d0841c49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43c1528-88ee-4c92-b5a5-1226fb66a18a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbeb471-5e1b-4151-a595-2088b673d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ceed378-a867-4c40-ad3b-35b53d94c847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5b6f7a-16fa-482d-a729-1235e25b89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "200270c6-9f55-4e4f-8f29-3e06d7d62034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e7b036-2c8f-4ce8-a647-3047529e5f5d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ce3a7e-a848-4640-a2a8-c10abbf3bc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1802994a-e56b-4c7c-90da-586e774d7672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519e2ed-67f4-40b4-937f-34c30fd8d269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c5df6b-907d-46be-88b9-0019935977e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da0aee9-9d27-4845-808d-5d1bd1a0ef80",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62df7104-afb5-4b65-90c7-37a420248fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7131d7-d8f2-4a2e-b2d2-8884027f32ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b1e3d6-4c44-4f45-bb4a-09c50180aba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baeb610f-73f6-4e85-af54-09596f1d6674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05881da-3408-44b9-8a9a-921565347deb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf18fc6-5f2f-4210-9970-220755d95aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8531770-1064-4acd-896c-486a87e6e809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541b0fc9-50db-43c1-b2a8-0a78b11b23f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6c72ec-c029-450d-9c67-76fbf5be6bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f87795-075e-4caf-9ce7-d86168dbf41f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1e67bc-c29a-4a30-96e5-04b805345436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c586e0c9-8923-4f18-aa82-8815e5c210be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc8ede2-94d8-447e-83cf-2f700e06ee0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fa6014-b277-4027-b89e-e35d05db9cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa648e4-5141-44ea-be90-a1ab7fcc3db8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ec0029-9f80-402f-a3e9-fc86d550b16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd18dac4-6cae-4bbf-9bf4-81c35022c8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc3c486-aa3b-4fc1-ab86-bee691bb8632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04537928-6755-49c8-b98d-8e6d2be5f769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9cd06f-3b4d-4d40-93d5-dfe5bef8dbea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8ec6d-8681-49af-b261-437c5f5f0031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238df4ac-9cd8-45f7-842d-92146d0e7fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cf0876-e063-491d-b7e2-ead36935db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1caead89-17d2-4b87-a739-911d2a33dc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6899882-0247-4c7b-b307-3c97f2eed72f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e215abc-038b-4e1a-8acc-d21d056dd7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6daf81-cd6d-4589-acae-8d3b720ffbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4269b3-472b-469d-aa37-597865a366d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f0b70-c1e6-4704-898b-873bcafca44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a03d917-95ae-4779-9a2f-146c33cd6ca1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190ef0b9-f887-413b-8d2c-948801eb3705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8375fc7e-61d5-4132-b70a-d680132fb49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155542e7-1268-4e61-80c7-44791edfdebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48e4a34d-714d-498b-803a-aa91fe76b622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa99f8bb-cc93-4919-b0ce-fa27b9755891",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b93bd49-550e-4606-bd33-bf376352c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4077b7e8-cd83-4350-a7a8-081f7dcc98dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa61d72-162a-4d18-b7f5-d9b03cc41d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7cb2c8-37af-4e0d-a0a7-6bfadd6bfe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6107f81-a813-42af-bfcd-34683e5dd8c1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb4c2e-834f-43f9-8600-8d1145f08d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48185c50-6e21-45ac-86c1-3d73d768aaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2f3a86-6de7-4846-b649-587c58131c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0819c6-8ce4-452b-9560-f618f6d1759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfed177d-4400-4a49-92d5-046485129245",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce7a51-966d-440e-8d99-ad4387a234f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34553321-4887-4896-90ad-c192f275c016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faedc1f-da27-4f42-ba95-e69a9fa71845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b84634-7edf-4281-a2be-9734e4b927b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c1d5dc-3d22-4a2f-8fc2-7fe8421142cf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639cb2e4-797d-4702-bd0d-74a9034fae21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d91579-8e31-4c22-9d9d-eed52647adf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f26491-f0a7-4c8f-abb9-393b4eb17c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "738cd0a0-4305-4d06-83c8-13a97c5fa98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba2ed9-8506-4772-8706-280deb88af74",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e24b16b-d2dc-4430-9b8a-90f3d1c031b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392c37a2-5469-41dd-9c8d-e332fbf7f0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4691ad1f-a740-4bd0-935b-f9519058579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "474dd6ab-9f03-47e6-a78e-f110c9a34d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e63c51-a6ec-49eb-b336-1101f0d72d38",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3dcc32-7c7e-47f6-830e-15424f56fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6840484b-32b6-4c61-93f5-118bee1a2d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4513d06c-fabd-468f-8a6f-61c3e5ac7051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19c573d-c607-456d-8e35-b41e4518e37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75a6c7d-e97e-49d7-a577-b64de0809fb7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad12b5b9-0397-4a32-a8cd-070140d14f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838271e0-da69-4e01-a780-bed17a4ab93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fcde89-75f6-44ca-a8f3-7f6175a5f177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e683c607-321e-48c3-9cb2-3db5b0d04852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b3f49-86e9-4e87-a04d-dacc2408e432",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93005759-825f-469d-800b-14d46fbc9123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbe5c5c-8bc4-4f2a-bb1c-5fa43fa39c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fe0dc9-79c6-4522-8364-b64a230e8545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cbeb07-7c84-4c40-abd8-f9f26b1b9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee893423-11e3-4082-b061-6069cf4ab709",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547ddaa7-a202-471c-a6bf-5b4225133585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad488b9f-3b21-4607-8985-dce5e06b08ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa00f45d-4835-4971-885b-bec7e7b87047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27cecff0-e717-4c55-8a5c-382643543d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1927a556-6125-48ff-9658-4a5427e505bb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae70961-6f7b-459c-ad7f-d77e25c77175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd736de-d12a-4e7b-b080-2c42f63d6b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2968376-ad7f-483f-add3-f4a99e4c6cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d460fad4-e0fd-454a-a509-4095bf286cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b599b86-c6bc-4258-941c-c40c93525680",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40410948-a750-49bd-8117-28713ef17a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5d2093-1622-47ab-80d5-4082e5975470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f736e2a-2194-4e9b-be89-bae74ade783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e993d72-1621-46f4-b1ef-8430cce2ee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18082b3e-065f-4edd-b4f0-dba98836f3ef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53980fb-02a6-4e7e-9124-fa8e1c61300e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31104e57-7c90-460b-a843-b9d3750add50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e47c69-bfc2-45d7-a876-5a3c2f5c356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d19fc7a0-0091-4ed6-bd01-a7ef1824724a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4437c5-a80f-4cd2-8e4a-3407eeb1f6f9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1deb48f3-7d7f-49e7-80a4-14e9d471034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ec3d2c-9d0c-42ff-92e5-f3f053461bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb3c8ad-ae5b-4075-952c-3c1004379a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a16a6ec6-bf08-4b5f-8cce-bcc280db1c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76adc224-bdc1-4ab3-9034-1ecaedf6455b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a4ea4a-0a61-44ed-90aa-0165209f7ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c74ebc-7aeb-4f2e-ad2b-6805ac7d9963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0bbf24-819c-4976-95d9-d9162e901fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1f75fa-388d-4fcc-b71d-d1e4061e4cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7925e3-f482-40da-8e92-9692d7e453ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a15ae8-ae84-4168-b866-69ad49f4603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652d7d25-f0bf-4399-98ee-05e40d386904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7b5af8-cb23-45c9-a55f-5cc22813cbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60e518a-96f8-4fc5-a3ba-3b3e34c2022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455624b7-385c-4fc7-b582-6b440f743ac1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38202b0-2ccc-43ef-861b-660c451bb94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e57f60c-1d1a-4ad3-b714-1786e81dec60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477c4b3f-0541-44b9-a23d-02926719ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2ede84-6ae4-40ce-b50c-22c4313fc9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9184f48a-c31a-4304-b195-bcd7327bc76b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4720a1ca-87fb-49e0-9cd9-ff65f5ff4488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95969f0f-90da-45f1-8aea-1c42affbdb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e071e883-4053-4b6e-b47f-48d4dc4df400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9f305ed9-fa2f-4bb9-83b9-8aea2b82a21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17c7e2d-c9e2-4a5e-95a4-10ebeb68b893",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e661850-0394-4ebc-9d63-3aa8a2933873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d8ca13-ffbc-49e9-be1f-3726fe350f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd66f2a-6aff-4e88-a8b4-533aa897b2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d682303-f4f4-48d8-b36d-8289a1470984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd66a331-5b50-4fa2-b8a2-d37cf110c4a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2897bcc-a015-461c-993a-27b1de6daa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c056d8b-045d-4867-90ef-132b8791b363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec326b4-573b-4805-b139-9ea13b3a31e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b358bbf1-fffd-4973-b511-606e290a4748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35e4d55-17cf-4f0a-bba6-108abf0221df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2024e65d-d274-4afb-a021-afe248a0a867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a951a2f0-933b-457e-aab2-3901e41b5023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77afb4f7-9e00-49d2-a886-7702dce618d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65fd548b-6046-4c5e-861a-624bdd42d131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d53fbd-6357-4658-b508-a0f99ffc8c40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf454f8-a9cf-4f14-8763-fb342f27a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c7ce03-2891-46ee-9430-1b63df507463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9919249c-321d-4ca1-90de-46e3f37dc6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48e92ff6-aac8-454d-888c-071dd1626d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5613a51-ca68-4b7b-b9bd-2d67bca80e22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f87f52-b803-46f6-8fb7-19b4f3652115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d780910-e52f-4bf1-901e-7528759052f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdeacd3-864f-4e9d-929b-06a0fcf746ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4455d258-a7c5-41e3-863e-e80c888e3c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083b76bd-ead7-44eb-b83e-a4bc3008604e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01438c89-1390-4130-9040-f2d6bd525d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5add7669-0e19-43a1-91e4-ded9c7a17918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352c443e-e7e8-4926-a1a7-b0698f7e0e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ce78f2-9a4c-496b-9dc4-acfae6b2ebee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d6b6af-89b6-43be-a1f3-fcbd2e2f8724",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30d6876-9fb7-4da9-a280-c1d73e6a7a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75daefd-162f-4de4-8559-d0aa0fe3d8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46114bd-32a1-4c6e-9a40-648bfeefed03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a29e01-6d1a-4a1c-afb1-49e73c31b1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf89bda-4d60-4d1e-afe1-239cc8779da8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc6ba34-e693-4497-9a61-43f706018f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ff42f2-c0aa-47c8-ae88-f2887653b2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c4b9f8-6832-4776-93a2-9974b8f9553b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e39e87-68c7-484e-b89e-ccfd0d65b2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdb0c95-e95a-4987-be2c-55f09f3e8d05",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef24dce-4b7f-42ca-8369-e9bc7eb1e7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214ad8fd-3268-4bd9-a55f-65fa3214e5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4cd089-ba80-42cc-a457-5635907631da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9880a3b4-0d14-4028-aea5-92619094c1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d80aca1-024b-452d-a95f-f5badf6850a9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e67ad-26e9-40ae-9cbe-eb6fc570ae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ec9a7a-2952-4660-a0f3-6c09000e5583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4082b07e-b195-4b1b-a689-efa066691caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20b819e-d13c-45e1-b874-65dfd50bbdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248810c7-ea28-4c20-8d8f-182942a48385",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a564185-efd7-495c-bcf2-7a84ef368ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0835a8fe-8f65-4a85-bab1-6f7a09c07f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b67b6ae-25f3-49eb-af4f-ccfb5e122f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa5db7d-9811-4bd4-9519-156baf239267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6928755-9f90-4bea-804c-3d4872aa57db",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57b8bdf-35c7-466f-b4d7-48e05f8c9c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c5b105-ccb8-486e-9c9e-4f5b6e63dcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad40614-5abf-48b7-b435-81346d0985b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06b913e-3453-4c37-a18f-d1602b957f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810abe84-1b5c-417d-bf66-a17ddd625f33",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f457e93-1834-4af6-b599-b9086e1d75d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133a7b46-8671-40f0-bd14-eddaee9c732a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266bd07d-50bf-42d9-8a2d-539bd46701c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "025d3f17-1d23-4f73-a86c-8181c412147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce97f82-d1c9-4a43-be51-febf774f9df2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c571de-7236-497f-8b75-ba4161086c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f786e388-92bb-40a1-bf82-d504b98c2b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613e92bc-6b64-492f-89ac-918a9dbfac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f93a73f-b730-48fa-ad1d-04a69a7ae3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd6595-7bc9-46b5-ab2e-5999e74f72ce",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd0d7fb-0324-4e8f-8320-65dd302d08ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5749ea-fe99-4f28-b5a6-8588a77ac19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463e0839-eacf-469b-9e3b-9740e395f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f31fb314-018a-49cf-b9c4-254f43e597c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b34fa8d-299b-4328-8d82-57bb344da081",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22b1ba5-808e-4096-ab87-c4aa1d46003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2487aa0f-d0bb-4647-a428-b24cf2b8b82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2349d83-41d2-4a57-8237-49f286031fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49394caa-6376-4130-9075-c03d3b808c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f078f02-f03d-46bf-a84a-d18c6575a099",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbac456-94d8-4b35-9f05-857c694ae6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a4ceac-bdb2-4d3b-812c-565d853d6299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2425ead-5160-471d-914c-11d9c5093181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee34660-dcf4-4ef9-b7cd-0aa67dfc29e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca4e727-af1a-4a36-89b0-5bb4733b62d2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e5b1eb-37fb-42f1-aa8f-5d73ae1766be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09190da7-3c0b-48a3-bc47-79fe2e57d248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42236f4d-ce8c-413a-980f-4c7579f37404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc96c74e-008d-4e38-8cf6-12bdf2b3ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc0bfdf-4e64-4414-9783-11ee1013ee5b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1ea3d5-cff2-4c35-85bc-559b29a8d541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baf3c7f-4436-4cf1-9dfb-371ba93859ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbefb274-9e49-4c3e-bb55-89215e1845a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57aca9e8-2a2d-4a04-a711-8c24acae92ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c600ab4-8ca5-4367-a796-085fa3194f0b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a946c996-c32a-4412-9f55-8ad2fc7aff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04984835-155a-4d58-be97-8a80a1f9c2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c930e39-c04c-425b-a6f5-b373cd990a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "330f3b68-0daa-4087-a323-3de7ab9960a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae7490-e163-4a39-8a8c-30db9abc67df",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04639223-e894-408b-99ad-b78f099b66b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab98242-827c-4399-9e6f-d9a9acf6c594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbc7af4-fda6-4770-bd3c-2cd040ed27d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9ad875-b179-4adf-b9bf-47e1cf5614f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e42bc71-8b24-4490-a642-a378495d50b9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3b7966-e62b-4b4a-b0bf-082b4c7d2b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ca6ed0-c670-4615-a852-d3971738d233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e472fb-4209-4226-912c-12adb236790d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a480cc-2ca4-41f0-8b2d-010f4b2ee0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb08f868-9f1c-45ee-8b27-7d5a5afa400b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502b099a-43fa-45f5-b649-59f4b30c524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c87e68-5877-495c-886a-7b15b236e440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5497e8-b74a-4450-b7b2-c142edb71b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eda65355-6908-4655-995b-b080d438e6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09794d24-bcf7-4401-9a18-995214e4817a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0e5cef-1dd6-48e3-a7d0-105745f99b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d6474e-8695-4cf1-aee0-33b0af08f44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf66a3c-faca-4297-ba6b-da88451c4e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53d428c4-fc35-4ada-bf61-18201e15da8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81d9ba3-0223-4814-b233-ea2d86293fe3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f912be8-4bbf-4931-a2b3-2a3e5e365eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06b002d-488b-473d-bb54-db50e8137263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237ac54b-4272-4057-bba9-27733006cc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af4121fd-7f3b-4e74-8423-b66ca2be1ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031e8c22-3a23-4a22-b624-da7118583745",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dddc5e-941b-47dd-9b3e-bf14e76e7e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b459258f-9f9f-4e6f-b5a3-060fc14b23d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67d2e2d-fcd6-465f-bf7d-74f6c8ea00a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd4935f-e10a-47ff-9004-9b7f3f3defd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d142b-cbb5-40a8-87cd-4898bae520df",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af147d3-5820-4c74-af4d-59a95c24af32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346878c8-29d2-49fa-98f3-29cbb4e0cefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0e9e4a-0f57-41bc-a1a7-ce4db38e1dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c40793a7-fc86-4c2c-8f9c-b8b1eb68ebc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0415961-3f47-4870-ae33-8c607b4deefb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1221e72b-5427-41bb-a53a-cfd6fbaa0a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce216223-3c9c-4018-9874-50301496601f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181075dc-d42d-43e0-a285-0625831d7383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54835e1-074a-4458-a2d4-3fbc7290dee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15170576-f15b-41fa-9467-d6a636b43536",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a636ab-04d4-4710-9e13-1488d84c469f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080efd6b-afcb-40d2-ad6a-c1294ab94a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6942630-7484-44a0-85f7-081b16cd01f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5257f598-3e6c-40f7-80bf-f3664fbfcb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b64b167-7f97-488e-ae5b-b82991ece37b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1012efc-5864-4ff9-b304-2662bc44f224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b00f747-409d-4a7a-879a-e0edf5af42ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c6e28-f6f3-492b-ac81-9572742d650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13c8c111-06b5-46ca-aa0d-9dfd67ca205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad418b-c1bc-49cf-b80f-4627096f8b2b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cfd28c-f6f5-4609-a2b2-c2a3e5c2609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3bb347-d17d-4681-b135-b03cc07c2dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c745507d-9a21-4170-a7c4-35343e5fefbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9c7233-9933-4547-a89a-bac8e8df7c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c34e1f2-90b7-420c-aaff-fab19a501262",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33350bb-7485-4ec7-9e85-960ad32f12f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd78349-452d-4a43-939f-e633d42606eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a903677-7e4e-45d1-bbb8-49bfaf86968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bec2f08-89d2-4d1e-8b40-10a6c18320b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c8794f-9a39-4291-986e-86c5d3caae0a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f113142f-8e09-4d23-9405-3793d5e0dd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8b110f-529b-4c35-b4bf-ddff21902e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fae260-2216-4f46-8032-ed907f74e5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d683bb-304a-473e-a90d-51efc3296c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e190c7af-af5d-413f-b35e-8f899fa070c4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a681d1f-282c-4cd8-9b26-294a40e7f0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05e91b5-4105-4336-97e9-db49cde1b43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c04b3-f461-4b70-a571-036826064539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb5cdb9-b26b-4ae0-96c3-977045c72d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b8f299-0add-4e94-a680-763bbcc3d84c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37087187-a4ca-4552-8444-049a77836842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a59e73-a8af-466a-a5e8-a63a241f431e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80f819f-9f8c-4929-b650-b2b87f31e71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d0947a-a761-41e8-9591-4cc7f84c0de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa44629-41e0-4d23-aa49-1bab6201e0cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8c157b-c0f2-494e-ba20-1337cbfaeef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "61030c13-000f-43f6-aa8a-43b65636e51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad3016c-9106-4b0a-9628-816431f25a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d128d380-6367-4ae1-ad1e-700cc3af156c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2512524f-0b97-4617-ac2c-c6f7d2cf5755",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29cbbc30-a010-4520-97e9-a62dfd1067d0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9ab3f-3994-4d08-8beb-eb4ef6dbeaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01fea1d6-8603-4949-a8fa-e0f3763688bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055fa8c4-57f2-486c-9d16-1602b99cdd82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1459e906-db45-4c2f-b645-0a4c8c15113c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0863b378-ac0e-483d-8608-c762198283e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29cd2561-78d4-4b18-95b8-2c49c661c629"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9cb95be-a902-4dda-b0ed-ebd4f2eea683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c7c159f-0383-4994-b05f-d75d74b497a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af5a39b8-2e48-40a7-9fab-e68a7516aef8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e22ae96f-cf74-40de-b18e-eac3ac151eac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f72d79e8-4179-40c3-9477-2eb87f95a1a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7849e1a-48e6-4586-9a01-89e1554e8158"
                }
              }
            ]
          },
          {
            "id": "09f01ecd-faac-44c2-aa63-bb659e24b7a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3defa17e-9504-489c-96d3-c36fc6627f0c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "580cc6c9-65c4-4b66-93f5-5fe2eda9c2da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70ecc3e7-4691-4b12-ba08-e8d0144c69c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5ac54a5-ac53-445b-8fa0-c2f36bbbc0c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fba0d4c1-321a-4179-9a08-b13eac27fb2a"
                    }
                  }
                ]
              },
              {
                "id": "935f5c1e-7a9a-41b4-b8ca-b06561a92e33",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5940887-becd-4d51-b6a7-5052f02d9ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ab1faa1-9f8b-436a-9b43-38c270d092e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb03b57-7ed3-4710-82a9-bd633d9c01d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12d321af-ed4b-4358-8e4c-7ac806270e51"
                    }
                  }
                ]
              },
              {
                "id": "15b3f03c-5c47-42dc-bd8d-9a07ae463b18",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aed9652-8d9f-4e1e-8006-d5ba35e9cc74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77683163-caf5-4a68-91f2-5e76e7c79670"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81e1fcf9-ab5d-431e-88ab-75094f275eb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7e7233c-6d6a-446b-ac13-1c61f3c35f87"
                    }
                  }
                ]
              },
              {
                "id": "d9de4893-b8c3-43b3-86a5-6a8423c6dde0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4edbad29-1424-4791-b568-d101a2de91a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77f59e90-388b-4620-ab42-5205a1749b3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16dd19ca-2586-4fc6-94d9-c42d8333bd19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "62a8e92e-ec22-4fbf-87fb-e01999f2f398"
                    }
                  }
                ]
              },
              {
                "id": "7c81580d-e054-463f-8b72-58128018a316",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f43a8b-95f7-4e9a-93fe-150f20100248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c432bb7-8a05-4b3b-8827-a7d4aa49cc48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81236e7f-050a-49f2-aa66-0fdbf9d5716a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9aad5ef9-61f3-47a6-88f7-bc2ae4fdd2be"
                    }
                  }
                ]
              },
              {
                "id": "1941c802-6189-4e35-a34a-8f182bb92957",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "533eb5a8-b526-48a5-b7f8-6e4c233c331c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84283bae-7dcc-4030-8661-b822c10bf51c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abcdee08-5e27-403d-965b-9386920f0d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1424fffa-9dae-4412-9a55-191082c14292"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f72646c-233e-4b70-b53a-849a0d0799b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d62fa1cc-85bd-46fc-8482-23143eeefbe0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b50eb7f-f6a8-4478-a315-bd26a9ba391d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64424828-6245-4436-b66d-6f535d4d2ea8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e44650da-a7dc-4027-aa89-c7b86e4c863a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16bbe484-3bf4-4ef9-8717-0e115b1806de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4dc7ed5-69eb-44e2-bc06-ee333eb4680c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee35437b-33c4-4b3c-90a8-2d4617411b49"
            }
          }
        ]
      },
      {
        "id": "84e4e7d3-471d-4a29-a28a-366386907c6d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb160323-3b36-4984-85ff-f85e4a8f72e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1465c77e-88cf-4b73-acfb-0f05078aa0c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f313b40f-2203-4355-9eb9-f763f184d368",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bbdb07-210f-461e-98ad-facee11dc870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31ae82e-11a5-4d18-a6fe-354d57f574a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae47e070-7296-4028-b51d-414dfbbdcce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e57c86-23e0-44f3-9699-e8dd3d4b98c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b94b9a-acd0-4ea6-bb8d-a6135e9b4cce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a798bae-bee5-420b-9450-54b4192bc5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64afe50-c7ae-4517-9d18-b1ec28c1e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e75a69-7d0d-4407-b2f1-38d800bcc3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e30c6b-bea2-4f5e-a729-a806be28827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971f3253-243d-4429-83c3-634a92493756",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af096492-7fba-4191-b768-b43aed17f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50cbe13-6f27-4993-819e-170b369c75b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af722897-ec06-4c84-81e6-68f1718c9889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b77104-450c-4872-8ad7-0802973c420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f68925-6d78-46b7-a61b-a65c1805febc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e004824-cd45-4b08-af79-5ac38c09acef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf9fc86-296f-48c8-8176-bb76bdbbb836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea1df8a-4cb6-4df2-8f35-74446967af7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be66ec4-0ef3-491b-9738-cfd03b240853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8b0614-2df1-4f00-b62a-2fcd193d8b90",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f541d7-b642-47be-b843-3e788f54a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419f17f9-ffee-4a2e-aae1-ce25a23edd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8189ee53-dbb4-4ae7-875f-e943c5bc2901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96bcbdcc-bc0a-48d8-add1-40f7ad0e1b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878a8379-36cc-42eb-9761-ec73f1026fdc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9fe596-bb36-438e-b8dc-eab59f958470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c58c20-887b-4ed7-be30-7343617a4b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d4f7a-9547-4fc2-9f13-e3df991614cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "944359a1-b79a-458b-972a-b3a649da1abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255765e3-4825-4461-8f90-f52a73ee725b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a08ab5e-cee1-4b1e-95df-9204d702ca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27512399-6545-4202-8ec5-761d8276d47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc67f9d3-8e0a-49b5-ae03-242f6ef57d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b25790a-6064-4f0a-b5de-7d7569ba86e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653aa924-ce82-49b1-9a55-d2fd0e2b3d55",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8343dda7-48b8-4f8e-b992-b9beff56bf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4827947a-5abf-4d52-8cc8-676d04f5dac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61387ac4-4bfd-4434-b3e3-c6e4058031a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df2d429-75ff-43b2-8d54-a301535c3cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92057dd4-bc20-4fb0-8b1b-46a8ae38d782",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2651df-4be9-4ebf-b9b1-d9bd1c1e2635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c940ea1-b8b5-4cf8-8cc8-c5028409c252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e76012f-290e-4de0-acda-8a8e9295b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "359127b1-1653-4587-9a07-eafd97ac84fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd38677-7cff-4176-8fa7-d1b1ec5cd43b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2449e70-2dc7-4f64-b8c0-4e1d5a6cda12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf33513d-180a-4fcc-8ca2-0ccd094d26b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fc755d-dd63-458e-b7e6-d94753c7109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4887ab-d62b-41f7-8ae6-58ef0aa23dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f62e3f-8a28-41cc-b00e-25821a0eccc8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df741b2b-16f4-4d79-a844-5bf284017771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388e7c95-1046-4144-b8b8-5ff7ea5e4560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843f85cd-bf70-4329-a229-dfef1e7484d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd3ca09-84a9-4929-a545-27a0f0e9570c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0467a06-d760-4ea7-b2a5-330efbd47197",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7afe33a-b5b9-4b68-89b0-ee1efb520cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098054c9-11da-49e4-b9c0-6e1612b444a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94247701-1288-42d1-814d-d958bf564b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db14ca08-575d-4714-9f05-042c22e10b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcd84ac-c1d4-4e00-bc0e-214aa1d68c09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb93323-32d0-4b53-95c7-fd7cf2bfc7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f45be74-c185-4048-97bf-a35eb088d1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20deca3e-77e6-4b26-8445-a2b81776a47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "145063f4-d4d6-44f6-99e8-59260fdffbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad898a1-3f2e-475d-a301-bfd2f300cb29",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd98b8a-2e2d-4e10-b2d8-f83005af8c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4382e541-8279-4c70-91db-274f6474f16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b7e838-eb3e-4643-85e4-a0874f986705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4f34b6-aff6-42d4-a79e-1d94ac9f5a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa641c9f-0639-4f15-b484-06e3afa7f5ea",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e667ba-dd6a-4d43-ab97-04c667e50cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd9c02f-a9aa-4bd1-8c49-2e161f47c01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4f1196-e381-461a-b0ea-7e46f7641c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ca553b-d178-4082-b2a0-12551bc5e9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b51224-d376-42e7-954a-8d1e9220f105",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0301d2a9-3bde-41d7-b9a2-3329eacff6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d93761a-80ff-4f51-8997-897e4ffd4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6de2c0-c2ee-4eca-bb0f-f41be1904b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b74ce7-968f-4041-87de-d3bda1440b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6969b068-c682-4d0b-aca3-6422898847a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1599cc57-0e0b-49c8-9364-03680e287fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebe1ed4-29a4-45c2-85ea-f8b09373d9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd98552a-2e1a-471f-b477-fa8693f6ea66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca945e6-376f-43df-9cbc-0ddab191ed3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e184d-49dd-41b7-adce-5848aeaa0f51",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ad596-51ff-4dbf-b2d9-e24fd80a281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5fb72f-6865-4ed1-ad39-6594657f63f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2028ea9a-bc03-41be-9fde-d1518415a6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0602d2-26ef-4609-adcc-c3bb33b7541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b503fe-7ba4-46ac-9166-3e75862e613a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7a8fd1-6546-4767-8f7d-5487e498700a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71853396-233c-449c-92fb-fefe67a683b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04629d46-a297-44de-bda7-74eea9033d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90071535-a878-4b01-b5a1-0a705b9879cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d715c9e7-f156-4c46-8105-fa03a795f265",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64090794-d1cd-4030-b152-a139dc6cfc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e0f7a9-ba8b-40f9-9168-c854082f340f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286c8e8f-55cb-4b47-ad51-0fc94afd193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d35ea5-de29-4ff5-b1ca-8d0620ff2ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a193e99-c7c1-4923-bf68-5bfc5c2624ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227b92c5-0587-47c0-bbfa-43f09d8d9f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ee9973-983f-4ac4-83a4-41eb4d787d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5ee979-86cf-49da-8fe3-0b9a5cd753cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8934ffe-c15c-43df-b726-6506249f10f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebc95ab-fe0c-48f8-b42d-8a37661bed74",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce29b60d-cefe-4599-ae0f-cddc40309991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88890cdc-4dd1-420b-9162-94fac46a5683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce70b0b-81cc-48a2-8767-fbff5636ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2273c799-83fd-4222-ba80-8d1ca1819213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce12c9a-d69c-4ed0-9c65-862c239d5926",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7112c-ba32-4a3a-819c-7158db779801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f54162-f3d2-422d-ab89-a58481b73c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec34b35-ae62-4712-af96-0b9f09c6420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb88737-06e4-41b3-91b2-587ce7147e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9989de-0580-4649-ae27-750629c8c8cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1584e6e5-d3a0-4cd5-9315-7b83a8118bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3939134a-8ef1-46dd-ab23-1dd545b4af2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da61145-f788-4756-8a05-665b613607c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd37cf6-d7e8-48b2-a41a-804d10fd547f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5f0dd4-e24b-44c1-b12a-844fdcddd05b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee50f06-a772-4713-b22b-8bde6bc7e9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029d4028-9c21-450c-b5f9-7afdbf14e197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331c8aa6-f745-4562-bf57-713e56d7e108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51370e43-9c5d-4d8b-9d76-9d857ffc3703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8253f783-7b53-49da-a5a7-08b33d0e0625",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb7fa22-33be-4bbe-9549-c718ab88e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc4103b-fd85-491a-921c-28e9242a06c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc28eacd-c298-4c23-a9e0-b79900e21962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390d58ce-b018-4a8f-a28f-bfc02f44dfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16d1c49-76bd-47b2-943c-9391fd5a0f93",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68995c-7e8f-4760-84af-f6f9aef3d099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733f9aab-bed3-4e3f-8673-c2ad47cee1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2d19a6-f530-4b0a-a56f-352205e54b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12cb323-bc9a-4c09-a959-35e4ec90b477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29d617d-795a-4bc3-8eff-a76af7b91f75",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc609f6b-b82f-4162-8f6d-5448bcdac54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf572d7-ab02-4613-99eb-bd6c59d610b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b881043e-947d-4814-a886-658772369af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb528b1-d4f1-4b85-9c0a-cbb5b370dba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33232d0c-da00-4e44-b73c-7c33d637b03b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedba43e-a59d-43b4-8502-c9a4ff9604b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2f80a0-1a55-4dbe-8d70-90d2a8e7ff11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a810a062-f303-4ccc-ab17-1e25ac07ea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a395a008-51d2-46af-b17a-9156474b822a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f9d7e7-4a56-4d08-ae2b-97fe4c715723",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c596493-7470-473c-b53e-6ed7f172f425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be02a06-c45f-46d3-bb98-d6e60a55059d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbdbd7d-c850-4485-9740-b4fcc29761fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec7e87c-a97a-41d4-b62b-fe2bb7988373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac08064-169a-4ebf-8355-86009b222dcc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e62e6b1-42ff-4e82-907b-fc8cb036139d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb5b190-9805-45cc-8cb0-d155e8e165f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dc828a-6fa6-4c10-b206-183618348187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ef0ffc-f372-43f0-b759-7b14a29caaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081c31ab-245f-4a72-9dfd-84307a1037a4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f30ee-e170-41dc-927d-a9479d16c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a2b03a-2e57-4b18-a628-79b768db69bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95dbbc1-97cb-4183-a7d3-8c1f1e4a89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458f45ac-821c-4dce-8cd9-c5d5053334e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eda72aaf-66b2-4a6f-9160-088087c1c00c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "444089ab-6d9b-45b4-8260-762d6d67f246",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94df8a3b-1ffe-4c6f-b60d-e9c3a1ce8e89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff42a6f2-1346-4a0b-82d6-f7e89df0574d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db76a8-7b99-4cff-9572-0b909397bfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0987bb7a-189a-42a1-bc13-0af946452405"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bff0fc3-ad3f-4ecc-a350-31c7a9958651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dea9a58d-7fb9-4f27-aea2-b172f68962e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23b6e22e-112c-408b-b51b-a90c83c4c1fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f16422-b31e-435c-bdcc-bff11e81f2f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e81a0d6-93b8-4a8b-afa5-21150b193dfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87b8ed1a-2b6b-4418-8bfb-3c6cf970bebf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f129068-4a9e-47b9-a70c-16f1aa2cd313",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "466b3d8a-fa85-45eb-bdaf-4b8ae54fd7da"
            }
          }
        ]
      },
      {
        "id": "e374ca0e-f061-4234-b253-a95bc1d1048d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6241deeb-c138-4334-93b2-a110db1c581b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7861ff63-0515-4d18-9ab1-aacc5ec69dbb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd21f115-0462-4f62-8cfd-a0bc09717ccb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100a43a1-8492-4658-ac7e-7938376c4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3d9658-ab7b-47ea-a221-f6d3d4cd48a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbab8de-e69a-4a19-a5b0-bcfbddf188f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "767f33bf-3227-4c14-854b-9b9673c5e443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b8107c-847e-4acc-aa86-f43131eb334e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73deaa7-4d0f-4df7-82fa-4f051fe208a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395f7fd9-aa1e-47c8-b3a7-855e06c413f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bda03ba-41a5-4479-9c78-8508b3b9560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7473f1-5f68-4898-b256-1a40fa5aff8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c9e44b-1868-4c6f-9708-635c51f6916d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a87587-32c6-47a1-b49b-0e8a7a5523f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac94a3e-8fdd-481e-b6c0-a13afc5b6751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a039bff-1122-46a0-8b17-33eb69a96d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf09d1d-77ba-4369-808f-79c143ee2725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b90b72-01d5-4c1b-b8cd-2c543f0993ad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc667b-5107-4cde-97a8-3fba2e874aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61bec81-74ac-405c-903a-09be7d5efdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2653a6-f0b7-4c80-8750-c9a50aa8e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ff969d-c426-4805-9c67-7a1ed5e8682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da31086a-dc6b-457d-8d70-b7b2d2bd7e11",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2dc0fa-9c6d-4b09-b873-daf68a70dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eb4e7c-2680-4266-913a-91019946ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138fe4d5-9f8d-479b-8567-c410fc0bba1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8302cef2-ff20-4e50-8e92-df208200ffb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9b5f1e-4937-47c7-958b-671fe1f61b2d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faa059f-a9b3-4add-be39-d6261d5d27be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56260e49-9c4c-448c-ab5e-a83b71f6a998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c761f3-32d1-4d4a-a54a-0c843c444e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0809791-f6e0-413a-8824-2ded86350442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72631325-5d7b-432c-b37e-2b8803a43fff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64c2aa2-adbe-413a-9388-703cea230e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57c2d9a-fc8e-4558-8c17-c72fa34d5457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf28ce9-5c0d-4f80-bb85-a6c517abb026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff89224d-9dcd-4fd5-9d56-16a9aa23c12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9732fc1-fe89-4d87-8462-8702c9373e56",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240bfdef-bf54-4ea2-96b3-e7770dd66113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95936b86-0e15-4d29-ae4f-b49828cb5dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3787e336-503d-4a1e-8299-b579751fc5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "775b475d-0235-426e-b73e-1d5df51e3c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcd8676-c23f-420e-8e87-40bb6d7c5ad2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e4452c-0789-4040-acdf-63409f52ed6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fc0bb0-611c-433d-ad64-f531cbd85dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bb2a5f-847a-45f5-891a-62dd2b73a436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0628a275-f421-4f17-a4a1-e9853cbc5b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ebeece-48d4-48ec-ab21-87cefeec4864",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b5ba8e-4e44-4313-92d7-c306eaebe428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8191eedb-ddc5-4523-8a92-a771db9c623a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf6315e-2f6d-4919-ba35-1aeecc30569d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab93dbe4-b218-4579-affc-e5b4045acfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83faddf-bd5a-4dae-9fbe-c7b079d808ad",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ac473d-f330-4b1f-bad3-c361beb944f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de989175-a117-409b-908d-02520482286f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b48ece6-e2af-4a21-badb-1602e7e22511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee40c05-7829-420e-bad1-88d375b00e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3715a576-9851-418f-95c6-1493d2c6026c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b76d02e-5364-4e47-905b-f24324ac14f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1e4588-d995-461a-8395-c481043f3a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57231fc1-9ff4-4a2c-b4b8-fac924d736c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aee0a527-64ba-4e39-ac5d-fbfa7e4cb269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a3cfcf-a7a8-4008-af69-6cbe1d5cb737",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c2fed-0db3-4480-90a0-958d9bc3c5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1784a596-44cf-40e5-82da-d33a0eeabca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ced68c-39ec-403f-afd1-cd2afa733071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cf85fc-f947-4599-90fd-2a1787a796a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a83bf5-85f4-48c9-b942-98c749ba45eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d49bdf-5ea7-40eb-843e-6156c8ed52cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a45158f-bb79-4886-9489-d4a1ea40291f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890fe27e-eeac-4e7d-98bc-3b31c9d5cb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db40792-2571-439d-a406-2311c5159c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79347bb0-7406-47e7-9eb7-2c48e878ac9b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2a428c-533b-49fb-9656-30904871209e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a8b349-bbb8-42f5-86dc-96f1fe4aad02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e23d83-db0e-4dfa-bb3b-ad14919cbf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d5a73a-00ff-42c7-91e0-8ff8ad29427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c6e719-1248-4135-b272-4f0ebf99ac78",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a022a94b-8aa9-497c-b20a-e38596dae4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5133bda3-a1e0-4733-862c-b25333a2ec1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6f1f6e-1525-492d-8346-eef55c6f1e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fc2b51-de41-4f73-bf38-4c80fb7a9d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f953420-8785-4333-9c13-af35334de9b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da84f6b-507c-4c04-831e-86e10a378f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92242ab8-1ca0-4cc4-bedf-d2b885531c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec4aad2-aeb4-44ce-b044-12eaa12cebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ed9cb4-c82d-4450-a7bd-017455dd1c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4fa5b1-158e-42a3-853f-2a927f66ebff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc567353-0b78-45bc-8bd8-39691c17bcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f3f0d0-bf7d-4405-9186-84640902c40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b7025-4bc6-4f98-878f-f2603ccdec92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe77836a-3655-4b26-a58e-43a614b478bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725c6c1e-0717-4d2c-a85a-5aa1d193332f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a867aa8e-2020-4fff-8bc7-bd779cbb0c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45df653f-dca4-454a-8020-0fea8acdec2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db578e73-f3b0-4fae-9da1-5e5e17cd91df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab721a0f-d0bd-49d6-b542-0f5f11e49c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c69cee6-8016-484c-a69d-4dc732a698aa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ccd436-7b09-4319-be92-ce8d01075573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bc4f33-103d-488b-be85-2cff7899136f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc3b5ea-e565-462a-bfe7-5d700f370850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f53a9c5d-64f3-4071-af8d-50d54c3c3473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95958184-d74e-4943-97e8-a64882307612",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d692ebc-332f-4a8c-83ec-7647be2eae2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0366e997-2ec2-4214-9b35-1af753845fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d84453e-d14f-4e49-9da9-acbaa10b4bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee8b4b5-532f-4f50-8bb7-011a775dae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381992f6-c90b-4fa8-ac98-c666bd354de0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e697ae-c0da-41ba-a538-71021cdabbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117afa8c-8c6f-4d4f-9f84-ef7dd770e89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf6e1c7-910d-4c6f-89d3-d11ea9d04bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6972ef8-bab6-4c77-8182-92cedf6939c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d1453b-91a6-48ec-b35d-cadf72343908",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31117060-4057-441a-b871-e694181eeb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bddaf35-88c6-43ae-b161-e440e721b900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4091ae2e-831c-4738-8b04-6a39679726dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b10d9ac6-40d1-4662-99f5-310711a0fd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6185b2a-0a45-46f9-8051-2fd3bb6740af",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb20df-b19e-48e5-ac20-d39cee14a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6b9f0a-2ac3-4157-ad5e-05f42f918016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329370ac-25e4-407a-bedf-c83044bff576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2905fc-2e59-4e4d-aad1-de008361ad9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb084c2-332b-494a-a3e0-2f2573b8ae25",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea0f945-778a-4288-a6ab-b0c58d10cdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a64d80-c56e-4bcf-b765-017a53506843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cf9b42-201d-42e8-815a-65b3fe6f7121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45024a1d-d252-4b86-9d99-f1e9e278ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621cc0d5-7455-4e56-95ee-7e1b9596b540",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752d2bc8-22aa-4680-923a-599b06d1b4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad37e417-de2e-4bf2-b5ae-228d5903e1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7002e14-7fbd-40c4-92ef-98e66955fbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c51a391-c712-4c4b-bd99-5396641b1f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede32d95-1423-4cef-b7e2-f41902a16181",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071491dd-29d0-4c41-8a74-bc400c1a3952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e981261-472a-4640-8941-db494355aa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1e77a2-4bb7-4a24-ae95-f6cfe48a074d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8024f4a7-dc58-4d10-b2c4-c48891efed60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b945ee1-cc23-430f-8e82-da61bf1a6b03",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d152cc8d-a43b-449e-86df-d1b21253b1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e857503-ec2c-4f99-a80f-09288534968b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c91c1f-b821-4031-b481-fb32d37e3f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f33fc8-3f44-4475-bcbc-2e75eb85c5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f856086-0de3-4053-b143-7e67c8e29a93",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bde647-a4ff-40bc-8a19-75ab68276ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0549afed-b245-4aae-a7b0-eca5c0c3a5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd18158-2651-4613-a935-9a5c053f5f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fef6cac-2621-4855-bc35-d3c1ce14bc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec36a42-5b3e-46ee-9cea-885a3aa49c92",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823eca02-6ae4-431d-b5ec-9a2ef3177a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0417d43-5cca-4a71-94db-89cb37d4d5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9755121b-0eef-4024-82af-7714c4008747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecfb637-d4f7-4f62-8e85-d30ef40e57d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6c3f58-4dea-40df-bbfc-2df7a13b38f9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c36b16-f275-4178-a0c2-81ec16fb5e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86d831a-ee23-4ca5-afdc-5385d1ebd846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f649a838-fa90-4197-96fe-13aecb11f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a320c332-4c62-40dc-873c-9af93a6a196b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9d0b38-e670-4770-a3f2-18942b1d91cc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30065667-f08a-4a56-9afc-294dd62c9931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8455e21-e6b5-4686-9c0e-b86265c8b887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83517bc-3958-4c76-bb65-3aa46aa3cacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06def14d-2a2e-4db8-a1af-0acacc4e6127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c4edf9-fdaf-4957-bac1-b54b7f936fb3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076ded93-40f5-4929-a5ae-6199ad9d7582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d83a946-1e70-4d28-aba9-746810fde18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2457f5-6c76-4483-9cba-8402754e8f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6fedd5-63b1-4d0e-a253-9815fd5eacef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3444ff1-fa5e-48d2-9c75-4dd86d049e9e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e05aa0-d382-4cc6-b3a0-02f6501157a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df16aeee-0a19-4213-8c3c-2cf1bba15e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633cfe1a-8660-42bd-a300-7dfeeb386939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0771f358-f1ee-42e5-b1e8-eb3d7ae0b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8dca42-c774-433e-aae7-7d8d10e14d6b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454292c6-4c3b-4260-8c83-4428515eea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c705ac-8213-43e5-9fd4-ff7a1e3391c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768a867f-c6ad-4f0d-b6b4-e37081672341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55afcb7f-9b5f-478d-8694-fe810eb45317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6549e008-bfb7-4560-8804-4b1d6318009f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bf63a7-620c-4520-ab29-adb15e898124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b3611b-35ac-434d-8e5f-470b9546712f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b7ee06-ceca-4969-b45b-79ba728a7b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06aa714b-2b7a-47c8-b401-fcf4288d3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c130a093-45b5-494b-a39f-a04734e7c9ac",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143c634d-a679-4c11-ae74-5a21e48ac00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed5d99e-3a0e-42e4-9b5f-989648b4c18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cd4e1c-81ad-4f16-90c5-0a2ff2c5795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b34954-cb74-4220-ae41-fc043b92c308"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb6406a5-7133-471e-b3df-a5846b0d3931",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05a2a813-ccb3-4f6c-a1ca-8fe22d737383",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7103b25f-edbe-4085-b968-1c63fb7d0f76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cb11991d-1db3-454a-b3ca-545c04247354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6d0eb2-0442-40fb-a27e-1f66f44b0360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0464c736-56e3-4f71-bba3-105f22d2e108"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06f46000-76d5-44f1-acae-f3a8f59c2f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63f93260-cc38-4802-8e97-3cf85311dcf0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3525e06d-a0af-4f62-abef-8a6aeb56c377",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41ddf401-f7a8-4ac5-82e4-963194eac62e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d281403b-cefb-411c-b2ad-ffc4193c986f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35ae5ea6-9beb-4ced-897d-03e5f67af9b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b4e18f6-776b-425b-bb98-ed081fd651c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c168dfc-74ea-4d28-bc17-4900affe586f"
            }
          }
        ]
      },
      {
        "id": "3e2a5ffc-95a4-4284-846a-b2f8d8531b1c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3abd7762-eaa3-4117-9c10-90877073cdb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3622054-181c-4eec-a471-03bddd45f67e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8765f40-a997-42e5-877a-7473d5128231",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23b6c62-dfa3-4167-b9ee-3880eb86855a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddee51cc-88eb-4780-9e22-39ed58981c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8af6098-05fd-46a8-a168-abd5c3908409",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6efb13f-4095-490b-9a95-32df01ffb953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f6beac-3742-40f9-ad0a-c16258d3a5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e41e6c4-578d-40d7-b2e5-d8c752615544",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3b3e6-3ddf-4bf9-9c86-e91c8cb8c2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea413d22-9b62-4bda-ae28-88e60a5184b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93195be8-2d53-4d2f-b46d-ea38170dc30d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8586a0f5-4af8-4b3c-96f6-ffb2a99e0319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3994be3c-fa0d-4067-b128-84aa80f1ecf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfbb45b-2119-4444-9fba-3c7d52f7916c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9220ae1e-209f-4f69-9990-0a2c271c358a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0057a0-2be5-407c-a360-1fd0612faeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6fee6d-f70a-4cf1-89a3-fd752f9b30ae",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614048f5-3255-448a-b781-6d4ab210ee5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60e0845-ef8e-484b-992d-7afd05daad15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ee40eb-b0a4-4332-a44d-e7e2835cb6fb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4933dbe-2047-4e74-b9e6-010f5ef28994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95923fa4-71b5-493e-85d9-862307cadf63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e75ccf-6470-4bc9-b43f-c7ffd93d92d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c17cbf0-1813-4918-b936-47404905cc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e55f22a-3c04-41c8-81aa-f4d17a94507e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848b1fa-8965-4fdc-a56d-ca7ec42b47c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a87ee90-90dd-4ca5-8de9-472cf2bc9d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bfd176-4010-451e-a034-8645e5fd25b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec9836a-e144-4991-ab3d-32e004029a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22259e3-e66d-45df-9092-3acb64e0533f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae358ccf-6068-489e-9063-b21c43b25580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c7a40b-5b7f-439e-8174-ee7908134993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56952f-1b2c-424c-9ce5-28f9ccf494cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7b4476-5424-4e8c-9acf-6aa29c8fd71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c59fda4-6fb9-4d8e-84e6-7b48cd14063d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830bd899-dece-4103-a37e-ca6d6eb3209c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62ffb74-7c21-4d34-9815-4d5854eb8fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c3f486-1fc1-47fe-85d9-12bc76fb4b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3639b47d-ab00-4532-a856-20c6d8f8835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f95073-57f4-46a8-91d4-f9c760fd8114",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1e8855-dcf4-429d-8378-03d0fdf1f85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b0ad37-724e-43cd-a00f-2c3994630eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb7a7eb-414c-43eb-92b8-a09b0953887b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2450a3-c7d0-4f4e-b0cf-1fb1d606f982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b1aa5c-3b0d-443e-ae43-fb91f76f8055",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f89c982-c89e-4f88-b92e-43665d4f713b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f655015a-3e2c-40c5-a91b-8c803e457c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f88fa-6b04-4ca0-a91c-f9816eef580d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97ce42c-ced7-4098-9d6d-cb9b5257632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9824ecf7-49c4-4bb0-be07-18331007b2a1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff18552c-aafe-488a-b917-ae450125aed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af2cd6b-af7a-4a93-925c-31850b54fabe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae5a27a-a274-44ea-8ba1-1995ced6ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c82742-65ee-460d-8a40-104a2356dd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6db45f5-0316-43f7-803d-c05a756f104f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b356d0e-850d-4e7f-a7ce-02ad2fb1e96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e858446e-1ec8-45e8-b6fe-4281c80094e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedf8bc1-5e4f-489b-a151-7d630e3669c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db79de1-7bdd-4241-ba5b-4d3248612f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b1dca6-c58c-426a-8faa-b588b410831d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a66a017-649c-4954-9752-a9158d988744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75878078-eab7-4299-90eb-ce9d7e10a37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13d9373-1504-4929-bf9a-16e1c12b48ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baa5be7-c821-4df4-bc36-d4664984c58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e6c9a1-2df7-42d5-84e3-1f79af784570",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd575d69-ebc5-409c-9cf4-bfd1907ee80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24538f62-bd7b-4632-bed9-f1977bca27aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7934aee-4096-4d0d-9951-268e48558de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2398a798-385a-43fc-a1af-7c932820cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92a606d-d060-4ce8-8e0f-c283953ab366",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f3afe7-bc7d-4a9a-95db-235ced326a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcec746-3043-4ae4-be16-e47a7a17b17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954955ab-f9c9-41b0-9f63-116f2ae50b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a94c4b-af72-4712-8ca1-47a9f9b23b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6611d2-108d-4d7c-b3d7-99d9815edcba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8871561-8121-423f-a7b9-49c2f1bc9857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca099be-e3eb-4f33-a29d-bf8674018d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35e93fd-11b0-4944-9334-960a84452596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a347d3-366b-4b60-9995-073e4f60fe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a5e7f5-ca40-45d5-af5c-6a6325fcc03a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe92fa5-f427-486b-b9f3-095b8272065a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5a9fb8-dbda-49cf-83cf-a273e08822ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30642d6-5e9a-4c96-a948-5c236b2368fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bad3e4d-64fb-4795-ae50-ae5c50429d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43cb2e9-3598-4450-b7bc-82d6cea49720",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf7cb02-561f-4c6b-8211-5f9ee8164f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5e3c24-9185-4a96-b5d9-b7f3b039ac8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049a53ac-4632-4192-a6db-1a3b77439554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff406bf9-cbce-40cd-88c9-17ca27320768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497971ff-b606-4c03-8a2c-8cfe64f4b4a3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5166f53-042a-41a6-82fa-02e07bdcb394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2779a8f6-5d15-4c57-bc33-e3699498eb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86694d44-1fab-4030-a7a2-e6643788a16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d351603-71be-415f-8b1a-9e7e957c3342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553cf99f-b346-4722-af76-08a43edf6073",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91dcce3-2cd7-498b-9e63-2d436abb8bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c94296d-4320-499d-93cf-d1b8d7f34b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11da075e-182f-4777-812e-2508a3059ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a5e5bd-88d0-4178-8d35-b65aa8715fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c05502-0c88-471b-9003-9173fd4f6796",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23d00d8-7dbb-44a3-b47c-b366028afe69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6175d5-34a0-4e73-971e-7981d8183277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b3a2a0-ba64-4651-aa68-e8637d6a50e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc74ea0-8a78-46b0-a5c6-cf0b23838b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2508c171-d2ce-400b-9065-ced114b27226",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d979a9f4-eccc-4d7e-b51b-ec649bbbafa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d73e0ed-91c2-4acc-899c-8261f51b7da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aad66dd-2183-46f1-98c9-f11b5176c3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcfc9ac-e7e5-4db2-bc39-792dcc90a6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb0f758-87fc-43ef-87c6-f612d091a4a5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69540c14-18fb-428a-a916-9c504a534ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da01c0f-4864-4a22-88a4-1566d49dd8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd79596-570c-4e36-9a3c-64ea9daa4170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b6036b-8ce4-47e5-9b98-830106495bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f8818e-7e82-47be-bbcf-38b3f1c9d37d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e57188-4f7a-42a7-87af-8082192e07af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9923c132-3e6e-456b-bf9c-660c495d8297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261aa191-e7db-474a-ab2a-7a77053cf9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fdb87d-00db-4078-9814-c15ad86fb8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e30d2b2-8b64-4ad5-a8a1-833fa8a42583",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d4811-b911-470d-97f5-239548ce5c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d1497a-85d5-4ea3-a758-a4872d5fbfe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fb6cdb-08e4-4bec-8433-c9fca7d1937c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5cabb6-e6a9-4c44-839b-eaee6b58a6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b086797-6713-4166-b74b-766254880f46",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e93564a-40a0-4fa1-b73a-751d5e5c798a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397404b5-f275-4e4d-b523-416083697d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30de878a-6a88-42ae-81d0-005c80541b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efb064f-aea4-4738-be78-2036a00e4123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7c277e-3887-4fd8-99bc-7fb1f9090617",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c46d631-1f35-4fc9-9926-571209652c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02238b1-4bad-47da-98df-6ab95ea1f165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2772f2f9-b7ce-4a19-979d-e8ea2c50b011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008dd5e8-327f-415d-80f8-647ea6b5fc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15990b69-2372-4fc2-9abb-b6f4a7e9cd86",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9489299b-06a8-44ea-97ec-c1d05652f2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cea54c1-1364-4d24-b80a-e630b476a219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6196e99-120f-4817-8d07-3eb67ffc92dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb848fb0-15b9-40b3-ac57-6586dadd59b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b50e41-296a-4d1d-92e2-6cac694446df",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aef000-0894-4f7b-a6fd-ed8975e70a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f39064c-ae77-48b1-8591-88361c0492f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14e97be-4f6a-4dbe-8f3c-9b8a45f07d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbd9381-a49d-453d-8181-ea5456373572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c42af6-b413-4d57-879e-8e84a0dfc379",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82096be-b470-48c8-b209-e101a9d38c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0bae25-9a49-4191-9fce-8a4bf83056ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97486343-3e90-48dc-899e-df1d8a3402f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea31992-a53f-45c1-bae9-8a0be6811f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce4bda8-e05b-4d2e-8e98-edc2ab0ba323",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aa149a-c5af-4c16-a946-732c0e62a3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2424cfee-4cf4-4070-980d-21c0b5076fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e07f1d-8e2f-4980-8ab0-a829b3d13045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc3d380-d2b9-4091-aa9a-8b02cde2533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64aa556-507f-4747-9ac2-d175b2bc9bfb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8af26e-82fe-44ef-8435-5ab3414b6762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2048fd-d717-4ced-8d22-a40ca22b396a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15275d6-2aba-4d2f-9979-45738f9f09e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca50a8fd-7c9d-4d1e-9d46-0c59a7d6f9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ced36b-4893-480d-935b-6386e208af5b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b30cf52-d5e9-4736-bd56-997bea697157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad12071-c0a5-4854-a987-d1c4777a14e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf4f7a3-d6d6-443d-8661-d0f91dad3339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5ca16b-9429-4ec5-807b-ae7608568961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f886f-0986-4f17-8a93-89d9371dcc0d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200074dc-b587-499e-a5a9-21677aa0904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2c4656-f4a5-484d-a8fc-15d093826d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea4d41b-e8b3-4d79-a801-30e5a6c8133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae241b37-e76f-4855-b2ff-61e6e0fad43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44bd8a0-273a-4205-96a7-94ba904b504e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37cb415-0830-4d60-b950-f07f0684f890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369bb1e9-73fc-423f-923e-4bd54ff5fada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b06360-7d4c-41c3-abfc-fc34ee4dd15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073e7a07-7576-48ec-99f7-1ffb5c41b7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265ad228-d596-43c0-bc92-7c6c74a6ca77",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf01467c-c6ac-41dd-be68-6daa749c22b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc96db9-718c-45d2-86da-f6452bbad299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c980d1d9-3c4b-41ea-81cf-7a43a6c76e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc727b8-0f78-424e-ab07-6fe90d88ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee618e04-2201-4fe6-ad2f-ef666e123a8f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8469c7-3368-427c-bf8c-0133fe3abc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38c8911-6320-4ae3-a724-cfc9b91c2253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782d5b47-bbdc-4951-ab23-e5ad10eb84b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b16151-57dc-4942-8502-5e1bd8cc79b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7791ee12-e401-4031-8a45-b5732ea04fa1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79345b7f-6d17-45a1-928b-88766ef5b5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa445eb4-beb6-4965-8ff9-3d3c5d154aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5be20bc-ddb1-4d06-b52d-f67305cc27e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a53cf9-fae0-4e2d-be8d-df39c34c150e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02f2f42-70fd-49c8-980f-adc73c7beabd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57ee111-dfa0-4797-aaa7-a5b1daeac7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e428cb-f9ac-44b4-9986-f519ea2c9c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df5dfbb-fc91-42a5-8c43-c450ccd965ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5896fc8-075c-4f2f-80d6-561821dd3886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb54d97b-8488-41c9-9382-a63d804fde24",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae2a9e6-5cbb-4fd6-8a2d-8c6437519d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b75d760-a47d-49f1-931b-1deb98bacc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1944280e-cafc-478a-b376-8f82288a755c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae4dacb-0ee4-4ce5-bbdc-ada3faca7429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772ad32e-3aca-408a-8d7b-2ae2bcfba204",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555db4b2-125d-4fbd-a9b0-42447d6bc89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63d37ba-9762-433e-8594-d85ec1a38c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12578b65-faef-4430-aa53-2da42d97f2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f6559e-39df-4d12-8cbe-46ca8e3b957e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26647a0-7749-4b8f-81de-086e03f6926c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60c1fb6-530b-4348-b7a7-816a1c22be80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a7acd8-db5d-46e7-82e0-4b11ea0a5256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e886e9-301d-4319-b905-a4eabcdaf1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681fedbb-15b9-48b2-a0a4-9dacd4871b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa97f6cd-b1a0-4771-b399-fa8444b556c5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd3cbef-7093-4ea0-aae1-a0078dcb48a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251770d7-b2c6-48f0-b4de-076273b3cf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a776f2fb-6f72-4894-8c54-2cb8270f3b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b16e72a-f6fb-43f3-b0dd-ccd43897dcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9304e82b-0e0d-4834-b82f-0702f89aba49",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fc81eb-9a08-4564-bdad-cb7fa12fff7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d353c06-6fd9-477a-8f80-5545e5dc05d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c48224-6194-4b12-bbe5-b1bf6e99cf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb398360-88d3-4b51-9fd0-0dce9810a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c959e32-db8c-43a1-8859-6ba2c9e39e47",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41efb733-b705-4707-8fcc-fe8423d5c9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bb3f4a-4f81-41c1-aedf-f3fe29c6ccfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f32542-3378-4fc8-a68c-192695bd2530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87c9bfa-5efe-4ac3-b106-a46484346111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4640094d-200d-42a5-b1c9-fb0a4114e9d1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd516bf-dc22-4075-87df-af1cf8c12058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb74b01b-ab25-41fc-816c-6000ac38dc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adfaacf-5671-4613-b56f-f9fda9d3b1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ad969d-3b64-4143-a8c6-c185f0db12de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf12d60-4910-4635-8cd1-2c83a7349d21",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810ab380-cd37-4c9d-a28c-8c29eb8cb0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66e5c86-ca31-4ebd-8f17-2eaafd2bc3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3048366-d2a0-4b3a-907c-f24c9d15e9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134037b4-0b82-41ff-9455-ea6b13c11b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ba4192-d10d-4319-a778-190993c561e6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520b0cfa-c34a-402e-97c6-dc7265465176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852ea4e4-ccca-4fee-8e8c-10ce1223bd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24650a6d-6e1a-4e07-8dcc-2c12ac56dbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ca9f40-760e-4d37-bea7-0b9ed3347f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e8359-6a06-4198-9730-3b5789f31967",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba24e6bb-f2f5-442e-9da9-424938c77bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3a056a-4559-47c5-8e31-7e38dd234327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94910ac0-5053-4db8-9b86-337876e92d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99912d9d-271f-41c9-922e-6caba30b7b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae82b65f-caf1-4e99-a970-665c0190ca14",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06742ac0-5560-49b0-9987-068f1768ac7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150e1678-51c3-4302-9a04-cfce0cf9c25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa9d30e-9aeb-4006-8d67-db09501ec535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ec4b1a-c5dc-41b7-88c5-e7b9b12497f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcecfd03-b3ef-44d5-ac36-dd28a872cb65",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d48334b-a4cb-48d9-8c4e-def046c6209c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f79c29d-c4b6-4c62-b05f-e656716035d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec65053-452c-42bd-8de7-ba8e5140765d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf250677-a8be-4ec7-92d1-64c20ef62002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da30f6e-936f-46bf-ab2d-44be3673ceb9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040f350c-ff44-453e-b51d-6d3baf54056e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed03df41-10b4-40f3-a0c9-811ac879c8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730257ea-343e-4c4d-8f71-a241a998022c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b7c9db-b268-45e2-a950-c075d5d4eeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090122b-c7f7-407f-bc1f-6db103aee249",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09dff5e-ec72-47e9-8c46-08701a345c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330b362f-ab9d-4a11-810b-a989f8714e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a027e43-658d-4db2-a40d-650d2e212058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a33e3f-b98c-45c0-8add-794517819001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0fc866-d81f-471a-9dac-e1fb86dd4477",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396eceb6-215d-4841-a5e4-98afa9ede830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fa8a25-c5f4-49c6-b4f3-5fe7d0582aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f58b2d8-eaba-4643-a8fa-b94f596b6719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be98a99-3330-4397-8dca-d343887a161e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f77ea72-ce47-4636-a97b-abf5fab6563a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c63b855-8188-4825-92a2-82aad847f5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d8b1be-b7ed-44ef-84c4-ed9d1f25de41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ca7a10-4900-4921-b42a-aa5dea5bd3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f89138-baaa-49b1-87b0-f5267fbfc282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b84128-f3eb-4f91-a4ec-1a50ae407fb1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228f4a4-7577-4763-9767-2bddc5ce6467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7eb970-a303-444a-8cef-4a20a2f68d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f434821f-18ba-42d9-b975-d42825677965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b089de-b097-4e77-99d1-13c17a4962e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8cf7c1-8fc3-4cf4-a26e-34723c95a856",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1cb0bd-7831-41f7-98df-358d6a1c095f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a1534e-ba6f-4fc8-b18b-29ca5863615e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1361162-01f8-4250-91bf-10daad80d4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc7c69a-2e55-4f22-84aa-11f50ad81e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8474f3a0-c09c-4860-ae5c-2d3da45bd589",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43557c5-4e23-4a7c-bd04-a1833e10d2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b448fdf9-9110-4dc1-8bd3-80f006a894c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be54169-80f0-4d61-a81f-0a7d1bb8a46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b26fede-d7ea-4e08-a9aa-13c275f0c78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a58942-01e0-4870-b4d3-4c533846cf8c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28197cb-df66-45b0-b732-81bd050230be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e07564-221d-4ea5-a18f-48bf42a7b3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de66f87-2b16-41db-b266-f44b85dfcc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98df7004-83f1-4c82-aa2f-b0f390bc0e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698df1e3-6091-4e88-92cc-a5e63e531a35",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40dd618-273f-403d-b11a-a98f62fe5b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b681d0-4da0-4949-8451-70cb5c57690a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a7a4d7-fe5c-44ca-b292-c995dddf3374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10828dd6-f1f6-47e2-aebe-b0ba34c1bf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0955914e-a35f-4ffc-ae63-81356865a2a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de6e424-377f-4a5b-8c8b-6e5a50ab11d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719617d5-a20d-4e44-88bc-0b48fd529775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff5e06f-d477-4ad2-97f1-8fa9847eb025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6672eda5-feec-481e-9345-4eea47dac5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b68c9-5356-4ff3-8fda-48377ce9ec68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce648047-b758-4b7f-86b9-1f27d7d76699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372d5c2b-c748-4cfd-9f99-42e7b91c10c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ee1cbb-67bb-4898-bf85-bf389af49274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5aadc3-b282-4d8f-89da-d0c488278de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f895dd7c-57bb-446a-9caa-a51d20043448",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5561caef-2fed-41b7-a04e-c87c6d15039c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287e3c3f-e675-4d6f-bacd-54b76012816b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "692b60aa-bcf0-474e-9c24-5c5198d9444b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3d6316-71da-4ed2-98c2-9b8fd7567a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ada66a1-6774-49f9-8717-70d764638e17",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a8a49d-6961-44a7-a438-9bc3a1569017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff31783f-10dd-4bbb-b305-759586cc8282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f974b45-3857-42ca-92a5-199ef338772a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87be3611-f71a-4e46-8f6f-056df22346bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88341c-3d7d-4c06-8d13-8d30d65ce6cf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95ac797-995c-4362-a5c2-489289e7ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41675470-90cf-46db-b1d9-755d41b6ce12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aa4c67-4140-4558-9c3d-c922bf8194a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9548c569-0bb0-4a7f-84ba-d175e6a48a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d34da50-fd51-4192-9423-afcc1a16440c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f212c444-4ddd-44a5-8cae-036f522f8f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e77d9012-9314-4ab7-b1fc-2b294da55fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24612d7-5f21-4c88-8807-e40c9cf0f536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4d3a25-1249-4db7-b27c-6661cf0fb024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bae2748-4afa-4c49-a3ed-3c78b539b436",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6da34f-23f0-4cd3-9e2a-4eb0b41c22ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9da4d6-ccb4-44ea-9efd-8d7db01c2a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2f683e-adbc-4c0e-a28a-a63f67a15e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e05390e-3fcf-4255-a578-ede3b6de7c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fb1a48-fdff-4472-9d36-32a119b6bcde",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b45294-ad6b-4bab-9f0b-5097ea4e79e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0c85a9-6364-4676-8693-363e17e140d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89b82fb-e02f-4bc6-9fe2-6c46fa586a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504d9683-9d9f-4bcc-97c8-3336e75519d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b7a4e1-fd1b-4380-9962-f9701ba91443",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dacac8-f8cb-46d2-ae97-b3003e5c430c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b299b238-d8ea-4faa-aac5-098f5b60d039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eca839-aebc-4014-9852-0d5b25ffca09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f64e24d-5e00-4cbf-9056-7695de54fe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c33968-9516-4859-b2aa-6833da10c7ef",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85694f9b-c387-4bd0-96af-9fd77d50fb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53a81f8-9f6c-43fe-bd4f-6f5cb3cf5c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e111da-f492-4d9c-b5b0-825a3a3851e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a9e0aa-0c07-4946-a3c1-60dfb6a1a201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad454cea-3afc-4a75-95cc-d281c477de32",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89820d9-6d16-4a21-aacb-92ad0d80a360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306b9a2a-a3fb-4015-b945-0cf67a3455e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baf6fc3-fcad-42c9-8c06-9a4235117062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e1c326-ea18-4554-811a-ff13093f8ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf83cfbe-f0e8-4b80-a7ff-92513c046b5d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b33940-f64b-464f-947d-b24d226b4265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb2ce60-8f89-48b0-9406-aed6dd7a99fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e0e309-0740-4800-95b8-0b21f2d0f825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766cec48-ecae-4d97-a18b-f168f1856a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4c4de2-e2db-4bea-a2ef-61cae2c06d63",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd1c2e3-6a70-4f02-9a97-0dc72ddd7d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2661bfb9-ccba-4ad1-87b8-3288a6503e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc811f41-18a3-4f91-a28b-a57bddf3d8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a972b4d9-42e4-4c47-8fda-14b06cc458e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d7ba1b-c94f-461b-b432-20ddc96ec575",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfad3c7-f082-4c6b-aec1-f29b3d23a753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5eaecaf-3812-4f1b-be1a-b5bea19d5973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d542c19e-66dd-4ba0-9591-dec339b7c82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824f5d95-1f2c-4926-8c69-ece9c1a5873b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b21f0b-3a77-44e4-926b-8b0052fca4e7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b414f9b3-20b8-4e92-8dba-356068c7d9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd019e6-0e5e-43c5-a3c2-a748d7663266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228832a0-495d-415a-8acf-ad1e6b628d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8511bb2-9e66-47da-8002-74e46b45f7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e540bff-838b-4aca-9d06-005105111846",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b22b649-0bdc-4c65-9cd3-0f683e99ba40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46680744-9089-4dac-a40d-3548975cd487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9810f0f-f3dc-4c2d-b25f-24b432dae24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283c5979-2d25-4bb6-a0ad-8cd1ceed127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6e73cb-ae87-492e-8a3d-84a5042b5840",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbab65ae-982f-4e68-aead-70e70d39a99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9540a7-e4a6-4b23-8aa2-13204e1fd3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6570b0-fe6b-44fc-964b-95fdbb5ff363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b620bc4a-3d85-4acc-9aed-26761c5c23e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7708b171-afb0-4a61-9e18-6c19c7d55301",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5887e9-5e9c-4b4e-b229-53295d7296af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fe613d-434d-4f9e-8b21-c80fd612838b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd50812-5139-4119-802f-49a1fb0dfa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca6ed59-e373-4d38-a184-29d67d9c3801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c5010e-7be3-4cb6-a1b1-b698e9c7cf57",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497823a-d99b-4dc5-9503-cc5d122125ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea1f175-ea48-4219-a75c-7b23202cf1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6f4807-9e64-4c5f-88ae-51139fd46067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f72f32-6869-41fb-b082-611f363af240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd4eef-227b-41a0-982b-75aa6003adfe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93f13f8-5e1b-4e99-a0ac-4b8cccd9d970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335a2089-c054-47ec-b0dc-c9eb56efff8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2665ba76-b7f7-4ef7-9e70-ea83517d88bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e12c43e-ad28-4e89-8c2e-c074475baea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131460a5-c4f5-4085-8624-bdec43b70390",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087a3fbd-ffc6-4d56-84ff-7e0ff883a2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bc27ff-b6ce-44af-abfc-f9fbeedcde09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fadcb89-6afa-43af-9cd3-8d3015e62ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5da821d-36f9-40b2-a4bd-e0360c78238c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8914dadb-7f4e-41ad-98ab-d53949629b56",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb402a6-8c99-4aa1-a74c-4d8660d9882f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15f27eb-699a-4b18-ae49-a8719fcecfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c3de11-7230-4a05-bce7-d1dd2521b313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3dc8e7-dd1b-4354-9177-5e90172f0b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f98627-5fb2-463d-93f1-ff5f001dda76",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc600b7-f5b8-4f85-8d23-7b339740aad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9996f1b-120a-4c93-a0ff-b250840e6fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c320101c-3ff6-4d39-82de-4192270ec0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ebb3a0-1517-4df4-8c71-c8d2eb43a3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d02cb22-e480-4be9-b1d8-54ade5582dab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c356fd4-ed42-4bd4-80c8-7a487d4c95e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0af844a-86df-456d-81e5-bfb556f5e910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20626312-e8b3-4c2c-ad70-492e1e2fbf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51fad55-fa52-4047-b1be-5bfd5570bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb460ae-fa88-4657-960a-6974dc25df5a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a41b44f-268c-492c-9e48-93972200fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c9aa83-7ae1-41a1-9c32-a3e497081cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfe9232-200c-4a6d-a233-7d5a74772258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad63bf8f-7eba-4030-afb1-fa9cd2fdbb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c9ced5-dce3-4599-8d01-fb913eb521f5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d05188c-5bff-4b60-8572-0a7d34ccca29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1cd2da8-43ab-4e80-87fb-cbca27decbfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d9d342-1da8-486c-86bc-b79d663977b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40493451-1591-45cc-8f51-545e502c3303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e35d005-4fc1-4d1e-997a-9bc93a6b659d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb7e0f5-913b-4a63-8c43-7e4c377286bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6278637b-2123-429c-9566-9ae746367fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b26caa0-0823-4f21-a9d6-e663d2230b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d022f88b-afc2-4d22-9311-d1ef64f39ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51df8b90-494e-4ffc-a4ad-8b28b6e8b316",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812636d-c87b-438c-add6-394a376f70e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a289e96-1945-4b0f-b439-de9ee49a81c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a7a8e2-754c-4b5f-9d33-8e97394fbcc9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278a7b3b-9673-4b26-bdef-e5d1c2001737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e3d904-575a-4a69-9954-3219ff4993a2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062f2bcd-1bb7-4dcd-b860-80024ea0a744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61f6572-0688-4e78-afa3-2f985e79ef47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd75b534-5e84-418c-8213-94e648c0f57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa880056-56b8-4c4a-bd3c-704584a0a98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bacb091-9023-4f26-bdef-d26dbc98c9e2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3605855-72ca-4dd8-9c51-d3a9ffbb60a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d834f698-3375-46c9-8c90-f9e1cb8a46bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db71a8fd-301a-496e-903c-01e8f632f843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d62611-4792-4d22-9c35-4fc6325c055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd846265-6604-4aaf-8945-eef90fccbbed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0ddf30-2a1f-4014-a7ce-9e88d7e8dad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32554fc-c34f-4861-8ca0-7cc88b037123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae7dafe-3da7-47e2-b298-934500c81f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374fc38b-ca61-4f14-b63f-36528cb88e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fac02e-188b-46da-af5b-18071d119d9d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da33e5a-7d4f-44ab-9fec-d4b828fe89d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3b3815e-4cde-4b9a-becc-d0384e7b31e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e8f942-e519-43ee-867e-b0176541e5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc80f2d-ac77-41e0-8267-6460455c6c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c324a3b-4934-4ec5-811f-38e1617f61ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1623da72-ea66-4838-a480-06b7891d5d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b42971a-bf91-4263-a339-57197d655f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44370a74-f624-44ac-84fe-e71b3f093aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077c7312-d747-4fee-b4cd-c9cc7c7e1f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cb3c25-9e7d-407e-a57e-57cc93f88694",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a983fb63-b221-4ec4-8c1e-bfe13ad37cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b2e9b3-9dd2-4c5e-90ae-60ccb8e611ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b1de5-b446-4845-b63b-8d39ff2a26e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ac0845-d68c-422d-8ea7-b1b742ce386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57428ad-20f2-42bf-8172-af8dabdc746a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88cafec-bdc3-4772-848b-2bb3c158fb23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f92e55bf-1056-463e-9ef5-9e17551e00a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39589f21-f435-4b37-a6a9-e6a2f3079fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c664159-2abc-468c-ac06-b088001b9a30"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20940baf-c528-472f-8d93-f3bad641ccb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87d6ac5c-7e79-458a-9648-056d1a149ea9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7851b401-3d1e-456b-bb0b-6d98d0750a5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42c745d9-96c1-4bfc-8379-f9302c2cd247"
                    }
                  }
                ]
              },
              {
                "id": "571d7790-7a8d-4c9c-94f5-556785890f6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e4d82c8-3589-4d57-9893-2b645972d16d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e63a78-f253-42ef-88c0-1a419a5b03bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9dc209ab-a879-435a-a6d5-ff280fbca56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53875a8a-f506-4e64-a12c-4e6c57a7db8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65e0b2fe-b03e-40d9-be17-0b3cbf2bc8ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b47b005-70df-4f95-ae85-10a44374e4d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "979b60e8-2e95-4cf5-820e-55f6c832a86c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d7c557c-a3fa-4ef5-808a-d603cd496b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22a34c7f-cc3e-4890-b046-213bd206d696"
                    }
                  }
                ]
              },
              {
                "id": "e27733ca-d16d-4ebf-abc9-a978d263996b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7d0d73db-3eff-4c91-9e41-4db5e7ec64e7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c85a584-655e-4488-a569-672b465ac20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7ba7933d-dc36-4489-bda4-beffc4012ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73fdeb1-daa3-42d9-a287-ff3473e98471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dae009c-860a-4513-a70a-4d8df7af17f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f1a3dd4-448e-4bab-8dc4-6abc16c72523",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05c23ad3-33f6-46a9-922b-37faf4f2dc8b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a010d8fd-426b-48b5-a5f2-45f99742c6d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a271e5ce-4c19-4527-9e0c-dbd2cee90add"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d795ee83-7049-4a38-a7dc-e90fbfdb43a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb68e3bf-83f5-4585-8f83-74fde3b47eac"
                    }
                  }
                ]
              },
              {
                "id": "b390acdd-31c6-45a5-a40a-c745e22563d5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a1ac696-0fcb-4fc3-9a70-dfcee06d2d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0da77438-6b76-41cb-9a5d-1f87b39d3979"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15bcbb6d-ca8a-42ec-adad-7556f0c4dc5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "250fc61f-fbf7-4bf6-9ceb-16116b472e8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0f8ac70-add8-41a2-a841-e7a28fe295ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e4d3783-5415-421c-b732-9b4b876023fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06afce1d-6ceb-434e-883e-79a2384f0234",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1790e572-0702-496d-971a-bd45ca7e024a"
            }
          }
        ]
      },
      {
        "id": "54abe7f3-65d3-445d-92a1-a124912ed63b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "69c63e68-fb9b-4226-bef3-4317b49650c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "387b1aff-69af-490d-a768-eed714756216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "638205de-46e0-472c-8b61-eb5edabedf4c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb3703c-650a-4ba2-8ce0-3678a888a59e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b9f4de68-1cfe-4ded-897b-f8add113696e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85df291-606a-4579-be36-a4fb63e10d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8f16442-0e20-4c53-a0c3-167b8a231010"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8cc69c3-f61e-44f8-b626-1473e82eabcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25a58edf-6944-4e26-a3c1-8b0e03fbf0a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9493ff94-738f-47ab-a2fa-f520e0a1670f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b5e1563-e75a-4098-8118-bdb829090239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac18d062-dd6e-4f78-9724-ab778a750c38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3c43c7a3-07fa-4a69-b32e-145bb371a571"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0714f26a-0ed5-40f4-9468-e0e7798ec2d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f468928b-2745-4f62-ad62-3d2eac32739f"
            }
          }
        ]
      },
      {
        "id": "85454cc7-755f-4bce-94e1-0556349f138f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bd5256cb-ec87-4447-ac68-acce308dadeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18b46625-bdd4-4054-ac98-824ece92aee4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27de064d-9133-41f3-a1ea-05be40941251",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9371bd93-a2e3-4afc-8581-5456140a92bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf91127-385b-479f-8f57-621a396ff5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760f7a0c-79c6-4d86-868e-24c5552ae62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cc9be40-6c6e-425e-9299-2ef62b775e27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "851e502e-dfea-4e04-b97c-bd13a8ed3802",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edfd683a-e993-4d27-b31d-a2c3dd0db40a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6fe555-921d-41bb-9cef-e86b5bb7b937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715432f5-1291-4365-bdad-f8f4b5825dbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1db4643a-8f27-4cf9-987b-91fad726c370",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29f92165-2644-493b-8885-c063c41243dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f909321-f772-40a3-af28-7e1da2f9c6a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7397468c-00ad-4fa3-8139-ec780774d0aa"
            }
          }
        ]
      },
      {
        "id": "491b90c5-fe81-40d9-bd4e-8adfed2e4138",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "44b559a1-f749-4a42-94f8-2a8a1e518785",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a74d29f5-ed53-4d2b-8074-5cd2ace50ccf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff1962cb-85fb-4474-bf6b-f4526646c1b8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e4f6b-6a61-476c-bf6f-caf909861156",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "863eeb5a-1801-42d9-9988-98fd0460003e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6499889a-55e3-4001-82af-b24cb2202131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d306715b-22ef-4bb9-8987-b20e45aed9b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18772386-8aaf-464c-beb5-43cc99164fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b5a9fa9-e610-4df8-9c62-c9358076e532"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee1434b3-a1cf-4bb5-aeb3-72aee5e3da85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b0e369-0129-4c8c-82c4-c8c98a8660b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae374c42-9df5-46d3-8508-cb66fdad4a4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3192604a-a0ba-4ba1-8853-5e8a2fd00549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f71737a-188a-4c58-bb03-d4b213bc6876",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f52bccf9-ba79-413a-ae98-dce62e1902ad"
            }
          }
        ]
      },
      {
        "id": "32cf841d-21b9-48aa-b41c-5f1de356242e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bf48c48-fc4c-48a8-a61a-da6830600a7b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16523a13-6fa3-496d-a47b-ca9cccaf39ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1c851072-b8b3-428d-ba99-e192ab798411",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a67bfbda-f019-4ce6-8488-11a8ca526722",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4da01666-2225-48c7-9431-351cf404ccea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.88028169014085,
      "responseMin": 10,
      "responseMax": 4364,
      "responseSd": 373.08539373666036,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693355547747,
      "completed": 1693355586561
    },
    "executions": [
      {
        "id": "f73b7d79-7ca1-4ac3-ac2a-c8c93e462fca",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "706addb0-1ca7-4e91-b5d6-015a0cfcbc91",
          "httpRequestId": "7136a2db-940d-4d93-be96-9b0fa6925cf0"
        },
        "item": {
          "id": "f73b7d79-7ca1-4ac3-ac2a-c8c93e462fca",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21cd4f48-4a3d-480e-8539-c9148fe06aef",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "ad419beb-f124-4bac-95e5-8b3842963271",
        "cursor": {
          "ref": "90545f19-1615-4ac0-9511-bc61c3892e48",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff2774ee-ba76-4e4d-b92c-286628978fc7"
        },
        "item": {
          "id": "ad419beb-f124-4bac-95e5-8b3842963271",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c9d84bb0-7ccf-487c-9b1f-1ffd594c432d",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "61f77891-24a9-423c-8455-339a47eacfda",
        "cursor": {
          "ref": "4ea3af82-1ba9-4d9d-80cc-9287387f83c9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "137eb1a2-3975-4bb7-8936-6e3a608dc75e"
        },
        "item": {
          "id": "61f77891-24a9-423c-8455-339a47eacfda",
          "name": "did_json"
        },
        "response": {
          "id": "7f52afcc-68b5-43d8-9dbd-234d51aa68f4",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759d8ffb-123c-4caa-af4c-05f9ba244fbc",
        "cursor": {
          "ref": "4b3305ec-816b-4edd-a98d-e75a8135d203",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0671c7cc-0016-49de-aff3-4f9dad503817"
        },
        "item": {
          "id": "759d8ffb-123c-4caa-af4c-05f9ba244fbc",
          "name": "did:invalid"
        },
        "response": {
          "id": "33abe09a-0d3d-4dda-9220-7a75a0caeaed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 956,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759d8ffb-123c-4caa-af4c-05f9ba244fbc",
        "cursor": {
          "ref": "4b3305ec-816b-4edd-a98d-e75a8135d203",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0671c7cc-0016-49de-aff3-4f9dad503817"
        },
        "item": {
          "id": "759d8ffb-123c-4caa-af4c-05f9ba244fbc",
          "name": "did:invalid"
        },
        "response": {
          "id": "33abe09a-0d3d-4dda-9220-7a75a0caeaed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 956,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14a2f42-1f61-45d5-b3db-1d2e4403c417",
        "cursor": {
          "ref": "dabc3d49-4f88-428d-aefe-0b215c3b315c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3ea84e85-083b-45ef-8095-a1d044bf0ba4"
        },
        "item": {
          "id": "e14a2f42-1f61-45d5-b3db-1d2e4403c417",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "19c4a2ed-b375-4a80-a055-e7952858728a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e3a4a3-f9dc-42e1-8cfb-0d75418f7258",
        "cursor": {
          "ref": "9e88cdda-43d8-4f7d-b1fe-e3af5d43e488",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fa720480-31d6-47c3-80e9-d892dd9b5be6"
        },
        "item": {
          "id": "a0e3a4a3-f9dc-42e1-8cfb-0d75418f7258",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5d4b2364-2a66-42b1-a827-1914713bdd2a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943e4f59-453d-4e9a-8c5d-c332ff623782",
        "cursor": {
          "ref": "5f42d04e-fec0-426c-ba6a-d6d379b90db2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3628cd00-474d-4dda-b4f5-7a9cd1f74dd6"
        },
        "item": {
          "id": "943e4f59-453d-4e9a-8c5d-c332ff623782",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6ca20ea9-dfa3-4f3b-81bb-bab451ab8726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fa6254-4571-48ab-950a-c6f6d816e341",
        "cursor": {
          "ref": "89324c77-7145-4501-b73e-d0ecd1177cd2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d66777e1-b887-41cd-bddc-02222e2b77c4"
        },
        "item": {
          "id": "57fa6254-4571-48ab-950a-c6f6d816e341",
          "name": "identifiers"
        },
        "response": {
          "id": "5428c120-cf49-4e11-9120-82427388f5d1",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46b46a5-9393-4e42-8dbf-a7aa3b0868ba",
        "cursor": {
          "ref": "338756d1-2b01-4550-b500-cfaa391fdd42",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2774b21a-a700-461a-b9aa-a87b01cb1d3a"
        },
        "item": {
          "id": "b46b46a5-9393-4e42-8dbf-a7aa3b0868ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "db7b9b85-1aea-455c-934f-35781aa720b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1a4c84-d088-4b9d-b63d-fa94b02c1ae8",
        "cursor": {
          "ref": "69855eb0-f6ba-4510-9a53-78bdb32ac127",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ff73d01b-a130-492a-8ee9-15d727f75ae2"
        },
        "item": {
          "id": "bd1a4c84-d088-4b9d-b63d-fa94b02c1ae8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ad8a7ff1-56fa-4eff-8e20-8a1687781771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af32ae7c-4447-451a-af2f-07700cfe0347",
        "cursor": {
          "ref": "8225c41b-d2fe-450c-9a96-c5c15e7fd6a1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6fe1beab-5157-4642-be11-2c1db57f7171"
        },
        "item": {
          "id": "af32ae7c-4447-451a-af2f-07700cfe0347",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dc992d87-4d5d-4bcf-94f5-70f8fa16815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a240a5-d3c1-4db5-82ae-fba9ccadb062",
        "cursor": {
          "ref": "8fb35497-ab43-445e-8dc3-c02a763a4b6c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "39e63512-f9ee-4dc2-a0e4-d73cf873cb97"
        },
        "item": {
          "id": "31a240a5-d3c1-4db5-82ae-fba9ccadb062",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5d91a330-7c24-439e-9b5a-d668f5d7f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba8a0e5-d2ec-4515-9418-c5592038a2b3",
        "cursor": {
          "ref": "0352efbf-d1ed-4962-92e1-909429eded38",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "75acce52-7803-46ba-8a24-edc769725a43"
        },
        "item": {
          "id": "2ba8a0e5-d2ec-4515-9418-c5592038a2b3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ecab5a97-d45f-44c2-a140-a9c0599f1a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3876d279-df16-45b3-a886-2c390aaf645a",
        "cursor": {
          "ref": "104bdf04-6b3c-43e4-8953-06b3171d3112",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a631bf1-9c3c-4796-84d4-1d597cd88973"
        },
        "item": {
          "id": "3876d279-df16-45b3-a886-2c390aaf645a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "92a988bf-0500-4bfe-b1af-6d6b1655c746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3c7614-4fbd-468d-9df4-1620f95d4b76",
        "cursor": {
          "ref": "2d4ac659-1998-4144-b5a6-c2d44edf2dfb",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c648ac5-2938-4c91-bd32-c1f9d18d3fb6"
        },
        "item": {
          "id": "ea3c7614-4fbd-468d-9df4-1620f95d4b76",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2f054c3d-ec4e-44df-9e1e-145709b34234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87079c9b-3283-4c43-bb0c-bd6bb1af32f7",
        "cursor": {
          "ref": "d7186fec-b139-4f17-982a-51128fb80fdc",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "126dcb5f-d0f9-4769-8208-9e9cfe63fc45"
        },
        "item": {
          "id": "87079c9b-3283-4c43-bb0c-bd6bb1af32f7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "95279a5d-9ad3-461a-8c2d-5b4805f368a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3b1497-2d91-47c3-91d7-31cff48dd3eb",
        "cursor": {
          "ref": "8c6da259-7230-4f80-9ce1-72710c98f763",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1bf8c585-351f-467a-bc73-95d6ed06f476"
        },
        "item": {
          "id": "5e3b1497-2d91-47c3-91d7-31cff48dd3eb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0efcd4c1-1313-4483-aa06-4077ad2f87f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e816e-66b8-465c-995e-65538f6aa2e7",
        "cursor": {
          "ref": "3da1aef7-3be7-4e6f-a401-24b91e04c217",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "263405ed-2c00-44a0-b62f-7cdb84a30bff"
        },
        "item": {
          "id": "9d8e816e-66b8-465c-995e-65538f6aa2e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b8d9cd26-9f3e-4690-953a-923f81400d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801aec28-ac9f-4ef5-84e3-13cb03e57c13",
        "cursor": {
          "ref": "d1e988bc-fa62-43b1-a204-0e7ee7e9964c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "000a3ae2-7610-4166-916b-fa66893013ce"
        },
        "item": {
          "id": "801aec28-ac9f-4ef5-84e3-13cb03e57c13",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2d380128-e942-4b04-85cd-79decbb81bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9627fd-67a0-4205-adfe-cd70730c00c2",
        "cursor": {
          "ref": "058dade5-d43e-4adb-afd4-41f67dd9bee2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "53bdaae0-98bf-44da-911a-af2029ade685"
        },
        "item": {
          "id": "1a9627fd-67a0-4205-adfe-cd70730c00c2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5b8b9eb5-7549-4592-b69d-c98c6dbd8748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8646ae91-d194-4eca-abbb-a09229dba417",
        "cursor": {
          "ref": "404cf353-a5fa-4232-8bc4-e8ba62b5cece",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b4d30ab4-6be0-42ef-8797-1e5a010a585b"
        },
        "item": {
          "id": "8646ae91-d194-4eca-abbb-a09229dba417",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "db3870b2-17aa-4d4c-91b8-2ae8054ea40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2826bb-4b89-48ee-b566-949756343639",
        "cursor": {
          "ref": "1b9c64e6-a511-482f-8038-bbbd98d8d5c5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b7639dc6-bdec-4a2d-81fc-a18749859e11"
        },
        "item": {
          "id": "bd2826bb-4b89-48ee-b566-949756343639",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bc8a7781-ba4c-4363-bbd0-f5a9979fb1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4908c8-0d05-4169-aa9b-f774e53bc4eb",
        "cursor": {
          "ref": "ad933f6b-4c9d-4fa4-a699-466c02f4f46f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c159f9d9-e814-4003-82e0-93722926ea00"
        },
        "item": {
          "id": "0d4908c8-0d05-4169-aa9b-f774e53bc4eb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0ebd34c0-fcf2-49f9-856c-c31d2d7744ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc7f16a-8afa-4d43-89c2-19bb3e05fe99",
        "cursor": {
          "ref": "be860e7e-9516-4586-a488-aa9257562e18",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4f4938e2-8987-41de-8ee3-1e49f06fb168"
        },
        "item": {
          "id": "9dc7f16a-8afa-4d43-89c2-19bb3e05fe99",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7679d266-4a95-469a-80eb-bc7b83d36532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebdb852-3719-4f1a-ad04-ca771c28b711",
        "cursor": {
          "ref": "e5710fdb-29ee-4c0c-8855-70a20d9ffb5d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a3ba305b-0a29-4f9c-8b99-7360dcb279ba"
        },
        "item": {
          "id": "8ebdb852-3719-4f1a-ad04-ca771c28b711",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c4f7217-6671-431b-bfcd-bc3e0520393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36647c21-a513-4e4b-8800-2bf3ccb77158",
        "cursor": {
          "ref": "c3eba6f8-558f-47df-9ba7-e19b9129a136",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e53446f5-e72a-4bc0-85ba-761287f8c31c"
        },
        "item": {
          "id": "36647c21-a513-4e4b-8800-2bf3ccb77158",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d41d6f4a-6fde-459c-8552-1f6847d516e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc36d5e-323a-4877-b316-d388415390a6",
        "cursor": {
          "ref": "fc919336-7b1a-4730-af89-33891f6ff54f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9a220508-9def-4431-9b49-604df010ad20"
        },
        "item": {
          "id": "7dc36d5e-323a-4877-b316-d388415390a6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "857337be-463e-4d25-ad74-2718d58f3f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42197e1-e23a-47ab-93d7-c67dd1b4fb43",
        "cursor": {
          "ref": "1c1976b1-62b6-4a72-a4a7-27cf51ca9cd4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cc5742f5-233a-4820-af35-b19f0f9880b8"
        },
        "item": {
          "id": "c42197e1-e23a-47ab-93d7-c67dd1b4fb43",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "87efaa20-fe12-48a0-9e8b-dcf48d1a0b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf7b08c-b752-427d-b216-d22fac7c4130",
        "cursor": {
          "ref": "ad6b5859-9d71-4f47-ae7f-444dfbb5bec1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "04bde386-7204-46c0-a11b-c79e05f809e8"
        },
        "item": {
          "id": "ccf7b08c-b752-427d-b216-d22fac7c4130",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f0e36db4-32a7-4e84-baa2-dc463c96a67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fe151d-48b6-4f63-ae32-94bfea42b545",
        "cursor": {
          "ref": "dc71a035-7a01-4b18-8bae-a05b3ef12284",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e3596acc-cae2-45ff-a0c7-e935b4c489d1"
        },
        "item": {
          "id": "09fe151d-48b6-4f63-ae32-94bfea42b545",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "595b8c24-59b2-49d9-9e7c-3da46b06bff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8681a-c3fb-4727-a3e7-7ad4934ba40f",
        "cursor": {
          "ref": "51b3e509-796f-45af-9567-17594b0159f2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "28e401c1-5506-4008-947c-7cda1aab7f42"
        },
        "item": {
          "id": "d1b8681a-c3fb-4727-a3e7-7ad4934ba40f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3c235483-9eed-4b72-aceb-8b17235e1b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869387e1-7d68-4fcd-89cc-8b04a9ed3db1",
        "cursor": {
          "ref": "304b4b71-886e-49b3-a45c-98f455672987",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ae6f8815-d2a2-483c-a0f6-04e22aa157f8"
        },
        "item": {
          "id": "869387e1-7d68-4fcd-89cc-8b04a9ed3db1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "77b81333-b87a-4473-943b-1a2fe5b04416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e22752b-9837-4da5-b50c-eea89bdedd15",
        "cursor": {
          "ref": "fa2dd070-4160-4595-b898-7b148fa5f973",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ff77d8f0-05a1-47bc-9f20-d9ef837b6722"
        },
        "item": {
          "id": "3e22752b-9837-4da5-b50c-eea89bdedd15",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9b7272ae-0d2f-4997-bef7-826935a13601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07519a58-33e8-4599-88b5-46af6042cfce",
        "cursor": {
          "ref": "5a69eeaf-5e4b-4dbc-be15-71531e68ba41",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b402563e-b5cb-4b6d-be4e-47df5b9bb491"
        },
        "item": {
          "id": "07519a58-33e8-4599-88b5-46af6042cfce",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2cb205ce-9d20-4e4f-8a3d-69bcf68973e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c850c8-824c-49cd-838d-96dfa50111d3",
        "cursor": {
          "ref": "cf3eb9f8-b743-4261-ae7e-ae9657713329",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b9087be7-4108-4661-afdb-3eb2c758fe88"
        },
        "item": {
          "id": "44c850c8-824c-49cd-838d-96dfa50111d3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "20de2e08-f22c-4010-ac40-dbfcd32094e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19be1c1e-c4b7-4d44-97a9-958156b37c1f",
        "cursor": {
          "ref": "1d772247-4069-4d1d-9e25-adc03a7a1090",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "342e745a-3957-414f-9e3f-1cd7fd0f5a69"
        },
        "item": {
          "id": "19be1c1e-c4b7-4d44-97a9-958156b37c1f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2cfc868b-0be8-402e-8b91-77142f6e2b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6a46c1-dd16-4028-87d5-006de6ce9a86",
        "cursor": {
          "ref": "7f99ad68-704d-40e6-97e4-fa158aab7c27",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e1ec44f-1830-49d9-8b54-62dc31771bde"
        },
        "item": {
          "id": "fa6a46c1-dd16-4028-87d5-006de6ce9a86",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ecce68d2-fbe4-4095-9cb1-4d04ddff16db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350113f5-1b41-49e9-9b65-b31811ceb815",
        "cursor": {
          "ref": "f0919704-38f6-4240-afdb-b85d8a0a7e33",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "59018853-17da-44db-9ac7-8f5c34dfdc72"
        },
        "item": {
          "id": "350113f5-1b41-49e9-9b65-b31811ceb815",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3c5a6e37-3a5e-4af8-ba09-b95e665facc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43c1528-88ee-4c92-b5a5-1226fb66a18a",
        "cursor": {
          "ref": "2af53f51-1f59-4277-a53c-1d3b0bab46d8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ae890d1b-7304-4a83-859b-030d5d2ec221"
        },
        "item": {
          "id": "a43c1528-88ee-4c92-b5a5-1226fb66a18a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "17825f6e-17ea-4c69-8c80-b7e3d1ee8f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e7b036-2c8f-4ce8-a647-3047529e5f5d",
        "cursor": {
          "ref": "4dfd1983-a0cb-48e8-868a-dd0807eefdfa",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d5628720-0383-4065-8760-173b430baeb3"
        },
        "item": {
          "id": "f2e7b036-2c8f-4ce8-a647-3047529e5f5d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b14fd9c3-1041-4c85-be28-337bb578b998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da0aee9-9d27-4845-808d-5d1bd1a0ef80",
        "cursor": {
          "ref": "dc402a65-26af-440f-8ab5-de0ec566ac18",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "56d16dc9-a9dc-49a0-b905-4b18a7ba65cd"
        },
        "item": {
          "id": "8da0aee9-9d27-4845-808d-5d1bd1a0ef80",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "75eeccad-ea0f-4b4b-9534-f3d8c8a03cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05881da-3408-44b9-8a9a-921565347deb",
        "cursor": {
          "ref": "b8c16de3-c0ca-42b0-886d-3c37b80b5ea4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "376fd7df-9a26-4ec2-8f8a-13705a856a06"
        },
        "item": {
          "id": "a05881da-3408-44b9-8a9a-921565347deb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fe0a3e7d-7eee-4b5b-b697-abd70a06b8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f87795-075e-4caf-9ce7-d86168dbf41f",
        "cursor": {
          "ref": "0b416b9d-ede9-46c5-833c-58d1bc8aa8ac",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "293a2959-8dbc-4db7-89c7-462922546f9d"
        },
        "item": {
          "id": "e9f87795-075e-4caf-9ce7-d86168dbf41f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "03863acb-7a58-4e7c-868a-05fcb943409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa648e4-5141-44ea-be90-a1ab7fcc3db8",
        "cursor": {
          "ref": "8541eda0-23fd-4608-bdfd-a5caba09eec4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "16da4216-b366-4ff5-8b0d-7072e30db1a7"
        },
        "item": {
          "id": "5aa648e4-5141-44ea-be90-a1ab7fcc3db8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "817b8510-d1b2-425d-a289-18de25bfff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9cd06f-3b4d-4d40-93d5-dfe5bef8dbea",
        "cursor": {
          "ref": "002fedd4-5b9a-4d92-9205-54f03e0dcf2b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ab37d9ce-fe83-4c2c-b4ab-6247d2245be2"
        },
        "item": {
          "id": "aa9cd06f-3b4d-4d40-93d5-dfe5bef8dbea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d19aea9-87b7-4f0e-99be-7679c5112b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6899882-0247-4c7b-b307-3c97f2eed72f",
        "cursor": {
          "ref": "4eed2f74-84fd-4d3b-a340-d5fa246011e1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3bae74b7-3dac-4c39-80c4-01d15764beac"
        },
        "item": {
          "id": "f6899882-0247-4c7b-b307-3c97f2eed72f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "da71e1e1-797d-4167-83c4-d9ade5c27c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a03d917-95ae-4779-9a2f-146c33cd6ca1",
        "cursor": {
          "ref": "ce6d78c0-fcee-4c91-a923-a08eda68b9ae",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8ca05d11-51d8-436d-b921-0b5ae3d1e781"
        },
        "item": {
          "id": "2a03d917-95ae-4779-9a2f-146c33cd6ca1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea5dfcb2-d1d1-4d53-a694-0b974d2933e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa99f8bb-cc93-4919-b0ce-fa27b9755891",
        "cursor": {
          "ref": "652e921a-2016-4b10-a09f-d8e018061e87",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "875f09c3-79af-4441-9f52-1cc31f2791a7"
        },
        "item": {
          "id": "aa99f8bb-cc93-4919-b0ce-fa27b9755891",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "87762d04-62d2-4afe-93cf-fea8ee56950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6107f81-a813-42af-bfcd-34683e5dd8c1",
        "cursor": {
          "ref": "2a88e7c0-ce20-44eb-a4e0-4617f5457a75",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1df51b98-3603-4683-bc92-e396b5c51a82"
        },
        "item": {
          "id": "f6107f81-a813-42af-bfcd-34683e5dd8c1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9be18cee-506e-4f5b-818b-f18f8e1fbde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfed177d-4400-4a49-92d5-046485129245",
        "cursor": {
          "ref": "fa3b2392-20c8-49dd-b9e4-4c289e152b5c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0d4e817e-8c5e-4030-bcfd-4ae86c15c3ec"
        },
        "item": {
          "id": "dfed177d-4400-4a49-92d5-046485129245",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cb62a007-4526-45d9-bd11-abdd3af92c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c1d5dc-3d22-4a2f-8fc2-7fe8421142cf",
        "cursor": {
          "ref": "29ab159a-2ff6-4d0a-aa12-bbfb5219cc72",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "68826a10-0aee-490f-81f5-16f1d308dbc1"
        },
        "item": {
          "id": "a3c1d5dc-3d22-4a2f-8fc2-7fe8421142cf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f2ab3915-d904-4b37-822f-c364693a524e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba2ed9-8506-4772-8706-280deb88af74",
        "cursor": {
          "ref": "eac390ae-8b21-4e88-a687-9d0842cf683f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc6a78f7-9bc7-4965-bb1d-8a55d095dac4"
        },
        "item": {
          "id": "95ba2ed9-8506-4772-8706-280deb88af74",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e7d6f9a-ebcf-4929-9bb8-965261102b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e63c51-a6ec-49eb-b336-1101f0d72d38",
        "cursor": {
          "ref": "fc667004-4d4b-49d3-a4a5-66276a238ec5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a4963c83-1e8b-488c-a3a6-9db521365eed"
        },
        "item": {
          "id": "02e63c51-a6ec-49eb-b336-1101f0d72d38",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5538af53-89df-4d65-bf6d-d56b973c9a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75a6c7d-e97e-49d7-a577-b64de0809fb7",
        "cursor": {
          "ref": "4e5597b3-5628-456c-8824-c86d3419f2be",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e074387c-18fd-4336-8d11-54d65cf04a07"
        },
        "item": {
          "id": "e75a6c7d-e97e-49d7-a577-b64de0809fb7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b506a3f9-3652-4684-b5b1-41c8d84e1ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b3f49-86e9-4e87-a04d-dacc2408e432",
        "cursor": {
          "ref": "5a17e5aa-35e7-44c8-912b-0bedbe32dabe",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "59cdfb75-1beb-4640-a81a-91d6f511461c"
        },
        "item": {
          "id": "b22b3f49-86e9-4e87-a04d-dacc2408e432",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "29caa97a-e593-4ac7-9b18-eb6a88d6656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee893423-11e3-4082-b061-6069cf4ab709",
        "cursor": {
          "ref": "63a20a44-f1d6-4b4d-bac5-45a8a22912f8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3f536ca7-1542-4432-abeb-96ebf98025df"
        },
        "item": {
          "id": "ee893423-11e3-4082-b061-6069cf4ab709",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "79544f92-3df0-491e-b3f4-496d55920ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1927a556-6125-48ff-9658-4a5427e505bb",
        "cursor": {
          "ref": "a85f2480-fc57-4742-9940-45e2ca26fad8",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c54da09c-dd8e-4ccd-8f3e-07f1198cdca4"
        },
        "item": {
          "id": "1927a556-6125-48ff-9658-4a5427e505bb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0cabd633-a163-466e-96cc-ae4ccd655d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b599b86-c6bc-4258-941c-c40c93525680",
        "cursor": {
          "ref": "211a4f7a-f910-474e-b6a5-c2477adbc34b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "356eb8de-d04d-42fa-99ca-c93529608608"
        },
        "item": {
          "id": "7b599b86-c6bc-4258-941c-c40c93525680",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7b7f5b9a-14c1-4d6f-a4c5-89a9c3d12738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18082b3e-065f-4edd-b4f0-dba98836f3ef",
        "cursor": {
          "ref": "4cf53396-3885-4d4a-8005-dfa730677159",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "67765c38-14b1-4e2a-810f-39e7e41909b8"
        },
        "item": {
          "id": "18082b3e-065f-4edd-b4f0-dba98836f3ef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "81e222a3-01f1-480b-ad0a-18c8d9667cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4437c5-a80f-4cd2-8e4a-3407eeb1f6f9",
        "cursor": {
          "ref": "60032153-49a6-47cc-9062-9b28c174abc6",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "105f8026-81c6-4754-8e83-5577c700161f"
        },
        "item": {
          "id": "8e4437c5-a80f-4cd2-8e4a-3407eeb1f6f9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "30c05154-22f8-45f9-96c3-2f6466f2933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76adc224-bdc1-4ab3-9034-1ecaedf6455b",
        "cursor": {
          "ref": "6c9bcd53-ab75-4f80-b66c-2f55b99feb1e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a04e3b9f-75d8-44e3-b7ae-680faec7a035"
        },
        "item": {
          "id": "76adc224-bdc1-4ab3-9034-1ecaedf6455b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e7f30b17-b66a-40d1-8270-895272b24d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7925e3-f482-40da-8e92-9692d7e453ca",
        "cursor": {
          "ref": "99f69af4-15e6-4343-a21f-7fac21681896",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c27344a6-995d-48ff-a63a-6e80c10c5c5b"
        },
        "item": {
          "id": "9d7925e3-f482-40da-8e92-9692d7e453ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "faa85371-f10d-426d-aa2f-28fc292a0290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455624b7-385c-4fc7-b582-6b440f743ac1",
        "cursor": {
          "ref": "479b970f-cf35-43e2-991c-97b8e8f18d08",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81b9e2da-2759-4fd0-acf9-c2004bf547f0"
        },
        "item": {
          "id": "455624b7-385c-4fc7-b582-6b440f743ac1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8d3f1b4b-299d-4b0c-b02e-08b1e8846e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9184f48a-c31a-4304-b195-bcd7327bc76b",
        "cursor": {
          "ref": "a483dbcc-8918-476e-97ef-4e9bd6117bd2",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ad6d5da1-b195-46d1-855a-2765ecc0b111"
        },
        "item": {
          "id": "9184f48a-c31a-4304-b195-bcd7327bc76b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "006efdd5-dd4b-4e65-a80f-a366cb976bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17c7e2d-c9e2-4a5e-95a4-10ebeb68b893",
        "cursor": {
          "ref": "a9d435a6-6805-45ab-ac52-49fcbfc36434",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "523cdbd3-03a2-4aaa-8df0-f904023a5acf"
        },
        "item": {
          "id": "a17c7e2d-c9e2-4a5e-95a4-10ebeb68b893",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5adf2b7b-2e66-41f4-b9ec-854a9acee985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd66a331-5b50-4fa2-b8a2-d37cf110c4a3",
        "cursor": {
          "ref": "11f28a72-0967-41d4-a57b-a0cf9c022162",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5b09fda0-f679-4fb0-9436-99cee56a1519"
        },
        "item": {
          "id": "bd66a331-5b50-4fa2-b8a2-d37cf110c4a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12b3c667-09f0-4730-aff4-5d67ea866bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35e4d55-17cf-4f0a-bba6-108abf0221df",
        "cursor": {
          "ref": "58956049-d775-41af-ba55-1387cbd4d2d1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6c2897b9-be73-485a-b622-2349e873e045"
        },
        "item": {
          "id": "c35e4d55-17cf-4f0a-bba6-108abf0221df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "22fbee78-26e7-4db0-91d5-4b53c890fe0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d53fbd-6357-4658-b508-a0f99ffc8c40",
        "cursor": {
          "ref": "5e303783-b46c-4657-8cb8-4a6087ad97eb",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "780f8899-7bc1-42c7-922a-612f6c348cdf"
        },
        "item": {
          "id": "47d53fbd-6357-4658-b508-a0f99ffc8c40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3e5b9e29-239e-4083-a014-a8dce3f2c1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5613a51-ca68-4b7b-b9bd-2d67bca80e22",
        "cursor": {
          "ref": "ee303e1a-172d-42ac-8938-249f6c866dd1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5660d88-171c-4e83-8e2f-9ed90ecf37f7"
        },
        "item": {
          "id": "a5613a51-ca68-4b7b-b9bd-2d67bca80e22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ca67003c-563a-4c9f-bd0d-5b76be25edf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b76bd-ead7-44eb-b83e-a4bc3008604e",
        "cursor": {
          "ref": "dd8ecec1-3d77-44fa-8d12-ace707ba07cd",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eabf8a65-04ef-4e37-bd17-308ffb6ded3e"
        },
        "item": {
          "id": "083b76bd-ead7-44eb-b83e-a4bc3008604e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "861c578e-63ee-4a3a-a111-8fa521e36574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d6b6af-89b6-43be-a1f3-fcbd2e2f8724",
        "cursor": {
          "ref": "61bfe875-c4cd-4715-a37d-d1d0d7d4ef71",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "40b6ff8a-a059-4f07-930a-caa683236bfa"
        },
        "item": {
          "id": "50d6b6af-89b6-43be-a1f3-fcbd2e2f8724",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "faf34049-35d9-4bc6-8fa2-650b26abb8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf89bda-4d60-4d1e-afe1-239cc8779da8",
        "cursor": {
          "ref": "51de147e-8ab3-4572-b719-8063ea5cf3f9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f9321a74-e79f-4b88-a034-305a8607be71"
        },
        "item": {
          "id": "ecf89bda-4d60-4d1e-afe1-239cc8779da8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6605b9c4-db5d-4705-828c-f158aa53ee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb0c95-e95a-4987-be2c-55f09f3e8d05",
        "cursor": {
          "ref": "0a7af393-f0c2-4ea9-8b68-be84f161d8a7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0758aa48-f509-4929-ac5e-7b14e1c1fd32"
        },
        "item": {
          "id": "fcdb0c95-e95a-4987-be2c-55f09f3e8d05",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5584c36-c3dd-4711-9fab-b4f78eb5af8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d80aca1-024b-452d-a95f-f5badf6850a9",
        "cursor": {
          "ref": "cfec8375-0167-4e1e-8785-af8de66857e0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "39022af7-6536-4cdc-931b-f0e93e4ee4ac"
        },
        "item": {
          "id": "2d80aca1-024b-452d-a95f-f5badf6850a9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7179c66c-cd42-4a50-813d-2de458d988bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248810c7-ea28-4c20-8d8f-182942a48385",
        "cursor": {
          "ref": "6c518ee6-0e31-4c55-bf85-2ceab244c71f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5e4de1cb-7444-437f-8719-7eac44f752eb"
        },
        "item": {
          "id": "248810c7-ea28-4c20-8d8f-182942a48385",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "953605e9-933f-4a7f-b880-b679134a47ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6928755-9f90-4bea-804c-3d4872aa57db",
        "cursor": {
          "ref": "5c8f315b-cc3a-43cc-aab7-5b510379fbb4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ba001e4b-5f12-4359-9496-4f126dc5234e"
        },
        "item": {
          "id": "e6928755-9f90-4bea-804c-3d4872aa57db",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0010688b-347c-4854-ac95-1627c2837046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810abe84-1b5c-417d-bf66-a17ddd625f33",
        "cursor": {
          "ref": "fee5a32b-da85-49ff-bd37-49bf45fb2f29",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ef367d69-ce75-4f60-af32-6897de2eec0f"
        },
        "item": {
          "id": "810abe84-1b5c-417d-bf66-a17ddd625f33",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a5e0c58d-0aef-467b-a94b-0a4d815bd2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce97f82-d1c9-4a43-be51-febf774f9df2",
        "cursor": {
          "ref": "1bc0df4b-a947-42db-a1f0-023079e3defd",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f8c9bcc1-7538-4f6b-8eaa-c6154fcf4ddf"
        },
        "item": {
          "id": "cce97f82-d1c9-4a43-be51-febf774f9df2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0c0b6ea8-0a93-46b9-9c8f-61905c2df30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd6595-7bc9-46b5-ab2e-5999e74f72ce",
        "cursor": {
          "ref": "2297e7db-eeb3-48e9-a733-f59d5f5fdc18",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5a9376e7-63a7-43ef-aa06-cad69f45d4a1"
        },
        "item": {
          "id": "96bd6595-7bc9-46b5-ab2e-5999e74f72ce",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6274cc72-98ed-43f2-94d8-88cbbad4e7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b34fa8d-299b-4328-8d82-57bb344da081",
        "cursor": {
          "ref": "d1d40847-f5ff-4814-9657-42dfd2127abd",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7b751128-bf62-4d0e-b754-faac37f4266e"
        },
        "item": {
          "id": "2b34fa8d-299b-4328-8d82-57bb344da081",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aeddeb1b-2bef-47e4-af95-2e5a8a65c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f078f02-f03d-46bf-a84a-d18c6575a099",
        "cursor": {
          "ref": "89990414-b316-4012-b892-b07705d6384a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "efbf48cb-2cf4-4fed-97c1-115c6beb0974"
        },
        "item": {
          "id": "0f078f02-f03d-46bf-a84a-d18c6575a099",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "674e887e-e47a-4733-abd5-7d532f66d445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca4e727-af1a-4a36-89b0-5bb4733b62d2",
        "cursor": {
          "ref": "e25e1217-06c5-4591-9379-4395802449bd",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "abbad727-db0c-4b59-8ca2-f3bd016a663b"
        },
        "item": {
          "id": "5ca4e727-af1a-4a36-89b0-5bb4733b62d2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4a21abdd-4a6d-4d49-932b-e4d0f92357d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc0bfdf-4e64-4414-9783-11ee1013ee5b",
        "cursor": {
          "ref": "8e971772-02d6-41b0-8bb6-bf09e963d243",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cb50da43-2fd9-4520-bb95-0f76542faa6f"
        },
        "item": {
          "id": "bdc0bfdf-4e64-4414-9783-11ee1013ee5b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6b8d1d75-9c35-45d7-b0ed-9bac6f45cc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c600ab4-8ca5-4367-a796-085fa3194f0b",
        "cursor": {
          "ref": "5a683c0b-3bba-48d2-b070-97224c14c3ef",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "43207996-e858-46ba-bdd8-2e7b6d041cdd"
        },
        "item": {
          "id": "2c600ab4-8ca5-4367-a796-085fa3194f0b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a79832a1-cd99-472c-b047-e403849c823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae7490-e163-4a39-8a8c-30db9abc67df",
        "cursor": {
          "ref": "12787be9-88f1-4af3-a799-20831002c5be",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "95497bf9-64cf-481b-9fa9-521c0a8dd413"
        },
        "item": {
          "id": "afae7490-e163-4a39-8a8c-30db9abc67df",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7cda72b7-2ab9-47b1-a07d-b5f0e1275f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e42bc71-8b24-4490-a642-a378495d50b9",
        "cursor": {
          "ref": "172d8077-245d-449e-88d5-cab3e45bcf6c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "87eaf9f5-917a-4772-9006-655c3d50118a"
        },
        "item": {
          "id": "7e42bc71-8b24-4490-a642-a378495d50b9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b0cf02eb-4a1f-404b-a5cd-124252376eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb08f868-9f1c-45ee-8b27-7d5a5afa400b",
        "cursor": {
          "ref": "2241e51c-0c95-49bc-a852-b094c3c6b9c9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da6dfee5-df99-4daf-8165-fffaad51a170"
        },
        "item": {
          "id": "cb08f868-9f1c-45ee-8b27-7d5a5afa400b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5f308bf5-78ef-48cd-9b76-33fa10e17884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09794d24-bcf7-4401-9a18-995214e4817a",
        "cursor": {
          "ref": "ad0f88cc-f40a-4d89-8bcd-576b7c25fd31",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "317fa9fc-3055-43c9-812c-1123ccf5e722"
        },
        "item": {
          "id": "09794d24-bcf7-4401-9a18-995214e4817a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8bf464ba-402b-449f-97f6-fe6488bd1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81d9ba3-0223-4814-b233-ea2d86293fe3",
        "cursor": {
          "ref": "fe27f102-4813-4ed3-be97-dddd286b60ed",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "37c2e0a0-2bc9-434b-9ede-e4ecf15d258c"
        },
        "item": {
          "id": "c81d9ba3-0223-4814-b233-ea2d86293fe3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5091e50f-8a4e-41c2-b53d-e7bda6ed9af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031e8c22-3a23-4a22-b624-da7118583745",
        "cursor": {
          "ref": "0cfd909c-c461-4d77-933a-70b5df505332",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d2aa6475-4b42-4de3-9122-f4628829b7de"
        },
        "item": {
          "id": "031e8c22-3a23-4a22-b624-da7118583745",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ab3c78cf-264c-4def-a470-15f382a9bcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d142b-cbb5-40a8-87cd-4898bae520df",
        "cursor": {
          "ref": "1121c68d-07b8-4706-a636-37eb751b3601",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "73859921-e0ad-4e56-bd4b-f11f0fd82340"
        },
        "item": {
          "id": "055d142b-cbb5-40a8-87cd-4898bae520df",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ae127d41-6d5d-4793-8f97-178a3c151227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0415961-3f47-4870-ae33-8c607b4deefb",
        "cursor": {
          "ref": "81ce95e7-d4b1-4ea1-9e1f-351f544d53bb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ecee3239-fbb9-405e-b101-e2da9fe7dc5b"
        },
        "item": {
          "id": "f0415961-3f47-4870-ae33-8c607b4deefb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb2eba40-de64-44ed-8330-dd1fc8061e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15170576-f15b-41fa-9467-d6a636b43536",
        "cursor": {
          "ref": "b705f5eb-56ae-4527-a57a-a05df35d9928",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "75c32789-fa14-4cfc-a518-00dd814eafa5"
        },
        "item": {
          "id": "15170576-f15b-41fa-9467-d6a636b43536",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bf285b42-d50c-4ad8-97f9-2696bdd5bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b64b167-7f97-488e-ae5b-b82991ece37b",
        "cursor": {
          "ref": "f0843e48-e976-4ac5-98fd-94d6665d31b7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "90032f46-c873-4037-b70e-8e7b949e316c"
        },
        "item": {
          "id": "6b64b167-7f97-488e-ae5b-b82991ece37b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c29c23ff-2125-4e52-b936-e71e7292214f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad418b-c1bc-49cf-b80f-4627096f8b2b",
        "cursor": {
          "ref": "1ea5b13a-1d0b-4849-ae51-3ae942970839",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d2feb298-e70a-4529-9899-4738c7fd423f"
        },
        "item": {
          "id": "8bad418b-c1bc-49cf-b80f-4627096f8b2b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "94a3ffc9-faa5-47ba-ab78-c3e07d897bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c34e1f2-90b7-420c-aaff-fab19a501262",
        "cursor": {
          "ref": "e84a0f2e-3e76-4f2c-a96c-139df72f892f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a6a0ee5a-9b7a-40f9-aa14-a4a82d7a313e"
        },
        "item": {
          "id": "0c34e1f2-90b7-420c-aaff-fab19a501262",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "691ca693-8975-436c-a177-6ee201eea4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c8794f-9a39-4291-986e-86c5d3caae0a",
        "cursor": {
          "ref": "b3e3e199-65e4-49a1-92b6-cc20c85965c3",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "82e20ea3-e418-4e20-8af8-7b0982b5f392"
        },
        "item": {
          "id": "28c8794f-9a39-4291-986e-86c5d3caae0a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06ed413d-39b1-4d66-8302-d7270f328144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e190c7af-af5d-413f-b35e-8f899fa070c4",
        "cursor": {
          "ref": "70a2732e-6153-46be-ae99-f3497315cbff",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ed6ede2f-21b2-4117-b0b1-7d257f7144a9"
        },
        "item": {
          "id": "e190c7af-af5d-413f-b35e-8f899fa070c4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d4ab45a9-63d8-4c0b-83e6-7a2a09870646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b8f299-0add-4e94-a680-763bbcc3d84c",
        "cursor": {
          "ref": "127f3007-3786-4793-8b32-d8fcc1f9c3ad",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f5c4267e-2061-4027-a7ea-07107bb096a7"
        },
        "item": {
          "id": "f7b8f299-0add-4e94-a680-763bbcc3d84c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7bd8df97-5965-4a1d-9822-c725befb84ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa44629-41e0-4d23-aa49-1bab6201e0cf",
        "cursor": {
          "ref": "a3347a47-b0aa-44b8-b8f2-d66a3aabf2ca",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b00ae627-851c-4799-9d6d-ded426cabe64"
        },
        "item": {
          "id": "3fa44629-41e0-4d23-aa49-1bab6201e0cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dd0f74c5-ceb8-41bd-a347-bd08abfbab94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cbbc30-a010-4520-97e9-a62dfd1067d0",
        "cursor": {
          "ref": "cdedcfe9-ccac-4bfd-9c3d-1da4519c864a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b37a831-e999-4f5a-8bd7-89d4d5cba152"
        },
        "item": {
          "id": "29cbbc30-a010-4520-97e9-a62dfd1067d0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "54a18e63-4637-4c4b-b2e0-0edf5b4fc085",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3defa17e-9504-489c-96d3-c36fc6627f0c",
        "cursor": {
          "ref": "b6fc8c77-a5ec-4593-b1ad-73c3b8cc8afe",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "54c7707d-f997-4ce5-8411-af931ec219b8"
        },
        "item": {
          "id": "3defa17e-9504-489c-96d3-c36fc6627f0c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b287d0ae-c241-4b47-af17-10f37b1b7ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "935f5c1e-7a9a-41b4-b8ca-b06561a92e33",
        "cursor": {
          "ref": "cd5551a9-8717-4340-970f-21943069a689",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "30db156a-415a-4a79-b3fa-f095b694f1b1"
        },
        "item": {
          "id": "935f5c1e-7a9a-41b4-b8ca-b06561a92e33",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cedb1e65-07a2-49a9-940e-da962329e2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "15b3f03c-5c47-42dc-bd8d-9a07ae463b18",
        "cursor": {
          "ref": "e327b23d-8613-4133-94be-7c8e670b5a80",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "284bbbe7-891d-48c1-8aac-5dda3f51e9a8"
        },
        "item": {
          "id": "15b3f03c-5c47-42dc-bd8d-9a07ae463b18",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f08e8a5-7613-4ee9-9dcf-fb34c90e43e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d9de4893-b8c3-43b3-86a5-6a8423c6dde0",
        "cursor": {
          "ref": "3711b9e2-7e8e-487d-9d5a-b0322f0da02e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a7ab89a6-174c-4fd3-91d8-8fba82d6832d"
        },
        "item": {
          "id": "d9de4893-b8c3-43b3-86a5-6a8423c6dde0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8c203eba-f5f5-49e1-b2e1-c49529091cef",
          "status": "Created",
          "code": 201,
          "responseTime": 4364,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c81580d-e054-463f-8b72-58128018a316",
        "cursor": {
          "ref": "9e7b8272-5e80-4f7e-8a93-81d0ef7d57ea",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "68ed7aeb-5a37-46ec-b672-b07bddd9473e"
        },
        "item": {
          "id": "7c81580d-e054-463f-8b72-58128018a316",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eb03051b-0966-4fb8-830c-127e68467644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1941c802-6189-4e35-a34a-8f182bb92957",
        "cursor": {
          "ref": "99d8f515-9428-48d3-8798-61749d9ef687",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "256d3355-0ce6-4744-8a60-5f6b7a177fd4"
        },
        "item": {
          "id": "1941c802-6189-4e35-a34a-8f182bb92957",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d6ddcd12-59fd-4159-a6ec-8fa14b1059be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f313b40f-2203-4355-9eb9-f763f184d368",
        "cursor": {
          "ref": "be642f1a-8fc4-47ea-9d9e-43bebe48bbfc",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d962c805-31f8-4554-94d6-92c964feed5a"
        },
        "item": {
          "id": "f313b40f-2203-4355-9eb9-f763f184d368",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "db5e809e-aaae-483f-8b99-1a9669a7164a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b94b9a-acd0-4ea6-bb8d-a6135e9b4cce",
        "cursor": {
          "ref": "ddaa048f-2145-4521-9ed3-2c48272552d2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "568ccf1f-2174-43a5-895c-a4a3c8e80d4c"
        },
        "item": {
          "id": "37b94b9a-acd0-4ea6-bb8d-a6135e9b4cce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "48a9e44f-9c57-440d-8487-eb3eeeed6a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971f3253-243d-4429-83c3-634a92493756",
        "cursor": {
          "ref": "718a087f-a403-43be-a03d-afd75a692b9e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7f00f7c0-a825-4081-bc2d-358e0f8c08b6"
        },
        "item": {
          "id": "971f3253-243d-4429-83c3-634a92493756",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "007fa495-bfc2-4dbb-9d07-add625db32ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f68925-6d78-46b7-a61b-a65c1805febc",
        "cursor": {
          "ref": "6a473f9b-a04c-4384-b260-b4922dd2de2a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "efe94e04-84f8-499c-acc6-820df6bbfbfc"
        },
        "item": {
          "id": "d6f68925-6d78-46b7-a61b-a65c1805febc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "065b94c5-f4c2-42de-927b-6ac3196ce215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8b0614-2df1-4f00-b62a-2fcd193d8b90",
        "cursor": {
          "ref": "566cf181-eefa-48d4-a207-1effc81f0082",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "707aa16e-dab6-4e2c-8c65-5874e286c974"
        },
        "item": {
          "id": "1d8b0614-2df1-4f00-b62a-2fcd193d8b90",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ab690eb8-ae35-4dff-957e-ef55d1f0cef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878a8379-36cc-42eb-9761-ec73f1026fdc",
        "cursor": {
          "ref": "0a243859-a4cf-4ac3-8a03-313799092f1a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "19f3d45b-1299-4fd0-8dac-7ffc29b29e88"
        },
        "item": {
          "id": "878a8379-36cc-42eb-9761-ec73f1026fdc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c981d973-08c9-4fb3-9c80-8a2015c41628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255765e3-4825-4461-8f90-f52a73ee725b",
        "cursor": {
          "ref": "2eabd681-1ec3-46f2-9962-b0a9bc6b22ca",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1df0dd8-e10e-4822-8601-db3cb81ce182"
        },
        "item": {
          "id": "255765e3-4825-4461-8f90-f52a73ee725b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dac877cc-2792-4ce9-9510-19bb455d6115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653aa924-ce82-49b1-9a55-d2fd0e2b3d55",
        "cursor": {
          "ref": "ab2a3d6d-a7ba-4842-8dcf-a1ad4b56713a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b53878e1-eb35-414e-b8b3-a66d3f88d9fa"
        },
        "item": {
          "id": "653aa924-ce82-49b1-9a55-d2fd0e2b3d55",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "346604b9-c25c-4747-ad62-7d4dc3471a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92057dd4-bc20-4fb0-8b1b-46a8ae38d782",
        "cursor": {
          "ref": "990a7c8b-8426-4243-80e9-eca2f01320f2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef9428ae-a0e3-4135-942b-79770d59fc4b"
        },
        "item": {
          "id": "92057dd4-bc20-4fb0-8b1b-46a8ae38d782",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ecbaf153-f1ae-4b5f-98cd-b500909dd100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd38677-7cff-4176-8fa7-d1b1ec5cd43b",
        "cursor": {
          "ref": "c2b137c6-e5b6-4435-bd1d-cad14c95c3a3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b89e16b4-5b5f-4014-aff7-53af3f37fafc"
        },
        "item": {
          "id": "bdd38677-7cff-4176-8fa7-d1b1ec5cd43b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a3c652ef-865f-4919-ad5b-ba0e6f1b798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f62e3f-8a28-41cc-b00e-25821a0eccc8",
        "cursor": {
          "ref": "553ed48e-cc71-4b5d-80d7-f7b8b46f43c9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a5404140-5893-4f84-ad50-2b29bbae6fde"
        },
        "item": {
          "id": "a9f62e3f-8a28-41cc-b00e-25821a0eccc8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6fa81115-ed36-43b6-b9f9-cb6be5ce7a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0467a06-d760-4ea7-b2a5-330efbd47197",
        "cursor": {
          "ref": "c04aef0c-9a22-4eb4-9f4b-4563cb3855a7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "627d5218-5b9b-4430-a68d-d99024bd3994"
        },
        "item": {
          "id": "c0467a06-d760-4ea7-b2a5-330efbd47197",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5969e909-0cab-4a0b-9565-742bc742e4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcd84ac-c1d4-4e00-bc0e-214aa1d68c09",
        "cursor": {
          "ref": "9afb7f28-d1c6-479d-8876-2e1d3d0ca84a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3d6e3a7e-4bc0-442b-8827-615cf67f423f"
        },
        "item": {
          "id": "8bcd84ac-c1d4-4e00-bc0e-214aa1d68c09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2c226dd4-763a-4eeb-9c29-5349c66352af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad898a1-3f2e-475d-a301-bfd2f300cb29",
        "cursor": {
          "ref": "2b225c25-2a04-49ee-8f2f-e0704afd5e27",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a8facd7c-ff62-4d70-a4e8-49b8d7c0dcc6"
        },
        "item": {
          "id": "0ad898a1-3f2e-475d-a301-bfd2f300cb29",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb3244a0-55dc-463a-9a0b-631fa1916416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa641c9f-0639-4f15-b484-06e3afa7f5ea",
        "cursor": {
          "ref": "0c4e9292-dc29-4df7-9b52-34478829879c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dd164857-2569-468c-85ea-0d5c347b76da"
        },
        "item": {
          "id": "fa641c9f-0639-4f15-b484-06e3afa7f5ea",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "35c4f7da-c19e-4bc2-9549-c6a48b7fd295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b51224-d376-42e7-954a-8d1e9220f105",
        "cursor": {
          "ref": "83f56a00-811e-4b96-8d0d-2491702024f5",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b7cd3ad4-54ac-4a96-a9ae-0176da2b2530"
        },
        "item": {
          "id": "c2b51224-d376-42e7-954a-8d1e9220f105",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a167ceb7-cc68-4c84-b597-1e832c56214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6969b068-c682-4d0b-aca3-6422898847a5",
        "cursor": {
          "ref": "484bfb0e-b59c-4d98-97e6-b6fb7e0000c9",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "92a8ffb9-e1fc-44c6-8e52-c18021df6edf"
        },
        "item": {
          "id": "6969b068-c682-4d0b-aca3-6422898847a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "14a4db90-00d1-4cc5-b773-051a64aba57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e184d-49dd-41b7-adce-5848aeaa0f51",
        "cursor": {
          "ref": "7a4399ce-dc44-4de7-921d-8f7456c222aa",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b05e57df-7d42-4d1f-9d7f-15cceb936657"
        },
        "item": {
          "id": "c54e184d-49dd-41b7-adce-5848aeaa0f51",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6eb14033-de8d-4acb-beeb-9f28e01fe7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b503fe-7ba4-46ac-9166-3e75862e613a",
        "cursor": {
          "ref": "8182bfd6-ac92-47ae-977b-12932406fcb5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c701f51c-0a30-46ac-9b75-6290670f9126"
        },
        "item": {
          "id": "f4b503fe-7ba4-46ac-9166-3e75862e613a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ba650d2e-c1b7-4d34-b941-0de6ce98738d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d715c9e7-f156-4c46-8105-fa03a795f265",
        "cursor": {
          "ref": "dbda1753-e928-40ac-ac0e-0bb28be42a76",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "518851cf-898d-4cb4-9900-1c668430ce73"
        },
        "item": {
          "id": "d715c9e7-f156-4c46-8105-fa03a795f265",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fffc27fa-a7a8-4fff-b924-b6fad59ae5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a193e99-c7c1-4923-bf68-5bfc5c2624ab",
        "cursor": {
          "ref": "218d6493-f657-4c7a-9c90-3eaad73da4d7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3d8fb8c1-3e56-4745-83b3-1b5e25f09673"
        },
        "item": {
          "id": "1a193e99-c7c1-4923-bf68-5bfc5c2624ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6d5c9d98-e766-4f55-9a37-1096544e0e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebc95ab-fe0c-48f8-b42d-8a37661bed74",
        "cursor": {
          "ref": "d2eba613-07f9-408b-8b52-70326dbf5572",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93f469fb-aa8c-4a14-b632-0f804c0844f2"
        },
        "item": {
          "id": "5ebc95ab-fe0c-48f8-b42d-8a37661bed74",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b35a7fa6-48e8-4dbe-9e00-b2c5427d3b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce12c9a-d69c-4ed0-9c65-862c239d5926",
        "cursor": {
          "ref": "15b5a7cc-7496-4ce8-b8b9-6dbd27e1f7e6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aeef1342-bf02-4db2-b07a-0bcd43e1aecd"
        },
        "item": {
          "id": "7ce12c9a-d69c-4ed0-9c65-862c239d5926",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8a8fba7-4f63-409d-9860-6f39ca941c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9989de-0580-4649-ae27-750629c8c8cd",
        "cursor": {
          "ref": "9fee0b07-e1ec-4223-ba30-554043f4113a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4958e77c-eec9-4b0a-8981-dd01d818b0d5"
        },
        "item": {
          "id": "9e9989de-0580-4649-ae27-750629c8c8cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "71d97d2c-69f2-4618-a6ab-1a7694d786cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f0dd4-e24b-44c1-b12a-844fdcddd05b",
        "cursor": {
          "ref": "02809e03-701d-46df-b4e9-be9a8bad3e81",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "336f7bca-2c4b-46f4-aa3b-07c051e633c1"
        },
        "item": {
          "id": "5f5f0dd4-e24b-44c1-b12a-844fdcddd05b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f15023e7-6e8b-4584-9943-b60aa5e811b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253f783-7b53-49da-a5a7-08b33d0e0625",
        "cursor": {
          "ref": "4a29b134-f0ac-47be-895d-ddf9737627f8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6aebaf6c-8206-4890-8e00-a56138f4281b"
        },
        "item": {
          "id": "8253f783-7b53-49da-a5a7-08b33d0e0625",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ac7eafad-f72c-41e0-b91c-552de1e2efeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16d1c49-76bd-47b2-943c-9391fd5a0f93",
        "cursor": {
          "ref": "494720ba-8cec-4134-9df4-256acf6b545c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c3af2b5f-a418-4669-acbe-d0dba95639bf"
        },
        "item": {
          "id": "b16d1c49-76bd-47b2-943c-9391fd5a0f93",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0d7a940d-530e-455c-8210-f0a3462510d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29d617d-795a-4bc3-8eff-a76af7b91f75",
        "cursor": {
          "ref": "c2bfe0cb-92f5-4006-9d3d-ed9f2e9c7574",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3dc196cc-1c58-4dac-bed4-e684d80a76cb"
        },
        "item": {
          "id": "b29d617d-795a-4bc3-8eff-a76af7b91f75",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1b6f3181-f60f-4510-8993-31e0ae9037e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33232d0c-da00-4e44-b73c-7c33d637b03b",
        "cursor": {
          "ref": "b28361a2-f985-48be-9721-bee230bb1b6a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1099b461-8697-4ca1-9d74-3bef16173fab"
        },
        "item": {
          "id": "33232d0c-da00-4e44-b73c-7c33d637b03b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b45477db-6e17-4e29-8e55-3b64a7c6890e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f9d7e7-4a56-4d08-ae2b-97fe4c715723",
        "cursor": {
          "ref": "f0e0ad7e-21e3-47ec-8646-fd0a67b4290d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d6e06f10-8a49-4ed2-8be8-b99f727500fa"
        },
        "item": {
          "id": "36f9d7e7-4a56-4d08-ae2b-97fe4c715723",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6b8f7a7b-9c99-4ced-a53d-b6edfa74699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac08064-169a-4ebf-8355-86009b222dcc",
        "cursor": {
          "ref": "f472fc2d-1eef-460e-80b8-cadf21fd686e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f6fa1f52-6dcd-484e-8f3b-f550b19ae3f0"
        },
        "item": {
          "id": "dac08064-169a-4ebf-8355-86009b222dcc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7b1d9c08-97db-4c40-9f99-831db3e19a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081c31ab-245f-4a72-9dfd-84307a1037a4",
        "cursor": {
          "ref": "f45390cb-8a5c-4c29-96a1-8be90152e7b5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "267d79fc-c4bd-4582-af67-15492d24b2a0"
        },
        "item": {
          "id": "081c31ab-245f-4a72-9dfd-84307a1037a4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "42d61631-cc69-4364-b71b-f7e2d0c983cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444089ab-6d9b-45b4-8260-762d6d67f246",
        "cursor": {
          "ref": "df4afbe5-139d-46a6-9f41-bc4de7269a7d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "17fa587b-5f9e-4545-900d-1970269a4683"
        },
        "item": {
          "id": "444089ab-6d9b-45b4-8260-762d6d67f246",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "284df2d5-be91-4154-a92d-f9b05892ada2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21f115-0462-4f62-8cfd-a0bc09717ccb",
        "cursor": {
          "ref": "259feccf-bc17-40db-b700-d58be9729ce9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "382fd886-1fb1-4b28-a3db-b2053c26bcb9"
        },
        "item": {
          "id": "cd21f115-0462-4f62-8cfd-a0bc09717ccb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e2de81c-514b-4346-9c75-e6f8fe7f2f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b8107c-847e-4acc-aa86-f43131eb334e",
        "cursor": {
          "ref": "e1398180-75fc-4da7-b5c9-dc617d55995d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "57009c2b-b857-4183-9e6a-60ee6c5bb2f0"
        },
        "item": {
          "id": "b1b8107c-847e-4acc-aa86-f43131eb334e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a30e4af-a0f9-49a8-99eb-c039c876edf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c9e44b-1868-4c6f-9708-635c51f6916d",
        "cursor": {
          "ref": "67202ca8-d05c-4f94-8ebd-d524eac02a61",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f03c627d-ef05-4327-9cc8-4e461c0cd836"
        },
        "item": {
          "id": "15c9e44b-1868-4c6f-9708-635c51f6916d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "08a1280e-3f6f-4915-9976-a538b7d89f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b90b72-01d5-4c1b-b8cd-2c543f0993ad",
        "cursor": {
          "ref": "05131b65-3745-4ab5-bae2-f57535bd97db",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "735a7cec-b827-424c-b73f-ec760ade707b"
        },
        "item": {
          "id": "77b90b72-01d5-4c1b-b8cd-2c543f0993ad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "478ceb0d-f339-4490-9783-31f00c34ccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da31086a-dc6b-457d-8d70-b7b2d2bd7e11",
        "cursor": {
          "ref": "69ec882d-6664-4d1f-b232-8ff2f6a6d0bd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "06b423eb-b0da-42ae-96e8-a5f92d20ae3b"
        },
        "item": {
          "id": "da31086a-dc6b-457d-8d70-b7b2d2bd7e11",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "089ad38e-32d8-4d37-bbba-c92ad36662d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9b5f1e-4937-47c7-958b-671fe1f61b2d",
        "cursor": {
          "ref": "7d5bf5fc-0703-44a1-85de-abd27462753e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "615df4eb-33e9-478e-8c48-b148e505d580"
        },
        "item": {
          "id": "9e9b5f1e-4937-47c7-958b-671fe1f61b2d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bd7bfa79-a4f5-4412-a445-e96fb8fa7cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72631325-5d7b-432c-b37e-2b8803a43fff",
        "cursor": {
          "ref": "2c771c74-cd26-4272-957a-a8cdaca9eb63",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f8e710e4-2351-4153-b5fc-297a4db4914f"
        },
        "item": {
          "id": "72631325-5d7b-432c-b37e-2b8803a43fff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d533e551-0668-4433-974a-5d96b75dd46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9732fc1-fe89-4d87-8462-8702c9373e56",
        "cursor": {
          "ref": "af8b4834-e687-423d-9f24-dfe5e74c54a2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4c83394c-64b5-44b3-87de-1245cf227972"
        },
        "item": {
          "id": "e9732fc1-fe89-4d87-8462-8702c9373e56",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fa957e16-83ff-4b46-bca2-8670bf670cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcd8676-c23f-420e-8e87-40bb6d7c5ad2",
        "cursor": {
          "ref": "d64bce75-bc78-4c76-9abc-08638a9236db",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "90198068-ce56-4ac8-804b-2ec9aa543738"
        },
        "item": {
          "id": "9dcd8676-c23f-420e-8e87-40bb6d7c5ad2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb3a8b96-7a1d-4065-b93a-0aa90ce1f73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ebeece-48d4-48ec-ab21-87cefeec4864",
        "cursor": {
          "ref": "932a0236-ff4e-4231-a249-429c0d09f8cc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "96be84ec-86e3-4a8c-8b9c-cbb6a654836c"
        },
        "item": {
          "id": "67ebeece-48d4-48ec-ab21-87cefeec4864",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "12fc43b4-86f5-436f-b7cb-42aade8ef6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83faddf-bd5a-4dae-9fbe-c7b079d808ad",
        "cursor": {
          "ref": "f100310c-76a4-449a-accf-f619f22025dc",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d68cb28b-3153-4374-b469-f517319c4f9f"
        },
        "item": {
          "id": "e83faddf-bd5a-4dae-9fbe-c7b079d808ad",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f62aa0c-b04e-41e8-8f59-45545b0849b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3715a576-9851-418f-95c6-1493d2c6026c",
        "cursor": {
          "ref": "972de17b-21f4-4810-a3e9-c9a4f6af6cec",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4643839d-9830-440c-a4d9-38431b2c64a1"
        },
        "item": {
          "id": "3715a576-9851-418f-95c6-1493d2c6026c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d0cf996e-8032-4e4b-9b4b-fcf31f6aa044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a3cfcf-a7a8-4008-af69-6cbe1d5cb737",
        "cursor": {
          "ref": "365718d3-4638-4a90-8af8-b964223e03e5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "09cda615-565e-42be-b0ee-596e932bfccc"
        },
        "item": {
          "id": "c5a3cfcf-a7a8-4008-af69-6cbe1d5cb737",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "959283c3-8e77-4d77-af9f-9e75cf7bdead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a83bf5-85f4-48c9-b942-98c749ba45eb",
        "cursor": {
          "ref": "4ced4c13-2a3d-4848-98f5-57401db5178a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5619e0bb-15ea-43ea-80db-6563e111876e"
        },
        "item": {
          "id": "e3a83bf5-85f4-48c9-b942-98c749ba45eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b775118-ed62-4b22-92a8-1987a15da915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79347bb0-7406-47e7-9eb7-2c48e878ac9b",
        "cursor": {
          "ref": "5662b613-1a18-4afe-b6b6-0c60bc70e704",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b9c890f2-f2d8-41b6-b42e-f4be559a6d95"
        },
        "item": {
          "id": "79347bb0-7406-47e7-9eb7-2c48e878ac9b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0642b672-f535-4cca-89ee-6382daca8b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c6e719-1248-4135-b272-4f0ebf99ac78",
        "cursor": {
          "ref": "f1d96c47-87cc-4828-afa1-37afd525df0f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "62e30da5-c11b-45fb-a883-acc7e19678f4"
        },
        "item": {
          "id": "c7c6e719-1248-4135-b272-4f0ebf99ac78",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c7812395-e97b-4b87-baf6-52c4b2726928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f953420-8785-4333-9c13-af35334de9b8",
        "cursor": {
          "ref": "5ec92476-55b6-4799-a883-19998f76ebeb",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b7558aca-aabf-4e81-b760-b0dbbbee65df"
        },
        "item": {
          "id": "4f953420-8785-4333-9c13-af35334de9b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "677904c3-eeed-4566-b218-5c1e5881ed81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4fa5b1-158e-42a3-853f-2a927f66ebff",
        "cursor": {
          "ref": "17e7c278-05d0-41a5-8ac3-762ad431eacf",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8ace3070-90bd-4fc5-a031-9a4d02aad5a2"
        },
        "item": {
          "id": "af4fa5b1-158e-42a3-853f-2a927f66ebff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "166656a3-8f20-45d7-97d7-f760ee9d551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725c6c1e-0717-4d2c-a85a-5aa1d193332f",
        "cursor": {
          "ref": "8fbeb345-232a-422c-a64b-23ee4c6e885a",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98d14d85-56fd-47ea-8289-2dfc4c8cb234"
        },
        "item": {
          "id": "725c6c1e-0717-4d2c-a85a-5aa1d193332f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53d744bc-020c-436d-a0fc-5c413f27806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c69cee6-8016-484c-a69d-4dc732a698aa",
        "cursor": {
          "ref": "f75ce205-2bac-4666-8382-8251dffed2c1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8fc35d12-8dae-4f07-9934-ba67073724f8"
        },
        "item": {
          "id": "6c69cee6-8016-484c-a69d-4dc732a698aa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "56a04761-bef0-4985-a35e-45ded1de32e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95958184-d74e-4943-97e8-a64882307612",
        "cursor": {
          "ref": "4f0a90d9-a77e-4c9f-8610-5f6a314a2b6c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2b634465-0cc3-4a85-9035-5ecce3b77b01"
        },
        "item": {
          "id": "95958184-d74e-4943-97e8-a64882307612",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "511c51f5-049c-491c-971a-3f254e7914be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381992f6-c90b-4fa8-ac98-c666bd354de0",
        "cursor": {
          "ref": "60b7c2d4-0cc1-456d-8c5b-66ae4f507683",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4100e33f-9881-4b1d-8054-2df9ef3b817c"
        },
        "item": {
          "id": "381992f6-c90b-4fa8-ac98-c666bd354de0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ce6a813-3d91-4b9a-b04d-33bf00476fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d1453b-91a6-48ec-b35d-cadf72343908",
        "cursor": {
          "ref": "d01b1b5f-00ca-4c8f-bfb4-899460e4b713",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bef19ebd-659d-4963-9377-027252068539"
        },
        "item": {
          "id": "57d1453b-91a6-48ec-b35d-cadf72343908",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c29cec28-d879-4ebb-9be6-374df25f1064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6185b2a-0a45-46f9-8051-2fd3bb6740af",
        "cursor": {
          "ref": "5fca9e67-ffbd-4981-be9e-2a10a694ec5d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "694403da-6b8e-47a2-b1d0-930e3ebfec88"
        },
        "item": {
          "id": "a6185b2a-0a45-46f9-8051-2fd3bb6740af",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ce5afe22-5581-4100-a0f2-d544dd9e812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb084c2-332b-494a-a3e0-2f2573b8ae25",
        "cursor": {
          "ref": "be91d81c-51a2-4eb5-aa7c-aecb4a074748",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be9ea2b7-f769-4649-a674-27ae55d3c5e2"
        },
        "item": {
          "id": "adb084c2-332b-494a-a3e0-2f2573b8ae25",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c0fd1741-10e1-47bb-a3eb-fea31d23e513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621cc0d5-7455-4e56-95ee-7e1b9596b540",
        "cursor": {
          "ref": "c763d93c-bb75-4f49-886f-f9ec7eada6be",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5e70a630-3100-46d4-950f-8155be579cab"
        },
        "item": {
          "id": "621cc0d5-7455-4e56-95ee-7e1b9596b540",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca772ee4-dcd5-4395-a8ee-05d8444078db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede32d95-1423-4cef-b7e2-f41902a16181",
        "cursor": {
          "ref": "d3fa16e1-2d32-4400-b28d-b2f3a668dbab",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0114ddd1-ad7f-4665-ad78-e9d6489a01ec"
        },
        "item": {
          "id": "ede32d95-1423-4cef-b7e2-f41902a16181",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "18f4f2fa-8af5-4306-904f-366c6d494fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b945ee1-cc23-430f-8e82-da61bf1a6b03",
        "cursor": {
          "ref": "6bc248f5-eb17-4ab5-8127-c258fb94de95",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "08b940fd-d710-4aff-886f-49ebd40e624d"
        },
        "item": {
          "id": "9b945ee1-cc23-430f-8e82-da61bf1a6b03",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b580b35e-ca64-4435-abbc-2d43dad22116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f856086-0de3-4053-b143-7e67c8e29a93",
        "cursor": {
          "ref": "0d57fb59-62ec-43e0-ad2a-e734b2732517",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee70c849-6099-4f40-bc8c-032fec9f4dc7"
        },
        "item": {
          "id": "1f856086-0de3-4053-b143-7e67c8e29a93",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22e3cbec-d75a-4b40-a1d1-acb3a92ac9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec36a42-5b3e-46ee-9cea-885a3aa49c92",
        "cursor": {
          "ref": "19515f44-0091-4859-97ee-d1b2f5cee1aa",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5f8bf4e2-7045-4bfa-9021-e48b82e09eca"
        },
        "item": {
          "id": "cec36a42-5b3e-46ee-9cea-885a3aa49c92",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6be529d4-a6f9-44ae-9991-14c81c5b5627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6c3f58-4dea-40df-bbfc-2df7a13b38f9",
        "cursor": {
          "ref": "f6968705-2dc6-4d23-bf47-ef30884f379f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "97584baf-e0a2-4942-af80-be49cdda10fa"
        },
        "item": {
          "id": "2e6c3f58-4dea-40df-bbfc-2df7a13b38f9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b7b13ca-79ff-4199-8462-6d35f764cec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9d0b38-e670-4770-a3f2-18942b1d91cc",
        "cursor": {
          "ref": "f75971b6-faed-4673-895f-935cab634f93",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "49d4d2a6-cd74-469a-b797-05f4c78e6926"
        },
        "item": {
          "id": "7e9d0b38-e670-4770-a3f2-18942b1d91cc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0d26d988-4f85-4c4d-96de-52aa76302f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c4edf9-fdaf-4957-bac1-b54b7f936fb3",
        "cursor": {
          "ref": "0bdffa6d-df47-4226-afc3-7168636fe673",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "44e510fb-0d77-4c87-9575-a348cf44f0b5"
        },
        "item": {
          "id": "a7c4edf9-fdaf-4957-bac1-b54b7f936fb3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "889c6e1f-3123-4121-87df-4388dba4d552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3444ff1-fa5e-48d2-9c75-4dd86d049e9e",
        "cursor": {
          "ref": "5989dc3c-591f-4075-867f-7529c465f303",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7190b6d6-0046-4afa-a2f3-76885fba9bac"
        },
        "item": {
          "id": "f3444ff1-fa5e-48d2-9c75-4dd86d049e9e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ce5620c5-04a4-4c71-ad31-0b49eba5dfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8dca42-c774-433e-aae7-7d8d10e14d6b",
        "cursor": {
          "ref": "fc4d97bf-603f-4b0f-9cae-01f171077da1",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "32733258-17cb-4805-a9f5-cd5a450bff6b"
        },
        "item": {
          "id": "6f8dca42-c774-433e-aae7-7d8d10e14d6b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "960efb09-b539-47df-b290-04c64da94d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6549e008-bfb7-4560-8804-4b1d6318009f",
        "cursor": {
          "ref": "8cdb22a7-e1c9-4bea-9f3c-33b1b5d124e7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1b650852-762d-43de-ad2b-fbe104e53bb4"
        },
        "item": {
          "id": "6549e008-bfb7-4560-8804-4b1d6318009f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d24d4585-6646-453e-9867-0bed5b5e7f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c130a093-45b5-494b-a39f-a04734e7c9ac",
        "cursor": {
          "ref": "2a6c34bb-25c6-4431-9221-9bb5ba71028b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "504193f7-28af-47ae-af0f-928308098660"
        },
        "item": {
          "id": "c130a093-45b5-494b-a39f-a04734e7c9ac",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4a3b89ef-1035-4ca2-abc5-6b11e2e43591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a2a813-ccb3-4f6c-a1ca-8fe22d737383",
        "cursor": {
          "ref": "160f0f6e-d76e-456a-951a-516ae4b2f411",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e99ded24-b648-4560-ae6b-b2207f2d862f"
        },
        "item": {
          "id": "05a2a813-ccb3-4f6c-a1ca-8fe22d737383",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "baf2c5aa-d416-47d6-a17b-4b319a28f5e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8765f40-a997-42e5-877a-7473d5128231",
        "cursor": {
          "ref": "20c9911f-11fd-478a-b2d2-b491c6e6c82f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "73d9816d-0b01-4135-a2da-b926eaf057c1"
        },
        "item": {
          "id": "e8765f40-a997-42e5-877a-7473d5128231",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cf9396bf-d2fc-4779-b6ee-b433acd45e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8af6098-05fd-46a8-a168-abd5c3908409",
        "cursor": {
          "ref": "823ff18d-ba9e-4a28-a5ad-fe43a277e50c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "81f38a19-3401-4496-833e-58659392ba28"
        },
        "item": {
          "id": "f8af6098-05fd-46a8-a168-abd5c3908409",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "52700137-d0ed-47d9-9b42-632e02e58594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e41e6c4-578d-40d7-b2e5-d8c752615544",
        "cursor": {
          "ref": "ccf09204-6971-468b-8a2c-cd6bc409549c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8dd1bbf8-7899-43f7-9a79-0bd4c4c93676"
        },
        "item": {
          "id": "9e41e6c4-578d-40d7-b2e5-d8c752615544",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec5e184c-1b20-462e-af8c-bd29e5d1720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93195be8-2d53-4d2f-b46d-ea38170dc30d",
        "cursor": {
          "ref": "d27ba894-97a1-419a-8314-d72584e9f69f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6d18390b-2be2-4d17-ad65-be44649f1a56"
        },
        "item": {
          "id": "93195be8-2d53-4d2f-b46d-ea38170dc30d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e26560d-ffba-456f-92ab-c6e6fbc06c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbb45b-2119-4444-9fba-3c7d52f7916c",
        "cursor": {
          "ref": "0dfc3cf3-2858-45c4-a180-ec823e363e17",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fdf94365-1e7d-4bd0-8880-c859f42d3203"
        },
        "item": {
          "id": "cdfbb45b-2119-4444-9fba-3c7d52f7916c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "51f813ba-c984-43ff-984d-bd16a520f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6fee6d-f70a-4cf1-89a3-fd752f9b30ae",
        "cursor": {
          "ref": "eecb5c6a-210d-448d-be13-e3d93c085a7f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a07c0375-c952-46e6-a77f-d48331cf4590"
        },
        "item": {
          "id": "2f6fee6d-f70a-4cf1-89a3-fd752f9b30ae",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6a4a6656-ce10-4e05-9a9a-515200e9cb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ee40eb-b0a4-4332-a44d-e7e2835cb6fb",
        "cursor": {
          "ref": "a05becf1-1351-4a0f-a73b-f454df448ba8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0607810f-32d6-43a2-896c-f50cba29ef72"
        },
        "item": {
          "id": "f5ee40eb-b0a4-4332-a44d-e7e2835cb6fb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7167f12b-e378-4c3d-b4cf-9c247660f896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e55f22a-3c04-41c8-81aa-f4d17a94507e",
        "cursor": {
          "ref": "53e38a04-3139-4f4a-a0a3-443d58a756aa",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "78fc6443-f8f0-4cdb-94a7-8537fb1eabbb"
        },
        "item": {
          "id": "0e55f22a-3c04-41c8-81aa-f4d17a94507e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d48120c5-2319-4b48-b487-0bad163a0082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22259e3-e66d-45df-9092-3acb64e0533f",
        "cursor": {
          "ref": "32965ecf-1ae5-4a83-9e62-9d2422b15c77",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1498d69e-8d8e-4d4e-b195-76c830e858b9"
        },
        "item": {
          "id": "c22259e3-e66d-45df-9092-3acb64e0533f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3d546dc9-a5de-45f1-83a5-54f41fc8535a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c59fda4-6fb9-4d8e-84e6-7b48cd14063d",
        "cursor": {
          "ref": "c188527a-9e65-48ed-bf0b-7cb5d1390867",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1f509101-8bd4-4811-8bd0-7b465eddb567"
        },
        "item": {
          "id": "7c59fda4-6fb9-4d8e-84e6-7b48cd14063d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "23687029-99e8-449c-b61b-3f51f590f25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f95073-57f4-46a8-91d4-f9c760fd8114",
        "cursor": {
          "ref": "a1e79d24-d4bc-4c39-ae23-53e945bf2903",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6d13a03a-b95e-4e25-9b54-f3eb9f268fe6"
        },
        "item": {
          "id": "21f95073-57f4-46a8-91d4-f9c760fd8114",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "72ce06f7-d4c3-4689-8d8e-26e1a3ac6040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b1aa5c-3b0d-443e-ae43-fb91f76f8055",
        "cursor": {
          "ref": "a076b209-4b99-46d4-ab92-cf67913d91d6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1252c5b8-f8eb-46b9-8c3c-4f86e8f17bc9"
        },
        "item": {
          "id": "56b1aa5c-3b0d-443e-ae43-fb91f76f8055",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bdfb2eea-68c5-4f4b-8440-4f0c85b33a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9824ecf7-49c4-4bb0-be07-18331007b2a1",
        "cursor": {
          "ref": "b9edd9d9-4626-4dbb-ad07-2694c96e91f2",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7449fa13-7bad-40b1-a5de-0139bba4c87f"
        },
        "item": {
          "id": "9824ecf7-49c4-4bb0-be07-18331007b2a1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0b088b2a-79a2-4c66-af9b-c60523bf8554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6db45f5-0316-43f7-803d-c05a756f104f",
        "cursor": {
          "ref": "3dd1c2b3-a7ce-471b-9557-6de756ddb239",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "47a8efc6-d336-4bf5-8c24-498b9bd377a4"
        },
        "item": {
          "id": "f6db45f5-0316-43f7-803d-c05a756f104f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3958868a-c65b-42db-bd68-de4447ec616f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b1dca6-c58c-426a-8faa-b588b410831d",
        "cursor": {
          "ref": "b466f59f-cb7d-4388-ad32-d1a0367d6a5a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "72fd34f1-a99f-43a5-ab90-01f716a25654"
        },
        "item": {
          "id": "38b1dca6-c58c-426a-8faa-b588b410831d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "547bdf74-0281-4bd2-82ff-bec75ecc2046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e6c9a1-2df7-42d5-84e3-1f79af784570",
        "cursor": {
          "ref": "f98e1175-03f8-443e-bf03-18299b26b9e4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "edb4952b-bbe0-4ee6-8f10-eea45d333a06"
        },
        "item": {
          "id": "c2e6c9a1-2df7-42d5-84e3-1f79af784570",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "45a56003-393a-4b3c-ad2e-f30d80a7a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92a606d-d060-4ce8-8e0f-c283953ab366",
        "cursor": {
          "ref": "f8fb0f58-9c54-42b6-9754-89e74e150f6e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "acac81d0-a621-4bce-9475-9755e4a0bd2a"
        },
        "item": {
          "id": "a92a606d-d060-4ce8-8e0f-c283953ab366",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04f30c83-5072-483b-8873-313db2daf04a",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9f6611d2-108d-4d7c-b3d7-99d9815edcba",
        "cursor": {
          "ref": "0f490378-f69f-41ca-90f8-82112e679851",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "31fc32a2-2bfb-4d5f-afb8-4a0040c9a8d6"
        },
        "item": {
          "id": "9f6611d2-108d-4d7c-b3d7-99d9815edcba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e3d1b216-5b8e-4301-aec3-a0bab5d3d38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a5e7f5-ca40-45d5-af5c-6a6325fcc03a",
        "cursor": {
          "ref": "1284fc5f-6969-4afe-b9af-e4b12ac45d94",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6020c67d-ffe4-43d3-9db2-456f4bc63760"
        },
        "item": {
          "id": "33a5e7f5-ca40-45d5-af5c-6a6325fcc03a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "60d95bd9-6936-4815-9ceb-dac08a0f5a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43cb2e9-3598-4450-b7bc-82d6cea49720",
        "cursor": {
          "ref": "c6a5bcb3-2aaa-4302-ae1c-da2ed3783d53",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6d66e71a-c424-4a7c-b9a8-1a3541714fbc"
        },
        "item": {
          "id": "e43cb2e9-3598-4450-b7bc-82d6cea49720",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "27bef4c6-d85f-4de0-b5ce-dc741bfe5eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497971ff-b606-4c03-8a2c-8cfe64f4b4a3",
        "cursor": {
          "ref": "9819b9dd-8818-410f-8b1e-46c9045b9f7a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f2b5862f-b85b-4fbd-ac73-24ff8ecfa597"
        },
        "item": {
          "id": "497971ff-b606-4c03-8a2c-8cfe64f4b4a3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8b7080ff-b31b-4775-80b3-1144bf6347a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553cf99f-b346-4722-af76-08a43edf6073",
        "cursor": {
          "ref": "8a954fb3-d261-4890-9242-02c85b58f7b8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8da4c5be-f2f9-4b17-b0f9-7411895b87ab"
        },
        "item": {
          "id": "553cf99f-b346-4722-af76-08a43edf6073",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a193fe25-ff71-4f4e-b5f4-50bf9c102a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c05502-0c88-471b-9003-9173fd4f6796",
        "cursor": {
          "ref": "e5f4d208-5da6-4e2f-a951-415004837680",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a4eab178-cebc-4755-8051-09fda18334aa"
        },
        "item": {
          "id": "99c05502-0c88-471b-9003-9173fd4f6796",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4bf76435-dcbf-4c08-8aae-a30dc5fea6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2508c171-d2ce-400b-9065-ced114b27226",
        "cursor": {
          "ref": "cb9b96f3-0362-4e3a-960c-f7412b294d01",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bbf1ab47-dc75-48bb-9394-b44a9aa8afd3"
        },
        "item": {
          "id": "2508c171-d2ce-400b-9065-ced114b27226",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0bf54f62-3886-492a-b003-96393765116c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb0f758-87fc-43ef-87c6-f612d091a4a5",
        "cursor": {
          "ref": "1e67af7b-939f-4788-a20d-3445a4f30f67",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "92be7119-8a6b-4e91-a991-d1d3268bec84"
        },
        "item": {
          "id": "dfb0f758-87fc-43ef-87c6-f612d091a4a5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e28447ac-12e7-4299-a54b-495f3f53aec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f8818e-7e82-47be-bbcf-38b3f1c9d37d",
        "cursor": {
          "ref": "c2722694-9f8d-4683-a699-da6123bd98ce",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c1430b6e-9620-4761-b386-afee68f50014"
        },
        "item": {
          "id": "52f8818e-7e82-47be-bbcf-38b3f1c9d37d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "43036fac-be89-4da2-895b-5fa7c85d16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e30d2b2-8b64-4ad5-a8a1-833fa8a42583",
        "cursor": {
          "ref": "35254e39-2eeb-4ac9-92ef-efd4d4012dae",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "849c1898-125a-4ff7-9b3c-0312a6ad2de3"
        },
        "item": {
          "id": "2e30d2b2-8b64-4ad5-a8a1-833fa8a42583",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6695aa43-bbf0-4761-ae11-e3ff89d0d1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b086797-6713-4166-b74b-766254880f46",
        "cursor": {
          "ref": "688a325d-41a6-4cdc-b953-5c0475ebf831",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "947f53aa-0106-43cf-a7f2-4f9dd2904a3d"
        },
        "item": {
          "id": "8b086797-6713-4166-b74b-766254880f46",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d042d9db-6dd4-483d-b692-f0a34e6528b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7c277e-3887-4fd8-99bc-7fb1f9090617",
        "cursor": {
          "ref": "ff5a00d3-3ab3-41ed-a38b-ef2efbce73de",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ee9bda64-2742-4893-9940-b41c9169625b"
        },
        "item": {
          "id": "7e7c277e-3887-4fd8-99bc-7fb1f9090617",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "52c41dd5-f33c-429a-8729-15a650076960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15990b69-2372-4fc2-9abb-b6f4a7e9cd86",
        "cursor": {
          "ref": "98791dcb-0ab0-43ef-ac34-eb70b06bef9e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "36a3d5c4-f524-485d-883b-c05a3af99c87"
        },
        "item": {
          "id": "15990b69-2372-4fc2-9abb-b6f4a7e9cd86",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b1ec131b-c5dd-4fa7-8492-4df6c43701ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b50e41-296a-4d1d-92e2-6cac694446df",
        "cursor": {
          "ref": "d62f4668-1216-4dfc-95f0-76187f0180ed",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "09a701de-2f67-4684-856c-33a32944e1ec"
        },
        "item": {
          "id": "46b50e41-296a-4d1d-92e2-6cac694446df",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "09feeec0-8a29-4cc5-9ab1-2028cb18abec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c42af6-b413-4d57-879e-8e84a0dfc379",
        "cursor": {
          "ref": "acf68e17-ecf4-4967-997b-ff3a38f7f987",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4b5eae35-b2e3-40bd-aa74-188728845939"
        },
        "item": {
          "id": "41c42af6-b413-4d57-879e-8e84a0dfc379",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dd842268-06c8-441b-b475-5bedf51fce36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce4bda8-e05b-4d2e-8e98-edc2ab0ba323",
        "cursor": {
          "ref": "8c065324-4b18-49d7-aecd-1cf061c5502f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "22bfa978-d8e4-4df1-9ad4-b55995ca7443"
        },
        "item": {
          "id": "bce4bda8-e05b-4d2e-8e98-edc2ab0ba323",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40d576cd-9381-486e-987f-e5e593d2ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64aa556-507f-4747-9ac2-d175b2bc9bfb",
        "cursor": {
          "ref": "90bb1d06-b52e-4caf-ad4c-c0243fa0d21a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2915544c-1f79-4f1a-94d7-5e1f3d84ff4f"
        },
        "item": {
          "id": "e64aa556-507f-4747-9ac2-d175b2bc9bfb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e59505eb-db7f-4e76-a8f9-b058a1cb52ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ced36b-4893-480d-935b-6386e208af5b",
        "cursor": {
          "ref": "8d8cc04e-e09d-4189-956f-994ee7f06a07",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b7b72c5a-0aa3-43d5-a940-b294aa1c9828"
        },
        "item": {
          "id": "67ced36b-4893-480d-935b-6386e208af5b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0ddbac88-5eb1-49be-8a65-997491ae1eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f886f-0986-4f17-8a93-89d9371dcc0d",
        "cursor": {
          "ref": "0f7a7c35-79bc-456a-9ac5-6eb9f8fb7548",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e7ccb661-ba63-4269-aaad-85187298b632"
        },
        "item": {
          "id": "845f886f-0986-4f17-8a93-89d9371dcc0d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "26f16e4f-be82-4bf6-a00c-887b63730a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44bd8a0-273a-4205-96a7-94ba904b504e",
        "cursor": {
          "ref": "bc2e9c75-a331-4fd4-a393-ed03cd0c84e7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6c046644-576a-4686-a95d-665247b67bb8"
        },
        "item": {
          "id": "b44bd8a0-273a-4205-96a7-94ba904b504e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5617db18-d494-4ee5-ba0e-c78108b570a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265ad228-d596-43c0-bc92-7c6c74a6ca77",
        "cursor": {
          "ref": "6a5b1457-d387-4f5e-84ee-73caa71ab7b5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02ce2e1f-b5f3-4bb1-8c62-22568d868e9d"
        },
        "item": {
          "id": "265ad228-d596-43c0-bc92-7c6c74a6ca77",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "31ca828c-07f7-486d-8d26-8d38907cc9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee618e04-2201-4fe6-ad2f-ef666e123a8f",
        "cursor": {
          "ref": "bf897415-7f2f-4f59-8b63-731854aad576",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "95bb9cd8-2478-4637-90e6-70f59960e692"
        },
        "item": {
          "id": "ee618e04-2201-4fe6-ad2f-ef666e123a8f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d547e404-a230-4dda-843b-249587ab2066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7791ee12-e401-4031-8a45-b5732ea04fa1",
        "cursor": {
          "ref": "b32beaec-f88d-4958-8284-2354bc9d78af",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "daad1d41-869d-48bc-b748-a5a5d68e098c"
        },
        "item": {
          "id": "7791ee12-e401-4031-8a45-b5732ea04fa1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2e259e50-e593-44e0-a52c-c3fc98e1b477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02f2f42-70fd-49c8-980f-adc73c7beabd",
        "cursor": {
          "ref": "076bf11e-7b9b-4577-91f4-fc686f5bf5cf",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e10eb7c9-a758-4d80-bc0d-d483a6817304"
        },
        "item": {
          "id": "d02f2f42-70fd-49c8-980f-adc73c7beabd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f0a4261a-95b8-43a3-a8ed-89fe90353f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb54d97b-8488-41c9-9382-a63d804fde24",
        "cursor": {
          "ref": "c34d844a-08dd-44a3-9d6c-780ebebeb723",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "957a3420-a347-4dde-97c6-c8d4cca59d24"
        },
        "item": {
          "id": "eb54d97b-8488-41c9-9382-a63d804fde24",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "946ca49b-2d4c-476f-93da-d76001bd1f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772ad32e-3aca-408a-8d7b-2ae2bcfba204",
        "cursor": {
          "ref": "01778af2-5248-4d02-9222-c0b089dd026e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "701ae928-57d8-4b2b-b662-2cca4b2e4c68"
        },
        "item": {
          "id": "772ad32e-3aca-408a-8d7b-2ae2bcfba204",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a57f49f3-d5eb-493f-87a4-8914f2f449c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26647a0-7749-4b8f-81de-086e03f6926c",
        "cursor": {
          "ref": "33eadd87-3c70-4a2a-a197-c80872351dcd",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0031b7a7-ac98-48db-ace1-350102318ca9"
        },
        "item": {
          "id": "e26647a0-7749-4b8f-81de-086e03f6926c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c3de77c5-cb72-42be-8a11-f63e1fd3d20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa97f6cd-b1a0-4771-b399-fa8444b556c5",
        "cursor": {
          "ref": "db5bbf29-f383-4456-bcab-c445cdbba715",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ad0ddf6a-6d89-4d63-910d-a75e3f73cf28"
        },
        "item": {
          "id": "aa97f6cd-b1a0-4771-b399-fa8444b556c5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "74b12270-c426-4d33-b52c-8c393d9c618d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9304e82b-0e0d-4834-b82f-0702f89aba49",
        "cursor": {
          "ref": "7402cb52-c46e-4b84-95e2-1d1c6a9ce605",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1be7203e-6c0a-4536-8710-3a4853af62ab"
        },
        "item": {
          "id": "9304e82b-0e0d-4834-b82f-0702f89aba49",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d61c9637-c760-4798-b358-a35736f05d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c959e32-db8c-43a1-8859-6ba2c9e39e47",
        "cursor": {
          "ref": "03a57f4e-c08a-4d5c-8953-f69a24a544b9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5cd012ba-26d9-4d83-b2ae-48f5669898e3"
        },
        "item": {
          "id": "2c959e32-db8c-43a1-8859-6ba2c9e39e47",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f8c7253a-5581-42cc-adc4-37d4b5345c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4640094d-200d-42a5-b1c9-fb0a4114e9d1",
        "cursor": {
          "ref": "0630e273-22db-417a-9bc9-bc5bdbbb3c48",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "23776511-be20-4c9c-b211-e3d0a5a154a9"
        },
        "item": {
          "id": "4640094d-200d-42a5-b1c9-fb0a4114e9d1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "37e34828-1997-402e-a13e-fffecd059ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf12d60-4910-4635-8cd1-2c83a7349d21",
        "cursor": {
          "ref": "4450aa3d-6b61-46ac-a47b-26252c075cdf",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d78d1d5-2b70-4f95-adab-9c56d042469a"
        },
        "item": {
          "id": "8cf12d60-4910-4635-8cd1-2c83a7349d21",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d714532-fa5e-47cd-a338-e01de6a1e66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ba4192-d10d-4319-a778-190993c561e6",
        "cursor": {
          "ref": "8c2e46e3-8d1a-4d19-8c21-e21d3c05a3fd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de9b6255-6764-4a95-a257-d97ddd5c4359"
        },
        "item": {
          "id": "98ba4192-d10d-4319-a778-190993c561e6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "15cf2dff-9e44-4232-b760-d36b9e114fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e8359-6a06-4198-9730-3b5789f31967",
        "cursor": {
          "ref": "f14164be-00e9-43e6-94be-5eb38956baa2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "88ad5369-9a1a-4154-8e4e-528d29ce5064"
        },
        "item": {
          "id": "da0e8359-6a06-4198-9730-3b5789f31967",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e34d2e49-4769-49ec-be3c-a1a8b6e2dded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae82b65f-caf1-4e99-a970-665c0190ca14",
        "cursor": {
          "ref": "4c40b491-ca86-41b7-ae23-ad0666c19e41",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7a52c292-34c8-4361-9d0d-24aeb7718967"
        },
        "item": {
          "id": "ae82b65f-caf1-4e99-a970-665c0190ca14",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b5933960-b64e-46cf-b867-193559ba370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcecfd03-b3ef-44d5-ac36-dd28a872cb65",
        "cursor": {
          "ref": "50d72524-40e8-48cf-9100-769d1611d617",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "39685426-bdef-41b6-b34e-d78078e3b0e2"
        },
        "item": {
          "id": "dcecfd03-b3ef-44d5-ac36-dd28a872cb65",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "86628664-4223-4290-8064-7527cf92efa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da30f6e-936f-46bf-ab2d-44be3673ceb9",
        "cursor": {
          "ref": "31244669-a777-46e3-889b-4e2deae5038a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc935659-1ddd-4de5-9bdc-7455953c58b0"
        },
        "item": {
          "id": "9da30f6e-936f-46bf-ab2d-44be3673ceb9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "49c6fbcd-2777-421e-9c87-60d1ef71d2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090122b-c7f7-407f-bc1f-6db103aee249",
        "cursor": {
          "ref": "79ff3334-51c8-46e6-9b6c-34735733863a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e4babc0-12f6-493c-9f25-dc4bfed1f9b8"
        },
        "item": {
          "id": "7090122b-c7f7-407f-bc1f-6db103aee249",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a9e5d7ff-c2a7-4629-9f28-9bfd8847eb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0fc866-d81f-471a-9dac-e1fb86dd4477",
        "cursor": {
          "ref": "d018df82-1528-44cd-a552-14c960d96bdb",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7fa14a9c-47a7-4f12-85c5-bbe5b2dad820"
        },
        "item": {
          "id": "6d0fc866-d81f-471a-9dac-e1fb86dd4477",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f295ba40-eba5-4384-9e20-ba6a49d3995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f77ea72-ce47-4636-a97b-abf5fab6563a",
        "cursor": {
          "ref": "1c384e86-efe1-4b65-996c-936ddc43063e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f6a17f40-b704-4073-a343-f57e09cc908f"
        },
        "item": {
          "id": "1f77ea72-ce47-4636-a97b-abf5fab6563a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d3792162-848d-4409-8d53-2db568a09c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b84128-f3eb-4f91-a4ec-1a50ae407fb1",
        "cursor": {
          "ref": "f685145a-5f4c-42a6-9acb-dc58575b63c4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "924d91e9-273a-4760-bf05-1b7ee9d5cd85"
        },
        "item": {
          "id": "91b84128-f3eb-4f91-a4ec-1a50ae407fb1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7a8840d0-131a-4eca-8018-f18ceaeb279a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8cf7c1-8fc3-4cf4-a26e-34723c95a856",
        "cursor": {
          "ref": "ac4261c8-b389-4898-a3f4-f3ef64fde68b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6b98aec4-33f6-4d9e-934a-d28113913f1e"
        },
        "item": {
          "id": "0b8cf7c1-8fc3-4cf4-a26e-34723c95a856",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9f0cad68-0128-405b-b9ec-34df2386e87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8474f3a0-c09c-4860-ae5c-2d3da45bd589",
        "cursor": {
          "ref": "0836c8b9-39d4-4ba8-bcb2-525d988257b7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fd635205-4998-4ee3-9ba0-de4a023b1a18"
        },
        "item": {
          "id": "8474f3a0-c09c-4860-ae5c-2d3da45bd589",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5119bf2f-d036-4ac9-811b-381568decc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a58942-01e0-4870-b4d3-4c533846cf8c",
        "cursor": {
          "ref": "e64c6733-b728-458c-abeb-eae50defa486",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ddaabd07-98a8-49ed-a38f-2ef70c775df1"
        },
        "item": {
          "id": "10a58942-01e0-4870-b4d3-4c533846cf8c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "86a13a6c-01b4-48f7-8d8a-e8651a0f0b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698df1e3-6091-4e88-92cc-a5e63e531a35",
        "cursor": {
          "ref": "a79920e1-8939-4534-9136-3af3eb94d65d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d65217e5-c676-4468-81ee-cf34e6002d9f"
        },
        "item": {
          "id": "698df1e3-6091-4e88-92cc-a5e63e531a35",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "514dfa46-2902-4c98-99f7-7b5529b9d60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0955914e-a35f-4ffc-ae63-81356865a2a2",
        "cursor": {
          "ref": "ce42f01f-eeea-4e0f-83e9-3aa30f9725b2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "481d41b9-9429-4afb-a521-3b97282947e3"
        },
        "item": {
          "id": "0955914e-a35f-4ffc-ae63-81356865a2a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "704e7f70-7dba-44e4-8b0f-d1d5aeab5036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b68c9-5356-4ff3-8fda-48377ce9ec68",
        "cursor": {
          "ref": "38e510a1-b49a-4c17-9abe-86c934d33b6e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "749d1899-dcf1-48a5-b5df-e3a1da93b54e"
        },
        "item": {
          "id": "aa3b68c9-5356-4ff3-8fda-48377ce9ec68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "639c0221-35f9-495a-8da1-79e76b5b3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f895dd7c-57bb-446a-9caa-a51d20043448",
        "cursor": {
          "ref": "67f03577-99d2-4a00-bded-1b54beb7d7a5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ce2c9561-0f39-48fe-9c91-4e5a38fcadf2"
        },
        "item": {
          "id": "f895dd7c-57bb-446a-9caa-a51d20043448",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "939cb3dd-ed2e-4c2a-9b8d-c7e2e70d3b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ada66a1-6774-49f9-8717-70d764638e17",
        "cursor": {
          "ref": "da3878f1-c5da-46b9-a05e-3d8466227470",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2203e68b-84e8-435f-888a-50d8153043f8"
        },
        "item": {
          "id": "6ada66a1-6774-49f9-8717-70d764638e17",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "64fc6a8c-8723-4267-b5c5-a3f72266a161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88341c-3d7d-4c06-8d13-8d30d65ce6cf",
        "cursor": {
          "ref": "caf5551f-cc3e-464c-a04f-69f0cee82d4c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1904ec9e-f783-4b81-864d-764e6b9bc81c"
        },
        "item": {
          "id": "9f88341c-3d7d-4c06-8d13-8d30d65ce6cf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "44984e93-2afe-48ce-a0b0-d95bad04f78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d34da50-fd51-4192-9423-afcc1a16440c",
        "cursor": {
          "ref": "8a14cf75-fba2-4333-a4ec-5312e24d149e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a3f3c38-b500-43e0-994e-2896abab6c44"
        },
        "item": {
          "id": "8d34da50-fd51-4192-9423-afcc1a16440c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ab8318db-9763-477f-9ab0-37c12fb7f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bae2748-4afa-4c49-a3ed-3c78b539b436",
        "cursor": {
          "ref": "402be212-89e5-4a5e-995d-7131eff31e5f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b0f872b4-1019-4b30-afb9-14735b0d5e6c"
        },
        "item": {
          "id": "8bae2748-4afa-4c49-a3ed-3c78b539b436",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "31d1950b-36c1-4e8d-b31b-a662891579a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fb1a48-fdff-4472-9d36-32a119b6bcde",
        "cursor": {
          "ref": "c7bff610-87d0-4ae1-900c-688197149b32",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b9259241-1766-4eeb-88f3-7444f9e764ef"
        },
        "item": {
          "id": "71fb1a48-fdff-4472-9d36-32a119b6bcde",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b0b0e35c-68f2-4b73-91db-6c28288a1a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b7a4e1-fd1b-4380-9962-f9701ba91443",
        "cursor": {
          "ref": "5958407b-3243-4b5a-bbd1-64bb6b4057be",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5cd79cd4-5e96-4a2f-b832-e86e9c8c413c"
        },
        "item": {
          "id": "d8b7a4e1-fd1b-4380-9962-f9701ba91443",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0db167c0-d5b8-469c-ac64-9327c4bf1587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c33968-9516-4859-b2aa-6833da10c7ef",
        "cursor": {
          "ref": "080046b4-6cf7-430f-ae62-abbf3a468e45",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dde4973a-0b68-4e3f-bf0f-0ad5ea099705"
        },
        "item": {
          "id": "34c33968-9516-4859-b2aa-6833da10c7ef",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5584238d-7709-436a-97f0-e825c13e0abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad454cea-3afc-4a75-95cc-d281c477de32",
        "cursor": {
          "ref": "65a8cae3-41b0-4ee2-afee-41c55faf4dba",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "212a149a-937c-4f53-801d-7d8a0c35d8fe"
        },
        "item": {
          "id": "ad454cea-3afc-4a75-95cc-d281c477de32",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ad7b9bac-b287-4326-8bfd-c290d1d54154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf83cfbe-f0e8-4b80-a7ff-92513c046b5d",
        "cursor": {
          "ref": "52a6fce1-2f96-43df-9582-a9e401afae5c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f2cc3c6c-c91d-4d0a-9b12-411a51bb5e09"
        },
        "item": {
          "id": "cf83cfbe-f0e8-4b80-a7ff-92513c046b5d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ebe2bbb1-fbdc-4738-a89c-bd843e9ad72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4c4de2-e2db-4bea-a2ef-61cae2c06d63",
        "cursor": {
          "ref": "aacd82ec-6424-45d6-b2c0-6f465b737a4e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2884929f-6cfb-450f-aa6e-91c4e1d693da"
        },
        "item": {
          "id": "6b4c4de2-e2db-4bea-a2ef-61cae2c06d63",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "231ed030-2f8c-4a82-b820-5bb34d1d9ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d7ba1b-c94f-461b-b432-20ddc96ec575",
        "cursor": {
          "ref": "30bd55d5-1160-4c35-95a1-e9baaecaf8ce",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d32a5563-f120-4556-9ada-c0791b6506b9"
        },
        "item": {
          "id": "13d7ba1b-c94f-461b-b432-20ddc96ec575",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "33b7e946-acc3-4681-9e8d-09e203bb64da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b21f0b-3a77-44e4-926b-8b0052fca4e7",
        "cursor": {
          "ref": "0512ace6-6c22-4eec-a0a3-c8defa4b5ca3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c3ccf4f7-172f-4e8a-9917-fce340cf09bc"
        },
        "item": {
          "id": "75b21f0b-3a77-44e4-926b-8b0052fca4e7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "79a29ba1-7926-4793-8a9e-cc9d012166b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e540bff-838b-4aca-9d06-005105111846",
        "cursor": {
          "ref": "2f1bb46c-a19a-45ec-941c-5e256c55e24e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bf23b016-1ead-460c-9654-cb3c56e11d1d"
        },
        "item": {
          "id": "4e540bff-838b-4aca-9d06-005105111846",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "27d164f4-5072-458a-8a9a-1f39c1ec0c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6e73cb-ae87-492e-8a3d-84a5042b5840",
        "cursor": {
          "ref": "bb3b0c42-a515-4f11-9f53-aa2745aee944",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6e9a6d14-8fac-40b0-aed6-f9c9e19ae15f"
        },
        "item": {
          "id": "ec6e73cb-ae87-492e-8a3d-84a5042b5840",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "29c90ad0-f6a1-4a4f-9a9b-cc11b9218f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7708b171-afb0-4a61-9e18-6c19c7d55301",
        "cursor": {
          "ref": "618ea378-afc7-4827-8c4c-2806bff3cde7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1069c86d-8c66-41ef-ab47-89f45a2daf6d"
        },
        "item": {
          "id": "7708b171-afb0-4a61-9e18-6c19c7d55301",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e7017aa1-5b06-4171-ac5f-8fb9fa50fcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c5010e-7be3-4cb6-a1b1-b698e9c7cf57",
        "cursor": {
          "ref": "b6c586d1-87a2-4aca-8a49-687d126d074a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8cb49a2e-1b19-461e-b4c4-e5465d0e38dc"
        },
        "item": {
          "id": "f3c5010e-7be3-4cb6-a1b1-b698e9c7cf57",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1446ef5a-e475-4c51-ac18-18b29a2d2abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd4eef-227b-41a0-982b-75aa6003adfe",
        "cursor": {
          "ref": "d2970a53-e5d4-41fe-aa2e-a8615df5ccc4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8b47999a-b352-4f38-8a40-4d177a6166d5"
        },
        "item": {
          "id": "dddd4eef-227b-41a0-982b-75aa6003adfe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dcc383ad-5c63-4bf2-b432-102e4d3a45c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131460a5-c4f5-4085-8624-bdec43b70390",
        "cursor": {
          "ref": "af5bc30f-f72f-49c5-80c0-776cb7f7b64c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d6b4450c-8b1a-4fe3-8d9b-250a129abc36"
        },
        "item": {
          "id": "131460a5-c4f5-4085-8624-bdec43b70390",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "016b9057-497e-46ba-97d2-ddf915db866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8914dadb-7f4e-41ad-98ab-d53949629b56",
        "cursor": {
          "ref": "6244a724-27f0-4da6-9aa6-32dce79f40f0",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "caec55db-a4b7-4e88-8ea2-919cbddd98d3"
        },
        "item": {
          "id": "8914dadb-7f4e-41ad-98ab-d53949629b56",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "64cada08-a49f-4f51-9140-9c4f36aa607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f98627-5fb2-463d-93f1-ff5f001dda76",
        "cursor": {
          "ref": "a31fdd81-36d5-4d8f-980d-177ecf5dedae",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f6c52dad-28e8-4447-8b7b-e4d4b0cf10e4"
        },
        "item": {
          "id": "16f98627-5fb2-463d-93f1-ff5f001dda76",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "42b6325b-63f6-4824-8b72-7004ad3c3370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d02cb22-e480-4be9-b1d8-54ade5582dab",
        "cursor": {
          "ref": "7e7d4e7f-338c-4245-be46-e2d0bf8e25e3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a418a644-2c7f-4777-9b4d-0a331359995f"
        },
        "item": {
          "id": "6d02cb22-e480-4be9-b1d8-54ade5582dab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "476fc303-f052-4df4-8852-80fca4a767fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb460ae-fa88-4657-960a-6974dc25df5a",
        "cursor": {
          "ref": "b610ad92-4f21-4909-8f2d-776de6281033",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "addb7f3e-2b14-4eb1-8b1d-d08ba87c2942"
        },
        "item": {
          "id": "7bb460ae-fa88-4657-960a-6974dc25df5a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "00c89f05-e292-4d29-9acf-8c1639ae70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c9ced5-dce3-4599-8d01-fb913eb521f5",
        "cursor": {
          "ref": "a24bca4f-3d27-40e8-96c7-40d637779b09",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "839608f0-5e97-4937-8e20-3830978cc7bf"
        },
        "item": {
          "id": "89c9ced5-dce3-4599-8d01-fb913eb521f5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "87eb7506-3a5a-4ef9-a511-1de51132530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e35d005-4fc1-4d1e-997a-9bc93a6b659d",
        "cursor": {
          "ref": "e3f76da8-30e0-4a3b-9ad8-1e7bfe34351d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8a46fb21-88f4-4b86-9ff7-cb86c0420473"
        },
        "item": {
          "id": "2e35d005-4fc1-4d1e-997a-9bc93a6b659d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2643fa43-c320-42a7-b522-c677e3b7a5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51df8b90-494e-4ffc-a4ad-8b28b6e8b316",
        "cursor": {
          "ref": "84f658bc-446f-469c-861a-053b90313893",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c824e9e0-a4a3-401f-a2d5-f8c88db0d9b1"
        },
        "item": {
          "id": "51df8b90-494e-4ffc-a4ad-8b28b6e8b316",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "49b50d7e-8a2f-4b70-a66b-b8251cee53fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e3d904-575a-4a69-9954-3219ff4993a2",
        "cursor": {
          "ref": "d710d436-4d17-4f70-87f2-4e9ef59be950",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8fbc1f8e-a39d-4b5d-9f6d-64d60212b191"
        },
        "item": {
          "id": "81e3d904-575a-4a69-9954-3219ff4993a2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "941b8639-0607-4b4d-9b50-aa77098714eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bacb091-9023-4f26-bdef-d26dbc98c9e2",
        "cursor": {
          "ref": "23f2bbdc-8ca5-4ca4-9675-6c547fc2e866",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "395a773d-c376-401d-b9cc-c0165f84c4fc"
        },
        "item": {
          "id": "6bacb091-9023-4f26-bdef-d26dbc98c9e2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "127ae6d3-2646-4e75-895b-0e113799d21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd846265-6604-4aaf-8945-eef90fccbbed",
        "cursor": {
          "ref": "d71f72b3-4df9-440e-9947-1e2c971f94a2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d524d26e-839b-47db-8cdb-4f4a1f3252ec"
        },
        "item": {
          "id": "bd846265-6604-4aaf-8945-eef90fccbbed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d15f7338-fb8c-47f4-a8e9-4a83e9845a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fac02e-188b-46da-af5b-18071d119d9d",
        "cursor": {
          "ref": "13053566-3a92-4f2d-a09a-578f3f3123b6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f38b264b-af82-4f3c-a50e-87aee87cf4ab"
        },
        "item": {
          "id": "30fac02e-188b-46da-af5b-18071d119d9d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a8419301-46b8-4163-b404-170fb1a347c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c324a3b-4934-4ec5-811f-38e1617f61ca",
        "cursor": {
          "ref": "90ee30d2-43ac-4f48-8c17-fe7bb39273b8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5a33cf5f-79cf-4683-926c-7261e5303af3"
        },
        "item": {
          "id": "3c324a3b-4934-4ec5-811f-38e1617f61ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a2358104-456c-4204-8a78-62d7bb21d210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cb3c25-9e7d-407e-a57e-57cc93f88694",
        "cursor": {
          "ref": "62440331-9b92-420e-8bac-bf6bccf3044c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "993968bd-e0d2-43dd-93c5-3ab73f19812d"
        },
        "item": {
          "id": "b1cb3c25-9e7d-407e-a57e-57cc93f88694",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c6bb7351-dfe6-41fc-bcfc-a8c1754afd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57428ad-20f2-42bf-8172-af8dabdc746a",
        "cursor": {
          "ref": "8b976088-4bd2-40a6-a6d0-1eaa8de6e6d2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "00959831-997c-4aea-85dc-3d4973eff0a1"
        },
        "item": {
          "id": "e57428ad-20f2-42bf-8172-af8dabdc746a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f61a829-718e-4a3a-93db-935eb99fdf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4d82c8-3589-4d57-9893-2b645972d16d",
        "cursor": {
          "ref": "059bfecb-ac08-4367-82ec-008e7bdf1000",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bfb7d971-d7b9-4602-8242-95c5da908aaf"
        },
        "item": {
          "id": "8e4d82c8-3589-4d57-9893-2b645972d16d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6d8d5666-56ec-4064-bb2c-1c67bce33c8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0d73db-3eff-4c91-9e41-4db5e7ec64e7",
        "cursor": {
          "ref": "4f84c483-2f55-4ff0-bf3f-ee0a77b84429",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9663eea0-697b-4322-8eb3-c713cf695ccb"
        },
        "item": {
          "id": "7d0d73db-3eff-4c91-9e41-4db5e7ec64e7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "23141560-c8d3-4bc8-93fd-ed912b145b25",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c23ad3-33f6-46a9-922b-37faf4f2dc8b",
        "cursor": {
          "ref": "90ad25e0-0f82-41e6-90d1-8e53b5afbd7f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "50d3536e-22c2-4d3e-9b9d-3ff0f2686ed5"
        },
        "item": {
          "id": "05c23ad3-33f6-46a9-922b-37faf4f2dc8b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d3c6bb14-532f-4d5b-b6a9-0dedf9f26aef",
          "status": "OK",
          "code": 200,
          "responseTime": 2603,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b390acdd-31c6-45a5-a40a-c745e22563d5",
        "cursor": {
          "ref": "d17bba75-d80c-4da4-a03c-08cdcd8815c0",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3f3aa713-03cd-4eb0-a1b1-1b6cab8c2519"
        },
        "item": {
          "id": "b390acdd-31c6-45a5-a40a-c745e22563d5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df23919b-7ec4-4f61-a69a-997778190dac",
          "status": "OK",
          "code": 200,
          "responseTime": 2966,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "638205de-46e0-472c-8b61-eb5edabedf4c",
        "cursor": {
          "ref": "3e7694d6-3413-4a10-aab5-e1ed7e42e1a9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cf9bcef2-6df9-47cb-8f4e-3f005188a9b0"
        },
        "item": {
          "id": "638205de-46e0-472c-8b61-eb5edabedf4c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "caddb4ea-3678-499a-90e3-15fb6a0b9312",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638205de-46e0-472c-8b61-eb5edabedf4c",
        "cursor": {
          "ref": "3e7694d6-3413-4a10-aab5-e1ed7e42e1a9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cf9bcef2-6df9-47cb-8f4e-3f005188a9b0"
        },
        "item": {
          "id": "638205de-46e0-472c-8b61-eb5edabedf4c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "caddb4ea-3678-499a-90e3-15fb6a0b9312",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27de064d-9133-41f3-a1ea-05be40941251",
        "cursor": {
          "ref": "6fd4b9b1-8fa6-4aaf-be8b-092fac1b08c8",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a814ea10-2305-475a-8821-9ddcf0d22643"
        },
        "item": {
          "id": "27de064d-9133-41f3-a1ea-05be40941251",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7c167976-8158-484e-8f8e-85b01aca6ee0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1962cb-85fb-4474-bf6b-f4526646c1b8",
        "cursor": {
          "ref": "6c3c2efe-3026-4164-b1d8-8acf4b73ab46",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9165eea9-019f-4864-93bc-e7bcca5cb775"
        },
        "item": {
          "id": "ff1962cb-85fb-4474-bf6b-f4526646c1b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0984b157-458c-4364-8130-423399164571",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}