{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "306bfb8a-6b4e-428b-8de8-f585fed688e2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dbd03a63-9013-4f01-b1ac-337af4c9bf40",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9d0c4ff-d2ff-41fe-a9de-f4e1acd5b18d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "55c44851-8dc3-4b04-b896-e4aa01d419a4"
                }
              }
            ]
          },
          {
            "id": "18a90a18-88ae-4547-9a56-d1861b579083",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aed34d61-93e6-4753-b6a3-30d404952dfc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1ac7e69c-320e-4e17-b7f1-614bf1fe892a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4d07b626-ffb5-4e46-b870-25ecb9079786",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8fe10f61-1881-473d-ac18-7363cc4561f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ba8cc97-00a5-42dd-9806-6a2c2fe2ced7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afba8aed-a367-4551-8ea6-56305cac05ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0262f6db-5354-49f6-87b5-0302a2846452"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e86f8cc8-9c70-42c7-8312-0bf9fb1f44f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "699564c2-0050-4e2c-86e2-9f928f49f701"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "891c32d7-21be-4d7f-8f4c-8541a3b5c9dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ac33b44-dea4-4063-a2bc-2ff11b4a1905"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96919028-a0b6-4a17-a232-1d9a1a501d9a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e5a502b3-246e-452d-b4bc-d4b97378ffe6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "805de523-768a-4038-aa8f-ba225a630e6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b387ead2-334d-40b8-85cb-9d5d46351c33"
            }
          }
        ]
      },
      {
        "id": "8285201c-cf04-41e3-8898-453a5370471c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "61891d14-fe3a-462f-8d1a-e3255309dedb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b376a6c0-bf51-4b03-b8aa-8ed070f3401a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ed74759f-2491-41b4-9f29-d1a07686417f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d367d2f3-00d4-414a-a4ff-6be0354583e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2beffd82-6d1b-43a5-b062-44aeeffedaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ea1a33-2ffb-45bc-acc5-1bab54414aca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa534752-dd02-4a28-9933-62cf1d73846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9cdc9ae-2cd0-4c54-80cf-2544ec046523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850f9cb5-3726-4a96-b9f9-5a5d3309ed95",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b140d532-d295-4e35-897e-2f5a007de9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1f2659d-2d85-4da9-a228-d427a4e00902"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a429fae4-ff1e-4ed2-adc7-5073ee298d54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2552080-14ac-4837-86b7-8c83c760a1e6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ca8c9-84ac-4b8a-93de-1fd5de342dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb67964-df6b-4035-bd88-4fb66a0479eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284da1b9-a170-46a1-ade3-9eaeff9f3a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6264043-3a01-4daf-a570-0bf8034742f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10bfd853-ebdb-43fc-b8a9-56bcf1ecb1da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "707977bb-5b22-45e5-9c10-8e2d194b54c0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "262ac017-f95c-4673-94a6-4a1df609a7da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9518c680-2a06-4cc3-a773-6f171c73dce7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d7787af-6d01-4acb-a226-7e09f78dd4e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "69060a87-6f3a-4545-a62a-0004c989a9e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "382a560a-61e6-4c42-88e5-4790292a9bee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73da67f1-84f1-438d-9975-82d95fbdbf71"
            }
          }
        ]
      },
      {
        "id": "205aefad-d4dc-439a-9d0a-8d301ac37eee",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d6080470-e782-42e8-b6e1-26cc24d8a0f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff715195-1b3a-4a01-9339-77db7d9820b5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e0c0344a-2dc8-4bf4-b90d-0882cf968ae3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6fe91f-ad0b-4a5b-b902-a35f747bd904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19eb0d26-f492-452f-8ddb-cbd7f79c0ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef7398a-bfc7-440c-95a0-bb9ca9b7b7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aac4c15-a778-42c1-8820-39ee3ba3fae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e716ef-3a23-43fc-9f2e-af59cd4b97e6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d496c1-1716-4a21-b45a-f52df41e6cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8086ada4-9515-4a79-861a-07c20ed6f057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de537cf2-1e94-430a-b55b-f874bfd0fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7337ca5c-a0d4-46af-a99b-3492a638c7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ee4a1-2a08-44c6-a13e-48d0480a5b87",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb5f49-6ea6-4851-b05e-f0a607ec8e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45612e70-c4e1-47f2-8001-65766a3c411b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e3ba13-138b-4584-8540-e2529689ec1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22375267-dcf9-4dc0-b7a6-db4cde15410b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d9842d-edf0-48a6-816d-0475a1a600d9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26aa3c4-3e4a-4b69-965b-832e463066bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310a2e56-c891-41d9-956b-92e5d69e49fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d5e7bf-d3c2-4b23-bff7-ce3418fb4fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "709b2592-3a50-456f-b268-0636ddc8417e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edba7ae2-6fc6-4c74-8171-cfd969060272",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9704dc-951c-408b-af66-014b6063de53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb8889b-4dfc-4c6f-aa69-eb19455dcb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4468302c-4fc1-4995-8591-57c5e107ee81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa07349c-d970-48a5-bf49-a189f4a3a5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8535a2-14c5-4881-87ae-1f53d728eb5a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69860ce-5560-4878-94d4-ec8001d377c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39e0312-7266-42cd-bb99-636e4dfd0c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4105546-86f4-4684-b17f-642eddefd615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c2030b6-e68b-4c4b-af7d-ae2968bf8cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83673994-61f0-46f6-a1c1-cf9b12d389ec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d56bc90-65d4-4bd4-bd5e-8801572696e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be141eb6-b493-460f-95b8-21ee81fa5813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885f512a-76aa-476e-81c7-f0be5731452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407ddcd1-cd3b-4a95-9513-b09c72286222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548d00ba-a93f-4c35-bb93-3d41aca1f1eb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc4c17b-891b-4b47-bfa6-8936ccd69027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e95c604-1566-4cd0-93ea-bf0b502c121c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cdb85f-de46-4286-ba77-db45a2f44217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee911718-363b-460b-b7f4-a0cbe7dffb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d480d-e49b-462c-ab07-4a960926cb45",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c0ad3b-4d7b-4dfb-b77f-4dc93b65791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0feabfc-0243-4b74-ac65-921f92d1f8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a872edc9-c62e-4d52-b2d5-2553d9b6ca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd6bca96-10b6-489c-ac5a-c97db50da0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f9ab2a-b02e-4686-b499-b62e1387cff0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d8812d-7d78-4ab7-b3ed-7341fce742d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af314af1-34be-4766-9304-f32a665a26be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6450c5c7-8638-4004-9be4-e9263e8b129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63ea2ba7-0df2-47a3-ba54-deb29bea1cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bedca8-6d4f-49a4-9c70-2c399cb25960",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dccfba-9599-4319-80a5-813336f54508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053dd543-be4d-47dc-92fe-64d554748b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ce681d-06b3-4397-88a5-7cc91cbd1e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2df13b5c-c8ff-4d29-8cb7-14794f3a0724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f74fdb6-3c08-48b0-bd8f-66b74b2fd1ce",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7673f0-3958-4d70-8a58-f49f023867b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a00e29-add8-4d5d-a976-1e180290d732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4846fce1-8f05-4653-a666-c9e2607b9593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8670114-b7b8-4973-87a6-c110d16d723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e6b1fd-45db-4f4e-a61a-e946b7eeb19c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d242ed0-f2d9-48f5-8c4a-0be039003c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab89d2b0-1848-439e-9026-83e956da53e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb9470-5a97-467d-9e39-c743b25f06c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e85310c2-b25f-4197-b748-e5b383aa7c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3c39b0-604d-4ad2-ab9d-9b89bcfc3424",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1101bc8e-e0b2-447f-a9d1-f803b0a67c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34727fd-9444-4098-9946-b396f1829e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e322cb61-26af-429d-b37e-1233ada6fe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6db19d20-79a1-458c-a359-c92c0290f5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad75a01e-4034-472d-a45f-c92bcf47b029",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e85184-6f88-4ecc-9ee8-cce84fbd1e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c31d08-9de4-4b4e-980c-8ac1543ffedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a93d05-3e0f-4e19-b81e-ada011acd2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce58313e-739c-4c86-88ce-b60ec32b8ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c1d6d3-0ff0-4127-83ff-8264e1629abf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967affc2-feef-4087-b812-79e1186a0fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a6befb-a859-4141-9df9-e1288cf2c33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c20d155-aad8-4ece-b418-4ceb42043f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80766273-ef8a-4efc-90a2-3c78e9418c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a016f474-1d27-4ad9-ab83-2223f273855c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b45b0-5b36-457d-afd1-e3d163689b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b25dcb7-ed2b-4467-96ec-1492c2b2bfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb2f236-ec6a-4130-9945-d4442c8f8788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57ea5d37-15f2-401f-827d-4afccf40d449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319315a5-5964-4ed6-a0fe-b6533ba82bb7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a6189f-3844-45d4-bf54-d21e8f1a14a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ce3a86-b6e3-4ea5-8ca4-9204fd73a74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5bf938-3d5b-4eb0-9f0b-2204a2b15d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28599c0f-52cb-439b-b2e2-9122d7097a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0512235c-96ec-4b0f-a2f8-96f966540bde",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2583ed90-447f-4635-8669-c99d1dfd31ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c084c2ef-7e00-418c-bb22-6ff60b36f07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23f63a7-3412-45fa-a5f1-acfc76f66cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9ed929-32af-4532-b084-d60a3be03355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544dc3ec-d940-423d-a35c-be5981578055",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2560d9ad-2d5e-497d-830d-e4a319bec85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b772b05b-76e2-414b-a4a7-3dac3b4e1759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc6b539-6554-41e0-adff-8d1f35840e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c592fe9e-9fe7-4359-ac2b-9904ed3009d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89817e6-8608-48b5-b329-1616b0feef21",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349139d6-460c-469d-800b-12a85b632fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b86955-9e42-4fd4-b94d-29c66b692e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df443876-00ad-424f-a3b8-558143b23e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "281808a7-52c5-4c9e-ba28-04d8d34aad66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0d09dc-5f60-4e8e-99b6-f47c0cdad53b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de94f855-70de-4eb8-bdcb-099f99a36643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784827db-063d-43d9-ad2a-fee3b0336864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25016e73-99d4-4626-bd92-a94537d1d737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0fbb81-af6f-4e6f-8bcc-1a31d5085d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996b5f5-feb0-4126-8cad-0c29aebb2d7c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3c4569-fccf-4a79-8967-205605e00676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa4641a-edbd-4845-8679-166ec026e68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e216d0a-e3d5-4215-8249-c3897d8b0884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31de3856-f64e-4857-8fea-1053141e57df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7667cb8c-b622-4947-85ed-62b970b2fc37",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e4a6ef-abe6-4e80-8391-e7eb2743a7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7421678b-96a7-4e02-8f55-0f0e2cd0777c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff19a252-e3e2-49f9-8530-30d6661238b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde83fd5-1e97-4d94-b3fb-7ae9bb7670c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc85e345-11b6-48e0-be5c-9334dcbe12fa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f223d2-4c9a-427a-a11f-90352762f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca561cf8-2616-40a9-b9cf-6d2e274662a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb25a42-bbe8-4c95-ad97-7c579be245c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6859c7de-1655-4470-a526-ec884542da60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ef0d79-1f2f-440e-ae1f-4f8cca98ba79",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2105a02f-54a6-4f20-9a22-103959d9efd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33080cc9-e5eb-4afe-9618-bb40b30d7baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d26eac-6386-400a-b29f-86827ae77b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8aff2f-ce3e-477b-bbca-9239b6885889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97833cbe-473a-4a7c-bccd-26c9945394f2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cdffe3-b05e-43df-acb0-021263492976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a4e9ab-a1d1-44c6-8fc9-98adac4619dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f846d0b-cde8-42f2-8c0f-af6eeb0cf5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "783e5fb5-5a4e-4811-98cb-6ee6684e37b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2214f748-f80f-46c9-9e40-f19df669184d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be237278-49f3-480d-83f3-25867ab1c015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a5ceb8-0903-45e2-bfb0-133cb346cd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9298de5-5b0c-4915-af53-dcf8c5bb2fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a6ddd3-7448-46fe-becb-289f5e6d1e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9215d24-72c3-4759-bf37-c152283eedb6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27735236-d1b3-4fd7-ad59-b01afc8e5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef314dd-c8cf-4e6c-9419-42bbc249d8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6cd5c1-67bf-4019-ac2c-ebbc97bed02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28725ce-a860-4861-9ad7-ab15b546d480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b81d1a-3ef7-418d-818a-608cb04c4eee",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8c53ad-b7de-4e12-9887-d881d32baa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32660369-aeba-4a5a-9a2e-a8e6d7b77431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aac627-03d2-4ec6-a810-d8a46d4e20f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e58cf3-0e2a-465e-9b84-5f911d8e575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb848580-872e-4cde-a5cd-980874873fa0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b333177d-da5b-4f31-afcb-3426c0584e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34198004-aadb-4d22-8027-8e012b33e58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3603465-64a8-4532-9911-696f2dbe90d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c7b9fa-f893-46dc-a0f3-37b0ff23692f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5c26d3-8fc6-4040-939f-9b5d4e6f9a3f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfba6499-3a65-401b-b1fb-4a0f11d11d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc1a1ff-b8fa-4f93-9e0b-ed2c468902a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24d7cb2-f768-4b28-934c-17c4c5ec1348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc6e7ec-c40f-4387-b239-780d0a85a762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b310bb-6508-4572-9116-2dfd03e66d87",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a80d3d-2205-4ca8-ac02-c6ed39893fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89ec3c2-686e-4b3e-b6f8-f5d49f4b6bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d9f2e0-414c-4c94-96f0-80d7d1237bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "613746c6-694b-4920-8858-a1d4c91d6abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53f706f-0701-4933-a914-1b4f59467a57",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a9cf5-1fb3-45f2-9314-c90c9764e7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e902f4-40f0-4415-82dc-5407ac122714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2c158b-a181-4d46-b323-dd07dc4ef1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce4d341-2810-4751-9f44-2586a2f26be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6a220f-820f-4163-910a-c8d1f9f32a8b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfe5898-75cf-4403-8964-4bb804ef8544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cda9f6-8b56-4520-802a-331626d36324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a484c5da-c06a-4bec-979b-94a01ba471d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "03d812b4-0104-43dc-a0e9-d653d2ac95c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e705eb52-18ef-47ef-b8fd-8d0ce5864304",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c5d07-f057-47f2-b656-579b0dac862b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d380faba-2dd7-4be6-b3e5-ffe8afc09ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bd109d-f927-4642-8c9e-03a6c5319daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d72fe5-d3c1-44d0-aad3-05d2c99e8b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294ce506-ea61-42ef-af6c-e7e3a72444f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d543571-ef8f-4216-a105-e5e6b48e4ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50813b6a-afd7-42b6-89e1-dd38ad59abe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a462c6-375a-4164-ac2c-b8bf62bccf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b7a535-0909-479a-bb98-ed4279c12c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c724424-e2d1-4faf-972f-c7e944eefae4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5313d6-f1a1-48e4-9090-b783d2ce9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc9a6d1-4f68-45b6-b0f5-f8ac43b22216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd422e2a-21c3-401d-9d62-df95258792c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d2d64b-c599-4a35-a606-aa663efd082b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9805eb93-09a4-4db6-81bc-487d5f19d773",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7804d48e-d3f7-4f90-8cfd-441f91cfdc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06b20d2-6293-4ede-a85c-6b9d4ef621bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd628b8e-9660-40b2-a155-f8c21a205d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9632d0-b32f-4a22-9353-592678dabbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3086dd-4186-42e1-b435-de263b5e62a1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a15832-f66a-4c6b-be0a-1acfcffc5859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1978a628-58da-4afb-ae6c-72643b6459b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3dffe0-a02b-43c7-8768-46d2de43d368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3760b9-4335-4d1b-b32c-dd22cb2a98f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0e3612-cdd4-474d-ae2e-26d121aec583",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1c715e-633a-40fb-956d-a5437b72750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7402d67-d4bd-43c5-b4d7-b91e6563cb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64647625-1a08-41a4-bb9c-71c970b92cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5672a0-e874-4be5-a89d-a5b74aa2bac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6e7dee-9933-4241-89ec-fb4ff7b47e81",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93870141-7f09-4b75-bf94-fd924448b70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c251a26e-07c0-411f-8a9f-5316b5380b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400c5d28-8614-48dd-b0fc-3e87542b73ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9417281a-772a-4cd1-9776-c7e0712b3f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a5a812-0cb5-4849-bfd0-9353205ce67b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2cb878-5c1c-4ae1-bc0e-0c79944daacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c423be07-d5bf-4609-aa52-2b98f3ed170b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd5b0a6-df93-4a13-87bf-7945cb904f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac2d13d-a674-46bd-94ac-a4d2faa22167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee42b23-cde1-426b-8f7b-877673daeac9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab27f4d9-7edd-48d4-b654-6dfff6a8d62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc5be24-fab5-4dc1-9a6f-397d8b2db084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787e298d-d4e7-4e31-bd2a-7f26ce9a12ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "910e87a0-34b0-4c9f-97a2-d68d5b3271d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c859a901-be4e-47bc-909c-d7a9b1b0cb39",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d1259b-8511-43fc-a59f-2f19f371eb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ec8698-aeb7-46f2-805e-5a942c4e8657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ed17e1-5019-47f6-8273-24a296bc4e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cafb3224-c6e4-4e0f-91ef-d16bb527c531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db278855-7af9-42f7-a1c3-597997832a3c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49789661-b37c-4bee-bbb7-668d2e5b256c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020778ff-68ad-4408-99dc-06c8afe2822e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f48c917-ea73-4200-88f0-982e0cb39564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c0eb03-470f-477d-b50f-aa99b97b94ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a030c888-4720-4498-beb7-3b43b280f334",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee4ab7d-dc69-444c-87f4-df84ee630a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fcfd8f-46e4-4504-a5d3-99fecf4d89c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3b39af-996c-4d01-8843-48cd683ddcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af62d71-0043-4c6d-aa62-8691059a8ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343a2f7f-5acb-423c-9fb7-df133e8c0bd5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e47c50f-def9-4f58-8a18-4bec48bf17db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ff822b-031b-4e30-94fd-0dd5b08008b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4757d7-1cae-4d0f-a47a-3ade4bafbe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6af588c-5153-4db5-8273-28ac1675a1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b8e2b5-df8f-4f33-8724-e0abff13c572",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8d271b-99ea-4d69-b00b-90b5f186a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64de171-3f8a-43a7-b850-08e1d048053d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d91b75-a392-471b-b448-09c0704fa20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdcbada-4f71-4162-aa75-bf1245d16848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b58a0b-f1bd-464d-99c2-f93d817794b3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4fa74e-a4ec-457c-ad0c-7ca8c119199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2365585-931c-47e7-a475-e66fa3f94c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e754cea1-39ba-4c1b-b6ef-d4bbc986c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a164b1-60d3-47e0-9cc5-185947a9ece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf2507a-554b-4b1e-b0b0-5182cacea75d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0af4361-9ba7-4b2a-b297-12ef87f8e4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc30bc7c-8b13-4fc1-aa9e-5e10d4245ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3540ed0-ef51-4efb-aab6-7aca1d100240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0192c568-8c44-4c3b-8107-ccba5c8ce9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faf939b-687f-488e-b225-a7c3c13815d8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fdd041-209c-4598-b712-75b9ccfbe70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f70cca-d777-4d1e-8de3-47f328e1102a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bdd437-9563-4db0-b79a-42fea0a95f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "045df3f9-7d53-4385-ab83-90df925c93bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48a3aaa-7479-404e-a3f1-1c14233cec82",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acefc45-2b4c-44db-9de4-ab6599e2ea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05180648-bb4c-49e2-922e-aab682440f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400cc7af-3846-420c-a223-afb498128f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d81dd990-aa82-4e95-bc63-6b97e235eef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85088df4-0f01-4ec2-98e4-693e1a13adaa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98f6ddd-d2b8-4b57-8eb2-a4335fe6c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d0dc58-38e8-4e80-8aa4-b03f1b38bee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f340f96d-6761-4103-ad11-c5a329a1229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50018b68-cbb2-4f78-a510-8afa6c459592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0315a77f-24dc-489e-b1a7-3bed2162af18",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f48c84-b518-4a71-929c-5b8a6b947b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95d2076-8ab9-4f78-8937-1192c80a2e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee49b5a-3787-4408-8e2e-f1eac1c36873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03f6d9b-f7b9-4abd-b975-62f417bb910b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe91576-4830-48f5-8173-57f2c72bebc5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa22eb0-075d-4cfd-9bf4-e0942f3f5684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0b4537-4afa-4ae2-8b22-3705c052b5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25636530-2cbc-4df6-b993-f3e31fc0fe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "487f2f3d-9cb4-4f04-879b-08840e0a202a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a6ef38-27b0-4b0d-9045-c3e3a402a2b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ecb69c-0670-4920-9659-79c7ee4c6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7316f7ee-d2a2-425f-a56e-49bf0496b6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cb5779-f437-46f4-a104-06a8e947fec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04719da-9cd4-4a11-bda1-0745819f22e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676d3506-5f5f-4c16-806d-d272626c4f89",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91527e27-c89f-4363-93c4-9c688ef66f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1560f4e3-ff7f-4949-a0b9-dc7794001c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4732f1a-0145-4247-bb3b-4760befa5d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "440d94f2-de10-432e-8140-325785d42719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3315b7c0-cd23-40da-96d3-848ed353872f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63496320-c826-49ef-b7d8-83ba922deb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9140b127-d6e2-4696-9003-f1a710d503ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f650eb-6811-4604-b4e8-1ca7172c5874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43455b26-fa04-4104-aff1-1f4392368c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5614b17-4809-4ec3-a7a7-ab38a287ec9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eac2c15-15f7-42d3-a087-9ea66e965c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6e7907-5916-4da9-8959-1e3d86851aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f75f4b-ddd9-44f5-a62f-47faf2fcdb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b8900f-feea-4488-83cd-3857d626e319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e0786b-bf1b-4ba4-a698-dad8016da8b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67012d2-153f-4f2b-a7a0-df02809cfc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687a2234-3ef2-497c-afd3-98df99d341ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17177fa4-9d1d-4ae0-85e2-51a9074954c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "981d2658-6e2d-45ab-bf0e-8ace8b8847a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478d7349-3de5-4565-9600-bf24f49087f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c4ae11-6b9c-48a4-aacb-613c5620c01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d68cbd9-45aa-4190-94dd-5aec13594b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8a677a-20f0-4b93-b9ab-feca3444b0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae093c7f-191c-4a7a-8d9b-000f4c88c09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c510c32e-545f-4255-9b12-e2dc38bff209",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7c0e5b-1106-48f1-b3fd-5794e6aff0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca6bd53-42ad-4e61-af15-84577e3f2e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635db694-61bd-4dd9-9f6e-4156204f9da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a6e9a3-46dc-4e8a-be44-6fe5008beac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8566b0-cf01-4af8-bbcc-cd45b81ff56a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942a33ed-099c-454b-a830-22d1028dbdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748270d4-1c76-4925-ac02-4a686d6c13d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58760673-a20f-4e63-b3ca-62ee0e83e9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0bfdc6-1f82-428a-b152-948094849d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265c476-d511-4551-a473-3574ce0a4347",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b66730-5ba5-43e7-adb2-47bc9363b750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8902e1e6-b1ec-44e2-afbf-9fde0faf1e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f352ea21-98a3-4618-b979-0b16fdffb685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb72a536-ed88-4eae-8c6f-48c8a95c01d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58614b7e-8c88-4917-af85-edd6a3f7e415",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee6b05a-6e94-47d9-86a6-955a4e6fc293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3ad9e6-444e-4885-9aa9-8fc501d4adc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f037badc-0e23-435b-94f4-e9b93a11484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "103e4359-73a2-48e0-ba53-f3d8374646b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7427bf7-c03f-402a-a6c0-6242df7047bf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3770c381-4a6d-4520-a31f-755e598d177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7bc8c7-c252-4383-8a64-1d3ad2d65e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b647fadf-b723-4cd1-a0b1-bc891918670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75c30a58-b861-4094-a765-44b0db158499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b043321a-1373-40b6-b858-e20a5af3e4c2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8885d551-a7bf-4037-bc88-4a77c5b8c485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d832e70-f21c-4210-bbec-3e7f096c2eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca18cd8b-835d-41d9-9b40-1bc9d7d10a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6399660-072a-4505-9877-241ba8e3e4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad18cff9-a404-43f3-9887-2b5d235f5df3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11131f06-949e-45c0-b8e9-0a7d84d93bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1dac25-76a5-48ba-843e-7cc69a9f5909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffe33be-5f9c-455e-9683-3caac585b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf70afc-047d-4074-ad68-6bd12a8cab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d59a35-eb52-4dea-bcf2-45c4cbbd3e6d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5060b3c9-a627-4412-9ef1-92d2b944c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1928df6e-bfca-4d3c-8cb2-29b13cd061ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ecb10b-233f-4273-8285-18387e84f84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82ecd038-fc15-41e1-bd8c-d3fd63cdbe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165c94cd-135f-4d0f-a4bc-31f6f60ed1bf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ab1452-a783-481c-a453-2eed995e5755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4dca19-9dbc-4884-a73b-a989488a7a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450646ec-288e-41a6-aa8d-fe61698bdabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6110ea04-1c94-4c41-861b-f4708a8c3309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139d1fa8-fb24-47c8-9b0e-b196b3cb7b93",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b497e-0e57-4e73-a1e2-d564e58821c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4345d3c1-9798-4304-a82c-db78eec31f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96afe80f-b154-4666-9f8d-c0bdf4ee98f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3b83da-27dd-4161-acc1-0d59481a3188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dc24c7-813e-43bd-a485-9d7c885a6d3b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9778b201-debf-4d6c-95ce-ed991ffb326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9905273-491b-46b6-937e-b2afd537d9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba1a735-bb64-4919-9096-de6db1f5dd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd6c08d-b067-41a3-9c07-a0255ff54858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96992751-76b6-4d60-abb4-8ad2248f7156",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa75b92-a641-47ac-bc49-63a67df9c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec78d958-7a3e-4806-81ae-ae276aa15160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9481875e-ad95-4c72-b88e-602165ede773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac74460d-bf5a-4818-bb47-19cd2a9b3c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe821621-fb4b-4669-9ed1-cd1103dd0d2b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79809de-7fcb-4b05-8126-25e2ba21c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682d920a-f0c2-4912-b8f1-d48394fa792d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a8c2f2-a085-4970-9b72-1e8d5eec545b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb03bd38-728f-462b-b099-f847a25c9180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f5a613-c1c5-4e95-aac6-4f743deb6b00",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8d6e49-29c6-461b-ae60-c7e47f2bae52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42e30ab-e46f-4384-b21a-2bc1011e0f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97af322-4c7b-4f75-91d7-e78afed1f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "482ded56-85da-4e37-9134-ba5a0a2be039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b90f1c-7b65-41f3-9ff6-ded6f71d567c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd97bcdf-323c-40dd-a371-4f8cba56b5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3b467a-a3d0-46f0-bebd-3ce9b1aaa93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80caa38-7bc2-449d-ac5b-0887cd5dd7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "820c4c4f-722e-4fab-85a7-710be64121f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a46178-d696-4680-a6db-4c1412a8db19",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129bc90f-93ee-4afd-a56d-6b37081f4788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40c081d-fed4-42b0-bdd4-7588b40b7741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c833d1-c7c7-47f8-a2a3-603d36790b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01d6ded5-7414-4dc1-97c1-1ec9163dc537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fdd7a8-494a-4337-96b9-cfdbab0d0b1c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d14a20b-1987-4f36-880a-3bce76f12c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb6efa2-4269-425b-8135-577c5ef98f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf3f69-9ead-4789-9def-183e84cffbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e56de3-2f71-4fd4-b84d-05bf4c3e715f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728a2972-99fe-42a7-a982-3fb83cb026a1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3586d758-46a6-402a-ad89-177e0ce781ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd6789b-87f5-421e-9531-dff161aa9eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc74ad46-3ad0-4a1b-b6de-242aa56ef67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2f0d60-5359-4a66-9766-c14d1c98d7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7176a713-eb91-4ebf-956d-6711797b7bc8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a5aeff-2d1d-4bd7-bcf6-8ae20ace04e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35478ddc-a3cc-4d4a-a133-ea529f62a5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc2f4b8-3e19-4b00-884a-1cb6bc15675d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4531a35d-8a91-4447-b09e-8f3878633770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535b601c-d4ba-4fb2-9d68-854066169076",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4b010-7076-4a91-90c7-de6cde50b048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5813c5-217d-4606-9214-7ab726bb9c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feb34ce-0766-43d0-acc5-f690bd4bddb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0590a1d5-d485-4c5a-a344-8d638734b4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6b99ed-2308-401d-b16d-e1de899d11de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2b7939-ff66-49a8-a93b-89e879315659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a8ca4b-8e61-4425-ad48-08fdfe723177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42479d30-8532-4ef2-aa2d-e33daa92b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f5d4a5-b9ed-48b6-9f48-962ecad70ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64997fd0-a111-4808-8da5-79c8905a6c64",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c29b6b-ea5e-4068-a640-cd7e5bb8a57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40207592-cd20-4dc0-98b4-49203b651774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abb9342-fe33-49e2-b1ed-b4dda9612415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e89d05-8112-4c80-a2e4-631f0b005de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6161dd2-3d4d-44d0-ad61-903a5afc3616",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e00141-38f4-40fb-ad80-5874734d29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f501425-48cb-4afc-aa52-f32e7a6789c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb1a39f-dc90-4081-af0d-8cde15ad327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0668e6-9447-492f-99a5-ccd782ad0d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb038912-875a-4e6e-9f06-d4a5337685aa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8336bcf-b246-498b-bf2b-6a0fb4abde7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed810974-ed35-4560-a79f-17f23541cc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8702bde-8bac-412f-9cf0-16ea9b19a5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a9d079-4c2b-4e53-945f-e09ced68fb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0179ca79-9be3-4cf6-90a9-0641274bd07a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4b00b4-df9a-4098-9099-16fee84e7e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e868ad-502e-4909-b623-759817c040a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95d3e74-7e7d-491a-99fd-cd5042703b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "253d971d-01c8-4e1a-a657-d27759bab745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970dae1c-26cc-48b6-a1bc-849f02607c36",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613a7c7c-fe53-42e6-8c75-27b282de7c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32029d9a-df93-416e-9cae-d7b3be3cda77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d8fa3a-2739-4181-bfa2-aab9d1908637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5893d2-e478-4a59-8a78-3c261538ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e1a640-9dc8-4f96-8118-d9688184f85c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e96727a-92b9-41ff-8ce3-994c608be211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b714209c-c22f-4c6c-8274-87572f063406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa8e172-7334-434d-bded-244cf91cbe74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77c6204b-00a7-4332-8e01-7af85c157faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5f778f-4293-491d-a05f-78fb5770532d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db70592-4f41-4835-a94d-b551a7c91cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17066b2a-3c6a-4029-b42a-e4fa1b49c070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5706609f-4f9b-438d-ac18-3f7a1c482be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c43f28-a44f-4a92-b9d8-37840c8fbf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a8e03e-7a1f-4dc3-874d-c2a7222626a7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7467d4-1c07-41a1-a4c1-15dceac12957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4c738f-72b9-4f04-84ad-057f79d9a9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0185849b-0363-427c-a901-4d651dac373e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9147d111-b3d4-4e13-98ab-2a5279dc1888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35b865d-06ee-4fba-a156-b03626d1d985",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b3420-b43b-4414-a015-6a314a3a66c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aea05a5c-c298-4211-a637-a06c5189fded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18d07d1-171f-4151-9af9-095a9122f164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "311b3263-3dc2-455a-a14b-ef3d9959871c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "808339c4-2ee6-4c85-a78b-10505e69d664",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf11846c-fe85-4355-9544-680c2bf837dc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a75f412-f53a-4f90-9c5a-c35d2a24ccc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "847eab46-0f74-4968-98f9-937709cf4f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8672a7a-798a-4123-b025-a1a0c82a36ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc86194a-25f6-4f04-a444-e71f470b7f94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db246235-1bc0-4afb-bcc4-a205c5612f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "472cdec1-44f3-40fc-bd48-a743fda971cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32bf7b01-5af7-4391-af3d-33a46b68cb0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9a306bf-adcb-4181-873b-b20f07ae19f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e9b2c58-df28-4841-afa4-51a93bf7ccb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c71c3ab-a412-4a73-a71f-9be7f77ee26d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11cb90fe-5c80-4fd2-96b6-d9f6b82ff742",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a91246bd-85d4-4e8c-a714-77de05412498"
                }
              }
            ]
          },
          {
            "id": "b2c659c1-111d-495b-bf1a-0090991a3917",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca2d738e-e538-4792-a285-6b40ddf3f080",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "91f770ca-9c65-4ef3-abbb-b23a7704a4d2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf544af-db0f-442e-aeb0-90493c0b1e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8994f76c-ccf5-460b-bff5-703db734b5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593792ad-69e7-4689-bc3d-48f9ec957ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be21fed-222a-49dc-a18f-ef963248578b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45c5ed31-831e-4df9-bf09-76618cf0ac23",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84e85ea5-d4d6-4ed5-a2da-17d553529dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecbac1ba-94b7-488e-a00b-357581c6c0d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07720894-2ded-43b4-b877-19e9d2958f3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10c07107-9f56-417c-b33c-bbdb4f98531e"
                    }
                  }
                ]
              },
              {
                "id": "751f2ea9-584e-42ca-a5c2-528be1b85698",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "092cc119-018d-478d-94d6-3f44187b7202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e54073f-4abe-4e6b-add2-3433057d1daf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c76f4ad7-d42e-4a59-9bd2-35d8e1910bda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d8a56e4-71d1-4873-bd3c-30e922bd79b8"
                    }
                  }
                ]
              },
              {
                "id": "2243fffb-22ea-4a38-ad4d-be5f129fb878",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1bfe1fd-17d2-4451-988e-98679daa09d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22295e5f-2d64-410b-a3e5-937f5ab93b69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a23dccaf-b0fe-4ad4-9ba8-4015b4d5f704",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52be8934-5675-40e2-9bbd-85595d9d04cf"
                    }
                  }
                ]
              },
              {
                "id": "b99f48fb-224c-41d3-a343-a60f067b7a13",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07a7da37-308e-472d-98c7-6c56303f5fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97031c18-3ef6-43b8-97c9-6943f2688344"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ac86c11-5f37-4652-9749-c632dcb893ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5add66b9-d99f-441c-bad2-81263d1186b1"
                    }
                  }
                ]
              },
              {
                "id": "6aa4bad9-7d4b-458d-a693-26b10e9ffc4c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "386efc57-dbe9-4a00-afc4-83bbf1d5543c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3bd0993-0451-42d3-be6e-9ddf47d0534f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57e7afe8-48de-41c7-80c6-03e4b08e8c56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ef67162b-af65-431c-8e3d-0214bb7ab271"
                    }
                  }
                ]
              },
              {
                "id": "2ebcda58-9082-48ac-b1bd-580610431a6f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f498479a-cb25-44f8-9995-4c87f7589406",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6492f4e0-bacc-4247-972c-f52919e3749b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "844e48a0-f03a-40e8-9453-8a32bc1ab72a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "442786ec-0fc5-4283-ab45-1b4caa9fb078"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9edef38c-d55d-481a-9fdb-b3d023cc91b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc649bbf-5dd6-4463-92d2-119ecf1f81c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e49447ee-12de-4221-a23d-7fc26f48dfb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fa36807-e7a3-46c2-aec6-b7ab3b937c69"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab23c118-36ba-411c-a339-951be26ffc6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8dfe691e-1e48-46e0-9ad4-8c270f32901c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f2315eb-0367-42e8-ba55-fc083b6dbc10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dce776b2-4ddd-42e5-9489-1b38d83350ef"
            }
          }
        ]
      },
      {
        "id": "50992231-7e9a-4bee-95d6-ea514abdc82b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ae5b1da5-2894-4ac9-b570-421e4d85f4e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af9da2f5-f3c6-4502-9657-d529757ca3fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad38add5-1452-456a-a197-459a4d17bab5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9765fa21-14da-4890-ad35-ed25d339ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed9ce0e-db21-411f-b200-49955004f347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505c3bd7-2b86-4fa5-9f3b-9be4187b890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "133d08f6-213c-42a0-b9e6-42e770aac7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580f2846-0ea8-481d-ac4e-6caa1e0e1661",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67990fe3-09da-4f02-8632-9c2d0124cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d4f4ef-4f37-43ed-bb6d-be8bd80a49da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7178c5-eb62-401e-a129-4889a09fad7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39062831-2963-42d7-a340-f349ca350736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103c072b-6c0d-42fa-99c6-7dd93dc5a41c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43b60bf-1916-4bf6-8aa8-c7adb76aa791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd1d5a5-518b-4f2a-ab4f-348b85f5b031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430433b0-995c-424c-8d63-05991a587ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24b92c4-0ff0-4881-8449-bd2a1b5504c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee0d841-be42-4893-9ce3-2bacfd0bb8fe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20ef402-5086-43b5-b465-84473bc5f587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a906bb-e52d-48c6-83f8-0f38313bb878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35304f7a-e506-4d6e-b58d-b15e327a161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0537e1-ad53-4f8e-bf8a-9240f1ec0d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a21c97-efa1-4467-992e-0d7bb3bb04de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b8ed17-b086-457f-9b82-be576bc318bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8cc81d-b745-4d8b-9d4f-2cae18f81546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1528096f-f3d0-4f5d-a332-056e8f977a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "835e8ee4-8a16-43e2-920d-6167dfee6cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db581e9-2d63-4a2e-b726-3092f779844e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8491f5c5-b29a-4bd9-86f4-6171eb885ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4482b7dc-45ad-4c81-a402-2b238e2d0eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ac86fe-9ba0-4364-a0fe-2a67fb530cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2761e341-b94f-47cf-a723-2005f49e0d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c43e28a-06f2-459e-8986-1bc9456c00cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623e317f-27ad-4743-9d69-38de6500dc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e4bb21-c350-4656-bd88-571e2f3e0019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a4585a-a963-4422-a665-be74dd56bfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8299b06c-d837-4ba8-8a50-f33b8143e19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374bcb56-f41b-4163-af1f-6eed901b535d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a4e20e-a50f-4d47-960d-798ad25c7877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a85a3c0-43d6-4e5e-96fe-e3b0d864501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f053d8-cab8-428c-a165-524a58abd8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36cb28c-2fd5-43d9-93ba-3f833b81c641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8e81c3-2571-44a7-92ba-7cfe37025027",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56129319-1914-43c5-8abd-4320557c8e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622396a9-b509-4be5-800e-483657fd6cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4da180-8e33-4905-ab3e-63369684266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ec38af-a6ea-4e7b-9942-ab57eff2a563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6951c387-f602-4686-ade2-e7194261c58f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3360853e-12f9-4d82-8a64-ac44adbb3702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fc6ecc-8969-454c-8a51-fbdbb6f9fa96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd22ddea-6f07-40e4-9c56-6e06f065fbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "585ae34b-c78d-4004-86c0-f750efe7563d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ec26f4-9611-489d-8912-933ceea58c4c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409bacce-722f-4166-923d-b31ee0233340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613dc824-a742-4f18-a893-a904bb702c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662bb610-554f-45d2-8f81-967611676223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e54a9092-de7b-4adc-869c-ea5e2b180b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee454ff-3685-4afb-9cd2-97c53742253e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68b6b11-30c6-4a91-bd4e-76d01bfc7784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78cafcf-e269-498e-aca7-3616da8e4a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be07332-3d23-4016-ba4f-abc0bb046790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5046d0-841f-4604-8259-c970d9f0bd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764251d4-1282-4680-a291-5bc16edfa83d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df08e950-e954-47e1-96e8-005d3372447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d351be7a-0314-449f-8fb1-67b2a1aa8c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440e61d0-918c-4ee4-b2cb-01a78657e374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfbdf30-73f9-4df5-bdf7-d0f75969df4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd15bc0f-fa18-475c-b908-ceea158fe9a3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39cdb5d-5511-4956-a02c-07d0b2639375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b540310-04ce-4b49-bf3d-94b10ea1a68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9de7be0-f971-4a68-b215-7f275a298f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b26e3c2-57d4-4994-9ea8-dc5b095bc282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d44d0-c2ef-4d1a-8ce2-84d1d7614fa4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8720dca0-d24d-4402-a26b-7548d08f061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802ec6c7-7012-49e3-9836-a998b64a4537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186f6493-52a8-48f5-8c9e-6c6251271609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "523ae5bc-c558-473e-9aaf-a8a0b0610c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659423b0-5e4d-483f-8b7b-5030faa03eab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d89f37-ca28-4003-9257-e3356f870693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060f1d70-7be7-457f-8e83-0632fa66fde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fb4d40-b2ab-4a87-9200-3fc7869ab201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0512e39-2376-4b43-a821-c7ef7da9170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcd682e-d9bc-4dc1-b5e9-41179dbf5350",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176ccc26-7f18-4d75-8aed-0a5e85ed0697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9515d04b-0df5-4013-9646-1aacdfd49de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694b88c2-de9a-4289-88ac-2e8ad785a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca666ae-94e9-45c7-bba7-ff360496dd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdb3c2d-dbb5-4067-a414-5b92240a5fd8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6807e839-918e-4e6d-8a45-94224e2905ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85f03dc-a6e9-4267-8137-e15bd5b1ed57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ac8f08-5aee-4f35-8c57-8bd0c0d0a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdb9c98-49e7-4371-9eba-ed149196506e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9115152-58ce-48ef-9fca-355499664165",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f02184c-acd6-4152-965e-0ed4108dfbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f840653a-ea9f-4d5e-8080-c2cf74da70b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d6f253-7d21-42ee-9d39-f1e25d9a68f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "235f7be7-c091-46cb-bb2e-dab712a9240d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e69ce90-5453-45cd-81bc-8f38b57d6c68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f2d105-30c4-42c8-bc50-267f47fb7eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5e91bb-b2ee-4130-9dad-ec3fdb174ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ca35df-0868-4a0e-b8bc-07305ddd0119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2a5c8e-bab8-454f-87a6-bb9a969f1ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9349f074-70bd-4c65-bc46-c63e0cdb8e0d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d63d94-45ff-42c4-bfbc-a319df81cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7b18dd-4d19-4ba3-83a3-872d44a33347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5638cd-a683-4bc3-ac5c-c296b04c9468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b70325-48a9-4caf-b1ca-50f3c9cc33fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7571a8eb-eaf9-4f50-b8a1-d9a60bb7d1ef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad5b4b-1f0a-4fe4-914c-6b45e8394704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820a0a05-9ea8-4d3e-adce-457a7aaf23a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90f3a71-0454-4357-8c74-9dbd6b4c8963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f968d604-1d42-4bcc-abae-470aca078fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d68436-d567-4ade-8a4f-8f84dbe2b670",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe696fda-acd6-4efb-82c1-2d4698416e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be551c1-ad22-41c6-a594-6334a90cef23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3791ee4-a35f-4f1b-9962-cbf8821d90e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8051ad42-d71d-4ceb-9680-89560f74462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aef74e4-cac7-46e7-a5bc-ad5c52def718",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a48f9c-9c51-4664-a147-7dc62bdb66d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfa0d5e-8224-4334-8d09-1eaccc20f970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844c5dd8-c740-4e2b-8e3d-4fb42c9d8015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f161eac1-ff9b-4267-b248-5071bd1a902b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540ccaf0-5654-47f4-983c-b2762e2a7747",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1643939-3ec0-45de-ae69-c5968bc0863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adefead-b760-495f-b86c-6e323f01df0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a411efe-f8b5-4b04-bf2b-9552d985d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2af2d9-c71f-4506-ae87-841737a4f6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a666aa-5964-4d77-aa6b-40c3762a656e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567038ee-fdf7-48cc-bb34-d773034735fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95684bb4-f18c-4015-b457-932317b8473b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccbfc4a-597c-4246-aae2-7f0508de00b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5c30da-99c4-4c85-b842-03996566415c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2658a0-e509-4432-9e0e-cfa40a4d0132",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702daa8e-f312-477b-b33b-1b63ea263dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85bbc22-62de-4d2e-ab70-3e9c1a66dfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b741b9c2-200b-4111-b10f-bc3b57e9525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e6e8a8-2f71-446a-9e0e-0b07fa92c224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530c94ab-956e-4283-ac9b-361530f2128f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d585bef2-a5e6-4d6b-9eef-20bb54733efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc4f7fb-1d38-4af0-9b07-4d4691bbaacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588d88f3-251f-46cf-81b8-fe4861b3b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab5d2c0-8806-4a12-8648-18a7df83a484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a327d4e0-454c-439d-b7cb-26791b1f320b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78585bd-f831-4258-a1b5-21ad2b85acdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d7bdbc-d97c-4717-b636-c8be249d6925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d4c93c-6e29-47be-8896-e9da66b5ff62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95340d1e-3f3c-41cf-9b67-4312d04b4ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a449bb29-219c-4491-aa94-6d091bf2b92b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a43e071-92f3-4f87-a5c1-ed515425fc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54e3530-cc69-4487-8c09-8385b39e5cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e90819-5aa0-4c75-a006-d1466ca4870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d778a9-bfbb-4741-b23f-43636772fd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3765548e-9cc3-41a3-b7fc-a541811a5c08",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc5d973-9664-46a1-958a-1aab84c66b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b28f068-6122-4a7c-95eb-8a99233ddd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e0e365-5725-481f-b5b8-0a82ab2e4828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19dad516-8f6b-48ba-bfd0-119528bb848d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664aa2eb-f808-4f6e-b006-6132943ce084",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad8520b-7626-48bd-a6b8-194552947efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24b47b1-042f-488b-8eb5-0ea7139ae688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b4a832-a42a-454f-a7e0-925dd83c2ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a35fb76-899f-4b39-aa59-2a2df5c49616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05262356-ea40-4b57-baa9-fc470bac6b42",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4abd3e-ea11-4b71-a3f6-9844e813f734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252af0f8-1ba2-479e-a5df-4c951666a088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aca906-356b-4845-bf63-ef2b16a0548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade50c1d-538d-4056-ae5f-f5a13d5c1e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a0b121-3f3f-46cf-9183-a1f2576c7531",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc693cd-cd29-408b-b5ec-eecf001bca38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0083f037-5016-4bf5-b48d-3ea232fe5044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6223ae74-0336-409d-a528-ccd33b9f3cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fae3694-376d-4914-a1ba-f8d7949755e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e705b5-0d5e-436e-ab8b-f99e3cbeba01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc006b9e-e8f9-439c-8988-4c7feb2236b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561c522a-099d-4cbf-8293-13b670ba1b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4bc10a-ac0b-428d-97d1-c1d6bafa9965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45aa5eed-f0d5-42bb-8055-6578fd6395af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b57af-a5d6-4632-80a7-768c9bc1b870",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faddc5e7-9eaa-44af-8878-ebf92d1e06e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8220652b-82b1-4280-bcad-a85aa4b32fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d52256-2b57-4374-85dd-7df770559970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368e96a8-a5ad-4310-9eef-5db7de784515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb11fb3-72a9-4c34-8729-b81cac7ac6b3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee43664-9ea9-4684-ad1a-c44ece155001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e05231-ab2a-4786-a485-b0b96896d141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f72006-d767-4094-8e2e-fb6c183e63bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b219bbd-c6df-435f-8a84-e555a933d985"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "860cee98-417f-4d53-921a-84fdae058b2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4910d7b0-e77a-4498-81e4-82b7a7f88721",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2522bd96-20ab-4e39-8c78-745280189074",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3d5bdf-14e5-4e0b-9620-d4ec208590fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc71c184-d495-4727-9e77-561c2864bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65df8dff-3f32-4c74-ae96-802b44bbc267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2afe7eb-9d14-4fa6-abce-fbc866aca378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93096f96-bfa8-4be5-8422-176a11f07b59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9f824f-5f00-49b7-b7f1-7916489e149a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75985207-b8d5-49df-8acc-63460da30428"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f66d7ab7-3d52-4076-b61b-27f6dea96970",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8eb2293-f12a-4416-8414-b397e6bf6e94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60c824a9-8d71-408e-a024-b5345070e781",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88c61e1a-5f16-44fe-8d61-57f439cd3e9e"
            }
          }
        ]
      },
      {
        "id": "87bfc42e-d25f-4b49-8213-628bd3bb403a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "30f9e8ad-ecaf-44ac-bd22-f7a3c57f1165",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf5017d2-ecaa-4ef6-a74d-3752bb66cd35",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11344bb9-25cb-40b1-8244-06b17e00743d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afea25a-d320-438d-9f6f-a9584d50034a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace0f5ba-de81-494b-97ab-d8ffeeccacc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2290e099-552a-4a5e-a0f6-6704bbe95ce5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4e0544-58ca-481b-839c-0d4222a60065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc74cf5-c2fd-4f0e-976c-b2381106076c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67247d8-9e39-4655-9a34-3585bd01f85c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa66f96-f521-4e81-9746-96eb128d07e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf76f5a-93db-4398-8aa7-64669ca4608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420d5ae3-2709-43f9-8fa5-3415ea9cb68d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adea81b-b4d7-4ff7-bd5b-144336242f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3cc238-7ef1-4270-8f44-b7b67c8b43a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52521264-b3ab-4411-82fd-0b8a8fcd3c9a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4860c0f-2fca-4988-bf49-ae28b6dadcf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362d49e6-f12c-4000-a08e-8891f7c10c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a203968-c05f-44fc-851a-f705ea84d162",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f7b2f2-f173-4a4a-9ec5-1131f6a814bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add916fc-1f8f-4352-b061-b83c7ffd8de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41f9450-a9b3-4cfc-a999-9ed27c74e133",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0298e8fb-5568-4db2-910a-9876006a052b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac952b15-9971-409a-aced-6d8def45ffa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423f0f9f-3dc1-464f-b97e-6629a760a10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93092b67-3098-448f-b0d5-47317c709c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8ab25f-5c5f-4572-b3b7-ea9c4900b3d0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cabd0b-6d56-4687-9a19-d8f797d325da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2152dd74-55e3-4269-a2e4-9d3f2e5f0e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d059a1e7-d407-4f51-9290-1fef14d2f387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb163878-a227-47eb-8aa4-a6d4741469df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8409a8cf-c93f-4be3-887a-b2fa535c2584",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ea80c1-c468-4313-b299-9d81598f4cff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b927007b-5a49-4438-87f3-91c489d326bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c22fb3f-c677-46ce-8704-9727ddfa2d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8691ee41-defd-4635-a1b9-4e5b50e9b680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc3fc4c-37ae-4e1a-ba55-b53428aeb963",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6399e-6ebf-4447-845a-f6c3929a2e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d073fdcf-8417-41bc-ba65-384c78ae5fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a453deb-930f-410e-ba90-421161e1bdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f8dbe0-b712-4099-9852-000d099977c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ab72c9-bb57-45c1-82e2-686fe5ad65d1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442696b3-8930-4957-a48a-c39e7cd65b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c5bacc-8b55-4de3-b3bf-4576eb3470a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b1adef-0d85-4781-9a4d-e35f489eb73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de12114-505c-4a45-975b-3a1f2b6db128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96307cac-b669-4549-a2b1-dc0d1eeb9e81",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5679e8-e91f-49b1-895e-486b05911e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77873590-aca4-4cf6-8af3-aff70230ddeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca04591-dcae-489b-88c4-ede90c246e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23fa37c-c6be-441f-b88a-8d6f3974a5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf8d601-b8af-4097-8dc2-bc13f4981502",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc1b10e-5b10-4755-9e28-bbbc8c15490b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f244b935-18d2-4a92-ad43-44a2ecea2e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ada2970-f669-48a5-999d-b1260f51bf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108792e4-5b97-4046-8181-ae374833b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814269f-e7b3-43ca-a242-f1cbbe9b9322",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0f690-d3c4-4f00-87b5-396674697e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "628d85db-0ba7-4b82-9b41-d8b19cc1b382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b367cb6-db20-4584-b9bd-7809919db907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1101233-079e-419f-863f-5a2680ee9527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9542a385-3f0a-4336-ae34-4ae76e5bd279",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bebee23-35f7-4e54-b389-29b93ca95c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8397730-12fd-43ad-8f5c-29150ab57a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e718bf7f-344e-41ec-8666-26ad4acdc7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73141880-17fc-44d5-a74c-edb238c008b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b9363c-1e27-4fb2-93d4-25f4b4736a3f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978ec03f-03f8-4319-bba6-9bc655446e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd59d323-ca21-46f0-802f-e2bdeeb5b409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4178eec-39d2-45ba-848b-bf10b4821a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be963320-a7d4-456d-9c0e-9b4ec339d34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6087928-28d7-4487-b98f-05a43eeaba18",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922310d3-5330-4705-a12a-27bc343e445b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ee7741-a607-4af9-b108-7507bed16df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31079ce5-5f6a-4e96-953e-852fb74e52a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05498830-c574-4ea0-8d2a-507b8a4aff96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2432da5-d9ae-4cde-82a2-ca9c6be47dfc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33524ad4-084f-4f1a-9fa8-c48ae7b27c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdd6887-48e6-4764-b728-d86a209a5848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531c944b-97d9-4c52-9ac8-b3292d395c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb273b6-cecb-4179-a2d7-f97f6884b963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4767f92-b222-43c1-ace8-b038212a48be",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a55d44-d0ee-4465-ba46-d7d2931e24c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67263fd3-59dd-48c3-b1a1-efbfdd8f6430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aa138b-af24-48cc-b227-9482c4cbe32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7bd0f5-4427-4a02-ac4a-c851f9a5769b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f3d316-ea89-4994-ac13-c7c8f47c8333",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a2bf18-871b-4438-803f-6ea87fa853e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9826169-5d14-435b-8f28-f005cd204e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d208b485-19ab-4e20-86cf-878c06ecb52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ff05d9-8e9b-44b6-8c13-76ae71308908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc690bc5-d96c-4c02-bd4a-8b58c327fd70",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f480f00-c95a-4f83-a5c0-1d10fcd4450e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11a68e1-fc73-451e-8592-9562f6dfa09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53de0a9-0850-475e-bade-744e00bc5062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5a0f42-2eee-40dd-ab0f-0f44ae96319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc36447-554f-42ee-9af9-610b547f2fb7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6466efd-9e5a-49ce-bde3-e30f0a4f6ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d443b4-af02-4f68-b1a8-b0cb7dbd9989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbb270b-3736-469c-bd52-bf5e2ec4d34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721dd55d-a143-4056-8702-3f7774767028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd591d9-2e2a-49df-9d9c-e015e791eaac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55fb7bd-78c3-4c44-9ad8-71434ecd3bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846635e0-301c-4213-8baf-ba21c918cfda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb25f2f-dd77-4990-93b8-98431ed172ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0b5cb1-5799-40e9-bf63-1c2a9127293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46de57a2-b44f-4fa1-83a7-e22dcd087781",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a09e49-bae3-4bd7-9f67-962d9e9fd076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d825b7-a0bf-4655-b638-5011e1899ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87894b9-d8be-444c-bf93-79d56063e479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f749aa0-1c68-4e7d-8ac0-9cbe4d53397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26beffe-f49e-4078-9865-032f3ead44c3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1a5fb9-a864-43ca-9272-913ea78beea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988752fc-acc5-4cb9-864c-a9556de10522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1326d21d-24fc-4ab2-b1cd-daa33c560082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e168e484-a0fd-4fd8-8e5f-0c7e728f9b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c1acd6-6e09-4a8c-a60f-8782f6b0497e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b51c474-d3da-47b7-ae7c-1b534a4bc56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96d92c5-4e3f-4009-b43b-c545ae43a4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb718757-bc2d-4978-b4a1-17311bdd8d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30604407-f167-4f4e-b052-c4965d8d3736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9fa16e-5267-475b-883d-99170d67952a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3078877f-c6f3-42b3-bd77-6a006eaeebc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9361c613-9091-40d1-9368-903f5d4d32e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0516d9-abb5-495a-b546-4267d651ada0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7302a0-09c8-4273-8009-e57fa05fc9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea6404-8716-4ab4-96d7-52ef39433b16",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535849ee-b73c-4515-aa6c-664dab077ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af73b942-1b47-4c13-a931-f88bf13c24d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467d5f1c-2cb6-4f33-b05e-2bc9b20887ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894c8c99-22e4-424a-8bb6-12d111e88e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797b2ae5-6370-43b6-8d48-b70711b39137",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b33d39-35d4-4ecd-a11e-0ddc57833a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3ec56f-5cbc-4132-812c-59cd35e61728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9279a-8398-46fd-b7cc-3884b3d377b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e431ad-b967-4894-b306-5c136380beb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c91c34-5258-48a7-bb21-35fc9a5792e1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11704eb-fcb0-4c1f-99b9-22d6ea3a503e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc96ba6-55a5-4a1b-aec6-66ae0a687fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb6fab0-b503-4a9c-b19b-8c2771680bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f5dc6-4d83-4a91-9e7f-64cca398e802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2104770-4c40-4091-b674-7c7c809df11f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5498d14-d105-413d-a692-73813b320c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f724c4-7da7-4368-9aae-77825759478a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2c70fd-b93c-46ac-a023-2aaa462939bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb34b60c-025e-4e76-aa5f-e932350ac79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d978fb10-b007-4702-875a-624bfa1a91f2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8ade91-3e15-48b2-9c6a-fe942650bfcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea76aba7-399f-4a4a-b7c1-7aa6344a4fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644c32d6-5423-44b2-9cbe-dd4d747b079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e1a33f-7fad-4873-8456-448b22d620e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6885ed94-0aa1-4806-96fe-add6b288577a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b49fa1f-e213-4399-b5cf-a733815e33d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7d2118-d1bf-4ec7-a9a7-ff31da2381cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006f760f-e0c6-4ea3-8eb9-fdf9d7290845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d520d67a-be6f-4010-8d99-4ff3e31c4313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb3dc4d-e947-43ad-9945-f201c37aa85f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95da4bd3-68a5-4e2b-8917-059dfce02d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95e9f96-dc49-4abf-ac81-6d38632c29f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce9f8c5-eece-4e07-b57c-b8632cf45423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a8b3ac-16b1-4336-9650-455acb8b76e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fca530e-448e-4c99-96d1-cf2f227f9324",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3981fc2f-0684-4689-959c-28ad47c42140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5c4384-dab9-4244-ab03-147cf495df0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bbf6e6-0ffb-4b35-96b4-d0c1bfe45667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6bd9b1-5635-4567-a135-69c2fa801303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ab2fef-1b2b-4de3-92a2-7bdd68619980",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cde63f-f461-409e-9327-5ce33f798b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad0d846-98e2-4d40-8bdb-61cc4d17a62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db94b743-d395-46f0-804e-ca16fcf3ddbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ad505e-476b-4104-b05c-9edebe0422f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba657f5-89d3-40e0-87c6-bdd31d70af9b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e17eb8-8759-4073-aa9f-a2c6ea2bce2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560213c9-ecc1-4419-90f1-4591b9b80484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0601c8b4-7d0b-4a78-903f-a4692f3e62f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc26ce5-fed4-418c-a3fc-d185206fc9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9cb36f-8875-4604-9495-b28d20dcb95c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f913bc8-7e3c-4289-baaa-d5ca79faf180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267feea9-2019-4281-b713-60bc6119f482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a61580e-f4f0-453e-ba3d-9bbfe39b59ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebd7145-6ff4-464e-91fd-b4dd59d327fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c658568c-3036-470a-b48f-fabaad11d5fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b435d123-6a54-4323-85e6-b1d3655c9550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca943ee-983f-4e30-899c-627debb3c007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ede8103-64a7-4b1e-88d4-af967e0d0fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d851a7-73ca-441c-b1e1-54323eba7598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e2a913-29b1-41c1-b23c-c0b9441a0fe2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49477c-3a4b-4028-8925-30f46093b2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0af312-d1cf-4ad8-91ff-92576e52a6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67158370-ffb6-46e8-bfae-3f2f41f670d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67b595d-b5dc-49f7-b156-d79ee8680549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3531a1fe-250d-4ab8-922e-0e20dc624354",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2be47f-5d9f-4bbe-a0d1-3e4f1cd3d846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb07d206-c3ba-4faf-923b-559a07df977e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998bce5a-7c10-4d0e-8f9e-e462f06bf8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28eef612-eb6b-4c6e-94e2-48d10f5f0bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9386d09b-e30a-4c55-9ed3-95e6de6246e8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1365eac9-b051-44ed-b93c-36242e050cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5309d31f-823d-4e95-a3d2-ca9754bd3a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1489ba-53ce-4afe-9def-789fe3565e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74eaf80b-fa1b-4118-aea4-0cc713a21e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c52258a-9c1a-4019-87bb-d036649d92be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75ac4be-8614-4171-b40e-61c0d51c4fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b4cc75-d7fc-4af3-bdf0-6f7125190f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d2060d-19cf-45fb-8b68-e379c2abf751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7252552f-1501-41fc-8446-b786bfd5be6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee910ecc-fc5a-4a4f-8fb0-dcaec365a2a7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eedc8d-eb46-4dc5-a860-20da3a7a309b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e027040-9852-48da-a7de-12476cff05a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4accd841-3920-4d31-a820-6d317dd97f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c6d526-7270-4ea0-af1d-ffd0f08e5de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d68b606-7250-43f4-8eb1-648ca3325f0f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb019df6-71b3-4ee8-bed7-87e8bf7dfa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3ba7b1-2545-4891-b3cd-d3f1fa8b8032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b1d4c0-162d-4005-8bec-acf2fd73d8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da24aabc-b372-47d2-b880-baf9b4ed1216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb157ab9-4b93-4e17-bfbb-f6cb061f86b4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaddb4e-5f3d-4107-a4be-54679c5d269f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a4f8d6-0d94-48f7-98ee-e4ec1f4ac96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4835bed4-170b-42be-a522-8c9ef4bacf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7a3c19-44e4-4eb1-8cb8-23c20de1ba62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210e2da6-725f-479f-ac2d-d7d63591b00f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8b27b9-5534-487b-b626-cbf25a84539d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa88337-afd7-4e1b-8c4a-ae141db9d8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d19d8-b14d-456a-a9c1-405592c12b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab542f9-eb1f-4011-8f6d-6153da1a7503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24d9562-8616-4b52-8e93-8fb7e43d92e9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459a5240-db48-471a-b156-0712cb09d182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c215bbfe-f6fb-4ce9-a127-a5b3e8647e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8d8a2e-a924-4cce-aa23-3bd69ae57eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1934ddfe-282a-4ecd-a3e2-4f55c1e573ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b98409-73e6-49e0-a8e8-da02344d50a9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b050a5-77c2-4638-868f-3053cbcba705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53b5dbd-0610-4f3e-b75d-d13a99289e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0889ec8-9961-40b1-8b76-0b9b266caaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a16ff7-6a4f-4442-8854-00069b233a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633ed24d-b1a3-4903-a042-c8d4b3c6b820",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fbd5a5-e538-4353-9826-8f8ba697406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db5685c-7205-4ec6-b8ef-8ff425967596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5fc760-af24-42f4-9a00-61ca6a6819f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f3a19e-71a8-4821-b788-d0e53babc336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6a7076-4479-44c0-8d89-36af0ca0c736",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8fdbce-320a-4e15-afe6-260791383259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e837e3-13ff-4ffb-b1b0-dfa8257a0d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaaa045-9aea-47c2-9ac7-e9320e0e52d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14a3796-e5c7-4c41-9368-5002e782875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be601321-9118-4496-a37d-d6602fdf702a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beae923f-118e-4530-9966-78285d0ec83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0dc0801-1ad7-495b-aea9-64397eb02ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64f684e-aee1-42a6-a4f2-5f935288e310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5ade9-3afb-4c45-8d53-bfe5c8f0b32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d89bf9-d267-4d1b-8307-d241137589bd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8358a55-4c56-4488-82a6-aec874382143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c1ba90-38c5-4e03-a74a-7afa9ab6a619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af2f68-2204-43d3-a29d-51266872df87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c588d1-ac5c-4b20-b81e-cdcfd2368646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1bbf47-a7ec-4c7c-9524-d58bf0e45d32",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea14c1-ea09-41a0-846e-643ab6867210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe8a90c-effc-4d9a-a9ad-18ff21fd34f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f1f31a-f44c-43b9-8f3c-fb3b134656e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60145454-bdee-4354-9170-790f9fff036e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff7d865-1184-4791-939e-72555b1e56bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baad800-4e62-4723-8804-9779ee6dcd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59072e51-2a6d-4b26-bed1-4757b1e63082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5f2104-a78b-4c81-b6d8-95af22833ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d56784-8efd-4d08-8bec-069a4639cfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1b9cfd-6bc5-44e9-aa09-572c18106c34",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db90f99-c01a-4727-b895-3ea12659481a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adc6c3b-9ce9-4135-9554-d4b2b9019ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c373d-3308-4fcd-add4-a22e33a7fa24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3540aef0-f9e8-4d7f-8b24-9b42857ff87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e450e8-beef-4c4b-9697-3481602c5cf6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7465744e-a2b5-44d9-89cd-8ae1427b7e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d504907-1134-4764-aa6f-ac935f28fd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9edf1d-c41e-43f2-824a-5726c9f70032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8556e0-a92f-40d8-9ca6-59821dd9bb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c7e4da-b2af-42cb-aa5c-6e258ac6bdab",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfba6f2-3c83-4de3-a17b-b9567d1bbe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8977b45-48be-449d-838c-c0c98ef3a196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afe7719-eb16-4ac8-a965-ca9f1864eead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad129b15-af4c-4377-9eb6-4c4791e463b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612b7d03-2183-4c42-8d23-66284caac91e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c986cebb-c114-4239-b0b5-dd0f7cf22f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4021cf42-a105-4a80-b126-a06867ebcb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3910b77b-91c3-4d02-a4df-0d105775465e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d202845-632a-473f-9f32-f595efe6b864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eeb0bb-a4b8-4c2f-8b12-920c475ffa29",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b15850e-a6c0-49c9-9758-16fdcd7f52a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1b2ead-2ef5-4c8f-bc86-5e3d3f0a463b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9497a3ff-5736-4590-9f8e-21869b9145a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7e1ba9-619c-4fb1-a4ac-f84e3a36d59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d731a00-36b3-4c32-a751-bdc8c24efb27",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebf9384-7999-4e5d-984a-68b688667106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ee79cf-fed0-4f59-9754-763e844cb3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553b6f0b-1497-48c6-be25-879148fc83ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23b7c43-ec72-43bb-8634-d860d9009df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2712d988-539b-499f-86b9-a395c2afe7e6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296181d7-ad4c-4db2-ba3a-9b791800ca3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f32f3bc-a569-4fa1-a5a2-f170ff1a3ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f53bd8-d367-44ab-97ec-c080162687a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9436214d-f474-485d-8b48-d106cfad2b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964843a1-5aa5-48b1-b2c8-837c3303060a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b8afe3-698e-4415-87d7-2f6bf17a12e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e67e917-64ad-4c58-8a11-9d2d7f830380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5e0d79-9296-46ec-9954-aa6fbe14be6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cc2775-382c-4795-98eb-1b6a41da050e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf9b3b5-c9ec-4378-ac5d-17612443fb48",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1a7ec2-9d95-45c2-b443-e2ef0ff09737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a65a4b4c-528a-4121-8e86-a45732c9d394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d36466d-60a2-42f8-9e48-fde8adf14757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26aa4303-172e-4b09-9d21-46f50d2de6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f3b38e-4e37-4cbe-8fae-930b2d63a472",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ccc84e-c156-4529-bdeb-a4ee6a6d7fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffc9747-dcc5-4063-86fe-5637bffbd480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06427734-f08e-4373-af8d-0dbf2b2f4fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1ad259-5f2e-4672-ab19-55eea519c995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33593eac-98b3-4c3a-89f5-b6f6b1cb285f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fce6d31-c324-4afc-945a-934bf2b12466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20b322a6-e9ec-4afb-8a55-0a73e56c7231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b448df88-07e8-4997-99f4-91966e9c6750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce7ab7b-bafe-47b2-af39-25d9deffefc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09188204-276a-4ec7-b0f8-fb51a87b3144",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71eeceb-395b-4394-8d2b-d6a7c4c0a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f36501c-99f2-4aec-94a5-cf83fcfa820d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66ef195-ceea-4723-90d1-c6def5ac2774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09aaa66e-d51c-429e-924e-467093c0dcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39472e00-f59c-46ee-a7d8-f74d98efd57a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c78762f-07d6-4694-b963-55917bf354c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "684c7057-ffba-49c1-bda7-10435ca50f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d0f9d-0f2a-4655-854c-8a9b0cbe3bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2889309-20e4-4874-8f79-0606ad296404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919b40c5-2a7f-4f24-9564-3632207f6e10",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3869b52-1d2f-4dcf-8d72-64744b9ef8e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22408496-a478-4622-943e-944383d27cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1a258c-c2d6-4f4a-a30f-8dc078cae653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8224c52-b5b8-4bd1-afdc-f4acafde69c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95986e6c-3f56-43fb-a8e3-41ab4e3dd681",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed43e21-c0a6-407d-98f4-69414799eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0a1ea6-35dc-47e4-b907-aa4b0234737c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0608cf5-1c49-43e0-b6f5-914df99afa56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de26565d-16d4-4589-a9f0-26aaea72a9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84190c5a-cca3-4d29-aeef-2f51aaf6bb06",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e3bcd7-49c6-401e-87c8-e1f564bb0326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381fb5f3-0a57-4c30-b09c-0f06d1915f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ab73b0-aeb6-4efe-8814-af61186e7e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ead4dc-fe90-482d-ad33-ecca7311760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63fad3d-9227-4722-8246-2de5d4c1ee5b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c25e84-ee46-433c-aa04-cea1d8409094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abdf1f54-2aa4-48ae-90db-f8335c234124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8c3a96-7e27-48a0-96a4-58d3cc5a8d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86e2a2e-c9b5-45a2-8623-d0c1ba336ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd26a7b3-662e-48a6-bae6-d6fc7cbc21a3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffba2a2-30ae-47ad-b232-ea1ef342ea4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa3c321-d0da-44c2-b961-01a8497baf15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ef8a3-f130-4fe9-a912-a1ea8f59e0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff2a75d-4f55-4b8c-b163-8b97bc727c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1917fdf-2e77-4c82-9c9c-3901a224cdf4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4a47eb-4d57-45b5-a2bf-39be2d07f3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "586fd4c8-88d3-4989-b8c6-fa541113bb58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d612f77b-1a7e-455b-8e34-499c980a5f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993cac2b-c19e-47f3-94ad-7f0092f78bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871da9aa-ff59-4967-ad3e-fe126a87dd2f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b236e2c-efd5-4419-9db9-6bd2e3904ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49754cd1-5b63-4fc3-bf94-0dbad1816896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf131a2c-2ab4-4f0d-8f4f-a5a1ab786d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f71361-9bc2-4b4b-a05d-d821212eceb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091e8cc4-2413-4e25-8dde-28d41a19c549",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b57dc1-62e8-46d7-877b-664a2b2cdb81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0d31a6-583d-4e6d-8e00-d55abf55c372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8886b-8cbd-4c4f-bc5f-a166afc2fcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d3a396-d714-4c57-9beb-6bc89e9ddd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414e903-e3ac-41fc-91f7-c84b8f9ae869",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bb428a-ba01-463e-92a0-fb37db2fc340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3ca35a-93c0-4fa5-ad15-f639e8763fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c1886e-2655-4954-9771-9f9f8eaa6103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0450462e-6703-4a3e-81ff-a23e30064f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dec665-9a0a-41d7-9b00-334a9fe80241",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d388386a-f223-4105-a437-7c0c5c7c22cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94b1d30-88b1-4c8c-8928-70915fd7887f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5608fa6-0f81-4715-94fb-a12ce4a99a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30850b49-6aeb-44e1-aa3d-6675b26e95f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471fec86-e083-42cf-b4cc-d09987053294",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c9ba2d-166d-4667-9599-de7060cfd90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06686cc-5900-4bb1-963f-e7b5f2ea4f26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90adb96-79df-41fe-80d1-f9b0c450f432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e4acdb-b43f-4ad3-9796-91f2b0a3f28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5635900d-40ba-4eca-9294-aad805b0f9d2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01ffbf9-732a-474b-a413-6f5578f6d42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2c72c5-3936-4c6d-b9c2-c193db1fa788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cff7386-4a25-4491-8841-549dda7504ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f7db7b-d98c-4afa-9068-67b9fd0ca1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032b91e1-2d82-4196-b2ed-7cd6456ab1b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1423935a-ec97-4e70-bbad-936668fb8539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43fe52d5-bfce-4f53-a7b6-c40ce241b23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b8647b-7f5b-4e30-84b4-813b54416290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e424b0-adb8-48c4-a587-39604165898c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f3a12f-4037-44ae-9fe3-17b6139eb2ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020e102b-c8c0-447f-a0c6-b5e815c6ba05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c5ab85-c364-4b8e-9745-e192f4b282fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a880158-6ed7-4c9e-a6eb-78d42f21d86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9f278c-00c8-401d-96bb-f6e1dc46130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df451e5f-d8af-4189-9331-3d6dbc2f62ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f870898b-990c-4a06-93a1-c8d4bbd04862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5610011c-2b25-4f0b-8a9c-b9653c0d7d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc94f5c-50d5-47fe-a062-1d7bc780200b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4135124b-e499-4394-91de-eb421c723544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe1dfdd-db64-408c-9f6d-aac4a37489de",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd85b0a-044c-485b-bc3a-3928edf96bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878b4c00-f457-434f-bcce-6553cac45ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5a9a2d-3eba-415f-8186-b5f94f600add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c68910-4490-46eb-b9f8-e4210d1a3d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a0b393-57cc-48d9-9152-02bbe4810db7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea4968-cf18-4101-a9d7-ce5c5cca0a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187f8461-d02d-4137-b836-738211b0da40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be05086a-7d51-491e-927f-4a5ca1da6f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0260099f-7b2c-493d-80a0-d163e1107341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf0c9c2-3919-4d34-88be-a9f94ea53e18",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75026b1-5c33-4068-874d-582258e7c862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e8568a-29b9-406d-8c51-f85008e76a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2f3dd0-0f52-4137-90a3-13a78a56bf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c9c13a-485e-4dec-97d0-b1c56b573fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337e49be-4b9d-472d-b5a0-4bae4abd976e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9ce5e6-5307-474f-99bb-5017a5919e27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abafe55-df8b-4688-8b7c-8abd775d79e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e1bb7d-24b0-4b93-92c3-c91e38f8a70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a91d71-8b6f-4ee4-bdad-b5175a131bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689cf60d-a4bb-4a95-b54b-17695e31dfd6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543bbae9-a8c7-4217-8bbc-63309128f9a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15b4d49-a6e0-4799-baba-2b725e363543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e67d74-6c1c-4340-b99a-c4d03e4c939d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4ad893-c6dd-4e3c-970d-6dca8bcacbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f733e79-3cd4-4d16-8109-808eae5de8b9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16799ae9-dec8-4c0a-9337-4dd6c71e7d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6dd6278-aa12-441a-aa5f-4c7162a11d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d27f38-9719-4bdb-a4a9-10d6ff059084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fd4f67-2d3a-4a9d-a084-7bd7dd42fe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6979b1ee-9276-475f-b0e4-448bbd28af0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef7ec42-4c5d-4558-9c3f-1837a3fedb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95c7f68-68d2-46d4-b11b-6f95a338973f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf65a523-397a-4db4-82f6-b9ec03aaa6e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9265334-7e30-427c-af13-28de38d65daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217c48bc-0bdd-4f54-8981-d3e8ac9bc6c4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ca5ffc-7093-47fc-ad70-2893d0339e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf29ce8e-a319-44d0-a6e0-b3a8b7c643a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc431b-035e-4ba4-a17f-c3796f20dc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1ca191-8f39-48f4-826b-c7b11a02e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077145f1-e113-47b4-8c9d-a874e75c505a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8fe6d7-d4cc-4fdc-be73-47639df3f927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1591532f-f794-4314-949c-f597b6cd5627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8133ea1c-d87d-4612-ba82-4c87dcfc81f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abffca5-27a0-4a1c-b090-34e3801af660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4c961b-ff2f-423a-80e8-3ddb62bd6503",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf82ca-9735-4ab3-a44a-6d0f9d7d1e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c574dff5-ddf4-477d-becc-39b0b3560633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9f158a-a9c1-49c1-9d56-71b7483e9279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0ee10d-5ebe-446b-b92b-7407dd3e944d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e2f20b-a422-451d-90e7-59659e660fce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b3aca8-376a-416e-9d2c-0b9c03512006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06660374-0d8a-4e14-bf0b-8bf4d3e6834f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53b2c14-17ef-4564-abbb-8a918aaaf5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e68a6ea-75be-4c02-96da-cc1a78fa9660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1e736e-2490-4d02-830c-aab084887e23",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e5c8c9-0325-429d-a7ff-a8116e0be446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0533d78-35b2-47ce-b991-618d1847fc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00399727-e11a-4a46-823c-4aed13ea3632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79c4984-6828-4a58-b260-285ad8c809aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6b33cf-3309-4a63-addf-b261cab0aeec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1dc52a-a016-4b61-b62c-b0fedf2d3d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cda5af-f817-4e37-bbd3-315a43041a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342eb447-93ad-479a-b921-49433b8e6d3a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76668651-7f30-4f66-8273-eb4d0826f9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7ca812-0c8f-4f70-9704-08409eab30d1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4738b3a5-9cb0-4d9a-a8e6-ee58dceecde7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102292ab-896c-4499-818f-4e0733649621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36446e73-696b-47f3-912f-994898a4d150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e25025-c5d7-4f92-8352-6ae788165262"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfd31b07-3cbd-4fbc-8ad3-321a8aa2a3ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e309b23-98df-4f2e-9d7b-3f769d26f028"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e3e80fd-d6b5-4533-b843-144b9c0fb69e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "997ec063-f121-41d5-90e8-ac7dbba3c27e"
                    }
                  }
                ]
              },
              {
                "id": "15e6baac-cc28-49bd-9a82-fd248be3ff7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7e340bc-7721-4e85-828b-8f8a2d77f497",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefe9d86-ed71-4b09-98dd-58c400c922e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1748199-4235-4f71-8018-7ebb9a83e9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a5930d-1135-410b-af05-724ac6980e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ab573ab-22b3-498f-a40a-b9581efb1de4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2772abc-fe51-4959-92cf-972cebf12555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56cc288c-d8f7-4829-946c-955550b56a3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d182d6c-3b49-4b52-b3a9-325d9c4d8a0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8f84cf3-6b98-4844-ae1a-a29018316f6f"
                    }
                  }
                ]
              },
              {
                "id": "c0b091ad-3416-474c-b9e6-8eda92d84da6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cf82f266-f372-4c39-a46f-ba3eaf0f35aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a4ee4e-b8a6-4c6b-8a8d-f1d8fd5a2594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b32eec7a-e62c-4f5f-a869-53659921c7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981c9a04-240a-46a3-abb7-56add1c1d6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf6774b-ff69-46ec-92cc-aa6974223f3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90ec3352-4ef4-48b4-bcc4-10616366ae7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75c401c2-8184-4f95-8a83-ffbbe60fde3e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4ea230c-bf97-4067-b7b9-02f2fe3445ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93f8aeed-7e03-4ddd-b2e7-2e872c8145d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8f65576-401f-47db-9b7b-8b7115983eb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d47ce56-7fe9-4a74-8ec5-aae6a571bed6"
                    }
                  }
                ]
              },
              {
                "id": "dde102c5-560a-4891-a0d7-8723adce1bf4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41593eeb-d8a9-4837-8e8d-dc095beca3f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "824bdaf9-26ac-4ee2-bd0a-cac8b98f8f7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31980974-c7a5-4178-8866-925b6b5eba60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ec289e8-53e0-4045-8c15-bde4202eaff7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb7a8f76-acd2-4f9b-b8f6-87097d48b26e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "05fa2434-e5a3-4dc3-b075-a8c4eee469bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b6d137a-d033-4548-bc61-0c7aaf003932",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38be34ba-3b96-4606-a8be-30deba973633"
            }
          }
        ]
      },
      {
        "id": "81fff632-ae3b-4e08-8ae9-18e234715a47",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "24632022-bf95-457b-80a4-f0ae355901ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bede8f9-12c3-4f0f-b032-08336f9a7e88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28d06b18-4ead-4788-bf02-b6a0978bcc42",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e56c48-6a33-4496-b068-3542aae2b410",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba79a37e-c4c6-4ba1-a50e-39998a34fe8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abbec94-c50f-4ecb-90d5-94402a65b5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f471263d-4595-434f-bd7f-c85abf45db55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24658858-f569-4594-8214-bcbbe8784eec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ddb005-3c20-45a8-87ad-6f74d1577073"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b88fc30-64f3-4f15-8240-bcf54d999f83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e1f1265-4d9f-4c54-a2aa-4d9727f37158"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "988fb38c-5f83-4012-8dbc-5333eb9a70bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6adc78c1-68f6-4491-b938-ef15e76e2eef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5217a6df-aa30-4cff-81ff-5c83ea3eae32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07d6a3c7-9093-44b4-b0c0-9779792a0938"
            }
          }
        ]
      },
      {
        "id": "0e616c66-32b7-4cdb-bb78-62253e7692ac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4fd39aa2-6106-45f3-b159-0e227897365f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89c077da-20e8-4160-9741-1e3191de2c06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a07a3ad8-42ec-4493-886e-b4a8e8b9b027",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfbdcc1-82ef-44c0-b1d0-c3bfa94a1282",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4474fb5-f634-4d31-859c-856403b64507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565887c1-9c40-4d6a-bd66-e5d84c6553af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53e049d6-4513-42f3-9b67-ce97d95a7d14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d82ad50-c599-48fd-adfe-84f9d5cd2a55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "160c4489-617e-45bc-b84b-ae7c01ecab8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c09e3023-2881-45b1-9025-a5c3545abea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c4c3f02-706d-4349-a054-4ec92d3e691c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42691009-7d40-4e48-bddb-7abf028c76ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88a676c1-bc23-4ec6-9088-8a85682329ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8620b241-524f-445b-9b18-e480abdc56ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ea817f2-cc4e-4c43-85a6-23f4ea400097"
            }
          }
        ]
      },
      {
        "id": "4df803ba-c332-47ab-ad08-de464f19064e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b1b4480d-6d42-4cb3-aafa-bff141ddac4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ae3e419-1b2b-4f43-ae2e-c0a0a803f3f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4031ee5-142b-41d0-a31c-346e3a1c6ffd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f4f601-bcd6-4cd3-b658-7aac33c5edff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05293eec-d680-4405-8188-799477e99c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554a5be3-68f7-4b52-a11b-69be90b2f9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cc057e9-7b20-43a3-9369-d041af42f03c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c79dcd3e-3471-4f2d-b5f0-7eb1981c9ca7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5a65f77-f4b7-4ce6-8f62-69ef0f98eac1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a21ec01-0cc3-4688-985f-d0452223c9f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fb5b27d-2daf-4d08-9f1c-cc47372efe4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fee8350e-5512-4d24-b6a1-eb09053d7a66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a73b9c9-b546-4424-b362-6d425458b8cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e55d44d4-f410-44e6-b633-45c1e390e4ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "477faaf5-d9b3-43c9-8f05-e3fc997c0c40"
            }
          }
        ]
      },
      {
        "id": "70df0afb-a4ff-4acb-81b4-e49c71abae5f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8cb6de3-ed7e-4039-b0db-237abba334d4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f69a692-7ce2-436f-97fe-113963264cf8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8634a8de-39fc-46ea-ab9e-9fa818cb7277",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fb96ab0-0040-4416-8907-678b9c40bebc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e3adc94-1b95-4a7b-8b77-eaf7cf6ed30a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 752.6587301587296,
      "responseMin": 10,
      "responseMax": 26055,
      "responseSd": 3843.173667155294,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727484286691,
      "completed": 1727484484933
    },
    "executions": [
      {
        "id": "dbd03a63-9013-4f01-b1ac-337af4c9bf40",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3a5ab676-697d-4c3f-a209-a58e14c9c383",
          "httpRequestId": "92d1f9bf-9801-43ce-8f70-493d177c1e40"
        },
        "item": {
          "id": "dbd03a63-9013-4f01-b1ac-337af4c9bf40",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b872c140-aee0-4941-bffa-8c600cd6996a",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "18a90a18-88ae-4547-9a56-d1861b579083",
        "cursor": {
          "ref": "20494aa8-3231-4ef7-a5aa-0617bcd8ad4d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9a0fe49b-b4e5-48f9-aba6-6e43e9223903"
        },
        "item": {
          "id": "18a90a18-88ae-4547-9a56-d1861b579083",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "44ab8744-1225-422b-912f-47568da0f1e9",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0ba8cc97-00a5-42dd-9806-6a2c2fe2ced7",
        "cursor": {
          "ref": "d056d5f8-5abf-4c2b-bc27-a31214d3692a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "02a221dc-d212-4920-b9d9-9b722e7ef704"
        },
        "item": {
          "id": "0ba8cc97-00a5-42dd-9806-6a2c2fe2ced7",
          "name": "did_json"
        },
        "response": {
          "id": "addc7ae0-4e98-4565-859f-5e7ca71e95be",
          "status": "OK",
          "code": 200,
          "responseTime": 438,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed74759f-2491-41b4-9f29-d1a07686417f",
        "cursor": {
          "ref": "09d45505-a97b-48b8-aa7b-f3ce27975c6e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aefc7181-6926-4dff-a611-3d14c61a008e"
        },
        "item": {
          "id": "ed74759f-2491-41b4-9f29-d1a07686417f",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7f3632b-945c-4e17-97f7-0356afe0c3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2301,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed74759f-2491-41b4-9f29-d1a07686417f",
        "cursor": {
          "ref": "09d45505-a97b-48b8-aa7b-f3ce27975c6e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aefc7181-6926-4dff-a611-3d14c61a008e"
        },
        "item": {
          "id": "ed74759f-2491-41b4-9f29-d1a07686417f",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7f3632b-945c-4e17-97f7-0356afe0c3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2301,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ea1a33-2ffb-45bc-acc5-1bab54414aca",
        "cursor": {
          "ref": "28bb9ae0-1b5a-4e1e-b53d-45ea1240871c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "daf77091-ce4c-4850-ac5f-0145a98a7662"
        },
        "item": {
          "id": "81ea1a33-2ffb-45bc-acc5-1bab54414aca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce147ddc-be95-43a3-b347-08d58b921417",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2697,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850f9cb5-3726-4a96-b9f9-5a5d3309ed95",
        "cursor": {
          "ref": "1d5e2c39-bba8-4308-a0a7-b2dacec5626f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5da6d8e7-9326-4c48-b9b6-81e16b95d817"
        },
        "item": {
          "id": "850f9cb5-3726-4a96-b9f9-5a5d3309ed95",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "914e7080-10ea-4874-a337-fb304cd2fd30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2400,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2552080-14ac-4837-86b7-8c83c760a1e6",
        "cursor": {
          "ref": "337ffc5b-3ddc-4aa4-a549-406e8976857b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "37b91a3f-60af-4a37-af5c-d3467f2a86f6"
        },
        "item": {
          "id": "f2552080-14ac-4837-86b7-8c83c760a1e6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ee171db8-f3af-4025-84ad-860cb0453b07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707977bb-5b22-45e5-9c10-8e2d194b54c0",
        "cursor": {
          "ref": "413168d1-cb55-4972-8ec1-36956c4d91d0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "41f272c7-99be-47e5-995f-d0627236c9f5"
        },
        "item": {
          "id": "707977bb-5b22-45e5-9c10-8e2d194b54c0",
          "name": "identifiers"
        },
        "response": {
          "id": "78f0ba65-ed0e-49b3-b7a5-115a87dfec9e",
          "status": "OK",
          "code": 200,
          "responseTime": 2323,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c0344a-2dc8-4bf4-b90d-0882cf968ae3",
        "cursor": {
          "ref": "1779b340-8e95-4fce-881f-6c3517f60f6a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "adc01f73-b29c-4097-832b-af6e5569d8aa"
        },
        "item": {
          "id": "e0c0344a-2dc8-4bf4-b90d-0882cf968ae3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a26eb0a6-d595-4132-bee5-8c6ca9ea542d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e716ef-3a23-43fc-9f2e-af59cd4b97e6",
        "cursor": {
          "ref": "cd98d87f-db15-47c8-a2ef-f690730fe4a7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "18251b65-d6d6-4ea0-bc38-11530fb8d4d0"
        },
        "item": {
          "id": "e2e716ef-3a23-43fc-9f2e-af59cd4b97e6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8e1207ad-9cc2-407c-91ce-3e42a8165d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ee4a1-2a08-44c6-a13e-48d0480a5b87",
        "cursor": {
          "ref": "623115f7-d297-434b-8cf7-4d80df924c11",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1efea924-07ac-4475-a572-178b1be4199f"
        },
        "item": {
          "id": "d59ee4a1-2a08-44c6-a13e-48d0480a5b87",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0d03bbc1-7bef-45ce-a011-6fea6a0a9f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9842d-edf0-48a6-816d-0475a1a600d9",
        "cursor": {
          "ref": "e56bb8ad-1a47-46e6-b6ff-27706f4bed8a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b39b31f-4bfa-4a33-a7eb-29a162b574d1"
        },
        "item": {
          "id": "77d9842d-edf0-48a6-816d-0475a1a600d9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5426f3df-b35b-4472-937c-14431af7e02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edba7ae2-6fc6-4c74-8171-cfd969060272",
        "cursor": {
          "ref": "96e274aa-f67a-4674-989b-7bf78416df46",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "960ae8f8-3a77-4df3-b7dc-b97162b7d355"
        },
        "item": {
          "id": "edba7ae2-6fc6-4c74-8171-cfd969060272",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f027ba62-43fa-42e8-ae30-690b0ae2c5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8535a2-14c5-4881-87ae-1f53d728eb5a",
        "cursor": {
          "ref": "61180ffd-49f1-4957-a8dd-f033fbc25110",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0193fec3-6294-48e2-a405-9a3b8e1c73d0"
        },
        "item": {
          "id": "4b8535a2-14c5-4881-87ae-1f53d728eb5a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f20949a6-8c28-4f2e-aed3-72f3f89ebcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83673994-61f0-46f6-a1c1-cf9b12d389ec",
        "cursor": {
          "ref": "b151a541-b9c8-4617-b4d2-fc20298bdb89",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "29876041-0e4f-4bd2-a801-44a15a8359ee"
        },
        "item": {
          "id": "83673994-61f0-46f6-a1c1-cf9b12d389ec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "62888f04-f1e6-46b7-9faa-cadd990b12b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548d00ba-a93f-4c35-bb93-3d41aca1f1eb",
        "cursor": {
          "ref": "1c4ba70a-7548-476d-8828-9ba1d79b2f54",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f70aac90-a997-4cba-9729-7f1d2842b320"
        },
        "item": {
          "id": "548d00ba-a93f-4c35-bb93-3d41aca1f1eb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "77b34dcd-53d5-4d66-a0e0-8964e4965d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d480d-e49b-462c-ab07-4a960926cb45",
        "cursor": {
          "ref": "361f3632-7360-413a-a48c-6cf3099997c5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c0293bf9-93c6-4a2f-91e2-d4f639be726d"
        },
        "item": {
          "id": "d57d480d-e49b-462c-ab07-4a960926cb45",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b0694d7f-35a3-437c-8ed3-7868edd23083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f9ab2a-b02e-4686-b499-b62e1387cff0",
        "cursor": {
          "ref": "f7181882-bd00-4a6d-b9c0-31bf7cec294c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "978d7bd2-f00d-4fc2-ae5b-79ceb5eba1ae"
        },
        "item": {
          "id": "82f9ab2a-b02e-4686-b499-b62e1387cff0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2f1dde23-f205-4032-8375-ea6da8c754f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bedca8-6d4f-49a4-9c70-2c399cb25960",
        "cursor": {
          "ref": "9e7af1e7-b218-4772-bceb-4c93df8fe526",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fd8f8e9b-82e6-4d0b-8e93-090575249042"
        },
        "item": {
          "id": "d9bedca8-6d4f-49a4-9c70-2c399cb25960",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e90a04bc-0b7d-47d0-aa33-53b14101f468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f74fdb6-3c08-48b0-bd8f-66b74b2fd1ce",
        "cursor": {
          "ref": "d80c3128-9a21-4d7d-a79f-81e5bb880a78",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b75d109d-1208-47bf-ad5b-944907a7672c"
        },
        "item": {
          "id": "4f74fdb6-3c08-48b0-bd8f-66b74b2fd1ce",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d04c4bfc-49a3-47bc-9c77-4e3d11aca975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e6b1fd-45db-4f4e-a61a-e946b7eeb19c",
        "cursor": {
          "ref": "2abe608c-85a6-4852-af67-c33b6e50ecff",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "30da088d-5ada-4587-b130-dfcbdacbd37e"
        },
        "item": {
          "id": "80e6b1fd-45db-4f4e-a61a-e946b7eeb19c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "238a85e9-4f25-4e81-afbf-83635ed323ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3c39b0-604d-4ad2-ab9d-9b89bcfc3424",
        "cursor": {
          "ref": "3c8d02f3-3ffd-43ce-9b5d-fe046664de90",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce7b0f18-9b48-4855-b666-2baf44016688"
        },
        "item": {
          "id": "af3c39b0-604d-4ad2-ab9d-9b89bcfc3424",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "91c6acdb-c86e-4675-964f-eae40e4b9491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad75a01e-4034-472d-a45f-c92bcf47b029",
        "cursor": {
          "ref": "49e7dff3-9983-4a07-82fb-b134c6827f12",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "848f44ad-6627-4374-87ab-dde03a6aed57"
        },
        "item": {
          "id": "ad75a01e-4034-472d-a45f-c92bcf47b029",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "db66050f-d160-41a2-b18f-4ae5643ba203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c1d6d3-0ff0-4127-83ff-8264e1629abf",
        "cursor": {
          "ref": "fdf8e4b6-cabc-4ace-b3d1-84d6dd802a91",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d1128923-f17e-4846-bab9-f983b1533938"
        },
        "item": {
          "id": "17c1d6d3-0ff0-4127-83ff-8264e1629abf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f3906819-b6bf-4178-abe2-2a81103fb404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a016f474-1d27-4ad9-ab83-2223f273855c",
        "cursor": {
          "ref": "89123ba4-327c-45ce-9f56-ca2c63d1ca44",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e13733fc-95d7-43ad-b760-ac67671522dd"
        },
        "item": {
          "id": "a016f474-1d27-4ad9-ab83-2223f273855c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "797d779d-5589-4fc6-92ed-618a3445630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319315a5-5964-4ed6-a0fe-b6533ba82bb7",
        "cursor": {
          "ref": "ef992b66-e305-4d47-bb44-4da523f5442c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5951cb76-2ee0-4e82-9858-488f559d7cec"
        },
        "item": {
          "id": "319315a5-5964-4ed6-a0fe-b6533ba82bb7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "704da099-84f5-4811-a0e1-f31d3d250d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0512235c-96ec-4b0f-a2f8-96f966540bde",
        "cursor": {
          "ref": "fa86b9fd-0c8b-4eb5-a02b-397327d50c8c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c8605dc5-703c-42c5-8813-531e114adb78"
        },
        "item": {
          "id": "0512235c-96ec-4b0f-a2f8-96f966540bde",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fe689309-6d3f-46e4-a665-da8249d9af69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544dc3ec-d940-423d-a35c-be5981578055",
        "cursor": {
          "ref": "a3b0e233-3f41-418b-92a8-9c55be56a62c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa20ec79-310c-459c-9b4e-08a9f91c6229"
        },
        "item": {
          "id": "544dc3ec-d940-423d-a35c-be5981578055",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dfc18ed1-598b-439f-9b77-e02f7128c400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89817e6-8608-48b5-b329-1616b0feef21",
        "cursor": {
          "ref": "d6d69882-a741-4d3a-abc8-77cce95b4117",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d3534f6a-b60a-403e-9767-f50a7aaca601"
        },
        "item": {
          "id": "b89817e6-8608-48b5-b329-1616b0feef21",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "491d43be-a4bf-4c84-8dac-fd2596e07fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0d09dc-5f60-4e8e-99b6-f47c0cdad53b",
        "cursor": {
          "ref": "d14f390a-880f-4764-a6ea-98609ab2f29e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ca2d551e-6ff2-4a3d-8adb-4fe572ba9840"
        },
        "item": {
          "id": "4b0d09dc-5f60-4e8e-99b6-f47c0cdad53b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "776064ba-3aa5-4895-b9ea-31204cdc4b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996b5f5-feb0-4126-8cad-0c29aebb2d7c",
        "cursor": {
          "ref": "94b72b6a-b297-4acb-9e82-476c74ade338",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39cbb045-03ba-41ce-9f24-9b06070abe5a"
        },
        "item": {
          "id": "e996b5f5-feb0-4126-8cad-0c29aebb2d7c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80b31f46-7d68-469a-a884-0480292042db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7667cb8c-b622-4947-85ed-62b970b2fc37",
        "cursor": {
          "ref": "789b1765-8bd9-4988-ba46-cfef6d332d2e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7ecd4fd7-d3b8-4989-acbb-3e7dae39d711"
        },
        "item": {
          "id": "7667cb8c-b622-4947-85ed-62b970b2fc37",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4c7a9ed2-2a90-4428-a539-5c4b40b31a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc85e345-11b6-48e0-be5c-9334dcbe12fa",
        "cursor": {
          "ref": "cfd969d7-b6b5-49b6-acfd-ab7204915cff",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e6d1f7ae-fb8a-4ec6-92d6-b1b3af79c874"
        },
        "item": {
          "id": "bc85e345-11b6-48e0-be5c-9334dcbe12fa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5b334410-b21d-4497-80e7-44d9a06305b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ef0d79-1f2f-440e-ae1f-4f8cca98ba79",
        "cursor": {
          "ref": "6f3453b6-36c1-45f0-af8c-b12276400742",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "178ca2b2-b709-4296-86c7-f1491f91e4f8"
        },
        "item": {
          "id": "f2ef0d79-1f2f-440e-ae1f-4f8cca98ba79",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "438c3809-6b68-4ae9-b23b-4c513f5d833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97833cbe-473a-4a7c-bccd-26c9945394f2",
        "cursor": {
          "ref": "9655ef8e-f131-4efa-9927-e6a605105c3a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a997175b-d8d5-4145-b7dc-b844d432d855"
        },
        "item": {
          "id": "97833cbe-473a-4a7c-bccd-26c9945394f2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "48f99460-d8df-49aa-8036-2a6abc83bbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2214f748-f80f-46c9-9e40-f19df669184d",
        "cursor": {
          "ref": "4de6b3ab-b32f-49a4-a18f-fac3aeac801c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "de681f2f-bdd7-4fa6-ba0e-c2bb83e1692f"
        },
        "item": {
          "id": "2214f748-f80f-46c9-9e40-f19df669184d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "86f4336f-5c32-4966-ab59-7dfa9e1e5784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9215d24-72c3-4759-bf37-c152283eedb6",
        "cursor": {
          "ref": "44e598e0-683a-481e-acc2-674879ece485",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a38343f6-7578-44a3-adf3-0715442b5b6d"
        },
        "item": {
          "id": "f9215d24-72c3-4759-bf37-c152283eedb6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41c1a013-c64d-4847-a830-7ec70faec62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b81d1a-3ef7-418d-818a-608cb04c4eee",
        "cursor": {
          "ref": "2d20c507-65b9-41da-b909-1fe91053894c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c2a73aae-663a-4d2e-b728-af8f8f6b6393"
        },
        "item": {
          "id": "42b81d1a-3ef7-418d-818a-608cb04c4eee",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3762b378-5b4e-4f0d-ac8f-9cb358be590f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb848580-872e-4cde-a5cd-980874873fa0",
        "cursor": {
          "ref": "a4a00bbf-eba6-4a22-9bf7-1ddd5c4ae15e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "994b2914-38ab-4035-b03a-b941537567a7"
        },
        "item": {
          "id": "fb848580-872e-4cde-a5cd-980874873fa0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2d070f6e-2743-4b84-824a-ec44020c6802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5c26d3-8fc6-4040-939f-9b5d4e6f9a3f",
        "cursor": {
          "ref": "5679971e-cd14-4066-9d74-382b60c000eb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e020a967-608f-4a86-b027-1e3c7c70e11d"
        },
        "item": {
          "id": "3b5c26d3-8fc6-4040-939f-9b5d4e6f9a3f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e67a73a2-65a2-4b87-a29c-7fb1c27baa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b310bb-6508-4572-9116-2dfd03e66d87",
        "cursor": {
          "ref": "8afc847c-41cb-40be-a632-9f33c5cfdc94",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c622bfcb-ce23-4c4d-a0d0-8e0ce9f80719"
        },
        "item": {
          "id": "e0b310bb-6508-4572-9116-2dfd03e66d87",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ef654609-910d-4246-a7e9-9fa739419127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53f706f-0701-4933-a914-1b4f59467a57",
        "cursor": {
          "ref": "2751bf13-1af2-45e2-af45-d9893a3e5085",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e3722926-ad63-409c-825d-bc6716af2b15"
        },
        "item": {
          "id": "b53f706f-0701-4933-a914-1b4f59467a57",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "29f8119e-9665-4af0-bc5b-b8ab3904cd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6a220f-820f-4163-910a-c8d1f9f32a8b",
        "cursor": {
          "ref": "95ad8d68-e797-47ec-933a-0ff66044534c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5430999b-f995-49f3-b871-0430696fe70c"
        },
        "item": {
          "id": "cf6a220f-820f-4163-910a-c8d1f9f32a8b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7a8072cd-c4af-4e92-8163-4de2fefa86eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e705eb52-18ef-47ef-b8fd-8d0ce5864304",
        "cursor": {
          "ref": "6e8602fd-7024-490b-b415-d40a7b1859fa",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "be30c68e-4148-488f-ac6a-aeb95889ddd5"
        },
        "item": {
          "id": "e705eb52-18ef-47ef-b8fd-8d0ce5864304",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ead3d5c4-f0fd-46ff-a487-b2f0515d08b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ce506-ea61-42ef-af6c-e7e3a72444f0",
        "cursor": {
          "ref": "7d09eec7-293d-4838-a4db-acc993fdc174",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "251f11ad-62fe-45e5-a3b0-9fafad6052a0"
        },
        "item": {
          "id": "294ce506-ea61-42ef-af6c-e7e3a72444f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "86842b78-bd0f-4a84-b2ec-337e5300efdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c724424-e2d1-4faf-972f-c7e944eefae4",
        "cursor": {
          "ref": "ef594b43-89b5-416d-8d05-10542b291c4f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dccd1e6d-f0ce-4a1b-af59-1bb681e28993"
        },
        "item": {
          "id": "6c724424-e2d1-4faf-972f-c7e944eefae4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f3b1aafa-a976-41a7-849f-67f99939f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9805eb93-09a4-4db6-81bc-487d5f19d773",
        "cursor": {
          "ref": "469e6552-659c-4a3a-a708-c12bb1d25889",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f30e3321-5358-4b01-b6b0-2c5f214d8985"
        },
        "item": {
          "id": "9805eb93-09a4-4db6-81bc-487d5f19d773",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "99c2d82a-a66c-4b07-9799-80453e24de15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3086dd-4186-42e1-b435-de263b5e62a1",
        "cursor": {
          "ref": "2b632d6d-5838-4161-baf3-4128c00392d4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c52cff14-2978-4724-a0af-788937327d64"
        },
        "item": {
          "id": "5d3086dd-4186-42e1-b435-de263b5e62a1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5e812424-e53e-478c-91d8-e3a78465066b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0e3612-cdd4-474d-ae2e-26d121aec583",
        "cursor": {
          "ref": "5b8ecb05-0f05-4668-8db4-fc46779a3132",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "21228721-9ace-4853-a4e3-13457fe61ec0"
        },
        "item": {
          "id": "9e0e3612-cdd4-474d-ae2e-26d121aec583",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "11d68d7a-b723-4b3b-980c-34a06cfee0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6e7dee-9933-4241-89ec-fb4ff7b47e81",
        "cursor": {
          "ref": "c5cd9bbf-e680-424f-bbb4-c136d1680a74",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ce93cb0f-3ea5-4901-a8a5-6a86c14fb093"
        },
        "item": {
          "id": "7b6e7dee-9933-4241-89ec-fb4ff7b47e81",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d7647c84-e898-465a-87ea-868e4b053559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a5a812-0cb5-4849-bfd0-9353205ce67b",
        "cursor": {
          "ref": "3f866387-51e7-4964-9230-aa4ed226935e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a29ae971-2698-4d6c-b921-ad2b8e39e512"
        },
        "item": {
          "id": "91a5a812-0cb5-4849-bfd0-9353205ce67b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c51ce1db-5518-48f9-b333-789024532f0d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee42b23-cde1-426b-8f7b-877673daeac9",
        "cursor": {
          "ref": "8937b4be-900b-4ebd-be93-0b327796416b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "97894dd3-60c2-4ec6-bd3c-9f315157725d"
        },
        "item": {
          "id": "4ee42b23-cde1-426b-8f7b-877673daeac9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bf9b9a8c-afa1-403b-a328-c2aab068d014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859a901-be4e-47bc-909c-d7a9b1b0cb39",
        "cursor": {
          "ref": "1188c11f-62b0-4734-a48d-91a82564f288",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5aeb3120-526a-407d-bedf-ec02a7ea7606"
        },
        "item": {
          "id": "c859a901-be4e-47bc-909c-d7a9b1b0cb39",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "95e44f89-86c3-4a18-81ae-4ed5cfe5fa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db278855-7af9-42f7-a1c3-597997832a3c",
        "cursor": {
          "ref": "ce82737d-bd31-496d-94ae-f2dce3e45089",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e9445f3-8888-495b-aacc-6157691bc563"
        },
        "item": {
          "id": "db278855-7af9-42f7-a1c3-597997832a3c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dd7fab44-6371-46c3-8861-dba2a6383bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a030c888-4720-4498-beb7-3b43b280f334",
        "cursor": {
          "ref": "1c766c67-9b38-4ac9-8da0-6c2311563c9c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "938cf3d4-31d6-4094-a14f-4d78011cc392"
        },
        "item": {
          "id": "a030c888-4720-4498-beb7-3b43b280f334",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea576bc5-9756-463d-969f-1d6a7702c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343a2f7f-5acb-423c-9fb7-df133e8c0bd5",
        "cursor": {
          "ref": "68ad0ca7-f120-4d92-a3c2-786b044878d6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4387a302-023f-4a91-8bf2-15ce258bfd22"
        },
        "item": {
          "id": "343a2f7f-5acb-423c-9fb7-df133e8c0bd5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ffd23504-0e39-4521-8024-4ae450df823c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b8e2b5-df8f-4f33-8724-e0abff13c572",
        "cursor": {
          "ref": "79d35b53-ea38-4e66-b2b7-3df2ef6941c6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9feaabf8-1533-47fb-b296-394458988b78"
        },
        "item": {
          "id": "f5b8e2b5-df8f-4f33-8724-e0abff13c572",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "09c5c769-2dc6-4faa-bf6a-4a028d625b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b58a0b-f1bd-464d-99c2-f93d817794b3",
        "cursor": {
          "ref": "864354fb-9b61-46b3-9a88-b5ac98b1f4d9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9ee9e422-908c-4e0e-ba64-c9f7f9cc84df"
        },
        "item": {
          "id": "b0b58a0b-f1bd-464d-99c2-f93d817794b3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "caa09b77-41c2-42e1-8ac5-6889bab7ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf2507a-554b-4b1e-b0b0-5182cacea75d",
        "cursor": {
          "ref": "850f9601-b227-4ed3-ab64-10825c946461",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "79aec7f0-267a-4e97-b61f-a09a49a08d7a"
        },
        "item": {
          "id": "fcf2507a-554b-4b1e-b0b0-5182cacea75d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "42d0b8ad-70f9-4df1-ad0e-72b54379db2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faf939b-687f-488e-b225-a7c3c13815d8",
        "cursor": {
          "ref": "f6e5375c-06e8-4a45-8057-f4d0bccb8023",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "603a538d-750e-4433-accd-cbbcce2f929b"
        },
        "item": {
          "id": "6faf939b-687f-488e-b225-a7c3c13815d8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "667deffe-8a33-4cd2-9c8a-a51c78676973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48a3aaa-7479-404e-a3f1-1c14233cec82",
        "cursor": {
          "ref": "abe95faf-c2be-418a-bfad-8d0edfc18277",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cfc3cfe4-121c-4d65-8e30-7803de12a70d"
        },
        "item": {
          "id": "f48a3aaa-7479-404e-a3f1-1c14233cec82",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f2d9227a-a423-4112-93df-a775a27ece3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85088df4-0f01-4ec2-98e4-693e1a13adaa",
        "cursor": {
          "ref": "6427372f-bdb7-462b-ac9a-1c0d066b6c25",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad39db37-a4ed-465c-9206-b882d549e4cb"
        },
        "item": {
          "id": "85088df4-0f01-4ec2-98e4-693e1a13adaa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "496d89ce-c099-496c-9702-b56846354099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0315a77f-24dc-489e-b1a7-3bed2162af18",
        "cursor": {
          "ref": "bc90715a-071b-4192-8b5a-f87fc9b6bd2d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "086c0a65-02c2-42ae-b3b8-b09c1260fd26"
        },
        "item": {
          "id": "0315a77f-24dc-489e-b1a7-3bed2162af18",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d14654c7-4916-41db-acd5-3fbd6345c021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe91576-4830-48f5-8173-57f2c72bebc5",
        "cursor": {
          "ref": "1795dd83-bc39-4dfb-8565-69e0d268b51b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ff7d2558-7c22-4368-9808-3b6b5cf45026"
        },
        "item": {
          "id": "2fe91576-4830-48f5-8173-57f2c72bebc5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b96befde-87e5-4fbf-b859-9be1d4a0c4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a6ef38-27b0-4b0d-9045-c3e3a402a2b7",
        "cursor": {
          "ref": "1ed207ed-40c3-48eb-86f2-1d0fccab9568",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "644ab2e3-fa7c-4966-adc8-6e47e1473c1b"
        },
        "item": {
          "id": "d8a6ef38-27b0-4b0d-9045-c3e3a402a2b7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "edf7797c-a567-4b31-a674-a8eb0d027c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d3506-5f5f-4c16-806d-d272626c4f89",
        "cursor": {
          "ref": "35dfdfa4-39e6-4e58-a930-030717c1e1dd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "390c4d6b-1f64-44d2-9507-23ae62fcfb53"
        },
        "item": {
          "id": "676d3506-5f5f-4c16-806d-d272626c4f89",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c8fbc6e5-4cbb-4259-9c14-e165f33e2dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3315b7c0-cd23-40da-96d3-848ed353872f",
        "cursor": {
          "ref": "9ab6d1ec-76f4-4552-81af-2ae0041614cf",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "76aaa135-423e-45a8-8da6-7b0b753c9d21"
        },
        "item": {
          "id": "3315b7c0-cd23-40da-96d3-848ed353872f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "569cc95f-56c8-4061-8cfc-5347bd21850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5614b17-4809-4ec3-a7a7-ab38a287ec9a",
        "cursor": {
          "ref": "2f7b769a-14d0-492d-8eff-9b0ce1fc4e2f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e136e3e6-f7f2-4c08-88ec-08be1b116501"
        },
        "item": {
          "id": "d5614b17-4809-4ec3-a7a7-ab38a287ec9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98f7b59a-fff0-45ee-8666-d9d2844aebad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e0786b-bf1b-4ba4-a698-dad8016da8b9",
        "cursor": {
          "ref": "05a5e8e2-3063-4bb2-bb45-c825a31ff02e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81f18d8e-51e6-4ac2-aa7d-f8d5e6085efb"
        },
        "item": {
          "id": "c7e0786b-bf1b-4ba4-a698-dad8016da8b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "69493101-81b7-4918-9ea3-123bda97f723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d7349-3de5-4565-9600-bf24f49087f6",
        "cursor": {
          "ref": "a96332e3-bacb-452a-87a9-9aeb93cba7fc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a3bc8586-cf1c-4dd4-b01a-621722873034"
        },
        "item": {
          "id": "478d7349-3de5-4565-9600-bf24f49087f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4c3b6355-3e88-49a8-be33-00e77838870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c510c32e-545f-4255-9b12-e2dc38bff209",
        "cursor": {
          "ref": "16f09e7b-8ca1-4d5b-a366-99b1c29cbdde",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "53bde9b6-a256-4ad3-b512-5d28c1de5e38"
        },
        "item": {
          "id": "c510c32e-545f-4255-9b12-e2dc38bff209",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "484e58c5-cb08-4ab9-9f89-45d651dc8fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8566b0-cf01-4af8-bbcc-cd45b81ff56a",
        "cursor": {
          "ref": "94c0e426-5f1b-429c-92be-b363409a5e60",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3d24ebc4-bdc0-4d8a-aaf5-c020d5d0bb45"
        },
        "item": {
          "id": "4e8566b0-cf01-4af8-bbcc-cd45b81ff56a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "347a4cec-a214-43ee-9b0a-1742e54e333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265c476-d511-4551-a473-3574ce0a4347",
        "cursor": {
          "ref": "0c1354e4-cd69-46cc-b156-e8c7a0bd1248",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bd9050e6-1661-40a0-b8fd-7a0734d7a95e"
        },
        "item": {
          "id": "7265c476-d511-4551-a473-3574ce0a4347",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8663318b-9de4-49c7-88e4-9dd86518282c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58614b7e-8c88-4917-af85-edd6a3f7e415",
        "cursor": {
          "ref": "7b77fa38-2d54-47f9-8bb6-0734dcb80c5f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c8fd7515-9292-43f0-9a7e-4ac870c0c04f"
        },
        "item": {
          "id": "58614b7e-8c88-4917-af85-edd6a3f7e415",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "61733e7d-9af1-4e94-9f47-3e2afea8cc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7427bf7-c03f-402a-a6c0-6242df7047bf",
        "cursor": {
          "ref": "12e1d85f-8d33-4c69-885d-496a8ecb7b99",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6f9dfafa-55e8-4536-8753-de5f68b4c83d"
        },
        "item": {
          "id": "a7427bf7-c03f-402a-a6c0-6242df7047bf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5df98cf0-f465-474f-929d-21d9629be54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b043321a-1373-40b6-b858-e20a5af3e4c2",
        "cursor": {
          "ref": "7b80fde6-e2d2-4606-821e-aad69c71a0e3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "20155e58-1387-4c33-93c6-fc64f17cb195"
        },
        "item": {
          "id": "b043321a-1373-40b6-b858-e20a5af3e4c2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "efa1cca1-caaa-47ef-86f7-b310cbc41097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad18cff9-a404-43f3-9887-2b5d235f5df3",
        "cursor": {
          "ref": "f973f69f-d803-4922-9508-1fc830e6d670",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6bb1e102-dc08-444f-8ef6-32f5e038589e"
        },
        "item": {
          "id": "ad18cff9-a404-43f3-9887-2b5d235f5df3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "423ca456-737f-4941-9b2b-7f94a173f680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d59a35-eb52-4dea-bcf2-45c4cbbd3e6d",
        "cursor": {
          "ref": "dc531318-49ea-4434-8789-7342dce636cc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6384aa7c-2597-460c-8d11-f24b91f1cd6a"
        },
        "item": {
          "id": "d2d59a35-eb52-4dea-bcf2-45c4cbbd3e6d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dce25660-4792-41dc-b6d7-f8d3d73199c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165c94cd-135f-4d0f-a4bc-31f6f60ed1bf",
        "cursor": {
          "ref": "e0943d12-cd73-4ba2-9a9f-0101763083fa",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b3ededd2-81e0-496a-8d4f-9d5955483303"
        },
        "item": {
          "id": "165c94cd-135f-4d0f-a4bc-31f6f60ed1bf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a50ad37c-4fd5-4378-b37d-47a6eeaad31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139d1fa8-fb24-47c8-9b0e-b196b3cb7b93",
        "cursor": {
          "ref": "64272778-8ac9-47bf-b3f7-f41c0f8958b6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fc94e3e2-c1ea-411b-b3e1-5d8366bc4129"
        },
        "item": {
          "id": "139d1fa8-fb24-47c8-9b0e-b196b3cb7b93",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "112c9b3a-1a02-42b4-8ecd-aa1858c7fb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dc24c7-813e-43bd-a485-9d7c885a6d3b",
        "cursor": {
          "ref": "fa724a13-3bac-4539-bcf3-ac19af0cebae",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "acdc7a57-ad67-41dd-9935-8464341bc87c"
        },
        "item": {
          "id": "91dc24c7-813e-43bd-a485-9d7c885a6d3b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b9d8b782-b527-4237-b671-f4b2a18f34a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96992751-76b6-4d60-abb4-8ad2248f7156",
        "cursor": {
          "ref": "d6f830f9-8941-42f6-9fc8-7100995807de",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6b3fc63-0423-411a-aa4c-969ba1c1c06b"
        },
        "item": {
          "id": "96992751-76b6-4d60-abb4-8ad2248f7156",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "acdb9765-2aa0-409c-a26e-b4a3d2c12377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe821621-fb4b-4669-9ed1-cd1103dd0d2b",
        "cursor": {
          "ref": "1a9f4c61-d0ec-42b0-926e-df2be4838c8c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "34988fbc-75c0-465a-95bb-703862322c64"
        },
        "item": {
          "id": "fe821621-fb4b-4669-9ed1-cd1103dd0d2b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c325bb59-8efe-4c38-8a61-fd54c7d6ed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f5a613-c1c5-4e95-aac6-4f743deb6b00",
        "cursor": {
          "ref": "91a9b5f9-011b-44c8-ba99-6f6ce7b85af5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2806fefb-c505-4920-9a0b-f43b37b23f3c"
        },
        "item": {
          "id": "d3f5a613-c1c5-4e95-aac6-4f743deb6b00",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2a0f2b9b-5844-42ee-8294-2c8bdaba62aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b90f1c-7b65-41f3-9ff6-ded6f71d567c",
        "cursor": {
          "ref": "87517aaf-23de-4785-9bad-bc544ec8af20",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d3f089a0-8b83-4b71-8fbc-ddb8e62b881e"
        },
        "item": {
          "id": "84b90f1c-7b65-41f3-9ff6-ded6f71d567c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e9ac1775-5160-43e7-97ea-5bdb89d14bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a46178-d696-4680-a6db-4c1412a8db19",
        "cursor": {
          "ref": "dc456adf-69bd-408c-8298-de59c7a94deb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "10aee1d9-e9f9-4451-a0de-019d9cc1d9b1"
        },
        "item": {
          "id": "f1a46178-d696-4680-a6db-4c1412a8db19",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ceed86ee-5eb5-4cee-bb03-a16e88974aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fdd7a8-494a-4337-96b9-cfdbab0d0b1c",
        "cursor": {
          "ref": "67da7c91-3321-472a-8020-e3414ddcc4b7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ea6fef71-5333-4aa4-b6c1-d8e3b18b5721"
        },
        "item": {
          "id": "c3fdd7a8-494a-4337-96b9-cfdbab0d0b1c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4250e8c-7a9c-439f-8d86-8e4cb13b9eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728a2972-99fe-42a7-a982-3fb83cb026a1",
        "cursor": {
          "ref": "fbf31ea8-f7b9-49c8-9fd0-d21eda931920",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "61be62c4-873c-4b5b-be40-ae7926bf142b"
        },
        "item": {
          "id": "728a2972-99fe-42a7-a982-3fb83cb026a1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dd714607-a74e-4abb-baf6-945639109b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7176a713-eb91-4ebf-956d-6711797b7bc8",
        "cursor": {
          "ref": "72758c8a-bd1d-4da5-bae3-8c1bf31af9a4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a94aebe8-6c0c-4eec-8218-bcc689c3d59b"
        },
        "item": {
          "id": "7176a713-eb91-4ebf-956d-6711797b7bc8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ee6a8bda-8250-4968-82b7-0edda0a475f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535b601c-d4ba-4fb2-9d68-854066169076",
        "cursor": {
          "ref": "9a02a99a-827c-49a8-96d2-0c03d43919a7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9b9a272a-9c51-402b-bf74-97d6bb0f627d"
        },
        "item": {
          "id": "535b601c-d4ba-4fb2-9d68-854066169076",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ffe69f7b-9a08-43af-9ab2-43863df8493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6b99ed-2308-401d-b16d-e1de899d11de",
        "cursor": {
          "ref": "d52dcadd-38e1-4c47-b850-6c7129d33720",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "93ea1490-af09-4aa2-a5f3-160e2ad9eba9"
        },
        "item": {
          "id": "1e6b99ed-2308-401d-b16d-e1de899d11de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eea3cb11-bb25-4517-bd85-6b1190bb2945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64997fd0-a111-4808-8da5-79c8905a6c64",
        "cursor": {
          "ref": "ea0793f1-4876-44a9-b322-1ed39b8d727c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "91f444ba-2466-407c-9a28-a463a9940359"
        },
        "item": {
          "id": "64997fd0-a111-4808-8da5-79c8905a6c64",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e26eac0b-c0a6-4d52-9c71-94b68ffe72a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6161dd2-3d4d-44d0-ad61-903a5afc3616",
        "cursor": {
          "ref": "fdcd61e0-89d2-4eaf-bf3a-d266796063bb",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "500d249a-6734-4cad-9aff-c0cb0ee36ec0"
        },
        "item": {
          "id": "f6161dd2-3d4d-44d0-ad61-903a5afc3616",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2944b5b7-0331-4292-a95f-7836e1df8019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb038912-875a-4e6e-9f06-d4a5337685aa",
        "cursor": {
          "ref": "a6ab3cf7-4f1e-4601-b8c8-c604b77d0268",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0f299277-e396-412a-9418-7ace343a8baf"
        },
        "item": {
          "id": "eb038912-875a-4e6e-9f06-d4a5337685aa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5574d931-aa2a-48da-b4b1-2c75dcd7e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0179ca79-9be3-4cf6-90a9-0641274bd07a",
        "cursor": {
          "ref": "feabb91d-63ba-438f-92c1-4fe72fb07669",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b41df8ac-2e14-45bd-9ac0-b30c1d31863c"
        },
        "item": {
          "id": "0179ca79-9be3-4cf6-90a9-0641274bd07a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1f50d085-95cb-46bc-bfca-77b276f90583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970dae1c-26cc-48b6-a1bc-849f02607c36",
        "cursor": {
          "ref": "cb05baf9-21eb-47a3-a832-21d68a3f5b74",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "af2db602-b024-4c74-805a-2d9867354109"
        },
        "item": {
          "id": "970dae1c-26cc-48b6-a1bc-849f02607c36",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6585fbc1-119b-4f23-8194-9aa85b9e6688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e1a640-9dc8-4f96-8118-d9688184f85c",
        "cursor": {
          "ref": "b62a2e18-4d51-478e-a2b7-f061885d43f3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a3d1d484-0516-499d-8ef3-d9338bdc466b"
        },
        "item": {
          "id": "e7e1a640-9dc8-4f96-8118-d9688184f85c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c204bee3-1b87-445f-b270-2357324e2161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5f778f-4293-491d-a05f-78fb5770532d",
        "cursor": {
          "ref": "c009206d-3d7c-467e-b70a-b891b3f38d2b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce8c31dd-b788-4185-acf1-a616c5a7d5e9"
        },
        "item": {
          "id": "3b5f778f-4293-491d-a05f-78fb5770532d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "929578d8-9c6f-4be6-b24c-956cb93d6345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a8e03e-7a1f-4dc3-874d-c2a7222626a7",
        "cursor": {
          "ref": "4a786cdf-7236-4880-967f-4fe01a4119d9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6dd9e7ed-be9f-441c-9667-14e435990510"
        },
        "item": {
          "id": "d5a8e03e-7a1f-4dc3-874d-c2a7222626a7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4fe47744-4ac7-4a63-bd1d-ba75e883ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35b865d-06ee-4fba-a156-b03626d1d985",
        "cursor": {
          "ref": "62ecc986-51dc-4d05-8ef8-8cb3732ac44c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cc3bbe13-fa55-4b2d-9478-d050d2ad7e17"
        },
        "item": {
          "id": "a35b865d-06ee-4fba-a156-b03626d1d985",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4557b08b-3a42-4921-b1de-c7548807982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf11846c-fe85-4355-9544-680c2bf837dc",
        "cursor": {
          "ref": "1831fbf3-8382-4da9-a3f5-793fcbcb0ffb",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "67f10baa-59f9-47ef-baa0-97ea3e697bbe"
        },
        "item": {
          "id": "cf11846c-fe85-4355-9544-680c2bf837dc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fdb2d109-d3a8-4f06-a8f1-3d77f9b29bd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f770ca-9c65-4ef3-abbb-b23a7704a4d2",
        "cursor": {
          "ref": "40951e59-8c13-4f5e-bc41-1f24f9548acd",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e68176e5-b085-491c-9c8c-ce5b0f0eabd6"
        },
        "item": {
          "id": "91f770ca-9c65-4ef3-abbb-b23a7704a4d2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "524c582f-c4d3-4ff8-aa2e-c4743ec4f59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "45c5ed31-831e-4df9-bf09-76618cf0ac23",
        "cursor": {
          "ref": "f74bb10a-0f0e-4e80-8558-a0aa693e1b73",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0cff642d-32ae-43c9-9159-bf79f9b8824e"
        },
        "item": {
          "id": "45c5ed31-831e-4df9-bf09-76618cf0ac23",
          "name": "credentials_issue"
        },
        "response": {
          "id": "329ab9f5-b83f-4c21-971b-6463635a0a94",
          "status": "Created",
          "code": 201,
          "responseTime": 26055,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "751f2ea9-584e-42ca-a5c2-528be1b85698",
        "cursor": {
          "ref": "88fbded6-d7ec-4953-84e9-7702cea9870f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "522f74a5-4987-4615-8fe7-bf43cd12394f"
        },
        "item": {
          "id": "751f2ea9-584e-42ca-a5c2-528be1b85698",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "655dae69-6477-45aa-834d-7cf92a8981af",
          "status": "Created",
          "code": 201,
          "responseTime": 24357,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243fffb-22ea-4a38-ad4d-be5f129fb878",
        "cursor": {
          "ref": "c16f5ac1-dfe7-4a89-b5ec-c85e0d0aa004",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "41267e63-e643-4ee6-b990-f59b4622a502"
        },
        "item": {
          "id": "2243fffb-22ea-4a38-ad4d-be5f129fb878",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6d64421b-a1a4-45b1-a2a2-85e489c4b5fb",
          "status": "Created",
          "code": 201,
          "responseTime": 25439,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99f48fb-224c-41d3-a343-a60f067b7a13",
        "cursor": {
          "ref": "8f2d6aa4-8443-40b2-9b83-a371f0e9b71e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ff281109-5914-4ec8-94df-35f45086331f"
        },
        "item": {
          "id": "b99f48fb-224c-41d3-a343-a60f067b7a13",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aa34fd38-1055-4a90-88c9-6571d8b28d43",
          "status": "Created",
          "code": 201,
          "responseTime": 25408,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa4bad9-7d4b-458d-a693-26b10e9ffc4c",
        "cursor": {
          "ref": "9751f558-0780-4962-9605-304a2f870e06",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aee62ea0-a30f-4d1d-93ec-db7e76ab1288"
        },
        "item": {
          "id": "6aa4bad9-7d4b-458d-a693-26b10e9ffc4c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41156cbb-ad6b-4421-a21f-9c800fca6e97",
          "status": "Created",
          "code": 201,
          "responseTime": 24925,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-28T00:47:14Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-28T00:47:14Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2ebcda58-9082-48ac-b1bd-580610431a6f",
        "cursor": {
          "ref": "71a21f5a-ea7b-47d2-8e96-a547afef3f5b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba1e4e59-a5fc-42a0-a2a5-df3583378864"
        },
        "item": {
          "id": "2ebcda58-9082-48ac-b1bd-580610431a6f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f1b3f965-1c91-4682-be2f-18ca73a4800a",
          "status": "Created",
          "code": 201,
          "responseTime": 24948,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad38add5-1452-456a-a197-459a4d17bab5",
        "cursor": {
          "ref": "9f207715-1ee7-4433-ae9d-02b1f05a4c1f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a67122ea-70e6-40a8-bf6b-f7478555b0fd"
        },
        "item": {
          "id": "ad38add5-1452-456a-a197-459a4d17bab5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3c3a5305-b3a6-4f64-bce0-a0ed4c7125c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580f2846-0ea8-481d-ac4e-6caa1e0e1661",
        "cursor": {
          "ref": "4b2873b9-340e-4e98-941d-27b2c06d9fe5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "72c12c49-5285-403c-b663-6f05318b9e02"
        },
        "item": {
          "id": "580f2846-0ea8-481d-ac4e-6caa1e0e1661",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70f4da53-7e6c-4e9e-90f7-88b4eaf47875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103c072b-6c0d-42fa-99c6-7dd93dc5a41c",
        "cursor": {
          "ref": "570d7027-3a12-4d1d-8be9-b5f0eb56906f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ed7fe397-46a6-4bf1-b7f2-c70c69560c6c"
        },
        "item": {
          "id": "103c072b-6c0d-42fa-99c6-7dd93dc5a41c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "11dc83ee-fc6b-4738-b842-fcf4dedbe933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee0d841-be42-4893-9ce3-2bacfd0bb8fe",
        "cursor": {
          "ref": "561e9d78-d2ce-4330-897c-a170b111fc98",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f3b4524e-0005-4800-9042-74c5cd342597"
        },
        "item": {
          "id": "9ee0d841-be42-4893-9ce3-2bacfd0bb8fe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b0a5a2f-71a0-427a-821d-f7fc10f15058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a21c97-efa1-4467-992e-0d7bb3bb04de",
        "cursor": {
          "ref": "c26bd94e-4c69-4834-8e82-175703d88a72",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8e5fcaca-9380-4b70-b81e-7dc3694271b9"
        },
        "item": {
          "id": "f9a21c97-efa1-4467-992e-0d7bb3bb04de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4aca5be-18d9-4be0-8228-9ec702f0f546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db581e9-2d63-4a2e-b726-3092f779844e",
        "cursor": {
          "ref": "3e89b8fb-3cea-4e33-8d9d-4e5eb370f29a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5920e8a1-3e9a-4907-ba2c-a0a5fdc279cf"
        },
        "item": {
          "id": "0db581e9-2d63-4a2e-b726-3092f779844e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "94ca429a-6d64-48cc-acc7-74003c789d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c43e28a-06f2-459e-8986-1bc9456c00cd",
        "cursor": {
          "ref": "7cc81d54-c5f1-45dd-9aca-55e1e6a5be8b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c8f132d-4099-4109-a6a0-452698fc0463"
        },
        "item": {
          "id": "9c43e28a-06f2-459e-8986-1bc9456c00cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9b8ce74f-0e78-4400-abda-82b85a0d525e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374bcb56-f41b-4163-af1f-6eed901b535d",
        "cursor": {
          "ref": "c04a8056-2d92-468f-905e-9752a49ac0e3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1cf83718-81d4-4504-8526-ca32d54ec231"
        },
        "item": {
          "id": "374bcb56-f41b-4163-af1f-6eed901b535d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "01a8d405-c8ae-44ff-977e-ff4894cf6272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8e81c3-2571-44a7-92ba-7cfe37025027",
        "cursor": {
          "ref": "0e0239ff-962c-4c1b-ad26-8f0389291d40",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f9462a64-5ec5-41aa-a717-54877e936707"
        },
        "item": {
          "id": "bc8e81c3-2571-44a7-92ba-7cfe37025027",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "03a56c5c-4c79-4191-a926-e13e9bc4d761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951c387-f602-4686-ade2-e7194261c58f",
        "cursor": {
          "ref": "bb3c067d-3fe9-45db-b6b5-150583d52e6c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "969c8407-82d1-444c-8171-925e7b4cacba"
        },
        "item": {
          "id": "6951c387-f602-4686-ade2-e7194261c58f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "289b2a3c-260b-4c29-bcb1-b05244017abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ec26f4-9611-489d-8912-933ceea58c4c",
        "cursor": {
          "ref": "3d6aa1a3-b690-40a5-a08b-b209d81f0a25",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fa104376-0934-4861-a988-af7d91a1b54f"
        },
        "item": {
          "id": "f8ec26f4-9611-489d-8912-933ceea58c4c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1428d595-19c4-4f0d-a086-69ea4fec510e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee454ff-3685-4afb-9cd2-97c53742253e",
        "cursor": {
          "ref": "85f4b02b-5c56-42be-a741-0f7f6d2956b2",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "865ad38b-8b6c-46c0-b022-d7b557e2a45b"
        },
        "item": {
          "id": "8ee454ff-3685-4afb-9cd2-97c53742253e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9cbb8af3-bb01-4acf-9df0-2cb4cd5b3120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764251d4-1282-4680-a291-5bc16edfa83d",
        "cursor": {
          "ref": "cef6afeb-490d-4347-bea2-e59e71a94f76",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fda16b1b-8264-41ce-86d0-33f892e7f3b7"
        },
        "item": {
          "id": "764251d4-1282-4680-a291-5bc16edfa83d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a49a9b43-d6e9-46c2-9777-26b2ab4d69bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd15bc0f-fa18-475c-b908-ceea158fe9a3",
        "cursor": {
          "ref": "15391ee6-2d6a-4d12-af31-9b0244e49367",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a4961d90-6402-47ce-95d2-b40d1b4f4579"
        },
        "item": {
          "id": "fd15bc0f-fa18-475c-b908-ceea158fe9a3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f548d4b3-21b3-485a-8d45-56f9ccc2e1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d44d0-c2ef-4d1a-8ce2-84d1d7614fa4",
        "cursor": {
          "ref": "e97ce8ea-1301-489f-8909-c36ad6a88ad6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7e58a44c-8a91-43ec-bc2b-c8e215a7fb25"
        },
        "item": {
          "id": "f70d44d0-c2ef-4d1a-8ce2-84d1d7614fa4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "17f30797-d523-40a1-8f02-f2ffaef28715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659423b0-5e4d-483f-8b7b-5030faa03eab",
        "cursor": {
          "ref": "de6f9896-b3ba-401f-8a39-a529dd188549",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b212016b-b2af-4774-b338-b6857b0920e2"
        },
        "item": {
          "id": "659423b0-5e4d-483f-8b7b-5030faa03eab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ed7ca32b-3a33-40ec-bbc0-6c81c185b69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcd682e-d9bc-4dc1-b5e9-41179dbf5350",
        "cursor": {
          "ref": "b441f05f-ec3a-47fb-bd9c-7b829ebecda9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "60b7024a-916b-4d4a-ab55-f7528f2a600a"
        },
        "item": {
          "id": "ffcd682e-d9bc-4dc1-b5e9-41179dbf5350",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2e514a2a-ba4c-43ed-9c29-95a9fa6bf273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdb3c2d-dbb5-4067-a414-5b92240a5fd8",
        "cursor": {
          "ref": "89744482-e12d-4afa-943e-fe5955081747",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c6311c40-3f5f-4b31-9455-a780dc1b55b6"
        },
        "item": {
          "id": "9bdb3c2d-dbb5-4067-a414-5b92240a5fd8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8d8cf7e6-6255-4bb5-a8d5-f68a944b8998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9115152-58ce-48ef-9fca-355499664165",
        "cursor": {
          "ref": "02352ca3-890f-4e79-9e4d-1458fbd26c0b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "121b6fe9-12a2-413a-bc66-5179e156fcca"
        },
        "item": {
          "id": "f9115152-58ce-48ef-9fca-355499664165",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3c130f0f-22d6-4eeb-858c-7a25ca726a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e69ce90-5453-45cd-81bc-8f38b57d6c68",
        "cursor": {
          "ref": "24e97130-52b7-4b37-8f02-69397f837c5a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "13a934d6-849b-47e3-b484-feaebdda71d2"
        },
        "item": {
          "id": "8e69ce90-5453-45cd-81bc-8f38b57d6c68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d67dce29-3e44-4b0e-b9a1-1d31f8adffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9349f074-70bd-4c65-bc46-c63e0cdb8e0d",
        "cursor": {
          "ref": "1ca986a3-d48b-42f4-b607-058d581d9e00",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4d1650b3-1b61-428e-8827-5b44a5049fa7"
        },
        "item": {
          "id": "9349f074-70bd-4c65-bc46-c63e0cdb8e0d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fbe6a725-3a77-421f-b44a-f98b228359c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7571a8eb-eaf9-4f50-b8a1-d9a60bb7d1ef",
        "cursor": {
          "ref": "56d7093e-6af3-4869-b511-21587df7806e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7e767b40-9ffd-4964-87b7-17207db75a57"
        },
        "item": {
          "id": "7571a8eb-eaf9-4f50-b8a1-d9a60bb7d1ef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14c48410-c988-4c70-b4e7-6031e099a6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d68436-d567-4ade-8a4f-8f84dbe2b670",
        "cursor": {
          "ref": "15b2b386-9af7-41cc-9920-2c786ada2130",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9948bfea-9749-42fb-bb38-5fb627e77649"
        },
        "item": {
          "id": "37d68436-d567-4ade-8a4f-8f84dbe2b670",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66a4d814-230b-4a49-9e10-633dc13518cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aef74e4-cac7-46e7-a5bc-ad5c52def718",
        "cursor": {
          "ref": "ea174176-2023-4191-9500-8999d4ed7d2c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1617a414-cfea-4a31-a8a1-38565ad9b9d6"
        },
        "item": {
          "id": "6aef74e4-cac7-46e7-a5bc-ad5c52def718",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "239c9ac4-04ee-40e1-b280-100a0aac87ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540ccaf0-5654-47f4-983c-b2762e2a7747",
        "cursor": {
          "ref": "d5660b12-45e9-4e89-b6b6-8dc71f8c0a76",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6a48e81f-917c-401a-9f2a-d804fcdc8638"
        },
        "item": {
          "id": "540ccaf0-5654-47f4-983c-b2762e2a7747",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "15bd4266-7c01-4c1c-a2a2-1b7363153406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a666aa-5964-4d77-aa6b-40c3762a656e",
        "cursor": {
          "ref": "f8b455fd-25f4-4801-8aea-aaa4f089b290",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a831bc20-5aea-4be6-8bc0-df707ccb0b07"
        },
        "item": {
          "id": "08a666aa-5964-4d77-aa6b-40c3762a656e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "566784f6-f2e5-46a4-b7d7-6d0df737db98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2658a0-e509-4432-9e0e-cfa40a4d0132",
        "cursor": {
          "ref": "9e7125bc-bc9c-4952-b856-35e90d187e5d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a47ed15-00b7-4881-8e8a-f4409e0a4ea2"
        },
        "item": {
          "id": "bb2658a0-e509-4432-9e0e-cfa40a4d0132",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "126a73f5-a211-4cce-a762-db6ed6f9a365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c94ab-956e-4283-ac9b-361530f2128f",
        "cursor": {
          "ref": "654149e8-6747-4a75-9dfc-feb11f106594",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e8f61fca-666d-4ffa-b16c-e3d44cbc1acc"
        },
        "item": {
          "id": "530c94ab-956e-4283-ac9b-361530f2128f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "30e77eec-53ca-4a46-b58c-074e36096dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a327d4e0-454c-439d-b7cb-26791b1f320b",
        "cursor": {
          "ref": "f3ca4380-6a69-4bc5-9266-4ac070320dbe",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b4e5c1a4-0744-479e-9bbb-4eb45566ad08"
        },
        "item": {
          "id": "a327d4e0-454c-439d-b7cb-26791b1f320b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0fbfc75b-9c83-4572-bb34-98f4d02c24c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a449bb29-219c-4491-aa94-6d091bf2b92b",
        "cursor": {
          "ref": "7436385d-f183-4277-bac5-50dd2d033ed1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f2099b8-bafc-4d98-bab9-d48fcd9aa0c5"
        },
        "item": {
          "id": "a449bb29-219c-4491-aa94-6d091bf2b92b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b1f172f-3dd8-4dbc-81d6-f67ada103896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3765548e-9cc3-41a3-b7fc-a541811a5c08",
        "cursor": {
          "ref": "03a6d011-593e-4126-aa14-d0e71ee36b4f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "91e26456-c6f6-4641-9bef-e3f4b63ff3de"
        },
        "item": {
          "id": "3765548e-9cc3-41a3-b7fc-a541811a5c08",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b9633610-641b-4fa0-bf97-e474078ad09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664aa2eb-f808-4f6e-b006-6132943ce084",
        "cursor": {
          "ref": "984eda28-9414-41ec-bf35-45af0254e413",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "983beae7-f3a7-4766-9cf4-94c9465862fa"
        },
        "item": {
          "id": "664aa2eb-f808-4f6e-b006-6132943ce084",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0ccab750-cd5c-402d-9afb-c8dc236880cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05262356-ea40-4b57-baa9-fc470bac6b42",
        "cursor": {
          "ref": "6e79ef3b-49a9-485d-bf3e-a8cb9b9729c6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "13cdfbd8-0e68-4f17-a807-8bb7e2b53b41"
        },
        "item": {
          "id": "05262356-ea40-4b57-baa9-fc470bac6b42",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c04b1e25-a249-428e-a95f-9137af9df99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a0b121-3f3f-46cf-9183-a1f2576c7531",
        "cursor": {
          "ref": "f6aa2946-0e85-4a43-ad4d-05b3d964bc62",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a7ecb57d-6456-41c7-8262-439a481697c5"
        },
        "item": {
          "id": "c1a0b121-3f3f-46cf-9183-a1f2576c7531",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0d4c2981-2057-4f9d-ad66-f02695321e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e705b5-0d5e-436e-ab8b-f99e3cbeba01",
        "cursor": {
          "ref": "9df1bba7-5abd-4b6a-9b6f-f84e4a1bfc96",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "65713da5-5dbf-4e0a-a4f8-e92e809987be"
        },
        "item": {
          "id": "14e705b5-0d5e-436e-ab8b-f99e3cbeba01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e11f2a5f-4d41-441f-971f-77ac37ebdbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b57af-a5d6-4632-80a7-768c9bc1b870",
        "cursor": {
          "ref": "04826183-2d43-4751-a7ce-44dc983a9c6c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a4a9f27-977c-4d6e-82af-41b30e9dd92b"
        },
        "item": {
          "id": "8e6b57af-a5d6-4632-80a7-768c9bc1b870",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "96a93bfe-48fd-4af1-ab5c-1959e21fdd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb11fb3-72a9-4c34-8729-b81cac7ac6b3",
        "cursor": {
          "ref": "08017aec-e1f2-47bc-a11e-07e80546387a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ecd9297b-8e70-482e-83bf-9297bcee6d8d"
        },
        "item": {
          "id": "0eb11fb3-72a9-4c34-8729-b81cac7ac6b3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0595c812-abdc-4b31-a2ef-888838e14715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4910d7b0-e77a-4498-81e4-82b7a7f88721",
        "cursor": {
          "ref": "600cc42c-0733-44c5-944b-e43469c4ef92",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e8f88f56-fe76-4cd4-a4a8-f47e1e4e3c93"
        },
        "item": {
          "id": "4910d7b0-e77a-4498-81e4-82b7a7f88721",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b09161a5-c907-4376-9cd3-c10245b3a6be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11344bb9-25cb-40b1-8244-06b17e00743d",
        "cursor": {
          "ref": "f1c6e54e-6ec0-4786-8c9c-84e9aad6abd8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ffb2cf3b-dbc7-4eaa-899e-51634925043e"
        },
        "item": {
          "id": "11344bb9-25cb-40b1-8244-06b17e00743d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "030370d7-6371-4035-85df-91e97df3b492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2290e099-552a-4a5e-a0f6-6704bbe95ce5",
        "cursor": {
          "ref": "3cdab7f4-4e96-43d0-aae6-e67fd655c672",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b49af455-d9fc-4cb5-82d9-d9274c013601"
        },
        "item": {
          "id": "2290e099-552a-4a5e-a0f6-6704bbe95ce5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6236dc05-167e-4c60-b928-75d95a8629f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67247d8-9e39-4655-9a34-3585bd01f85c",
        "cursor": {
          "ref": "2eabc532-8f2d-4ea8-abc0-cfbd7f1afbd9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "85e399c1-1d2b-4e97-9696-355c789efa3d"
        },
        "item": {
          "id": "c67247d8-9e39-4655-9a34-3585bd01f85c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "db595a8e-1362-45bd-91c5-023e26bf110a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420d5ae3-2709-43f9-8fa5-3415ea9cb68d",
        "cursor": {
          "ref": "cec76de5-59e8-4b39-8b15-04de3995b88e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b987abc5-11b7-45a0-80eb-fc59c5efe817"
        },
        "item": {
          "id": "420d5ae3-2709-43f9-8fa5-3415ea9cb68d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ef386f1d-8b2d-4257-88e0-10f0501b658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52521264-b3ab-4411-82fd-0b8a8fcd3c9a",
        "cursor": {
          "ref": "f670471c-1cb1-4ed4-a2dd-05038be5eda6",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2825dc59-79f4-42f1-8403-00bde43e876a"
        },
        "item": {
          "id": "52521264-b3ab-4411-82fd-0b8a8fcd3c9a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ae718e25-3158-42c4-ac34-510e89243c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a203968-c05f-44fc-851a-f705ea84d162",
        "cursor": {
          "ref": "caa31044-6f0c-4350-a40d-7dcfd4f713e9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "df88f813-47ac-4751-b899-7494336fcdcc"
        },
        "item": {
          "id": "9a203968-c05f-44fc-851a-f705ea84d162",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "49505d39-b52e-480c-9e5c-116776263c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41f9450-a9b3-4cfc-a999-9ed27c74e133",
        "cursor": {
          "ref": "557904fa-7209-440d-892f-0294b6f9ba99",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aba7ad2e-c2dc-4697-af2f-e5d5d90c09ec"
        },
        "item": {
          "id": "d41f9450-a9b3-4cfc-a999-9ed27c74e133",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b4464b78-9169-498d-b1f8-ba41486c1e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8ab25f-5c5f-4572-b3b7-ea9c4900b3d0",
        "cursor": {
          "ref": "6deb2c61-661c-4fac-a5d9-c6f3961e2944",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1a2da20a-a1ae-4167-a309-5d26aa6a3709"
        },
        "item": {
          "id": "be8ab25f-5c5f-4572-b3b7-ea9c4900b3d0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "65d16d37-d2e7-4003-9ea0-49444d214917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8409a8cf-c93f-4be3-887a-b2fa535c2584",
        "cursor": {
          "ref": "e4223cad-693e-4e68-966a-b35fc8992770",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3506a9f1-449c-4e1c-b8ff-decfc786fab4"
        },
        "item": {
          "id": "8409a8cf-c93f-4be3-887a-b2fa535c2584",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0588fce7-5316-4ea6-a9d6-354be5276055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc3fc4c-37ae-4e1a-ba55-b53428aeb963",
        "cursor": {
          "ref": "f6a1aecc-4cfb-4f56-af17-9e5b05f99033",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8944a622-b837-4018-bf8a-2e2f4e200867"
        },
        "item": {
          "id": "2fc3fc4c-37ae-4e1a-ba55-b53428aeb963",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6fb6d6da-290f-481c-ae44-14963d0fa077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ab72c9-bb57-45c1-82e2-686fe5ad65d1",
        "cursor": {
          "ref": "d05574e1-affe-4204-b78d-c26c99e5474e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1bbd63b6-62a1-4d00-b8de-cdfe5679f1a9"
        },
        "item": {
          "id": "e1ab72c9-bb57-45c1-82e2-686fe5ad65d1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9e496f42-e2af-48c4-8e1c-687c86517493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96307cac-b669-4549-a2b1-dc0d1eeb9e81",
        "cursor": {
          "ref": "a755636d-1765-4d4d-b9ab-9d633ca83b36",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06ab4e4f-a277-44fe-a943-14fbb2b271be"
        },
        "item": {
          "id": "96307cac-b669-4549-a2b1-dc0d1eeb9e81",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e8ee4530-22cc-410f-a74e-0ef62c2d90c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf8d601-b8af-4097-8dc2-bc13f4981502",
        "cursor": {
          "ref": "5032bf78-5250-486f-b0be-80b29743e976",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e353690-2838-4c30-ac6c-fdeb1def1449"
        },
        "item": {
          "id": "1bf8d601-b8af-4097-8dc2-bc13f4981502",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aaa70e63-53f1-41eb-9d13-7d6b83a03915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814269f-e7b3-43ca-a242-f1cbbe9b9322",
        "cursor": {
          "ref": "ab7b36e0-743a-4226-a5a4-14d2d39bbe98",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a4896474-9e63-406f-8c95-5ea3450e6779"
        },
        "item": {
          "id": "a814269f-e7b3-43ca-a242-f1cbbe9b9322",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dc59b34c-5eb3-45c2-b79c-20af7ed57d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9542a385-3f0a-4336-ae34-4ae76e5bd279",
        "cursor": {
          "ref": "881c7113-a915-43ff-ae22-67f309abebe2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7eda4c4c-b421-41de-ae0a-fc9dca3f9fc0"
        },
        "item": {
          "id": "9542a385-3f0a-4336-ae34-4ae76e5bd279",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5cf79da3-4ebf-431d-bd28-f4a55e1846d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b9363c-1e27-4fb2-93d4-25f4b4736a3f",
        "cursor": {
          "ref": "2b2d0852-0652-4c35-ac00-46e6e468bb87",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "20426a97-7be7-4df0-bea9-5758e91ea714"
        },
        "item": {
          "id": "97b9363c-1e27-4fb2-93d4-25f4b4736a3f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "27e5e4a0-bb6f-43c8-b638-7c9f3bd2b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6087928-28d7-4487-b98f-05a43eeaba18",
        "cursor": {
          "ref": "d78c8396-d116-4e31-9fdc-5806978e82b8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7bf87c5d-40b8-4889-ab13-bc9a4cf79de5"
        },
        "item": {
          "id": "a6087928-28d7-4487-b98f-05a43eeaba18",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "335d6d23-0b54-4653-8642-06fd0a09eb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2432da5-d9ae-4cde-82a2-ca9c6be47dfc",
        "cursor": {
          "ref": "cd968524-0630-470c-84cd-f92496e9b34b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4c110d28-d12c-4879-8890-c4ed3e650b30"
        },
        "item": {
          "id": "b2432da5-d9ae-4cde-82a2-ca9c6be47dfc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7bafdf38-1a04-4990-ac89-c539dcb4c87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4767f92-b222-43c1-ace8-b038212a48be",
        "cursor": {
          "ref": "2d242e33-2c62-40df-b487-dc6578a3d959",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d11d47df-8079-4709-bb96-995a6d36fbf8"
        },
        "item": {
          "id": "d4767f92-b222-43c1-ace8-b038212a48be",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fad6ba3c-efac-4192-9c24-9303fa810645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f3d316-ea89-4994-ac13-c7c8f47c8333",
        "cursor": {
          "ref": "c8b2c505-c0b4-4766-945d-e9ae7ed936dd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bce9db28-d151-4d36-b833-15eac97c5027"
        },
        "item": {
          "id": "15f3d316-ea89-4994-ac13-c7c8f47c8333",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7af58745-3849-4655-94fa-7b4088fee117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc690bc5-d96c-4c02-bd4a-8b58c327fd70",
        "cursor": {
          "ref": "ceccb523-5a46-4ae7-932c-804276066fc1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6d2f33c3-9933-44a9-a2e0-b54fa59dfd9d"
        },
        "item": {
          "id": "fc690bc5-d96c-4c02-bd4a-8b58c327fd70",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e6d4da20-1137-4227-a6b2-98b462336fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc36447-554f-42ee-9af9-610b547f2fb7",
        "cursor": {
          "ref": "8194d235-c7d0-4427-b329-dcb918badd94",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "265fcd1b-7e40-4093-9a12-9383a187ec3c"
        },
        "item": {
          "id": "3bc36447-554f-42ee-9af9-610b547f2fb7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "742915af-2852-4085-bfeb-6b706befd6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd591d9-2e2a-49df-9d9c-e015e791eaac",
        "cursor": {
          "ref": "d9b6a5f4-6b07-4c76-884f-ba2e928977a8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b11812cc-7952-42c9-a620-a3896bacbaf0"
        },
        "item": {
          "id": "edd591d9-2e2a-49df-9d9c-e015e791eaac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6cf2d6d4-5fdf-4a0c-8fd5-8ee06599448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de57a2-b44f-4fa1-83a7-e22dcd087781",
        "cursor": {
          "ref": "9efee5df-5b36-4e18-9306-87c1eb40c75e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "813682bf-9a6b-4517-a135-0559725d5c57"
        },
        "item": {
          "id": "46de57a2-b44f-4fa1-83a7-e22dcd087781",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3cc97398-1512-4190-ae88-057c23e75de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26beffe-f49e-4078-9865-032f3ead44c3",
        "cursor": {
          "ref": "4469d777-eff7-4a7f-b674-b9b6a9c07707",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2973474b-1abf-41a4-bae9-4dba6e501a2f"
        },
        "item": {
          "id": "c26beffe-f49e-4078-9865-032f3ead44c3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "33319199-dbe1-4226-9945-08df59877ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c1acd6-6e09-4a8c-a60f-8782f6b0497e",
        "cursor": {
          "ref": "21d8cfcd-b44e-4a66-a296-d471028c2365",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f06dd30b-b173-4fdf-8003-fade19041adc"
        },
        "item": {
          "id": "e0c1acd6-6e09-4a8c-a60f-8782f6b0497e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "02128850-ccab-4f14-9878-11a3a7e51fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9fa16e-5267-475b-883d-99170d67952a",
        "cursor": {
          "ref": "dbb36745-f571-4fc0-a6f8-b782bdca91fc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b606af78-6d4a-415e-bb3e-758577082de8"
        },
        "item": {
          "id": "0c9fa16e-5267-475b-883d-99170d67952a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0bd3d125-0c54-4323-9232-887780726c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea6404-8716-4ab4-96d7-52ef39433b16",
        "cursor": {
          "ref": "95b2a8a5-3a9d-46ce-9085-0eea9211a8a1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8ea19dd8-1573-4456-a4d8-f8a73b3e684a"
        },
        "item": {
          "id": "31ea6404-8716-4ab4-96d7-52ef39433b16",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "41abdea4-9b64-4b95-a451-c6cfda930872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797b2ae5-6370-43b6-8d48-b70711b39137",
        "cursor": {
          "ref": "4aa202d7-77c9-4d0f-a88f-2cc5356452dd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e4e76215-4bee-4b96-91e9-3a46bd8819d4"
        },
        "item": {
          "id": "797b2ae5-6370-43b6-8d48-b70711b39137",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "06c5bba3-a424-4743-b9e6-d06690776eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c91c34-5258-48a7-bb21-35fc9a5792e1",
        "cursor": {
          "ref": "fd9236f1-bd7f-4d25-8f86-fc13bf23605b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd99dc90-8c51-40cf-b9a6-8fd938ebad97"
        },
        "item": {
          "id": "90c91c34-5258-48a7-bb21-35fc9a5792e1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "325433b5-1fbf-4767-aa4b-eab5fa71303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2104770-4c40-4091-b674-7c7c809df11f",
        "cursor": {
          "ref": "4cd6f021-e616-4153-9367-e65f00bbec38",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f4bb31e-47f1-4b77-a886-23095e5593f0"
        },
        "item": {
          "id": "d2104770-4c40-4091-b674-7c7c809df11f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b571d06a-4b00-42d3-8ce6-9fb9a69250be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d978fb10-b007-4702-875a-624bfa1a91f2",
        "cursor": {
          "ref": "f736c554-7f94-4bc9-96a0-c5357927b6ba",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1cd85156-3dd2-4cd6-a598-9635de62bccf"
        },
        "item": {
          "id": "d978fb10-b007-4702-875a-624bfa1a91f2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "26290133-e85e-4ec0-95f6-fc7ad8f43108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6885ed94-0aa1-4806-96fe-add6b288577a",
        "cursor": {
          "ref": "0882d164-4c1f-4108-9b3f-c5e1d17ec441",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0167c35d-b1d5-4ce0-a36c-99f669d23094"
        },
        "item": {
          "id": "6885ed94-0aa1-4806-96fe-add6b288577a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5acf3742-7f0a-4d2a-b815-8b29273108bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb3dc4d-e947-43ad-9945-f201c37aa85f",
        "cursor": {
          "ref": "6b64bf27-ea93-40bf-b800-aeeabf733202",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "749af60a-71e9-4e78-9023-d95c6e9380df"
        },
        "item": {
          "id": "8bb3dc4d-e947-43ad-9945-f201c37aa85f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a38e198a-9f78-4fd5-8c6d-c58a0535d62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fca530e-448e-4c99-96d1-cf2f227f9324",
        "cursor": {
          "ref": "59498325-bb26-47fe-9fb6-75c4091f1f52",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3b54ca48-e800-48f4-bbe9-1b8167dc375a"
        },
        "item": {
          "id": "2fca530e-448e-4c99-96d1-cf2f227f9324",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee4e5f74-41c7-4db5-8f7d-f3e6a900bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ab2fef-1b2b-4de3-92a2-7bdd68619980",
        "cursor": {
          "ref": "89089dec-fbbb-4959-adc1-579a853c7c44",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5884d8b-1987-4f2b-9f04-db1fa41d3cc4"
        },
        "item": {
          "id": "63ab2fef-1b2b-4de3-92a2-7bdd68619980",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3a8d42f5-1859-4828-bf6b-1b5fe0452b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba657f5-89d3-40e0-87c6-bdd31d70af9b",
        "cursor": {
          "ref": "8b89e99a-37ea-472f-9694-2eceec61cca1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "57d026c2-1bf7-482b-b0bc-dfcf5640e1b6"
        },
        "item": {
          "id": "bba657f5-89d3-40e0-87c6-bdd31d70af9b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d4c8fe69-2bd3-45d3-8322-22efb2ca8bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9cb36f-8875-4604-9495-b28d20dcb95c",
        "cursor": {
          "ref": "4477f0fc-3f7e-40a4-8674-91003dce0d21",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a0259fa4-195c-4a87-8ec0-dac85846041e"
        },
        "item": {
          "id": "3d9cb36f-8875-4604-9495-b28d20dcb95c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b8d85178-359e-43dc-bdd1-3e9d42e4a627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c658568c-3036-470a-b48f-fabaad11d5fd",
        "cursor": {
          "ref": "52d994c0-a727-4b01-8666-b87475be7b12",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64accb53-324f-4730-8dad-a366f5ea127f"
        },
        "item": {
          "id": "c658568c-3036-470a-b48f-fabaad11d5fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "be11e32b-1bcf-49b0-b04c-ace229ed1082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e2a913-29b1-41c1-b23c-c0b9441a0fe2",
        "cursor": {
          "ref": "b26233e1-87eb-4226-bffc-3136bb3128be",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bf73d2be-a23f-4a8c-a046-bb27c4f0142b"
        },
        "item": {
          "id": "72e2a913-29b1-41c1-b23c-c0b9441a0fe2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2d6d0412-eba8-4a7e-b5d7-c15dd8bac9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3531a1fe-250d-4ab8-922e-0e20dc624354",
        "cursor": {
          "ref": "fbd33ce6-1422-418c-a78c-b3d159fd16e5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "856e9e9d-3088-4c74-a548-7f4d9d5c27f7"
        },
        "item": {
          "id": "3531a1fe-250d-4ab8-922e-0e20dc624354",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "05d79d90-143d-4072-a61b-7d4669bfaa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9386d09b-e30a-4c55-9ed3-95e6de6246e8",
        "cursor": {
          "ref": "ade6be45-9d14-46c5-9b29-080afc95cd22",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6a2f0320-eff9-40cc-995a-fcf93d9e5f17"
        },
        "item": {
          "id": "9386d09b-e30a-4c55-9ed3-95e6de6246e8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "40dd4eae-e25e-4d5b-bcf9-4c0befd21f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c52258a-9c1a-4019-87bb-d036649d92be",
        "cursor": {
          "ref": "25d9f818-fb65-4181-9163-89b387299457",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0fa16ac-55e0-48fb-a7ac-3f543308b830"
        },
        "item": {
          "id": "1c52258a-9c1a-4019-87bb-d036649d92be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cef8d8e3-e76e-4bb4-9b90-c8595fa0b0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee910ecc-fc5a-4a4f-8fb0-dcaec365a2a7",
        "cursor": {
          "ref": "e7db08a1-627d-4952-8739-a5202b4b6eb2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3003343f-e640-40ad-9992-ebb8ced17b7a"
        },
        "item": {
          "id": "ee910ecc-fc5a-4a4f-8fb0-dcaec365a2a7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d0a076a2-bb34-4d84-97a4-c695b66cb36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d68b606-7250-43f4-8eb1-648ca3325f0f",
        "cursor": {
          "ref": "19c926e3-5fcd-4acf-96be-dc2fb2dfc24b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c7be41b-f12d-4b30-a07b-0da781e62a59"
        },
        "item": {
          "id": "2d68b606-7250-43f4-8eb1-648ca3325f0f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5362b862-8704-4851-85e9-9eb809ec6877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb157ab9-4b93-4e17-bfbb-f6cb061f86b4",
        "cursor": {
          "ref": "886657f4-3f1c-4654-80f5-ace9eea4e24a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8552fd35-846e-43d7-86fe-e0e987421da8"
        },
        "item": {
          "id": "fb157ab9-4b93-4e17-bfbb-f6cb061f86b4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "39f29f5f-8b69-48a5-b041-32a511ad1276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210e2da6-725f-479f-ac2d-d7d63591b00f",
        "cursor": {
          "ref": "9932982e-2c04-46ef-926f-e13029953354",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6799979e-6f34-4998-a1de-c27a5c534f1e"
        },
        "item": {
          "id": "210e2da6-725f-479f-ac2d-d7d63591b00f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "caad5303-5cf2-478a-b4a7-ff06c7d5b6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24d9562-8616-4b52-8e93-8fb7e43d92e9",
        "cursor": {
          "ref": "f0d6e332-b6f9-4aaa-8559-92e5159ac95d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7d13822c-3ca3-4c60-b4df-d38b824ec0f2"
        },
        "item": {
          "id": "c24d9562-8616-4b52-8e93-8fb7e43d92e9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "02197494-61e6-4c6b-aef7-95f1927ace18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b98409-73e6-49e0-a8e8-da02344d50a9",
        "cursor": {
          "ref": "d304cf9e-57d4-482e-bddd-a539bf3ff59d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c8c90811-41e9-4d3c-b237-2c03b81ad747"
        },
        "item": {
          "id": "59b98409-73e6-49e0-a8e8-da02344d50a9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "988e8fb2-b6ee-4beb-9864-41dd755f9862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633ed24d-b1a3-4903-a042-c8d4b3c6b820",
        "cursor": {
          "ref": "37de5807-0f46-4774-80ed-9b46e29157ba",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a689feac-9059-448d-93a8-ef3b853e7aff"
        },
        "item": {
          "id": "633ed24d-b1a3-4903-a042-c8d4b3c6b820",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f1f6134f-4999-41d8-829f-3c2a53423da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6a7076-4479-44c0-8d89-36af0ca0c736",
        "cursor": {
          "ref": "d092ffc2-5d52-4650-ab9c-5b0a88b4c898",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "82fa3cdf-917a-4df1-912c-d6626ed6050a"
        },
        "item": {
          "id": "ca6a7076-4479-44c0-8d89-36af0ca0c736",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3c8b9b33-1266-4d77-a27f-67437f612fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be601321-9118-4496-a37d-d6602fdf702a",
        "cursor": {
          "ref": "f8eb43d8-130b-401c-ac1f-4e660332a71f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eab132bd-8ba7-41f0-86c0-8175cf5428a6"
        },
        "item": {
          "id": "be601321-9118-4496-a37d-d6602fdf702a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9ffb6328-392d-4980-94f1-b4186c41294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d89bf9-d267-4d1b-8307-d241137589bd",
        "cursor": {
          "ref": "c9d861bf-58a2-4040-b206-60b9c5d79d6f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "59d977a0-4314-4e74-beea-1db94f54394e"
        },
        "item": {
          "id": "96d89bf9-d267-4d1b-8307-d241137589bd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "19c7581b-e641-4810-9368-df36b552a0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1bbf47-a7ec-4c7c-9524-d58bf0e45d32",
        "cursor": {
          "ref": "1e613edc-9f92-48a9-b79b-6e88cc7b3eec",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "929ca24d-14a4-4508-823d-998082615ee1"
        },
        "item": {
          "id": "1d1bbf47-a7ec-4c7c-9524-d58bf0e45d32",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "12539077-7b67-405a-9c91-3cfc54131d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff7d865-1184-4791-939e-72555b1e56bb",
        "cursor": {
          "ref": "6ab44c83-9fb0-4b4f-9d4d-93a87d9e5e97",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f7a95bd9-f48c-4bf7-bac5-180421bf4a3b"
        },
        "item": {
          "id": "eff7d865-1184-4791-939e-72555b1e56bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e209b049-ce1d-4362-ab4e-e2f57f21c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1b9cfd-6bc5-44e9-aa09-572c18106c34",
        "cursor": {
          "ref": "bc9f27e2-487e-4eb8-a595-e58f426270f8",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d0350a73-3dcc-4125-99c5-1ac785f94b4c"
        },
        "item": {
          "id": "1d1b9cfd-6bc5-44e9-aa09-572c18106c34",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bdf4f524-d1b4-4219-9ca4-7b329cd771e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e450e8-beef-4c4b-9697-3481602c5cf6",
        "cursor": {
          "ref": "70093e62-531e-46a8-aa09-dad2829ec1a4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "394a73ec-b4ec-4d4e-a869-502bed9ad03e"
        },
        "item": {
          "id": "15e450e8-beef-4c4b-9697-3481602c5cf6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c8f6922c-1246-4168-ab40-0ddced1b4574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c7e4da-b2af-42cb-aa5c-6e258ac6bdab",
        "cursor": {
          "ref": "2c1367ac-7d33-4aab-b6fd-347530057122",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "58269c26-a0c0-4b72-82a9-dc73a3d523b8"
        },
        "item": {
          "id": "c9c7e4da-b2af-42cb-aa5c-6e258ac6bdab",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7b5ca9b7-4aad-4e47-8400-231b5f91d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612b7d03-2183-4c42-8d23-66284caac91e",
        "cursor": {
          "ref": "6ec7456c-7fda-4224-b2ef-fbdc2a637440",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0cc7b054-fc11-48c8-b4bf-1e8a4e20b603"
        },
        "item": {
          "id": "612b7d03-2183-4c42-8d23-66284caac91e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a4fe9a80-4a79-4ad0-985e-ba95f4baa327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eeb0bb-a4b8-4c2f-8b12-920c475ffa29",
        "cursor": {
          "ref": "9069dd92-20db-462c-9b52-58020f99cfb2",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "20cec776-0cc9-494f-be20-111a4472abf7"
        },
        "item": {
          "id": "a4eeb0bb-a4b8-4c2f-8b12-920c475ffa29",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0094ca84-48a3-4d2c-9ccb-2ec0d4d85f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d731a00-36b3-4c32-a751-bdc8c24efb27",
        "cursor": {
          "ref": "92c4f502-9568-4dc1-909a-b3c8f0c58c7e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2756293f-d5ef-4b6d-8088-023588e1b3ef"
        },
        "item": {
          "id": "3d731a00-36b3-4c32-a751-bdc8c24efb27",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "18138d09-56b0-438c-8ef7-2f637cd2a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2712d988-539b-499f-86b9-a395c2afe7e6",
        "cursor": {
          "ref": "c1d31a6d-004f-4c23-898c-a0e47625edf5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "704649e3-8ef4-4f71-aa49-220884c413e0"
        },
        "item": {
          "id": "2712d988-539b-499f-86b9-a395c2afe7e6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "46e76a73-5052-4cb2-87e1-59fe4c454463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964843a1-5aa5-48b1-b2c8-837c3303060a",
        "cursor": {
          "ref": "90e04c65-421c-4361-8e51-b5dbd6376c0d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "340b60cc-949d-4c1a-920e-535282e0af77"
        },
        "item": {
          "id": "964843a1-5aa5-48b1-b2c8-837c3303060a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "db4a8f74-6fb6-4f99-be8a-321245a5eab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf9b3b5-c9ec-4378-ac5d-17612443fb48",
        "cursor": {
          "ref": "5a28cc17-1a04-47c7-80e9-b88210146946",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ad4c5d8-6e66-4f32-bfae-f2555065a72c"
        },
        "item": {
          "id": "7bf9b3b5-c9ec-4378-ac5d-17612443fb48",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "60812a7d-ffbf-490f-b7d7-1eb38b701e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f3b38e-4e37-4cbe-8fae-930b2d63a472",
        "cursor": {
          "ref": "5dcf06ae-2333-4461-ac39-c1adfb97b03f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "38eddf64-8472-4019-836c-77238afcf421"
        },
        "item": {
          "id": "00f3b38e-4e37-4cbe-8fae-930b2d63a472",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fc819603-0a3a-4392-8a1e-edb9a1af9801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33593eac-98b3-4c3a-89f5-b6f6b1cb285f",
        "cursor": {
          "ref": "8ab3804f-976c-42ab-8252-f9f6744d6654",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "de803d3b-f40e-48ad-bcfe-8dafcde95442"
        },
        "item": {
          "id": "33593eac-98b3-4c3a-89f5-b6f6b1cb285f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1fce7a5f-b6ee-4a45-a202-c7dc19ea0b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09188204-276a-4ec7-b0f8-fb51a87b3144",
        "cursor": {
          "ref": "5de50519-19ae-4a8e-9962-2b4c54cf915c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d2261f97-ac38-47b0-9bbc-e04dde7e8ebd"
        },
        "item": {
          "id": "09188204-276a-4ec7-b0f8-fb51a87b3144",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "94be21be-077d-48c3-a24c-24429d358680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39472e00-f59c-46ee-a7d8-f74d98efd57a",
        "cursor": {
          "ref": "dc330ffd-67fe-4037-8981-819d1ab76698",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4ba7817d-77e3-431b-b1c3-f787eb5c24e9"
        },
        "item": {
          "id": "39472e00-f59c-46ee-a7d8-f74d98efd57a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "862c3da6-e6f9-4876-b7eb-7daebff6b0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919b40c5-2a7f-4f24-9564-3632207f6e10",
        "cursor": {
          "ref": "d9ab2c2a-678d-4c54-9c61-fc8a8d847286",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6cb87422-7b4d-4992-ba3a-5171b966780c"
        },
        "item": {
          "id": "919b40c5-2a7f-4f24-9564-3632207f6e10",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1ae59946-a3fd-42fa-81da-e3156a51ddf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95986e6c-3f56-43fb-a8e3-41ab4e3dd681",
        "cursor": {
          "ref": "805ed7ec-01ba-40c6-b565-2beca472ad62",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "614a368c-ff56-4f0b-ad0b-78b4fbcdc6db"
        },
        "item": {
          "id": "95986e6c-3f56-43fb-a8e3-41ab4e3dd681",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ccb1f4b9-adf3-4b31-a445-e53a6329aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84190c5a-cca3-4d29-aeef-2f51aaf6bb06",
        "cursor": {
          "ref": "47ed23c0-6d02-4fe3-ba3c-2a79dddbf006",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b099240a-a537-49bc-8758-836f5e2f64e0"
        },
        "item": {
          "id": "84190c5a-cca3-4d29-aeef-2f51aaf6bb06",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1c859483-ee6f-4d8c-bd18-dc58023b9b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63fad3d-9227-4722-8246-2de5d4c1ee5b",
        "cursor": {
          "ref": "0c8b1e03-da1d-48e0-8d2e-3d935e569293",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f90f5ce8-2b75-4cc8-8a52-d6969d1ddcf2"
        },
        "item": {
          "id": "b63fad3d-9227-4722-8246-2de5d4c1ee5b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "68f4fbc9-e481-4c47-8a3b-49d2653ed532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd26a7b3-662e-48a6-bae6-d6fc7cbc21a3",
        "cursor": {
          "ref": "ae1b883c-0fe2-47c9-82e9-eaa0c4f3deff",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "856ddfe5-db8b-4aa3-b1c2-e1896b4a28cc"
        },
        "item": {
          "id": "cd26a7b3-662e-48a6-bae6-d6fc7cbc21a3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6db5023a-e673-4484-9b9b-dbbea33d0e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1917fdf-2e77-4c82-9c9c-3901a224cdf4",
        "cursor": {
          "ref": "b96e29b7-be70-4cdf-8d10-575e9b1be87c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bbb73563-df9a-40c0-8192-3b6f63300448"
        },
        "item": {
          "id": "d1917fdf-2e77-4c82-9c9c-3901a224cdf4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8ceaa8a5-4d7e-4c18-bf33-6b8d2ddcebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871da9aa-ff59-4967-ad3e-fe126a87dd2f",
        "cursor": {
          "ref": "4d2e7eae-f645-496b-8ae1-2407dff4164c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2fc61f37-454a-4259-b2e1-84bf5633a86b"
        },
        "item": {
          "id": "871da9aa-ff59-4967-ad3e-fe126a87dd2f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "31e63cf7-630f-419d-a36a-bb25b370c4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091e8cc4-2413-4e25-8dde-28d41a19c549",
        "cursor": {
          "ref": "cb68d608-8772-4941-bf94-5bdde2b1d5c1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a6a02de5-04eb-45af-b7e1-d86b27ff49f3"
        },
        "item": {
          "id": "091e8cc4-2413-4e25-8dde-28d41a19c549",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "39637497-09c7-4646-9ca8-158158a86a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414e903-e3ac-41fc-91f7-c84b8f9ae869",
        "cursor": {
          "ref": "94188919-d0a0-4fff-8655-0649a996123e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "74680ad9-f700-4d3d-a498-42b5bcb06f09"
        },
        "item": {
          "id": "d414e903-e3ac-41fc-91f7-c84b8f9ae869",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "53db3e3b-06b0-417f-81f2-a545a3513cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dec665-9a0a-41d7-9b00-334a9fe80241",
        "cursor": {
          "ref": "7b642dd4-b585-44f8-9151-242f1a9b5d7f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d7ce32b7-4b11-4bea-a552-d52cb1e22432"
        },
        "item": {
          "id": "06dec665-9a0a-41d7-9b00-334a9fe80241",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87755119-f53d-4e83-9cdb-797855486310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471fec86-e083-42cf-b4cc-d09987053294",
        "cursor": {
          "ref": "de3cdbdf-b51e-4436-8cd6-4d268da9d7eb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "79025fd5-908b-42fd-8946-1d5278fcdc55"
        },
        "item": {
          "id": "471fec86-e083-42cf-b4cc-d09987053294",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fa094bf8-60fa-4bdd-8348-1c27c514ee29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5635900d-40ba-4eca-9294-aad805b0f9d2",
        "cursor": {
          "ref": "740806c8-6327-4c69-bc5e-457a03f85507",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "65bef846-fb10-4f67-8a36-3aa7dd235322"
        },
        "item": {
          "id": "5635900d-40ba-4eca-9294-aad805b0f9d2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "837b56a5-dc6c-4c6c-835e-9a05645ee697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032b91e1-2d82-4196-b2ed-7cd6456ab1b4",
        "cursor": {
          "ref": "31c6b6c3-e316-4077-b327-c91b9425c142",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2360ca74-9c4e-40d9-a127-5b0cc54cd6cb"
        },
        "item": {
          "id": "032b91e1-2d82-4196-b2ed-7cd6456ab1b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d096ba5e-59a7-4c80-81d2-9a67d6631bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f3a12f-4037-44ae-9fe3-17b6139eb2ed",
        "cursor": {
          "ref": "58ac3965-03f6-4319-8004-8f9ce02eb1fb",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0b1ba83a-74c1-4108-879b-b1d020653f4d"
        },
        "item": {
          "id": "f4f3a12f-4037-44ae-9fe3-17b6139eb2ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fd62abfc-a63a-40e3-bcec-49433bda933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df451e5f-d8af-4189-9331-3d6dbc2f62ac",
        "cursor": {
          "ref": "f41a1133-7c69-4fd3-b23c-c3b6456b010d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fb8c6f59-0700-4445-97bf-dc86af7bd29e"
        },
        "item": {
          "id": "df451e5f-d8af-4189-9331-3d6dbc2f62ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e81be7a0-ed9e-4f9a-bce8-b56703de3335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe1dfdd-db64-408c-9f6d-aac4a37489de",
        "cursor": {
          "ref": "b9ce7a4c-9fcd-41cf-b221-aa30310d1b42",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "15d58170-5f4c-4ca6-a34c-6f233549781f"
        },
        "item": {
          "id": "bfe1dfdd-db64-408c-9f6d-aac4a37489de",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8712efbf-c979-4ff9-97e1-e17063e4374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a0b393-57cc-48d9-9152-02bbe4810db7",
        "cursor": {
          "ref": "403796ef-7a90-48a3-89cf-2e69a1ab0844",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7a624a45-a9e0-44f3-9cda-647bc53d3438"
        },
        "item": {
          "id": "80a0b393-57cc-48d9-9152-02bbe4810db7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f2f0b970-5255-40c2-8893-7cfbfd46e3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf0c9c2-3919-4d34-88be-a9f94ea53e18",
        "cursor": {
          "ref": "79a972aa-b543-4cc9-a01e-ac029d2c0a6a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d18294a-deb1-4053-a064-ea6bb5e58f8a"
        },
        "item": {
          "id": "dcf0c9c2-3919-4d34-88be-a9f94ea53e18",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5816313f-40fa-46c3-ac91-413029fec1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337e49be-4b9d-472d-b5a0-4bae4abd976e",
        "cursor": {
          "ref": "c5f8c51e-deb0-4353-bc56-2b911fa466dd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d39d5c50-7f1c-43e5-9d7c-318e141257f3"
        },
        "item": {
          "id": "337e49be-4b9d-472d-b5a0-4bae4abd976e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4062a39b-8667-4af5-9f21-07b162de18f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689cf60d-a4bb-4a95-b54b-17695e31dfd6",
        "cursor": {
          "ref": "0ae26325-71b7-4238-a944-5da846afcbb5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4116385e-c21c-44f4-83f8-5d5e9331505a"
        },
        "item": {
          "id": "689cf60d-a4bb-4a95-b54b-17695e31dfd6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5518211f-3957-486f-a497-ab8032e04049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f733e79-3cd4-4d16-8109-808eae5de8b9",
        "cursor": {
          "ref": "dc795d27-f402-4838-ac3c-d57af20e93af",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8a6aee6a-2f98-4456-a81b-5407e0ba0083"
        },
        "item": {
          "id": "2f733e79-3cd4-4d16-8109-808eae5de8b9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "51aa848d-a316-431f-b24f-665e2f33f2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6979b1ee-9276-475f-b0e4-448bbd28af0d",
        "cursor": {
          "ref": "6499bd42-8599-4145-8482-3897fefb4cf0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "39137df1-6454-4a7f-9cb9-27972bb28088"
        },
        "item": {
          "id": "6979b1ee-9276-475f-b0e4-448bbd28af0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5198bffe-c9e2-4847-9cd1-0de991502e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217c48bc-0bdd-4f54-8981-d3e8ac9bc6c4",
        "cursor": {
          "ref": "e18c6f0f-769e-4471-8717-1ad5cc40eac7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ffbe1f27-3e9f-40db-9a64-97bc8d70dc8d"
        },
        "item": {
          "id": "217c48bc-0bdd-4f54-8981-d3e8ac9bc6c4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ad57634f-7352-492c-a92b-316b99f1d8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077145f1-e113-47b4-8c9d-a874e75c505a",
        "cursor": {
          "ref": "17ca9fb4-d777-4729-9ff1-d7274ea26925",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "97e3ebca-efc1-4aa8-b7be-901a2f802bc6"
        },
        "item": {
          "id": "077145f1-e113-47b4-8c9d-a874e75c505a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df5d45e2-b77f-4158-a05d-9448ba309755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4c961b-ff2f-423a-80e8-3ddb62bd6503",
        "cursor": {
          "ref": "34d6fa51-f5b5-4fcb-96b9-8bed9e0c264f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7b5d85be-acf4-436a-9ef0-3188eff09871"
        },
        "item": {
          "id": "8c4c961b-ff2f-423a-80e8-3ddb62bd6503",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "68dfde95-1f03-422d-b045-483652e942e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e2f20b-a422-451d-90e7-59659e660fce",
        "cursor": {
          "ref": "a0afdbb6-c831-41ee-84e2-4a6c5ba02929",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "07c5f1e4-976a-42b3-824d-b125fc54186b"
        },
        "item": {
          "id": "33e2f20b-a422-451d-90e7-59659e660fce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "beacb498-4bba-4639-90dd-a087cfad4fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1e736e-2490-4d02-830c-aab084887e23",
        "cursor": {
          "ref": "a401b2f7-60a8-4839-9367-33d7d3a22207",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "64af9130-d449-429e-8829-8464ccd1cc37"
        },
        "item": {
          "id": "ba1e736e-2490-4d02-830c-aab084887e23",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d6e708cb-c0ea-46b5-b7c7-5f5d30a98835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6b33cf-3309-4a63-addf-b261cab0aeec",
        "cursor": {
          "ref": "8f35a943-7e00-42b9-ac9e-0f4b5715cc78",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e6dd5bed-bffa-4639-8f00-2df778f0d208"
        },
        "item": {
          "id": "cb6b33cf-3309-4a63-addf-b261cab0aeec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4e3f891c-2a01-4150-a4f4-42e70c743361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7ca812-0c8f-4f70-9704-08409eab30d1",
        "cursor": {
          "ref": "14531ceb-c2cb-4b9f-95ac-916b5a60b345",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a3975099-04e7-45e0-bba1-acfa675a05c4"
        },
        "item": {
          "id": "9f7ca812-0c8f-4f70-9704-08409eab30d1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b8be241e-4ded-4c2d-a484-6bc706b6d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e340bc-7721-4e85-828b-8f8a2d77f497",
        "cursor": {
          "ref": "2ff3bd32-55f3-4fa1-943a-f04e06b5e088",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d30a756b-c0c8-4a59-a1af-d86f61182754"
        },
        "item": {
          "id": "f7e340bc-7721-4e85-828b-8f8a2d77f497",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6086b2f3-a560-46eb-8d7e-d01a41ae93bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf82f266-f372-4c39-a46f-ba3eaf0f35aa",
        "cursor": {
          "ref": "96a3d938-105a-47a4-8b5d-fb0506e62075",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9c13a5bf-e4de-4663-9d8c-838360675ea3"
        },
        "item": {
          "id": "cf82f266-f372-4c39-a46f-ba3eaf0f35aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8c134a83-5100-4c1d-8e2e-af9b80ecf1c6",
          "status": "OK",
          "code": 200,
          "responseTime": 2170,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c401c2-8184-4f95-8a83-ffbbe60fde3e",
        "cursor": {
          "ref": "50a908a1-407f-4d7a-9f25-a9fddbd1176d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "39862d42-98ac-4459-a926-b002bc2dfd14"
        },
        "item": {
          "id": "75c401c2-8184-4f95-8a83-ffbbe60fde3e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "564eb5f9-9069-4ef8-bfcd-da11099e2326",
          "status": "OK",
          "code": 200,
          "responseTime": 3830,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde102c5-560a-4891-a0d7-8723adce1bf4",
        "cursor": {
          "ref": "837f21eb-b7b1-411d-ac4a-971c1e42d584",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86091775-61b7-4622-8dac-bb79e4173a95"
        },
        "item": {
          "id": "dde102c5-560a-4891-a0d7-8723adce1bf4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "66852501-92bb-4f3a-a709-130bbe86b875",
          "status": "OK",
          "code": 200,
          "responseTime": 3370,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d06b18-4ead-4788-bf02-b6a0978bcc42",
        "cursor": {
          "ref": "0690d0d9-94b8-46dd-aa50-5e6c81c02534",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ab3326c8-b1f2-4543-a817-4ee4cdbc57aa"
        },
        "item": {
          "id": "28d06b18-4ead-4788-bf02-b6a0978bcc42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "11feb3b7-c627-4a12-acf8-128b1d6eb3a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d06b18-4ead-4788-bf02-b6a0978bcc42",
        "cursor": {
          "ref": "0690d0d9-94b8-46dd-aa50-5e6c81c02534",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ab3326c8-b1f2-4543-a817-4ee4cdbc57aa"
        },
        "item": {
          "id": "28d06b18-4ead-4788-bf02-b6a0978bcc42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "11feb3b7-c627-4a12-acf8-128b1d6eb3a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07a3ad8-42ec-4493-886e-b4a8e8b9b027",
        "cursor": {
          "ref": "f3eb4591-10bb-4cf5-a2b3-96ea2bc4c083",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "152971e9-055c-465c-a548-3d0e7ec09aef"
        },
        "item": {
          "id": "a07a3ad8-42ec-4493-886e-b4a8e8b9b027",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80557131-dc6c-436d-b7ea-a6a2fe96b458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4031ee5-142b-41d0-a31c-346e3a1c6ffd",
        "cursor": {
          "ref": "5e107988-44af-46cb-8729-0fb8dba82839",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3894b808-e064-4a38-b788-bd6d99146c4a"
        },
        "item": {
          "id": "a4031ee5-142b-41d0-a31c-346e3a1c6ffd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dd145247-e8b7-432c-bebc-3efed6bc4a42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}