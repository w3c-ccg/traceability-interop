{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2a3b8a4a-5dae-410d-8ff3-9c1567a2ae54",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d679532-2c80-4213-90b9-286c35579336",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fac4981f-ec2e-4de8-8e41-5b6d34cc1810",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07c5a662-d861-4479-8cac-09b212880fdb"
                }
              }
            ]
          },
          {
            "id": "64bfa875-4930-4af8-8c0e-80580bac41f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6454ec9c-f117-4970-9e34-cd798794ff69",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "624fcf6e-04db-4a6b-8d1c-a6dce7887ed7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b8aafe10-b6c7-474f-a36a-91d23b22c08b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c977aa64-ea8c-4e72-859f-95970e56c14f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d2d066b-4329-4de1-af63-c858ce7fa984",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd9382fb-5c23-4523-91e1-21e7e79d1cc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8803ee1-a983-4f37-93fb-b9f94c7943c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4d35990-221c-47d3-81d6-bff43d944de5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "147c2dd3-9066-42c6-8d1c-c6f319fb5524"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e815d2fe-4813-4eb8-b1ac-167987639c60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd22d198-ae25-4891-9d38-5d53c8bd0d16"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1884ffbc-3f23-4352-a925-7398181e0e85",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9ba016eb-74bd-4940-9a76-7d0dfc732be0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c85729f-7274-4f57-a912-1a4f4437d0e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fae5686b-2fb5-49e8-8ac4-6429c7b61a7e"
            }
          }
        ]
      },
      {
        "id": "00716189-88a7-4c76-885b-0d814e35dcf1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5105e646-55d5-4f4c-aa9c-ed3e05b010ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed44bff2-db57-46f4-bb2d-db2fed848073",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17a5c389-8b27-4b62-8c28-e5e166694f55",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a0c2b-74d3-4d0a-a926-f555246ebbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6902ab0-a8ab-4810-adea-fd1c8b7e9692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76302fc-027a-4f7d-9e57-91ce6c5531b0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd20f9b-d5b8-45ab-b34a-38c90d39cf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf383bb0-0daf-46d8-a896-1968a179d234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0d1a85-0a55-4bdf-8f62-8e365312412b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c8783d-e5ec-4e88-886e-2a9860350a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abcb057b-29a8-43d9-a41d-2cc420a92c40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2bf7b81-86d9-4873-b868-b135120f74eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d48c5397-d820-470f-8d0e-f4a71bf06521",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346ef458-7692-49e4-9905-dcaa818c057e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94dcd6cf-a72b-4c8c-8b0a-02e84d69437e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09fcb8d-9d90-4c81-bfc6-f0fe262fb2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a00941-cf34-42cc-968d-03c7b29f8927"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "05566c4f-dbfa-4845-a1b3-37cb296655ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "844710d6-db28-49f5-a399-401980579e1e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62139dd0-62e2-4719-bf3a-7bbadb876c4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "619eb5c6-f9ac-4698-adc8-374dd21cca44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21b5d731-a18d-409f-b561-938a7b407e6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9e23d453-bb3a-4df9-8c2e-db74a1ab9b26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "320f0143-2102-4f2a-9b22-2a9ff8d072bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "faef469b-1b57-43ed-9d9c-cbb689ecd010"
            }
          }
        ]
      },
      {
        "id": "d0bf3706-ecab-4fbd-837b-fb34a2c3f3e1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ee7ca891-1354-4b1b-9a05-b6ed5b551608",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fa72765-5068-483a-8baa-85d94cc7143f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "305b48aa-3c52-4be3-9758-9f2fcd1d592c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae26d5a-a912-45dd-90fb-93896ceb55ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff8a3ab-ba10-48ca-a179-97a2881da2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d51ec2-a960-4f92-8b3f-e3075e4c47d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ba696d-4a02-4478-837b-f71610d13c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc3e3d-d6b7-4457-a5ab-fbcdab9a9778",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7ce603-db26-4a16-b8fd-8c8c95de16e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1ec4a4-a7d5-40bd-912e-ba75fabc5534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d618355c-5e92-417c-85a7-a17540682990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "233abbdb-953a-4bd2-b3f2-a49afd6b6d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bed20c-7e12-4514-a42b-c6e8ee82c17c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840f03f2-9172-48bd-80c7-f967320026c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e720676-ad48-4137-af1e-8b6e63c29ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb21542-91a2-4585-ba8c-95bc0c0515fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec62e5ca-feca-4714-a893-095247a94056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaa7d93-1cc1-4ceb-ad4b-7f987838133a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7e9d3f-bab1-464c-983e-2c8ea1ea8cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba26f96-4c15-48b2-9b35-a14b9b3efdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af44e9b-9f43-4524-aff8-d6be5c5c08d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75ed3b56-820e-4f31-8885-edd23d53cd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb5d73-817b-4bdd-88f6-9edcabb6003f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f195ab75-80ae-4efc-9aaf-b7b56c730784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69db00a-c0b1-40d6-9e84-e51f63af7548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30abe929-e677-4308-a41b-137705b9b63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7fd099d-a8ca-4344-85ea-0e9a94f63f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61febf1-edd9-4545-a8c1-b3f34e2df0a8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cd6239-ae03-411d-bc8f-98d579164d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fba43f-6dcd-4f99-9ffc-c9c4b114f69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb96a69c-3551-4514-af9b-a4431f9bb3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b5fd4c2-8ae0-4514-866c-624a5a69d7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e046f8ca-5a81-475a-a0e6-034c36ae966f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bba3b0-5321-465c-b1eb-19c178abb509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf2943e-b997-4638-b39a-5597e17f42c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c194fc82-f24d-44b1-b9ad-70f3f5ed61f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b3ff41-c427-4760-ab50-e8829fc91e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd5c35e-2a2b-4e71-a7af-4424ceac630c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb59f18-9de1-49a8-ba8c-2e3008f2500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61ec51d-d499-4538-8226-9332b7fcf095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5253d617-e5b7-40c1-898e-5f47451f739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a03b4e2d-bfef-4c87-bb84-3c55ad0abb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ab35ef-3b5a-4680-9d0f-c0d82bbd0b1c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce92e220-c996-4b00-99df-fd1224942cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1cab4e-8a55-490a-956e-5ad154023c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9da6d1-d78e-4b97-b06b-3a0fdfe65345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ed8a630-9d35-4f4d-a6a0-bfc80e1692c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f09c74f-f498-4c3d-82bf-61e6f1235fd5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0670a46e-d8f1-4839-8260-2b1eaeb7b1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778b9469-e629-4eff-baa9-5196920b326a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058cce40-19c2-4c15-a909-017d2018fc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e383d846-514e-44cb-9648-d03f2cde42d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa06502-0072-4e2e-8418-ea88b19d0589",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e157a1a1-0bc9-483f-8e99-9497f0795a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192acd1d-29a2-427c-8959-f40723123d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f5a257-6441-4721-a37c-3df24d043ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8d10f63-6635-42c7-92b6-44c1c09ffb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aeeea9-4670-4c93-ac73-7e8981dc1f76",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983d4978-f579-4f6d-a853-167fca2e8836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96de1e56-16de-4d38-ab27-31db49822709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b75a28c-5902-4ec6-8649-777e883af5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f000fac3-ce74-4502-8c64-a8aa36103bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13372aff-dfdf-4587-8067-84f34289c0d5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bc81c7-0e1a-4a45-ade7-d70973f82a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8826f746-11f0-446c-8888-d71061026f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54f468d-5b47-4257-862d-f76dcb287df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b1c06d4-2807-4895-8f91-4079a915e1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6cde69-c862-4464-b369-e8b0d9699b4e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c116042-10d4-4292-8e40-3442aed26f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9939be84-9831-43ba-b008-1ea3a5a9e495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e2cf20-1a3a-437a-8549-05492b0caebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be851cbb-1f61-421a-8ef5-a35d82418131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6851d3f-4b7b-4589-ab9e-80dc99715f5d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3590e2-f479-410e-86a4-e74f6d62ad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf290a9-8ccb-4545-90bc-8fbed0730472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660284d-add9-4e53-ab96-b021be463849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2bd149a-a295-4ca4-9eaa-4138ac0391c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac097eb2-1735-41ea-a058-f739af984753",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70d0352-b671-4930-8293-2b0541d224bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7881ac02-9374-4f76-a554-e7908f2282b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330562d7-2e02-49a0-a56b-bcec427e30fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d59d36a-ac1e-406c-ac47-1cafedb223db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afa31d4-7be9-4b64-939e-e66b8e600a1d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d7bc77-5be0-4f19-916c-3e068229e183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7d7fad-82fb-4bd9-9aae-cec1dec95cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37ec8c0-9a8e-4665-a7fb-5ccaecb4ce12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1908f8b-36f8-48ba-99f3-e672f29ed9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767aef01-2db0-4fd2-b87f-92dce98a42a0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c10837-99ae-49c9-8acd-586456e096f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec315bc-7a10-4dae-92e3-c99b62886e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5332bf3-4789-4ef5-864a-a9406ea5c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1c3222-434c-4c5d-9448-506843fd9ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf5cec5-6664-47c3-8074-b5ba3f48f9b1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92786cb4-8e78-4791-9968-cee2ccdd45b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0398fa2-7fbf-4e6a-b527-62dda1517957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6109bb6c-998e-4f6a-b15e-3bab8e084315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f763a76f-2f6f-4500-a8db-95531f8503ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f829de27-7219-4656-b9b0-c3e4af6fe2e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36352ace-0433-4511-93ae-dfe5e13353d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a6ed63-a068-4393-868c-5630c19be0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb919e8a-8ce9-472e-b6bb-5c631d487077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a6159c-d85c-492f-b952-f0d231349009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b13475f-657d-495a-80c5-ea602da2cd8b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984ad35d-b3dc-43d8-9303-56a667273114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffab52c-d7a8-45b5-a62e-4f37a26c1df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaaa4fb-6432-4240-b568-81909c870422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4290474f-3d1c-4cad-87ab-6c1070245770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672ca2b4-5433-48d0-9cac-fae20a7a4554",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77079f13-3cbf-4457-9182-9c66468dfaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b916bac-44b4-4e7c-9707-98cb27da8bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e983691-7304-47a8-8ed8-40386db398f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a496e61e-4336-418c-9ea3-9f048e8ef421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397fcfa7-ea75-4470-98ba-a076c481f62e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75912d79-5fda-436e-b482-21a99bf7d10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dbe0c4-2331-448f-90d4-a13e07ba12b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d01d11e-eccc-4f4a-a4f9-c0f94a871c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac78dd9b-a628-4ba6-9c46-59b23cdaecdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046121bb-8b49-427d-af0d-11a97ab995be",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1afd1dc-389e-441d-853b-87ef69705e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932b48ee-86be-4c17-b642-763adb315740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865971c7-07c9-4b7a-b2c5-883a7d85c576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd2601a-ab1f-404f-8e18-2a8844bf7065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736396ca-3ed3-4d82-a63a-ed22bcb76fcf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc075285-e355-4999-b7f5-6f8732417515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b41e082-a633-4355-b99a-549092ac2a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dcb587-5284-4e82-a2ba-e10175c7ca29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa83419-69bf-4602-a732-946e266f42f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15a2ca2-6d76-41ff-a1b4-5d157bd89b8c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138974f2-20b3-4f86-9353-570926c45a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b13b7f7-bd0d-46fb-a12f-4da997d8c3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcffefc-fe78-4c68-ba4e-2ffa1fe8a7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea56d64-f649-4af5-9056-2bbb3d2331eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f52a4a5-dd74-4564-9e3f-deb6e1f3bada",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c36918-0767-44d2-a5ec-ec12251e4936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b99c08f-5313-428c-85e5-36aacec67757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce2054-de2c-4e7a-9ff2-db08c22d62d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc771575-2541-45fe-8df3-de3816c6c639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9840325b-eb9e-43f6-8fe0-42a0acc88b81",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f798fb56-f6ea-411e-aacc-90e379b78302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0694ac-5b4f-4a64-8164-82e0bd427fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9310022-8615-4706-be86-ea2d83d45939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8996c9fd-9ad4-4916-80cb-55cae76a1e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56c8058-7da5-4737-b989-df70b43285c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f320b2b-6589-4066-920e-06a2508d8574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf085d74-3d05-4d77-8ba8-d894f1d3e807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9667e0e-f356-4438-aceb-766811c221cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75702a4-1bc2-4945-8aac-e2701f9b077d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca53c83-47c9-4c20-8045-4c27468f4f26",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0cb357-ed61-43d0-876a-7c036616cb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134d1808-a4c1-4133-b048-fcea7e30d112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5abb0d-8814-494e-9a3a-85ea011813ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "af167877-f46a-450f-9189-a8f8cde052ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e589e1-5b3a-43dc-8cfb-c362f500d8ab",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6add5765-7126-473f-8452-d081272a44a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cc4b20-d560-4320-bbef-f70b0df25eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93f816a-fc1c-40b8-887b-c2c191627fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36cb53b-c4eb-4987-9158-fd2c0946595c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b3737c-a417-49eb-a553-2bad662ba279",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b041f6-d4e2-4105-8512-58259b956450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d758bb24-51cd-4ebc-812a-af43203b0478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82cf412-e1ba-49c0-8987-10c7b6eb692c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38345f3b-0140-4177-bde9-8d0b76e8a2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5703c453-cfe3-479b-95b2-cdccb41701d0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5d9ea8-5549-40b7-bdbb-87e48982c78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1141c228-d94c-48b8-80c6-fb7cad6b9d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c80560-c7fc-4613-acda-035c947a8dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d4d877-c78e-4c78-91f1-ce80a16ace34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31b68c1-ea1b-40da-ac35-c1e2e3d342c0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c6806d-e3bb-40b0-87ff-6852fc21f767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8ed3fe-1091-45c1-819c-9f7df8861692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145b46da-041e-4992-b7e2-96c12c128551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "950b1725-3f31-450c-bbd9-5b544d830bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3af425-fecb-4925-a32c-cd8b89c51f35",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21c8fff-6cd3-4c21-894e-ec7fe38e1714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4967612d-aa2d-45f6-ba12-e6d845b4eab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c589d73-2127-4fb5-aa43-73493d415950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2aaabb-1e22-42fd-89f8-00e20b6cdd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a52223-279e-4894-95d8-9252fa5d61e9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bb5fe2-6e6e-4392-a4b1-15af3c92f26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47a0527d-be39-49c4-a6da-3617242da8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d25651-18a9-40ed-a221-73daaff3f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b31335b-693c-4d02-82b5-93456d1e62a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a87b89f-4564-41a9-914b-791041daa028",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0c70e6-4075-4595-ba87-64204bda38d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da3b2f1-b0aa-44e4-99e7-b7047906010a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854e3a92-de7a-43e3-b155-59e5a3200c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ca99f3-e217-455f-b85e-27b95021016c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ba273d-919b-4293-ad00-32f18badd329",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f82694c-d3ca-4065-85bb-86248df5f06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412c9a75-3e8c-46a6-a105-0383cf722ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf071039-0a2e-4644-b8d3-065b2519ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f81cb83b-cb77-4a03-b2ef-225b69432eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675135df-b674-4e47-95cc-38c5a0a7a804",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c176c6-6abf-4ff0-bb73-3a3fa6233739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13e7433-db5c-4fec-bf9d-71c9546e5f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463a4ed7-2857-4e70-bde6-6448d5fd8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8316b608-cd65-444c-9d2c-96010fe9778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f62eb6-6fe7-442c-a1f8-17ac495c5e09",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f28fe0a-d42a-4c42-88cb-c286a1dcbc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac42533-c9cb-4a2f-b4a9-3c720989ed47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9621f-0838-4f82-8bf1-bb405ac75c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c539bd-cba0-498f-9702-bd0346fb509d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c163d268-8354-4c60-877b-820f54949ca2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9c65ac-e3b3-4c95-b818-48732960a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5c1fcd-bfbf-4d89-96d9-846024119abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf5798-1884-4fb2-8d4b-bf2f31f173ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad86762-88fa-4c1e-89ad-0d15a33ec8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5e2f79-253e-438d-86c4-f77ff1eb9dda",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ce99c6-65f9-4d53-bd18-bf8dc9c74e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a118765-e1c5-4ffc-a3bf-eb6c97354e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ced95a0-cbaf-49ba-86f0-55807c2d9430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cb75ebdd-b3c5-45b2-b7df-2329f5f21c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42776cba-4fd7-4116-a3cb-77c058047804",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc8999-0c3e-4897-bf67-609a4fd219be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c939e74-8b94-48aa-9716-b335f06ddd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c70770-9659-46e4-9fd1-8f427be3146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c144cd67-14a4-4e49-a5aa-6501320691d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1b3123-4eb1-438e-8300-357a80ee1a8d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b98541-425a-4ecd-9f7d-b38202521f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f1f34d-b11e-425a-92a6-9b8bb2184e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70ce105-66cb-418a-bc6b-43aa12a74692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1134e090-a583-4266-88ff-5e47be1acdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefd6142-4c44-4918-bb2a-2c63ac6df803",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91bb037-1825-43f7-8f44-93c6d2de7b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745089b9-4d08-4a61-b010-4e9be314afab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99bd256-1960-42db-9d1b-002abf6c7e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e252efa-f29c-4615-8546-ed4fa1853d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f6c3d-a082-4073-8537-6c4c5f928a5a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dfa5c1-1eae-4ba6-9605-83d226e56fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f380d5-6c5d-4fa7-a7ff-41d3b051cf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90bfac6-713e-4633-ac53-a9c26b7ac9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c224f25a-2543-4d41-ac08-0456c9bd66bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00203a62-4e42-4c38-83d8-093c456c8c05",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b578112e-0be1-4ccf-ac55-3b5ba2b1f227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711f9a8e-562c-4eea-bc66-30ca89a065a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f82321-3bc0-476a-8a28-1d990aaf977c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92cba694-1b75-41f1-adf0-3b474503b13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b9cbd6-66e5-4e4f-9b24-596b1f89ca03",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3672042-a060-43fe-aa6f-5dfd5446afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de108e1e-35fa-4af3-acfb-2a2e11361442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbf778d-5d5d-45cc-b6f5-d90c99ad497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07436e03-ef5f-413e-adfc-7eb50085fb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b643c43-6921-4557-b2ff-c6c1d3903cf4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4db222-2bad-4064-ad9a-75f9a80fe033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec99b92-7971-4b0a-9807-b6d25016a314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4f0df7-a104-4312-8b4c-946412a01145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03483ae4-b5b2-4075-a795-b24a7cb7c282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dbb36d-eb3e-485a-8850-34d925b53898",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a158a9-2374-4508-87f7-e09fde8434a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ffed06-82a3-4826-986b-bf69422eb686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0ce49e-48f4-4cb1-a7da-897763094273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c9eef3-1913-4a14-82cb-13bf3af5756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4785a7a0-14d0-4414-adda-2169fdf43b30",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e5d20-10df-48fd-96a2-7147a7370560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ba4f37-a091-4955-8607-d48ea95311f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78bd862-d948-424b-b1b6-6d9833a677e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcd2235-823e-49f3-a153-41ee9620d60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8ccbe2-da48-48b8-beec-69b18da5e0fa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5078725f-7f17-4271-b91a-8ed1a700be00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c285d1-ddf4-4952-acb9-ef20ea110f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617dcc01-0790-43fb-9ea7-e987a3b6cd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9745e335-f744-4ced-af78-2893cdfc48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed2c0af-3b63-403f-98b1-d97367b6e96c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d651ae-1db9-4288-af8d-14d8dbc17253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4856d9a-acaf-48aa-97a1-9cb40f1c1470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5690e77d-0805-4086-b5ce-56dc13f0059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa58e33f-2731-4f37-8567-c06d2cdee20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6d5943-4945-45fb-890c-f75065324592",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2765a37-dd74-4b03-b483-4e625bbc46db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613e5544-1475-476f-913b-dd95bd231c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb91ec7-5b70-4c6f-ba6e-e92dfe31e0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04102ab-9ab2-4f2c-90be-4ba9d08fa9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bc6f1a-ee06-43c8-9db3-9cb0725f93c0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cc45b3-4c8e-43ec-b07e-b80f825dc497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5fd655-c16a-47ce-92eb-cbb9eae95283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e801e66a-346a-4892-a9e2-e2d07ef40fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cde59ba-7884-4a82-ba92-76a576967f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25937ff-d1c5-4ea7-8fd8-f5529e33224a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c46677-a034-475c-b8ec-cc401f715788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02241f3-987b-4a29-8952-cc949e362d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a20f149-b11c-4a56-9462-21df5fb3090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "40f20a89-52ee-4b5d-b93f-9649ee49794b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6623d7-4a77-42c2-b086-713f35bf924e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5bd4da-d86a-463e-9b95-12b675921f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844a9bb2-0685-4b73-b02e-2cc4cb135c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592d86b0-f3e3-41dc-b513-667b2db2133f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9af948c1-13e5-4949-8839-e7cd3286d53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8e8869-4353-40c2-9e6c-27d2053f17ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad05e5fa-3882-4039-97ae-5ff06a7aced5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ed51a6-cb51-4d85-a048-f18e28c3c052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a84f80b-d33c-4d9a-93bf-1eab95a24175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba03fc9c-40e0-4a98-a581-5bdf62354357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdb79b5-aa22-4e18-bcd5-65e07f262669",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe31d94-fdf8-4410-94e4-3a567eac56f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bdb61d-774a-4887-b09d-d1788586edae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ac4689-79ba-4975-9134-daab92f3d441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91309f9b-8539-493f-a4e8-6beab15c5cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0afb16-3f31-49d8-b6bb-ab25991d02de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3e75d9-be77-4eb1-831d-30363902015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985fdf37-d47c-4c20-984d-db01bdbfada4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485e525b-a155-4b41-b244-5a8358d7c2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5cb876-5bf5-404e-a6e3-680ab558a9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abcce3a-1dff-46dd-8108-594b876767da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4dd089-c9d1-4319-a47a-17262ab5fae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298585ef-1dde-478b-a2cd-6cb6745397ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7121e82a-a405-40c3-b3b9-b5a29896f99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c297c53a-8a4f-4bde-92de-435a69e4f6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1ff9b4-b2d1-4987-a9d9-b7a420715dbd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ff2e6d-69f0-41a9-b34e-1c5a0c3b05a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6771d20f-1073-457a-8d97-ba8a2d673c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f50e919-df0e-4854-a201-913203d418c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d2a964-1842-4844-97f6-1870f9315967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199fa881-53b8-4291-a8bc-afe27630d7ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e88fbb-84e6-4009-b64e-249afe26ca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547a0d15-3360-456d-9f70-6d9adebfdd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d771a992-8788-483f-80ee-62635ff77763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d613f7f-efc3-42ef-980b-31f17862ebf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f20d60f-7d34-4c29-913b-44f210a81e29",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d90f09-bfe9-4227-9c73-de0bd60153d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf8548-55b0-4caf-87a7-5fb9c9ecdef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6007026f-fe67-4eae-b4bc-0600f161a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8193873f-b0b4-4e46-913c-efdb52fffc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac345d2-f294-47e1-9f08-32cbc6bf139a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3441f2-fd5e-47af-ac56-8dd204a3efb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bce060b-d93e-4315-97a9-515c9587a10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b63865-81bc-4ae9-98d9-72e67ee9f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca7dbeb-dd74-4a6f-8dbc-92dbaa3067dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a2806f-dd43-4411-b084-2df462819361",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b97893-9367-4d97-a406-8efc5fe36df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67d576e-961e-41fd-b41f-1ce64df1bec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c1820b-13b7-4a5b-a8d7-9a193845ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7429bac-195e-4688-bc4e-dc1321046638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e79a7b5-5dea-4193-ab11-3207e7ce6305",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a141574c-26b0-43c5-b197-1243c6a708f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0f72bd-f9de-4d56-9a65-05691c5d1c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adff60ba-dfec-4cf5-9d40-4a6e293173cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "392680f7-0f3c-411a-8353-db4f9d688c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827c337c-3496-4e73-82ca-840a5ff54c23",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6286cc-4086-4de7-9044-6e34098b9392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423f5f46-b885-488a-b8cc-9a44e80e4845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103459e5-3604-443a-97b4-cec063786a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b232d50b-dc99-46f5-a0d7-5f847b5965c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c76c44-1b8d-478e-b313-878e3f6366d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81a5324-766a-488a-a567-52a2b803ca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dabe2b-b563-444c-a393-123e31d1f519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f48ae43-343a-48df-ba63-574c1b53e2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8aed6f-817a-424a-a8c1-f96e71c478c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17726405-4e84-4e94-96ea-9c3b5b073e95",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cd5b31-14d2-4cf6-8bc2-f44139076d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5639d6-373c-4435-a10c-c5742bb7a198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d74dc0d-af95-472b-99fd-96fd871827be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8800a7c2-e2af-45ce-9826-24dc23262f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e4c5de-97c1-4356-8014-45ccb199fc2a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9694330d-78c0-4107-81cb-7e4ef977d06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1298d531-13a8-41c8-8fff-9e0bbf2d647c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ba5ab-624e-4037-91a9-522ce07d0587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3a122c-c325-4ecd-a7db-9bca708186dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a260b60a-1baa-4648-a8dd-dd417e251200",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34935a-0559-472b-9f5c-83ecd22e97a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0172eb99-ea7e-4b64-b7b0-5dd76fe6ce26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abec5dd2-6968-4c98-aee0-7ca7fc4ed732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72eafab2-842e-4ad5-8968-0a4d86c74bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0e0b68-8ee8-4560-8631-ecedc151d9f6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af78cb7-fd52-4c64-883b-6524a52660ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9c11c5-51ab-42f8-aa3c-b0f1f6711520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdea602-0519-4002-9858-350be067e920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11d12b57-af00-450f-a917-086dcaf28af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399b9211-5014-4604-9382-6ca80e94e1b1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03244a5f-c55a-4474-9fc6-9b4e54e66da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efe0353-9f9c-4b02-b711-09898be6a9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6b95db-16f0-4b45-80d6-ad39ab430da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b82f012a-76da-4084-9201-38b53da667c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0710a5bd-61c3-48fd-b607-c5d4aea5363a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261e7ed8-eb5a-4522-88a2-01d3a40e6dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b0754d-d6b1-4d87-bd2b-162d284339bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeef9ec9-f248-429f-aed5-92a8c1517f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6878deaf-cd7e-4bfb-882a-0bedac1493ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a3c61b-aba5-4e5e-b144-de2c36995180",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3a4fd0-39a9-4ad4-bfc1-266a717980d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a682f036-c33d-4b31-94bc-3ad32016a7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3df9e95-710f-4c5a-ac31-747ef0924d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6388177-0656-4ea5-bbff-43b3f5c568bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519844af-70cb-4213-8a6a-72d760960361",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fc7e6a-03f9-45a0-b200-b7839a4a12b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ba7a3a-8c9d-4c63-a0cd-1bdccc6fad24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe79034f-169c-4069-ae87-10634c45940a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a99746-9b97-438c-8b6a-500f4e25ba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8beeddc-592f-4824-80cc-4921c9888561",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb904439-2b35-4cb3-b6d4-02577edebab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46edf86a-76b1-442d-a0bc-f44722cea90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee61a1ae-87cf-4028-99a5-c9e2ec3e4d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb9c572-3fde-4961-9650-48add6103d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cea2a4-e9b3-4f51-ad8a-06ab99aa5bd5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1925e3-8350-4864-a050-65fbf0ffe6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b46b3d-a2da-4cbf-acc2-ac3d85cd06b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c559eec4-4971-48d2-9101-77e5af5344d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15513664-4fa2-41c8-9411-ef8bacf546d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30623be8-a786-4052-bb8c-46be84c10e95",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16383fe0-664b-49f5-a54a-111ad39e74ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cee66a2-d9c3-413c-8e23-44776102ee63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70db4596-0385-443a-9b64-17c86cdf380f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "268876fe-96d7-4ce4-9502-868cfeb65e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ab18b2-940d-4383-b9df-bcacc00a3e88",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda4b10-e8a4-446d-936a-fcb64e2c9128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd1ec1c-6429-4b4a-9c46-2403c1e4d479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f928f5d-a008-4a25-9591-822f92223d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc6e6f3-6de3-4e45-83b0-cddd0fd8097b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c9420-7d8b-43fd-94af-74e748f58552",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd366f-0c29-486d-a700-e4903906549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08557953-edf4-48b0-a76f-c628b9a0a02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff76c680-9ef2-4d09-8395-3a835c92b4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fccd2544-611b-470c-bef6-cfdfec4a702b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a393aa6-6b56-47c2-b31b-8c379b084ddb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81c4a76-3843-4d3e-82e5-33ea0cdd5e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da76e0d8-d576-45af-aa16-7a97527077a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84901829-a5d2-4fd8-b695-d15b5162fa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85cdebef-ee39-4295-8a48-b1dd851a687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb70ccdd-7fb3-4ca9-b532-2f48fa912241",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73c1093-0162-49b2-b2b1-d64a54b801e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e792ded-0f83-4c2f-ae2b-c3e601eb9706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83184973-362a-4c1c-b110-d3ba8c734001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abab6b3d-86cb-40a6-be94-2ca8af389413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6973ad9-be7c-4dc5-b7e0-5967e8bf74c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b631f352-59b1-4f7e-b782-cdfa721a865b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e9ce1d-ca27-4a87-9545-d819adbf19ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fa3274-b190-4dbd-8fc9-fcf1a796cae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "712f1f5d-1247-48a5-be9b-33fcacdbc86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a64d66-857c-4d57-a4cf-ad4068ce648c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49079569-3738-40df-9d93-c66ca72387d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd38767-679d-4841-a542-e38a4a48945a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd78159e-153f-4564-a869-5d21f87519b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e5d066-eab9-4579-a6b2-2d73ba88e246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9608b69-db76-4850-9790-67b8b6f0f754",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddd96e7-4a70-4bcf-a19d-56aee450ad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2edbca-9ef9-4f0c-b782-043f04009ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dce67cc-0e32-43e7-8b38-5be330a24b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2505ad6d-7415-494e-8526-f90042d7a069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ced8a53-00e6-4470-a6dc-e3b9892997b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be5b213-4f05-4e15-8f5e-52856106e0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2d0109-c700-40f8-bee7-21646034d07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b57e70-daa3-4ea8-a107-61ff3257c9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b5fb22-2f53-4b19-871a-58067a3593d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db643c79-9504-4155-a425-ccae4a65d0be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b02539d-bacd-49b2-a776-aa3136e14e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0619ee3f-5871-44e6-b0cd-4b7e19dcb0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621b2117-6c21-43ec-9483-3ba83885491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bdb6e6-3ce9-486c-80fe-64f15bbb037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cb04ec-72ee-4501-bcd6-b7bb5ac8d31a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4c3f4d-f65e-4b28-b4d3-9299600f8aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226e3d42-5fc6-48b5-9b21-7be060524031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bf7d85-2e34-4a40-900a-b5dd397d692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd56c9f-14ec-4943-9f79-b080f1e06976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce98da15-c3ec-4bff-8fb2-a941562528b0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e59bf-b5e3-4030-945b-b6b7b71fc543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a6b48a-3582-4d4e-b0df-d59c9d515965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ed5169-ca64-4d32-aad9-770d8c263549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "042250b8-c392-4d21-9efa-3b607a2128bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbd6526-43a9-46fd-9788-ce4c87a02b30",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32be17a-956f-462f-bcce-c54a64616ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f6f45f32-2731-43f7-a064-60716d2b366b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cebad43-0168-4857-a369-dd71ca7456c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d27aff87-067c-4d9b-ac23-68b3548bc7f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ea250d1-c03b-4d6e-a33f-cb116e9045c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4347a638-4df4-475f-8f33-e03bd97751a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38583302-18ed-4cfc-afd4-6ec4e54dfbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "837e15d7-06f4-4b39-833e-20a1a34c54a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac718e27-bb91-49d8-9fb0-3e55c8f9d5ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e9dad30-062b-4287-a656-2258c16b79f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b8dd087-6543-4123-bb72-8174db00867e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "064ac10e-8414-4a05-ad38-d7cfc12ad609"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f7773f1-7d18-4924-aee9-9b0c55446ab9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c067c12d-1aad-40ca-b1bf-e4afb0974076"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c11bac4-0cb1-4013-9c55-e3a6ef68efe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0e3eb66-6888-40b9-a3cc-35a19e8ed1c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3c4cf6f-5d6f-4b22-9a5c-c2d3d30165da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c8d55bc-ccd9-4042-b316-5487a53fa307"
                }
              }
            ]
          },
          {
            "id": "91acf0e6-2a40-4da5-b08b-dbffcd4cdf50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "079cfbce-5324-41d9-b97d-75116b2af983",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "17216169-71de-410f-92ad-d9ae23a69e49",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb3da3b-6f3d-486b-8339-b606e6409133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5f9b5bee-2b27-468f-9f86-57117ea29142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4e5463-2d91-4137-b204-dbcec5a45752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e51611-40cf-4ec6-b59c-46b5deab40c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fd00f66-1237-40d3-9208-10a6634b2363",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed86a80-5851-4995-a635-d3e5406c0e39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c09bd8-384c-4694-bd6d-f60c2afc0f45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b20f674-b055-40aa-8200-b51256bbf866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8024571b-b0fe-4120-97ac-aa7babd9d00f"
                    }
                  }
                ]
              },
              {
                "id": "ca3189c8-9614-4e78-a2c2-8665bbb24849",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6ffa027-96b8-4ca0-aaf5-16f3d7f1b793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "646c8a7c-4428-4844-b8fa-bb2455431a95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c89497-402e-4226-a8f0-02b7d6669e21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c51cbc6b-f2d9-4c03-bbc5-b10dddb83f67"
                    }
                  }
                ]
              },
              {
                "id": "c09c8831-10ce-4c3a-9e4c-3cad3f7885e2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f10bac32-6fdc-494f-989d-dcf0c0ad4bd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3d6d90c-aef7-4ccb-88f1-df05093cda55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93090e4d-8f69-431e-9b4f-eab5ce281086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87a2e12b-72f8-410b-b7dd-ca036258cfe3"
                    }
                  }
                ]
              },
              {
                "id": "2166eebd-5972-4e80-ad39-70a6eae61c11",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec4c742a-e7c8-4113-80a9-dc4a80643159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "771224c8-d6fa-4c42-8d05-2821462d4c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6223f29-c320-4937-9a5b-85f1048e4009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b17b49b-d180-44ea-8a80-537a071d315c"
                    }
                  }
                ]
              },
              {
                "id": "7ae0eda7-ba42-49b1-b2bc-3aad3cbf3e82",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "861e64b0-067d-4d3d-9770-b3d5f5742e90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52ebe503-4bd8-466e-b011-79a6bb8c0040"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4048079-00a4-4ad4-894e-d81b5dd401f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "feced18d-8d31-40cd-b54d-e156113cd379"
                    }
                  }
                ]
              },
              {
                "id": "20b11948-a21f-41ae-b73e-f1ad38470ca4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12d31d56-ea3a-4725-865d-0097271b3b0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57ce2c85-f38d-437a-8426-4a4273f1b849"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9de9e55-48d3-460f-97ef-a3144fd5626f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b8e360e-b171-47ec-80f1-c196e2448fac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "332fd876-233c-43db-9ef7-e7df02f71b4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba54e53e-888c-4db5-9bb0-fe8f25646756"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8feb46c4-8d1a-41c5-a5e7-2e62b4df69dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2f29a85-555c-4a07-bba0-9e2f636b75fd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8fdad5f-52fc-43f8-a954-056607695d78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "541b6e76-b50a-404a-aaaf-49ae597cfb88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40a6137b-e2c8-4493-9f1a-257bf524e9a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b91e29d-288d-4f0c-ab34-8d198979da50"
            }
          }
        ]
      },
      {
        "id": "eb2ad06c-1705-4113-b9be-4817be2bb0f1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e46f5a09-394b-4888-96b2-a83eb7eca270",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cadbbaa9-1a01-49e4-aedd-ad781688d37e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a97332e-0430-4bb4-97c6-5444447c2f18",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea14f05-5969-4108-9a59-4f4c034d9ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a59f818-41df-47cd-b99f-a713935b5a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139f7093-8b90-4e20-982f-8027878920f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13c69b0-bd32-45ee-9936-475ca7b2725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292f2377-bbd7-4f01-b94d-5b7dd69e6c96",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b26d74a-1026-4a7b-bf37-ce05b46bf7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac07c1e-a562-47ed-981e-23239a8a6f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025e8869-4f1b-4f73-990e-7eff97f848f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a7a238-ce70-465a-ad0d-4d1f8058f0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14710a8e-3893-4e5c-bc44-bde8a0626571",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66eab295-3ec9-4b08-99ab-71ee04e0b3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2d6693-0360-4bee-b481-77efa3be95ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc30014-485b-42b4-84a6-9ff593dcb4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "253aa985-9a1b-49d4-98b2-1f6a7d121233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf3c5ed-17db-416c-814e-c73b2d00df11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c51d56-a1f6-4210-a93f-4782bc46ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194012fd-d357-4e04-a505-611613114f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e63473-2a51-47ba-a3c2-5ffdff49748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b12a46b-0b6c-4565-997a-45aedf4bdf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba666604-93a8-4b18-845d-3445a501a236",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726330b-29bd-4e31-ace3-347cf0c49940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb870cb-e913-4645-b25f-624f4fdee600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd91c84-ea92-47f0-a16d-dd6d568885c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b480341-c26b-4029-a9fb-a05657c43fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c31f8f-234f-4421-b419-abc481155d52",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f54921-fbcd-40e6-ae84-c711e3bf08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517dee95-a407-4d3a-8487-ec511614d3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c170c65a-95e2-483f-8803-3564d57e1469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7d6004-7957-4a0d-8c3e-a49fe1de64fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ec4833-f567-4d2b-99db-7e9f8a2b5405",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ed6051-b177-4ab0-a3c7-7fa1e18ce116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c09805-571c-4aae-bb6f-4b6aa9a57cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7c02c-a608-4a20-8a07-6ef6212910fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0f92a8-cad4-4361-948a-a61e2be6c35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a970ef-5ba3-4ac9-ba6d-5efb0b360466",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48bf4de-2da2-4112-abd9-005a9b3081af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e31bbc-a044-40dc-8cba-c80ecd3fcf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d6e096-cc6c-49f3-950b-14c4e2a5121d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1786f1ce-461c-4b0d-80f9-9d8c63156436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd10986-eda6-49b2-85d7-31fc37615cdb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2854f0-76da-45a4-8e1c-cd6c8c0e02a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2c2e35-bbf2-4769-af48-32b78b83c0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faa53cd-6208-49ca-b50e-429423b86e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7dcd43-3f29-4d4d-89e0-0ac365b5a286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa894304-98d8-43d3-a8d3-df4e18e89082",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1327d88b-f57e-4e91-96c7-dbcd933627f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878d7df8-1942-46b0-9b7a-f35b0f7270e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d420dc-c19d-4b83-8ea2-f9cdbb4adabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7950c2e9-9dfe-4c52-970e-4a398840d691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecd0af4-b0eb-4fe8-94c4-267a1b627289",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea72346a-acde-49ee-a563-f5781a2555ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c322fa21-3dc0-401b-a49e-b2d958612bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ef49c2-bb95-4419-ab1f-1148f5a6c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "773d56ee-7022-40c0-98f7-8b7a80c0e47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d28b57-272b-4162-a06a-66e0c3f8067b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41803e67-6142-4885-a9fd-6edd095ab382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c586c16d-2290-412b-9675-58b1cc2fa01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2485e146-0e9c-467c-a2c8-103b3c04fc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53e2f7d2-295c-406a-be61-33d3e1aed44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd70be3-57d8-4eef-9fb6-33cc75dc3481",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e239478c-f065-473c-a4ff-f17d928522bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e583b74-51b6-4d2f-bc64-df73ae421d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b49130-7994-4cef-8ea7-d4a0cfeaa5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f274819-53fe-40a8-8525-12fcb961cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5822326c-4908-4094-905c-7e903760080b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4d36a6-e460-4c34-865d-b4328ad81e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6628f948-79af-4a0a-99eb-7e5fd607f971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8602117-4ea0-446c-a26d-ede4a717faa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29161b9e-3451-4c8c-92d4-0d0144e9f4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c0bac3-bf63-47f0-bb15-4db1faefc498",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6dfbcc-9862-4572-80c4-5d7ec68d37d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa3cfe8-3ad4-4464-a734-46548ab18dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e54b76-946d-4905-9a97-aa87016447d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0412caf7-3cec-480e-bcc4-ea6e40eb26df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4074096-25a8-4315-b3fd-f9a80e88f255",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948e57da-13ff-4511-8e46-17f60af197ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385c2c1d-675a-44a4-b80e-a61e6cfa1921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b1c6d-1ee7-493f-bf07-7cefedb11971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa348069-8d4e-4389-bbc3-7820dfbe5574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18a5ed5-e306-428c-a1d6-7a11cff11897",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f8911-160f-46c6-95de-b9b9f3ccd348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7695f47-f19e-4da3-8304-5534399d1ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bdc38b-0e06-4b77-9851-f01594ba6525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b788376f-de4c-4f9f-88fe-5a8e12e692ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4077e07-03c1-4dac-abc4-bb7853a4abd4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3966661c-e167-4c1c-b62a-1b3ac1147fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b618092-dcc5-4a41-badc-6c3f6eda5e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e236c1-8e0a-43cc-90b1-3ff4dcaf25c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bfd752-9cdb-4c4c-8eba-cd3cffd17bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c51a7d-d584-4416-be63-247e52f52a63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ffe83b-7257-4cd0-a4b6-d06c70f00785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dfe0ad-fddf-43e3-90cc-db45fecfb02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05215591-cf1a-434f-b79e-e3a6cf09af2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b0abf9-8047-4cde-88a1-10b345cc7ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd7de2c-b943-4dfd-a0b4-5cb031619150",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d56ca4-5fe0-42aa-b16b-a51c67722366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74471c5-34b3-4612-95a0-1955cd06d071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b897828-45d2-47a5-8061-d54276fc248f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4499522-5d8c-4711-ab71-2dae5105018a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89ca5dc-50d1-4db7-8305-a650c56beebc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1184c40-cfaf-4e92-975d-c2a796cccde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9ac3ca-a8a0-4114-896a-fe67a89db5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdc1b57-aaab-4ef7-9b30-ac785e2d9ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682a68b6-e3ee-4aa5-b867-52152ee4c85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e80c8d2-1501-4afa-aba1-cd366665ebe8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f51636-ea0f-4a3e-bb3c-2227c0cbf36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a4ce0a-1cf5-48b1-bde0-b6c7049de63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1cb16-b9d6-486a-a42d-2ab3199e8129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "014a9b06-1492-4dad-97b4-3d81fbc0fb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e8d037-c22f-4b9d-9cb5-66d73c44c4f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90619eba-a2af-4415-8229-2d9abc75e60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca4b15b-6a01-44b6-9063-a164dfc89156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d057c3-c871-4862-86ab-2405b30850a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b45ede2-9674-498b-bc3a-0008b2e870a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d90572-4b64-4762-a689-5447cfa43dc6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb15703-5b5f-4ad3-aacf-67a44992486c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a398693-a94a-41f1-9de8-6b71e760918b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2f2f22-d89a-41b1-8f6b-c40ee717b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c10092e-c316-449b-8256-ea87c034b58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4ac285-aa12-4867-9dc9-ca7f44bf4223",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f900757-249a-4303-afcd-6fc4a7509d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2782ebd1-95e9-4201-b68d-13249e5505c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe02fc8e-da2c-4202-99e6-9ce35727509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e802e24-a963-4369-b778-b5212d50f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e4e118-2937-450a-a11d-9b1ad0c4f191",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c1ae06-60dd-4c0a-b367-add9a83c40b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8158e02f-a261-44c3-889e-2ffe31b7731e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0fa0aa-752e-41c4-9a68-1badd6ce2fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cc0222-2586-432b-93ec-2cde5f90dcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6e079a-e9c1-4051-9b3f-4aeb52e77e23",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785c1d68-a7f5-4e08-8a91-8073f413ece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8c5d85-d1fe-43a8-98b3-8078688d9b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7665d58f-5989-49df-bbca-9909a637d5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ccca63-82ea-4657-9e87-60817719672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ffab94-94aa-4404-861a-64f60e87a46a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84f03c9-da15-48cc-861a-50a5a1386483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5d956b-b72d-4ea7-9f35-e2ffb73f4e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493654f1-01d6-4365-95a0-473e885c626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb23320c-ec93-4136-8d0a-e82bcaaaa2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eecba2-154d-404d-b700-f69da52ebf4e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae317de-7899-43f6-a2c7-88dd6ebe0800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c64ffb-532f-473c-ada5-bae4d504164f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc658200-c665-479a-8fd8-b388e388e88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70495d3a-f6b5-47a4-bb74-1335799b3f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93601884-3e52-4bf2-9c01-204770ad8b98",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7654d9-f5b1-495f-b32c-4a35a6439199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704563b6-afb1-4bf2-9461-097d6adaf163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9707eb-f646-49ca-a470-a366d2a7b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6741bd0-dd1d-4b94-8dea-b98bb0c6cda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c80990-d7bc-431f-a53e-6e1685fbce03",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20450ba6-eebf-413e-951d-4fc5a239db79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b17c42e-ac53-4463-8ae4-5067be9e54e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ee44df-e011-40d1-9495-68eea8ec53f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "989f67d5-4232-4be5-aec0-50179ea2246d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d525ca0-f5d3-4a8a-9c52-280bf80b471c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316e6356-2ad0-42a1-b95d-cd2487800ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6441fc-33cc-4e3d-a7bf-7810cf0497e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7956db-82f0-4724-9779-68f94c78add1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec48073-353b-49f8-a1f6-ced84324cb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2952310d-29ba-4612-bd54-32806378b629",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a9a339-e097-450b-b757-5403e4334ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785c3f2d-93c9-4212-95bc-03bef2247755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9241b93e-a378-46ab-8138-9ad6787c6b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09c12e9c-dab2-4c17-9f20-1b87729b5d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c124e-a376-4189-a1f1-0c051a5ea58d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c3c2cf-ef88-466d-9936-f0cb353f93dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8bd2da-d703-422b-86b4-b0626e618f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88574a03-a262-4763-8196-4777661dcafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42f732d-2109-4a95-88bf-968e4d100b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a499da0a-dcf1-491d-a416-da3314b62b33",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2df4ef1-2b17-4f62-bf6a-2136ba23ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6984e3e7-246c-4d86-a61b-bc3eb0263679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0f03c-6515-4cbd-93e6-0434ecea7f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4a2d1f-9ec2-4192-bbb9-8bc4a3664e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ceea89-17b9-42fc-813b-9eb098967845",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d45710-aa8c-417f-b927-280058a17d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198e33ed-aa65-407e-b6fd-228be82a2bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52e4465-03b2-4a36-b2af-61efcdc8f7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04235b90-ddb9-4657-a08b-eb8f01d425e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8176ea-2bf1-48b7-b19e-b0d4f26ce723",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588e76f-34e4-4cf2-baa3-2a5939ab6795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc523bd-ac63-4220-8c54-8f9098bc9acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0881f3-ab11-4d1c-86a9-5e397ec4d546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b1ad29-9fe2-4403-969a-d9fb9e310abd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4df45c7d-8d34-4050-8e59-7dd6c5013455",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f60937ff-071b-4659-b608-fe9c49bb985d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2507974-521b-42c2-9ed8-0fc7f9e7e08b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8e6acd-12ec-4e83-b1dc-f016dc34621c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb08c0e4-f2a5-4412-ba14-35c759f21fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9f8f8fc-f99e-464c-8819-344156177a34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e89f36f-e1c4-482e-a5e0-63ca9fb073a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a1baabd-ea53-4a21-92fd-5e591fdf0ee1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b9ebff7-60c2-4965-a9c7-7b74ee210318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05dcebe1-5fde-4258-98cd-2e88c95ff720"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1d450fb-00c0-4ef6-b69d-009e3e14f64f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7a17b85-8376-4871-b3ec-a1f33739f149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be62a9a7-396b-460c-b517-087c904361fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e6b7b08-0e9d-44d5-9a6c-3cdab0305b44"
            }
          }
        ]
      },
      {
        "id": "92c5e6f3-403f-43ea-9f6c-eaef795b4812",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ee05da72-acab-4903-b472-536dfbc214f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b9d6e9a-d2e4-4c35-bcfe-77ee9923597a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "885d5a4a-6227-4d48-ba55-d676176749a5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddff7135-fac2-4110-9d11-76af1502492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c352907-d3b2-4f8d-9e0a-b2d50bb94cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402baaee-b1b1-471c-9290-632aa9567365",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b19a3b8-11a7-40d7-8090-7ebe5f2b1014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1ac74a-48b2-42f3-9c96-f614cc962db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14751911-00c3-4172-ab3a-621d5a5e4b8b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c72328-5c1a-44c7-a437-fd1a5aff3c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece3e56e-4453-4139-8866-3b195b29710a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1787225-188d-4ee2-946c-22489f112fb9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4167ced-d27d-4bbf-bb3b-be03817a3922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce26975-7e98-4dec-bff6-00dbc54a23c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6ef428-d84a-4399-955f-eb71b845e9e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8cb737-b9c8-47f0-a3af-45bb5baf8fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5887e3-06a2-4408-bee8-b59cc53fd90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f90326-1bd0-49f2-88f8-eb98d820f6ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e1c3ca-e06c-41ea-ae7e-4fc2b33b9d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac998bbc-374e-4a54-be51-a2ee7690ad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ab5c27-c4f8-4f9a-90a7-d16a61627cb9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a4f274-e063-48be-b321-d4646e7c6e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29627e4f-6615-4133-bd98-a62bb7970b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce566b9-6928-4cb2-b321-36329df7d8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91935a2c-61f4-46b8-8089-0f1c29cf3c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4313dfa6-2cb6-41cd-b940-7c753966604d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40027202-13cf-40ec-86d6-52cdceff352e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5cc1228-7ab1-43f4-9322-87a96ccc758c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f58c07-cd28-4a04-9b64-d9ebd0725458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d4d0fd-04c5-431f-92aa-3d3596876dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08de356-63a8-44d2-805b-6f77c1ab3a37",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd8d1e7-6ae3-42ea-85ec-4a3893e8c549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e266d6-1946-4485-a34c-167a94df3484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e532a4-6c3f-46fb-a51e-84302c8327fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb81e76-037d-4863-a78c-585e19afa9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8a8243-6741-4746-ad02-d38d2c00e354",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1413e456-5858-40df-8f6b-023efc1404bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b2c20d-a7ff-45be-bc21-42000f032c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bdb491-d1b1-4a57-bddf-b17c7254211d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bcb59a-0fa8-49a1-a221-94cd2faa093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88839f3a-336b-484a-a599-85cee7fbed8e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd739b4-2aa5-4e6a-9c2b-7e45ac7d3327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5acb9b4-00ce-48f7-bfea-2186b4e53414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc83a26-5ee1-4940-9dfa-e324a2faffa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8910b825-9c37-4159-a06e-f06d2c0f28c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dce758f-9f2c-4ee6-ba2f-4bbce10e7646",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d6a42-111a-42b9-b706-167116a1daba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a894eb59-fb4b-42b6-8932-44d0cf2e13fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31583eba-3d44-47b3-ab8f-dd58341ca8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d97299-f808-4ac3-925a-adc164fe5a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a0702e-f13d-4507-982d-9d7aba4066f7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb971282-bc65-4741-b128-9a03e9d355aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283d274a-0190-4d8e-8362-ee1eaab8631b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ab6af7-9b90-4e10-8787-481a2766d5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b62bb51-8299-4e50-83e5-9cb3318ad1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032281c2-ee85-47ee-aca6-3b6b1f481d74",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cfd43c-8eb0-4638-a75e-603ba0864197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1025797-69c6-4d8e-87ab-234d7535771b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc9d420-9b2b-489c-980d-6a9040c21576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a8e137-830d-4149-b39b-5361c0b4a8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0cc6ff-90ed-40aa-bf42-0c7af6ac87e7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a125231-efbc-4ab5-b2ba-0327aca9655f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a954ad4-e1c4-4a1d-adff-49f482b24754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d50ec1-0d9a-4030-b38b-4331cad1ea45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310d574c-7840-4370-a30f-49c0d14f5a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34ffb9d-20fe-4827-8ebb-8c571bd82516",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81822945-1e12-42f3-a584-0a73991c93cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1baba12-4081-4138-a57e-0ea2a8e627f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae259587-6a81-4119-a050-8622f482988a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3122c13-ef42-49f8-8c33-351504142eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe850ae-a514-49e9-9a08-3cebf7683d90",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0008cadb-debc-4ba0-b2aa-09ae7832b2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08137c88-382b-4ee9-8732-4ac53f70718d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d6c745-cec2-4878-9c06-c40399d24b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44556f3d-1da3-4715-9b89-0550bf6b2e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abd77c2-267a-4bb1-bf0a-2978633fbb03",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c907044c-ca49-4f4f-b404-e99eba93b2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948cb70a-b38e-4e4f-93e5-654cdaa5d419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7fe0f4-a499-4190-b3ba-2b49b5165cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc94a192-3d6f-4b30-8cae-2633d5937d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4bc5ee-8ee2-4160-bf92-60be4b9b30d3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617bc86a-723f-41de-9987-a0e18b809a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabc02de-3a96-4be5-9184-7550f4f0a725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3daaa1b-458a-4b67-8c90-87dfb0e49b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94964fb2-e974-4b71-932d-17f2bdf41111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f9049-77df-452c-b8c2-c81ecd7b6b72",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f005193-066d-4c56-9a28-e615c6d82c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007f28e8-fb69-407b-9a26-8d95519a45fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeee06a4-7d30-4910-b7f0-07ce82dab95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cfe53e-0b4e-49ab-b78a-8ad8e7745a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed52e932-8d45-483e-94b8-e69d187c7088",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd7b53d-bbbe-4a55-b751-0edd2e14a936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40513791-4b42-44e6-9a61-f757b559b5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3837f4ae-5dd5-473c-869b-4a0776b48941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df379f94-8b3e-4017-b6ee-e7f1265a942f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a2ef4c-6041-4ed0-8473-9a5e2108df52",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d471812-645e-4274-8afa-0b4d4b476df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c7c16c-91e4-48c3-8bf2-0df4d58fb32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7064eff2-74ea-4b74-b27e-a8d280cb184b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909e504a-1afd-4636-a563-60911ba82a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360cf1a8-e837-447d-b652-d116a2e9fc13",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e31a06-a21e-47e9-94c7-7bcbdd5e4217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fba76c-9cdc-4bc2-90b8-665c4b6637b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d12d9-a1a6-4ac6-8f55-7139a5e38507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132cb50c-97be-46e0-a06d-e0a6f693c020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694ee855-7121-4d53-ba0a-1573565516b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6af2ee5-e5dc-432e-a482-f590ea1ff22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367ee44e-2e95-4110-8742-3a5b99550d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f9727a-5638-4599-a37e-29a970aaf4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ed66fd-3b75-4617-8dec-73cf6631e098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b390e3f2-552a-4765-80ff-866c5262e669",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f37e783-d9a0-480f-b056-98ae08b5b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd66f94e-7134-4b1a-9c11-83a9aa32d816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7d49cc-a6b5-404b-ad42-cd994eb50817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d16b602-b6f9-4ff0-bf07-a4514f275cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a516da61-5d78-4c31-928f-4f282a433669",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a62db4-8a05-4b09-89b6-fd30f29c5923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581206cc-6312-45d0-b1eb-31ae8082c7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd071e9-3317-46ac-a555-87111c3bd35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56097f1c-930e-4cfe-bb64-a892101e96fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c25e5c-53f1-4cab-821c-108230a1b3f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87684bd4-ff18-480d-a0d5-578c342e56c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff674f43-d712-4d46-b0c6-5d850f56215c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31f59f8-a59a-4a71-af68-e5e3c480c9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fb7c8f-7739-4fe1-a046-708d019a7c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e534ad-5d52-4cb1-9bfd-ee0ec93e8c1f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f827c15-6633-4916-bdc0-d57549797d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5192caf4-9ee3-4a29-a3f8-54b5da86f0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e382c0-69a5-4649-9ade-bdc89567c9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990abd42-5a1a-4008-851b-4b3c679fba90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c18381-a979-4b48-8997-4c7ee5320a62",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe91583a-9acb-4bbb-9a82-4c17bbca673e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c41412-fe40-472d-8076-9a34339fa4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce014ab-b698-4890-8cd3-f72188dbd841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de4113f-b2f1-454d-9cb8-d82f94c8d410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917e84da-5502-4666-8dc6-65449f2cbb7f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5f4df4-c6a2-4a44-944c-fced786fc122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856bf05f-c292-4777-bc5f-c9a6c5a317d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e503a8bc-8ca3-45ce-8f87-9282e508820a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bb9082-129b-402b-a6d8-f7cd026ce946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8c5a97-5a61-42c7-9be7-2ba22a618f7f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9432c1ed-82b5-45b3-a12a-a81352bc4090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "099c5daf-7af4-42e9-ad0d-b9c00e9d40df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f70724-b7b4-494c-93c9-046721dda4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bd8d49-32aa-4a20-b4cd-5cb1867d3178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e7b2a4-ec1c-4443-b52f-0cbc4df86a2c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ad5aea-a9c6-44fb-b728-7d26d6606e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67705505-4661-41cc-82a4-d19c7ee1e888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92bfb44-e483-4c8e-979f-91acb58046d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b2d7e6-6cb1-43d7-81f7-5b705f7e453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6a39d6-06e6-4b5c-a633-4927be0ac2ec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d16c0f-1105-4890-b4b9-f5afe8e30b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4afe763-3d42-4d57-ae11-73086a8e807a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cadfb-5f8a-4262-855d-2956d6c8aa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f648709e-c376-4701-96c3-cb402835b43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3732dc57-1a3b-4c55-9f94-fc3aa82a4868",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b359d80-8fb5-486e-b45c-f2c997580984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c19fab0-e3c4-4f89-8b8e-943e3db13173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee4bfe9-f4c8-4dea-96ad-7da3ce736bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232fc536-8c60-4adf-9a6f-78612e270125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb60d2f-dd9d-4002-b75c-d5271b4d236a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7024c170-8162-4d0c-a8a7-b13568207e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46395d1-a645-4349-8759-6ec5668b8198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a351f8-cc07-4a69-a5a7-cf1a6c540d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6face288-a5e6-4884-8476-9bc7bbdff89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c62d88-567a-4066-939d-827b989e3d11",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574cc63c-82c7-47f5-9d1a-7c5cb90568c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5622537-1a25-4235-9660-7d61495ee01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a44885b-15a4-49bb-9943-85b8988007a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bcb508-ba31-47f1-a451-722798611592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9fefb6-bb5d-4798-bd83-b47069f6ac0d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa102ff0-e538-41fa-890c-25c05127e002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db8c31e-0535-4d14-b852-01f41a44d36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6527475-9a0c-4cf6-9cd2-eee0877c87a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dce647-df50-4627-bf39-9dce0e5783a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6af50d5-6822-482c-ac55-cd72d68604b0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d30db61-26eb-46cc-86c2-619b8ad06a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31253b4-5883-4cb4-a092-777051f24c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054f44db-f5ee-4924-9f99-7dd10b095616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8833186-95f7-44f4-8423-eee0fac8381e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee238e5b-7c7c-4539-87df-49b798174f99",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed7d8af-cc76-4b12-9c0d-0020ca206d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a745f92a-211c-476c-975f-1085b97ea5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b117ada-0a93-4b36-9712-e01ff92fcbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b591d763-f21b-4bd4-8958-f1c6ea20bf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dd2b05-8213-46aa-bef9-b9634353f7ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf12d0e-9b9e-451d-b3ba-1398db503d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364cd22f-3919-44ac-a305-f1a80330cc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53bb700-d6ca-4867-b8f5-b33bd9374bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0553806-313b-4560-bcd2-0d4296c54212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9e0bda-27b2-4a13-9fac-15c105403ab4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ac98f-7dcb-459b-867c-7b16d683a9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6382fd37-62e4-43b6-a40f-499ae4e14f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1faf6f-915a-4eec-8c88-23f138db8d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53351158-2449-430c-ac41-59d097e01106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf00b9d9-5c4c-42ec-a9a7-478e7914b5ca",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9de304-a5bc-4aa9-b984-fe1c7f73a8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2556bc-69b2-4123-999b-5cb7abbb3669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cc1980-78f4-4d7b-aa95-0dac331e6bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242197c2-6d37-42e5-9396-01418397e3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bd0e4b-a7a7-4f51-9ff6-85e8f6c8bce2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe11e8c-5691-485d-822c-5661eca923b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1d10ea-e41e-4587-9417-23ab8e9b6739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156e3514-5174-40ce-a9a7-7a99781f7ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c3573e-5874-4937-88e7-181a710396b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26fbde-2f30-491a-9eef-1455a449bae3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2777a9af-0beb-4202-b7eb-2ab661891952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eefe6ab-b5cf-47b3-b37e-28ffa879334f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee83e741-a0a3-4c3b-ad9d-80916dbd04d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f025ac3-6a71-4bff-9a39-7094a6db136a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcfa44f-a83d-46ba-8bbb-004ccc721598",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9602ca8a-b029-4c45-813a-51371f474ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b275a00-6ce4-4439-a001-6e2d6b2707b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f2a5c7-7806-4c00-8dc9-532c0b29b06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb94d75-00c5-4634-9ce8-c669282d89a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b61e1c9-5b84-405e-905a-4dc31931aae0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a060ab06-b4a4-480e-a177-567d60eb99b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465929d3-25fa-4082-84c5-f5c7c9d5a79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba28025f-9c7f-48b9-b213-7e60d9f12d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37121fbe-e9b6-4931-aae6-8f36d9d2f815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa23f95-efc0-49ac-b56c-cba11765d4df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148ba2f-930a-45bb-aa2d-96ee92146601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602c5f60-4162-42bc-a1e0-1fa6f8ece215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595ef66b-2274-4e7e-bbd0-dbf2581fe30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d56262-0185-49fc-a291-f969faa188be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e9d689-25a6-457d-bd40-512976a93c22",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da2e9e2-6692-48e9-953c-280c64298cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3cb5e7-e7fb-4841-8500-880453b9c373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de5754-8159-4d46-bd5b-ba133a2ca717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0272e2bd-0b55-4e30-8d6f-6a281ad2e1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2113aa66-701b-4700-8f43-c1f64e570364",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541ce58b-c84d-48e2-9ba6-d1c3b0f320e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6162f2c-76b2-40c8-a89a-0e9625d7d575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503f81aa-4d7b-4ea0-a362-de5d885ab640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bfc802-3c94-4759-8441-460d5eb22987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64dae42-efe7-449f-85f0-077f1fe64863",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8f6265-3120-43f0-b6ed-fe7495e268e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4bc2ab-0584-4d49-bf0d-2a2a4136b29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1abf0f-ad7b-4519-8a4e-1ec7b87409f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382b479c-f85c-4f68-95f0-4317173b7960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9610cd7-4f57-484f-9145-c7991db00e07",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21766b-3194-4676-8f43-0aa8911cf5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a68b830-bf7a-4ccb-a489-0685ec06b87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3ba85c-6bd7-4d74-a4cf-022830b781d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf159d32-ae03-410e-bfb5-25d8384ac7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69cf758-e03b-468a-a48d-404b9faf01ef",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35084881-40cf-48d6-ac7c-afc8eabb9dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af45146-2db9-4617-ae08-a830a3c7786b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713f463b-f760-46a6-9e65-f4863845cfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4943e7-868c-4775-9a2a-a359b121f895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dcf1ce-c6e2-4dee-827e-54bec4320c78",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4861b6a0-51a8-4c19-aaf6-84947ef8ca48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11b86cd-f9a9-43b8-8501-0e9b86d7f411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7af5baa-0f6c-4f7d-a76a-301a21f5e102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c5852c-1a99-418d-91f0-8cdefab51de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c92635e-cf18-4422-b02f-e505988dbb96",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c88915-1cac-4c31-8a6c-e8edd990fbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5837c2-d3aa-4861-8428-0e8e67bed21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a47f15-22d0-430a-a8a7-1d99aac55721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b36e70-ac0c-4ae0-9968-4a1adf0a1027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c95992-1a6c-4703-be0b-e8a323508d9e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0454fe29-fdd1-44c0-a28e-b60ebf9b9377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8b041c-4a4f-47d1-9ad3-ff94f18aeb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61c10f6-cf84-4384-b6c8-992b32e301be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a55aeb9-dda8-4ffd-a501-14abac1a52e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20e4662-31d1-4560-8de0-ad4f1f03dcf2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dcad61-ccaf-4977-baac-6b46b5e521d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e175fe10-4005-4395-b50e-6f86f2378c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8760cfb-3a2e-4a90-ac63-a82785bf2b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ca97a3-0970-4c14-8f7f-1ac0ccf90fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab1bf3e-323c-43e4-852c-6de7bfe1df7f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e82639-f90e-45f8-b2cb-85818550c8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe31b8b-96a4-446d-865d-366615a5d4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596e64bb-3c5d-4281-8692-80402ddfec27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c944ab0a-e41f-4244-83f5-5fa89e16e88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eb8c98-3f59-4ca7-ad30-e6f01ef3f1ad",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d36322-fbfa-45a5-a4d7-08291804d6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d2fe31-545c-45ee-a9cf-46c916e05e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94745c48-e4b3-43c3-8e99-25922482511a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7830f86-4172-4da5-bb8a-86294be7719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03953109-ffff-4810-bbb7-42172eadd977",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ccc8d4-c4ba-42ca-8b22-022459123f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85411151-82b3-433f-a481-66bad30ed950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf38a6f4-b5ba-4baf-bd16-fbf2f1d017c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7a88cb-d752-4225-be7c-fcf814701b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af325a85-ec91-4f54-b78d-f50d647c6f35",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d558bb-f734-41d3-89d6-1d82019e04e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f318ad-5247-488f-9a2a-5a3b436fd116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b284ccdb-6000-4329-81b4-c22ddaeac75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645e91c7-2939-49ab-88b9-5183a47f25ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851ddb96-2a1f-40c0-a626-00d649c38f23",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad4ab97-fdea-49fd-85bb-4c9269316731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8f1e02-14e0-47a3-8e17-532bb37d6094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d99b6f-d21b-462e-986c-f3465d56618b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12b492c-aaee-4835-a161-9afe7a8abc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64202502-b336-43d5-aee3-2cc8f4c00dfb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a26f2e-ffe8-450f-b533-c91104abbf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b84dc55-4723-4723-ac12-fb322fe0842e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f588c965-19c8-431f-9f43-2eb9cb58e927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8f62d8-dbfc-4b7d-b69e-ea53a926dcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dd3abf-2eb1-4d13-b66d-c65572d95103",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517fc7a7-4b37-4560-8484-d3546346c2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040d9b83-475e-4518-ba89-00452f5298da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f55349-3939-4421-b8f6-9b5a2b0fe653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad04b83a-ca57-49e1-8a81-402b6edb15db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754c8e94-4274-4a34-a24a-78020986df6d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40c8b6c-b8a8-4598-98c1-2444360b6978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55caeb53-d624-4f4f-a212-7be882750ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970935cb-9143-4252-aeff-46820b057e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7e5c95-c944-4a5c-a511-06e8bd779e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a377c3-9ee0-4d52-92c9-3a7b48061399",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea747c4-5f34-4ce1-95e6-41b1c396d05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54550b51-8fdc-4bf2-9a14-586c3d12f012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b953f8-4043-448a-a83b-4880123c5e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5b44f3-7c47-4f68-9394-3e11fa098dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f83df7e-37f0-4c7e-982c-f232e745779a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc45887-a35f-4c97-80a1-bead4e52ec21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265bf8d4-5e1e-406f-940f-a0e01b080d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd76352-4139-435a-acf2-0b74c5e4cd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08f53b7-8a4a-497b-8ece-f9cd325e2584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad821115-773e-4859-8171-7c1d1f73ad65",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13daf3ac-f9f1-405b-84ff-f963b5349820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3f58f4-0e6c-4311-aa60-a1dc4812bae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264049cd-3695-4af5-8ad0-ecdc8e031124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40039699-ae34-4387-b715-7aad88c7098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935dd5e3-27f9-4d6a-9743-2d29abe42e29",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07e34c6-5b33-44cd-9437-32dbd1781b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fc9d63-9b76-4a84-a156-848839ebe89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6eedb2e-5aca-4a93-bff1-6f2bd8a5ff47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28595199-0472-4b2b-b8cd-45805ffdd2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ef5b6f-6595-4800-ba22-3e439bd54ca8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b250f8-4508-4829-a3b8-ddfb08eff7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b0853b5-9469-467b-ae07-b5f13da00645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adaaef1-6c2b-439b-8678-3d128c9520e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4314e574-9c89-4162-9a9c-77391ad5ad7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b517a2-e855-4d8a-828e-b6a2b768022b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2382c3c9-1aa6-4659-ac83-ff365cf6b174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e73c95-dd17-4b2a-9ba1-18ff769500e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada41655-44a9-48c2-b88a-892110a003c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd32928e-f1f5-406c-97a4-f21d40cff4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e473d97-efb1-4d64-9760-df56344cf6e5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227c8fd-82c1-4e09-b82c-72baf1d9d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f66cae-ada8-44f1-a707-49b30ef9e0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86828bf8-a7e7-4ef1-9eaa-cc2e7e70be30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e13e8d-d89c-4d57-a089-14e75340bc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e4a40d-1017-4b85-9956-2bd557b9a3c9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d7201-e7f9-4094-8258-9d272628d200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933212d3-65ce-44fb-bd26-b77a725b562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10422613-6550-4464-ab5d-be2f9184fd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf754cf-afbe-464a-a215-b3972e73792f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c3ef25-0e5d-47b9-bbb7-5e249d0da492",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd010c9e-f4ed-4976-ba75-5d3bfacaa5f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1250ec6b-8f0a-4465-aac2-535a650d0c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd95b4-a50c-4191-9b47-689a60123405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d7b9b7-fc73-42e4-ba0c-cfd93ba045dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afe82f9-39d0-4923-9ad2-8257a97d7043",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe6dd75-0c82-4ffd-8410-be05d26e012f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e055b31-df8d-4932-a05c-f5979e23b37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785ec6f9-25f1-44f9-9308-156f255ac257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c47766c-bd71-4c79-ab51-937054bc158b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25739c90-9d7d-4387-86c6-15a76133fdeb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd8147-bdc5-4da7-a75f-2b05529e1162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9470d69b-52cf-4719-8ed2-fa898eb36ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae333d2-4518-4987-b16f-543d986c7d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9041270c-ddf3-4809-82ae-822a5a75e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5444b5-b132-44fb-9794-010513d41b08",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fcdbf5-ef5f-4ebd-9c81-1bdd6477a54c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73230d2e-b609-47c0-bb85-8fec6c9fc38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b0ad53-ab1d-4d1f-9057-73fb275ae38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f099824-3072-4bbc-8953-b8b32796236d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b42d72-d929-4127-a03f-9b7947ece056",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28262a45-0607-41fb-8d14-6aa1b928691b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a289a40a-7302-49e9-b13a-715205a619e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f479403-e77b-410e-a2f9-224e11e62101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2330c38e-a257-4bf7-8524-bd53382a8ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3addc8-0330-4a5d-8689-a8f394905f24",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbed94a-c7b0-4f34-aee8-a4cf98f10361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89078ba9-b9f5-4824-a35e-0ef6af9053e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438e0e4b-18fc-4f87-a8fe-2381a1c64588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d63179-ee3d-42e4-aae8-b9258cb21742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e65f086-7f39-4742-a3ca-58abe6bfc8f8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e484ff-d1ae-462d-aa17-4f9551f09f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4506c9-3319-4b3d-ab1e-9ea0c8cfe379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ef52a3-b1b7-4c7d-8303-6b6f35a09d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf831bd-dabe-4810-b99f-a89f8372b7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036982ed-91f9-40bb-a44e-a69cd2e0e4b0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008ab099-5eec-4bb9-a7df-e71a2a02fbb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b800ef5-8758-478c-bd1a-259a81143e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89e19e2-2fb2-4fc9-9761-6696353ea7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f49e634-aa2e-4947-9d77-b12e9df57838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18997ac3-3362-4c6d-af1f-be22a28bc4de",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89307538-6e34-4c2a-bb1e-1f91b7d9c433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07183b34-bc7c-40b8-8b23-65fd37933018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad54807-85f4-4e38-8e94-167843bfd994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b841ef8-e9db-48cc-bb45-c6008703ad99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861dcd95-356a-4be2-8781-410e3246ea57",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fc135b-b5a6-4b3e-810b-461feb472335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58acdca8-b7c1-4efb-96ff-0eac344c9944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6440b180-146f-4817-bd1f-b0da2dc3fc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894bd39d-4523-4f09-9a14-d9a3991aa66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd113770-d6f4-499f-8d34-6ee0b39d8794",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff22401-5c6e-4bdf-8257-61fbba49091e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dceb9a4-e152-4b25-bd29-9750f6fa7903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7470c844-e6d3-4bb5-aca0-9cd227882e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a50194-0563-4156-ae0b-5a467436fcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2794fcae-93c9-47d9-82be-5bd7748cd28f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddccaa90-7fac-4359-a8d1-bbd4d2223831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572d6ce2-95b1-4aac-9458-967fb3fa9839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf711ac-604f-4f37-bfc7-9988c0bb269e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3324c3-a601-42ce-88a8-4cea5c617b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c2c356-cf44-4fba-95c0-329e74c105c8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f36c7-4bfd-4d78-afd4-7b419355c8c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a441b15d-2c96-4bf5-a5d2-28d783ad187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc023d18-ab21-4057-9050-269c46e65ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f007671-a7b4-41d5-b697-021e695fbeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9644c05d-ed4a-429c-b531-fa6239ceae67",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88eba01-085e-4c6e-8e86-027fd8c834bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ddeef0-4ae0-4f79-a74f-2aee609cc73e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40e881c-aa68-4569-bdbc-a12f767c3229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc8e254-fe06-4c94-8330-d5dffe74ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43016374-8082-4c11-849b-75aa7aa2a161",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f934abc2-ebd8-46d1-924f-976edb3b0636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22d0280-983d-4eef-aa11-17eae92944fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c8775f-48b3-4858-8678-1435dd25fd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e00edd-06bb-405d-be41-83cba31f13a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd4698f-223f-4c88-acd9-58a0c8e25063",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e78d1b5-0e2d-4a3c-ba8a-d8b979a72df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5540dd0a-6c33-4716-8005-ec213c21e0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c2c8d-3a53-41b3-8a4f-09db71fbc470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa500fd-dfb9-4e41-bd77-9ddb07bc9301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ac9b38-5ba6-47f7-b133-40f19f23ecd1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa52a7e-a8d8-45ff-a067-a00e9a02ba43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026aaff5-3ac9-4b41-b7bd-42bee750e1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ccd503-8108-4712-ae74-163267f4734c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13888176-b616-4946-ae2f-b38f921359ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad35dc3-b23e-4945-a677-0b31e0451831",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c563a303-13dc-4c54-9e09-f5e273d3dba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8d84e45-e23c-4f42-a7ef-7126d2a980ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f532b7f-4392-424e-aa62-520349267f4f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29339129-2c29-445a-9493-7231975cbf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce30051-0b92-4832-8f72-b1f930edee1f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9987a33-f599-466b-9ef9-870adaefef3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253ea557-a67e-4203-90d4-0d663312fe05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af93d34-f5e2-4892-98ec-1626a2ceab4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b720cb-95e0-481f-b1cc-747a7ea90d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b90ff94-4f5f-4f06-8a7e-524e94b287a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b489e065-dc3b-42a3-b1b4-2d9240f75831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724b37a3-1e07-4788-a499-f3f805020385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e4c838-a201-45e7-ab9b-e2f01e447fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02484f6-1f5f-4e9e-9aa7-e8b4ea72966e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c5029-406c-49cd-a331-5e9a9cae9fd2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a5fc69-40d8-4dfe-bde0-5c0e86f8f6e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fa2dd8-4f93-4eb1-8e58-d0ae28b1117c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fcb04b-34df-4cbc-9d7e-994c8436b0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de52e69a-882f-497f-84e5-3fd24ccae911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361aa9c-cd86-4c9f-a9ca-cb554f2aca2d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911d9ef6-d7cc-4eee-9a2d-232ca4ca0e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c4629b-8a36-415f-90df-5ca9ef1f9113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b84ef02-2a40-43bd-9aa7-fa1164985741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade9bae3-6b33-469f-aef1-30885abad3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a99d9e-117f-4f2f-823c-e0d6971ea3ea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2751d33a-11d0-4c81-be39-e25afd8f0f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d046acb-7b1a-4707-86ec-a0ed7facb3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01266db5-49d3-46b5-a3f6-07db748d1cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b731ac8-e237-487c-943c-36ab8f33b608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2359b5b-66aa-49c6-bea3-000b5cbff2f3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648073f-dda6-4dac-839a-0627da66247f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e270ad21-a668-4744-91e9-fe8de9f0fb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593b2279-4107-4941-90f5-c86d2129e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae77603-53f3-48be-8cfb-925a7fcdf1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1895dd3d-4df3-4b39-aee5-9ce014a966a3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aa43cd-6a94-4f60-b750-c59be806262d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7605b6-4b75-4d9e-837f-44036157b238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14abc525-dd30-4ccb-87c3-99bb14068c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128fab77-9ed0-4e5f-bcb8-95b33f611e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5be6b1a-0b17-4a04-80fd-5d0dbed56bdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeed8eb9-51eb-4902-b652-57998559cb1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e27dd1ff-993d-4d8c-85bb-c2b73f40e271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcf525df-34b5-46f8-a394-d24179ee8266"
                    }
                  }
                ]
              },
              {
                "id": "1f781534-df0a-487c-8d01-ef3685adb634",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e42b1e93-342b-4b7a-83a8-dffd5f1e5fd8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc300c2-659b-4750-a08c-2f7919064153",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "037cfc3f-d408-42f7-b9ac-a7dc5e2440ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ced5151-9c1c-49c5-80d2-bb7e0b5b8517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e3118bb-9cc6-4b7f-ab1c-4ca2e5c902ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ec35326-ba84-4130-86b2-7e1008b32244",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b35b52b-da61-4ed0-8089-658af5f25f45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "278b322d-a1c5-47c8-af1a-df52db2b5cce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4da93d35-e66a-457c-a293-86fa15547311"
                    }
                  }
                ]
              },
              {
                "id": "7d223a00-9ce2-4795-8639-1b476876790e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c580358d-5133-4495-8e73-85106dbe5ed3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0532139b-d5a2-4d73-9dea-1a1d94e9e8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "09fb351e-1583-4c6f-bfa5-70e2b48c2a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80592348-424e-47c4-afff-11f4e5f70e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cf84a5-68cf-4d84-953b-fe2a4020ff41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c997afb5-6f50-44cd-ac3a-4c07e8906fad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5b62443-dcb4-434d-84a1-dd2c31d8a11d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d15632d4-d19b-4ba9-8c16-43c37bd7f466",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f1d8dba-0105-4da6-ba3c-213f5e8b4b6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a43a672-3cfa-4a78-b40d-c017d1067b15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a05a098-a65f-4377-bc19-92b0e021daa4"
                    }
                  }
                ]
              },
              {
                "id": "b4efd039-da01-4437-8b73-55d76f3a4af1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cae6319-e0fc-4788-9c75-ca34f8882848",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a7f1956-f093-4270-8e79-6dea0cc10f30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00b01ab3-d460-442d-9530-8f20699eabe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7071c251-93a0-433b-b045-736a1d5281ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01558f5c-3341-41ce-9af1-972217c9cefa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "349bc75a-d2aa-40de-8dc1-7a38a9b2869f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "579af49c-b707-4319-aef1-fe485d92eab0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71a0e7a6-10b0-4f0d-8d37-e278dbce02cc"
            }
          }
        ]
      },
      {
        "id": "5f6d8d16-07d8-4d26-a6a3-74f3d8e86ada",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3c2e37eb-daba-4e12-9889-fda91a574b4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "673123f7-3bb5-4b01-9244-aceccd927bed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1093d043-7322-4f12-81e4-6229db12f93c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638fd830-ee86-4c9c-84b4-5a16e13ac86a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f8325b88-328e-4cc2-8c5d-f541d49d646e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b638175b-793c-46d6-8591-ab177406f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc86158-83e5-420b-9b95-8485f8131309"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f71549e-db56-4d1b-b9f9-6f46ec4377d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12ad121b-0cd4-4b0f-90c8-d96a314b0e46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71cebdf6-7806-4866-98b0-30088da6ada9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1febbc47-14ba-45b0-a7d6-255fd8527004"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d18c1b9d-2265-4762-8c8b-1c3355430ce3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c93b42a-ba49-462f-acdd-61e4f51a60c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b41cae6-f153-4f76-93ac-157046133cbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34b23fd7-1215-4e8f-bdb6-4dc86152c776"
            }
          }
        ]
      },
      {
        "id": "6e3919be-ee17-4440-a4bb-d2d920809ad5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "87881352-3b49-4e11-a800-866fac011123",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce1cefae-23b4-4b75-a260-a0184abf11ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e413310e-dd34-471e-80cb-18df6b069b6a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ef3049-5a93-4e2d-953c-2dfb9858c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b13ed20-f295-4dbf-9f67-7aafce8366c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba88d44-b95c-49b0-8a7a-8bed025c00c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2f509b5-8a95-421f-98c3-794dde285bd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6805bb2-2c2f-4845-8088-312191af2276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d920e89c-b554-4a54-92e0-0b262a2a1a82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf88ad3b-6975-4fec-ab1a-6dbcd580029f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc3066e1-ecbd-487e-a70c-0db80b5857e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e35cf71-9bcb-4492-ac69-1ac0bdfd276c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35f4db2e-8187-4c63-abaf-08e3c7ae147d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec560e63-6a58-4e39-bff7-babf0b7d1934",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8041a5da-4b68-4dfb-b54a-70508432d4e6"
            }
          }
        ]
      },
      {
        "id": "a73a8ea4-b588-4a12-8de0-c13d484d9cd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b80a2e25-2e3b-4230-86e8-22eadc78cd0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96ea77b2-47cd-477c-8938-3e9d0405bb74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c4999b8-fa93-419a-a267-1bbcce8338f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb04aa-b5e5-4c5f-bae8-9cd2732a0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9356506-0890-4b4c-b6df-8177e2f5b447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15416387-6a82-4502-bc85-d2bd5164d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74a3df50-fe0b-485a-905c-b0abc58a16d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f4dbf39-b23b-4836-9caa-9786d5e36ed3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b66ad84-0ef8-40f8-9122-af14a462d741"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80e4c679-7492-4582-bef4-60e513cadf0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb0f295f-6de2-48d1-996c-efec4385467e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab5fe95b-ccf1-49be-a552-1aa786a906c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "860f6238-28b4-4ee4-ab80-84408da32db0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "614a7fc7-a5cf-4310-b0d0-c98f116f03dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8347408c-bc6a-462b-a995-eb6d3610ad64"
            }
          }
        ]
      },
      {
        "id": "685e5e63-737f-40db-952a-f9cbcc844e32",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e82a290-2465-41ea-9eec-142043a2f672",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fe82605-4d1c-4ff5-9954-6cd2be55a0fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3599303f-fbc7-49c9-99a2-008e4b1d207c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e6190f9-2935-44af-945e-f3f0dad305d8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3044d960-9bc0-43e6-967a-9b7d0448656e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 350.0119047619048,
      "responseMin": 13,
      "responseMax": 9336,
      "responseSd": 1423.9464512017375,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719967120224,
      "completed": 1719967216858
    },
    "executions": [
      {
        "id": "8d679532-2c80-4213-90b9-286c35579336",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d56e66f4-cb51-49c6-90b9-1485a0dcba5a",
          "httpRequestId": "9459c301-155b-4956-b404-4697ca2734d7"
        },
        "item": {
          "id": "8d679532-2c80-4213-90b9-286c35579336",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b76fe285-764d-4e4a-b742-9d9a1cf2748b",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "64bfa875-4930-4af8-8c0e-80580bac41f9",
        "cursor": {
          "ref": "ec37abf7-cc7e-4fcb-a544-a78a6b0badcc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d26f3718-ead2-4346-af3d-6fb0a8a6cad4"
        },
        "item": {
          "id": "64bfa875-4930-4af8-8c0e-80580bac41f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "799bd183-438a-4ddf-b827-3818deb7ebbe",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "7d2d066b-4329-4de1-af63-c858ce7fa984",
        "cursor": {
          "ref": "4e29ffdb-2139-4c4e-b188-ac6d1292dd43",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd9d9dee-0326-46d2-8fb6-63457f26ef24"
        },
        "item": {
          "id": "7d2d066b-4329-4de1-af63-c858ce7fa984",
          "name": "did_json"
        },
        "response": {
          "id": "a8a7092b-592c-4444-9d58-9283ee3f9241",
          "status": "OK",
          "code": 200,
          "responseTime": 419,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a5c389-8b27-4b62-8c28-e5e166694f55",
        "cursor": {
          "ref": "752c2343-13e0-405c-8973-a3b3a2a9f592",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29993ece-f5e9-46ca-815c-d4cc50aa2f3a"
        },
        "item": {
          "id": "17a5c389-8b27-4b62-8c28-e5e166694f55",
          "name": "did:invalid"
        },
        "response": {
          "id": "c067e9ed-db82-4583-9d0c-960c44712e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2294,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a5c389-8b27-4b62-8c28-e5e166694f55",
        "cursor": {
          "ref": "752c2343-13e0-405c-8973-a3b3a2a9f592",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29993ece-f5e9-46ca-815c-d4cc50aa2f3a"
        },
        "item": {
          "id": "17a5c389-8b27-4b62-8c28-e5e166694f55",
          "name": "did:invalid"
        },
        "response": {
          "id": "c067e9ed-db82-4583-9d0c-960c44712e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2294,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76302fc-027a-4f7d-9e57-91ce6c5531b0",
        "cursor": {
          "ref": "d3c472e0-2a1d-4c1d-a598-db8b277e1817",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a89c2b01-b981-4eac-8fa1-3d5ac96ec847"
        },
        "item": {
          "id": "a76302fc-027a-4f7d-9e57-91ce6c5531b0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5acc203d-2890-4006-9d1f-cecde8cd1700",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2222,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0d1a85-0a55-4bdf-8f62-8e365312412b",
        "cursor": {
          "ref": "7913f4f5-2fc8-4398-8991-0083acb0892b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e2ecbf0-9fa1-48fc-bf5d-4e83ca36efb8"
        },
        "item": {
          "id": "3b0d1a85-0a55-4bdf-8f62-8e365312412b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "909a7ac8-4791-4a3d-b864-89d6a6201724",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1924,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48c5397-d820-470f-8d0e-f4a71bf06521",
        "cursor": {
          "ref": "e520a442-bc26-4fa8-b481-414ef726372e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b085e04b-8622-4848-98c3-1abc698d4fe4"
        },
        "item": {
          "id": "d48c5397-d820-470f-8d0e-f4a71bf06521",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "403f6e53-9eb5-477f-ab13-14d9ba7ea64f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844710d6-db28-49f5-a399-401980579e1e",
        "cursor": {
          "ref": "e1e0936b-4343-4a6f-b8ac-1d20605e64eb",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "de9155bf-d906-488d-819a-c3ff1db49f6d"
        },
        "item": {
          "id": "844710d6-db28-49f5-a399-401980579e1e",
          "name": "identifiers"
        },
        "response": {
          "id": "10b3b4d8-cb21-4b06-95db-bc73e5af74ea",
          "status": "OK",
          "code": 200,
          "responseTime": 2164,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305b48aa-3c52-4be3-9758-9f2fcd1d592c",
        "cursor": {
          "ref": "6399b9b9-dd9c-4e4d-b03c-06ae80b425da",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4fbedb6f-7005-4191-a62d-33279fa0f2d3"
        },
        "item": {
          "id": "305b48aa-3c52-4be3-9758-9f2fcd1d592c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67671ebe-1242-47ae-b8c8-2ea8b5c7221e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc3e3d-d6b7-4457-a5ab-fbcdab9a9778",
        "cursor": {
          "ref": "d6a17912-c852-439d-aa70-f98864ed8f5a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "403376b5-01ac-4185-909a-2b02244f3d07"
        },
        "item": {
          "id": "72cc3e3d-d6b7-4457-a5ab-fbcdab9a9778",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9fce4900-bbbc-4e7e-bb98-e09237c3d879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bed20c-7e12-4514-a42b-c6e8ee82c17c",
        "cursor": {
          "ref": "68a22998-74a5-4b38-874f-c5c8269c993d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "42d6713d-28e9-4280-931e-313444ae0988"
        },
        "item": {
          "id": "62bed20c-7e12-4514-a42b-c6e8ee82c17c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a26a658c-87a9-4342-9257-bb4e0a9c9761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaa7d93-1cc1-4ceb-ad4b-7f987838133a",
        "cursor": {
          "ref": "70bb724a-12a5-41f0-b84d-f8c0dcc7ffd6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "26100a75-714b-46c7-abac-b71673fa3a11"
        },
        "item": {
          "id": "eeaa7d93-1cc1-4ceb-ad4b-7f987838133a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c68f27ae-b4d1-434c-8561-a530d10a56d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb5d73-817b-4bdd-88f6-9edcabb6003f",
        "cursor": {
          "ref": "b141d055-13ce-4e4d-a9d8-4cf6016241d3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d05dc7aa-4c40-456c-b7cb-d2132a4743ba"
        },
        "item": {
          "id": "a4bb5d73-817b-4bdd-88f6-9edcabb6003f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cfac8cea-85e9-4a90-bb26-04330328dd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61febf1-edd9-4545-a8c1-b3f34e2df0a8",
        "cursor": {
          "ref": "fc73539d-935b-4cad-8aa8-d0b130d675d2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fd2bbb19-cf30-4d2a-889c-8dc762a3e5ad"
        },
        "item": {
          "id": "d61febf1-edd9-4545-a8c1-b3f34e2df0a8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "67f2587d-ff08-4583-8b7d-6b90f438d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e046f8ca-5a81-475a-a0e6-034c36ae966f",
        "cursor": {
          "ref": "77e6bfbb-d9a4-4038-a451-11cd987b6f36",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "03208dcc-af56-41a6-9031-15b4d24f93b7"
        },
        "item": {
          "id": "e046f8ca-5a81-475a-a0e6-034c36ae966f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "404ae5d5-e6e0-4453-8cfd-8c48ac95eaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd5c35e-2a2b-4e71-a7af-4424ceac630c",
        "cursor": {
          "ref": "894775a3-131e-4c66-925f-194411afe937",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "43fef09d-9e50-42ae-a9cc-129a6f872642"
        },
        "item": {
          "id": "7dd5c35e-2a2b-4e71-a7af-4424ceac630c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fb078c54-dd1a-4dc7-8737-793f3f2cc95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ab35ef-3b5a-4680-9d0f-c0d82bbd0b1c",
        "cursor": {
          "ref": "b9c2e2f2-7dad-4a40-9de3-632f663948ab",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ddef8b76-e689-4739-9980-ce19a395016b"
        },
        "item": {
          "id": "c9ab35ef-3b5a-4680-9d0f-c0d82bbd0b1c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a0ff137e-0fa9-4065-987e-0a4782c79412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f09c74f-f498-4c3d-82bf-61e6f1235fd5",
        "cursor": {
          "ref": "abff5c44-d5bd-4f93-91ef-61b433a1bb9f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cde9a750-ab62-4f0c-a0cf-0e527afce7bd"
        },
        "item": {
          "id": "2f09c74f-f498-4c3d-82bf-61e6f1235fd5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5e75bd4e-aa58-4b5a-be68-51a96ada490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa06502-0072-4e2e-8418-ea88b19d0589",
        "cursor": {
          "ref": "328784f0-1a51-4697-809f-657757327448",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b5c41366-3bf3-4e13-a556-90c482ab7a91"
        },
        "item": {
          "id": "7fa06502-0072-4e2e-8418-ea88b19d0589",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2975207d-9287-4d21-b100-c4e3668d7b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aeeea9-4670-4c93-ac73-7e8981dc1f76",
        "cursor": {
          "ref": "9ccba777-ede8-4b9b-b2fa-0f9b1dd16412",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "176ee2c7-90d0-48da-8f16-b64e9678c4b6"
        },
        "item": {
          "id": "56aeeea9-4670-4c93-ac73-7e8981dc1f76",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a53941d4-6a62-4017-b714-915968a6dd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13372aff-dfdf-4587-8067-84f34289c0d5",
        "cursor": {
          "ref": "2adf2a2d-258e-45a4-badc-ae06f394300d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e103cc13-20a6-4924-8171-93fc3ad86d83"
        },
        "item": {
          "id": "13372aff-dfdf-4587-8067-84f34289c0d5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b1ba01ca-8996-421b-ae7a-eff4afbb52a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6cde69-c862-4464-b369-e8b0d9699b4e",
        "cursor": {
          "ref": "37807fcb-4849-440c-a154-5b2469bd7d9b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "64293ad4-9360-4008-b1f6-04e9cca60e52"
        },
        "item": {
          "id": "7f6cde69-c862-4464-b369-e8b0d9699b4e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b9b6076-993a-46da-b534-aefcf2229eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6851d3f-4b7b-4589-ab9e-80dc99715f5d",
        "cursor": {
          "ref": "d2ec9344-a859-4c5a-a5b6-9ec62d4ad41f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7b284876-5e5e-44ab-bba5-7b02db63f57c"
        },
        "item": {
          "id": "b6851d3f-4b7b-4589-ab9e-80dc99715f5d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5cf6a74e-6f2f-4f29-a480-4f7d4a08b866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac097eb2-1735-41ea-a058-f739af984753",
        "cursor": {
          "ref": "6bdcbe9d-6968-480a-b778-14da9117793a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "955123f3-8cc4-4001-b8b8-f721129bca8f"
        },
        "item": {
          "id": "ac097eb2-1735-41ea-a058-f739af984753",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "447a78ab-ff4f-40e8-8229-a28df662eb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afa31d4-7be9-4b64-939e-e66b8e600a1d",
        "cursor": {
          "ref": "766728a4-12bf-41d8-90f8-017596d55671",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "10e273f6-e442-427f-af10-6726cfe5c444"
        },
        "item": {
          "id": "9afa31d4-7be9-4b64-939e-e66b8e600a1d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "92915270-1b44-4c03-8f3b-d98fdac0a4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767aef01-2db0-4fd2-b87f-92dce98a42a0",
        "cursor": {
          "ref": "dde8bf1c-e117-46ca-bfce-c7b6414850a5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e82ccac9-a526-4420-9151-d51c38cd21ab"
        },
        "item": {
          "id": "767aef01-2db0-4fd2-b87f-92dce98a42a0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9028fdf4-9834-4579-9aa4-58f758c86793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf5cec5-6664-47c3-8074-b5ba3f48f9b1",
        "cursor": {
          "ref": "14ecae02-8345-4364-9ecd-11000e6cec9d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6515ffd7-ffab-4864-a964-6aeaa083ec90"
        },
        "item": {
          "id": "ecf5cec5-6664-47c3-8074-b5ba3f48f9b1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9314e735-3f2a-4c9e-9214-a7697d69ac1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829de27-7219-4656-b9b0-c3e4af6fe2e6",
        "cursor": {
          "ref": "4d901024-55cb-4726-8ad0-f75e99bbffca",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0ea2e546-3337-4042-ad53-6de1b5c445b1"
        },
        "item": {
          "id": "f829de27-7219-4656-b9b0-c3e4af6fe2e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e87b5cf7-3cd9-45bb-8ccd-4ed7f7da2ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b13475f-657d-495a-80c5-ea602da2cd8b",
        "cursor": {
          "ref": "46643ffc-f9c5-4863-9aea-1fd5b8902c43",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e3e87b7-b587-4399-88a9-9d6f7183c6c4"
        },
        "item": {
          "id": "3b13475f-657d-495a-80c5-ea602da2cd8b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e06c4dc6-d2b9-4c08-b04d-6f286a94f8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ca2b4-5433-48d0-9cac-fae20a7a4554",
        "cursor": {
          "ref": "bac46d40-a90a-46d5-87c8-cfdf7f419418",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9386b56d-c083-485a-beb9-2c4d794c3ad3"
        },
        "item": {
          "id": "672ca2b4-5433-48d0-9cac-fae20a7a4554",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "927a29fd-c08f-41b5-bb27-b19bbde9fc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397fcfa7-ea75-4470-98ba-a076c481f62e",
        "cursor": {
          "ref": "eeb6d0a9-7a17-46b5-a3b3-16926f817634",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c9b812c9-d131-4b7e-a192-433ffdf5cf7a"
        },
        "item": {
          "id": "397fcfa7-ea75-4470-98ba-a076c481f62e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1bc0521a-3af2-461f-a566-36b14575437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046121bb-8b49-427d-af0d-11a97ab995be",
        "cursor": {
          "ref": "30831248-30f3-4ec3-8de0-e9cc8b949ee6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "13e3ce45-f076-4367-80fb-6006b7869267"
        },
        "item": {
          "id": "046121bb-8b49-427d-af0d-11a97ab995be",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f8ca0594-d81c-41f2-9068-7c0ee2c52044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736396ca-3ed3-4d82-a63a-ed22bcb76fcf",
        "cursor": {
          "ref": "51197689-7542-4195-8efc-285c279ee712",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d359fa97-235d-4ef2-a2b2-60b2f635b015"
        },
        "item": {
          "id": "736396ca-3ed3-4d82-a63a-ed22bcb76fcf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "391e30d8-0f22-4604-b24b-134cbcaeec92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15a2ca2-6d76-41ff-a1b4-5d157bd89b8c",
        "cursor": {
          "ref": "6de0a27e-1989-4d13-97d8-8727e4370a08",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "551a8a08-e598-4e6c-ac60-e13322c13217"
        },
        "item": {
          "id": "b15a2ca2-6d76-41ff-a1b4-5d157bd89b8c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "edd5c187-8047-4e28-b6e7-3b88008bd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f52a4a5-dd74-4564-9e3f-deb6e1f3bada",
        "cursor": {
          "ref": "779166b6-170a-4192-b1b3-17b61d9d2115",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a21802af-5e2b-41ab-9fd0-0e0b90b6212a"
        },
        "item": {
          "id": "8f52a4a5-dd74-4564-9e3f-deb6e1f3bada",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4c7f19d9-2270-4c91-9df0-f8fdc5ac94d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9840325b-eb9e-43f6-8fe0-42a0acc88b81",
        "cursor": {
          "ref": "ea95c8c7-622c-4cd5-945d-5b73043f20ea",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c9ee34a-0bdf-4653-b8aa-01406c3da158"
        },
        "item": {
          "id": "9840325b-eb9e-43f6-8fe0-42a0acc88b81",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "683932ea-fb37-4b8d-82d6-d84dfc09c186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56c8058-7da5-4737-b989-df70b43285c1",
        "cursor": {
          "ref": "d025ffa6-aa76-4f3d-9fd5-384c15c69fc0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1bfceb90-76a3-48c7-b5f0-50b055ebf06e"
        },
        "item": {
          "id": "a56c8058-7da5-4737-b989-df70b43285c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dcb3d9f6-8bef-4c27-ac4a-0a9553568ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca53c83-47c9-4c20-8045-4c27468f4f26",
        "cursor": {
          "ref": "5a9d846f-3cfe-4343-9444-4cfd3530ac84",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4caf5a57-8511-4029-9a86-4192f84557a1"
        },
        "item": {
          "id": "9ca53c83-47c9-4c20-8045-4c27468f4f26",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "77ae174a-d2c3-4325-a677-3a4097ae7169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e589e1-5b3a-43dc-8cfb-c362f500d8ab",
        "cursor": {
          "ref": "29ffa4bf-bfce-42bc-9321-b7e17172e248",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d117dab3-e63c-4a02-a6f3-bbcb469f5b61"
        },
        "item": {
          "id": "17e589e1-5b3a-43dc-8cfb-c362f500d8ab",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "68e32f56-c8c6-49c5-a921-e4725c088b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b3737c-a417-49eb-a553-2bad662ba279",
        "cursor": {
          "ref": "69b404a5-6b52-4137-bbef-9c073f62cded",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9d6738f3-0151-4f41-bae7-343835825c7d"
        },
        "item": {
          "id": "a8b3737c-a417-49eb-a553-2bad662ba279",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c720ac86-177f-4427-9030-270a62523595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5703c453-cfe3-479b-95b2-cdccb41701d0",
        "cursor": {
          "ref": "af8c8d77-208c-4d9c-90a5-4bd6a3233f1f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "579c0e90-e115-4c76-87f1-20a1080d92c9"
        },
        "item": {
          "id": "5703c453-cfe3-479b-95b2-cdccb41701d0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b046f4cb-e1cd-4ed5-9cf1-fd4865f8524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31b68c1-ea1b-40da-ac35-c1e2e3d342c0",
        "cursor": {
          "ref": "8ffcb67e-d004-44b8-b425-54dc81ea1186",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09fef28a-355c-4629-b1e5-b71bdf90acd3"
        },
        "item": {
          "id": "e31b68c1-ea1b-40da-ac35-c1e2e3d342c0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "996301da-f4c8-40ca-9908-57965dda170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3af425-fecb-4925-a32c-cd8b89c51f35",
        "cursor": {
          "ref": "8addb4f3-6bb2-4040-8acf-2b34083cc6b9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8bda1d52-f6ab-4abc-b660-80a0ecf84f20"
        },
        "item": {
          "id": "2f3af425-fecb-4925-a32c-cd8b89c51f35",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7465de8-48f5-4bde-952d-0bcd50a0d493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a52223-279e-4894-95d8-9252fa5d61e9",
        "cursor": {
          "ref": "8ae92751-a8f2-45db-88cd-c2bd4aef1d92",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f8a7f0fc-8a5f-4ee1-a3e6-edd235ce3276"
        },
        "item": {
          "id": "41a52223-279e-4894-95d8-9252fa5d61e9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f421142-ca10-4e65-adbf-ecc3a0b6f31a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a87b89f-4564-41a9-914b-791041daa028",
        "cursor": {
          "ref": "b78363c9-3b10-4ce7-b2bb-b665b0bdcb4b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0fa9115b-53f2-4231-aac0-5ce99ec75953"
        },
        "item": {
          "id": "8a87b89f-4564-41a9-914b-791041daa028",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f258b979-9da6-4e6e-b3f4-9a489efa9e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ba273d-919b-4293-ad00-32f18badd329",
        "cursor": {
          "ref": "850a3044-53f0-4dcf-941a-5f9c3f5aa29e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "14754cae-4c6c-4e29-960c-1c9ee27fae64"
        },
        "item": {
          "id": "b0ba273d-919b-4293-ad00-32f18badd329",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "56171117-a57f-41fa-90a0-def87e596aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675135df-b674-4e47-95cc-38c5a0a7a804",
        "cursor": {
          "ref": "4e4af445-f5f8-437d-ba11-0f3897399655",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "73f8dd3b-cbe9-408c-a2b3-57c7f8095f43"
        },
        "item": {
          "id": "675135df-b674-4e47-95cc-38c5a0a7a804",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f8132ee0-8c80-4475-8054-7525c0062fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f62eb6-6fe7-442c-a1f8-17ac495c5e09",
        "cursor": {
          "ref": "b1ba0b99-b740-4cc1-b8eb-1401977d06f4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "32858f81-8946-4bb4-aca5-70b2aaaf80db"
        },
        "item": {
          "id": "56f62eb6-6fe7-442c-a1f8-17ac495c5e09",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "241769d0-a730-4cc6-bbe3-e2686ef9f35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c163d268-8354-4c60-877b-820f54949ca2",
        "cursor": {
          "ref": "d60174e3-0a6d-41a8-98c7-678166fcd39b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dec6c507-33c1-479a-8afa-01da92eff52d"
        },
        "item": {
          "id": "c163d268-8354-4c60-877b-820f54949ca2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7558c52e-6765-4be4-bdb9-1d6ee90a03dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5e2f79-253e-438d-86c4-f77ff1eb9dda",
        "cursor": {
          "ref": "fc59eebe-1695-48da-a9bd-58478ce3c3ac",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "07da6da4-4e29-461b-9386-7146081be355"
        },
        "item": {
          "id": "1d5e2f79-253e-438d-86c4-f77ff1eb9dda",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "089d78f6-10e2-4aa1-bb74-e9f77b634024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42776cba-4fd7-4116-a3cb-77c058047804",
        "cursor": {
          "ref": "758df008-86bf-47c7-b0a0-a3787b79f8cc",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6f2d411b-5aa0-489f-8f5f-06190394a3f5"
        },
        "item": {
          "id": "42776cba-4fd7-4116-a3cb-77c058047804",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bf37fcfe-f163-4d6f-af00-6f4b12c51556",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1b3123-4eb1-438e-8300-357a80ee1a8d",
        "cursor": {
          "ref": "5cc646fb-8241-47d6-af28-5172a25697da",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "258ba504-066c-41c7-ae59-844d24188765"
        },
        "item": {
          "id": "0b1b3123-4eb1-438e-8300-357a80ee1a8d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "79c7b71f-b79d-4087-9cf2-8c62c6e7d5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefd6142-4c44-4918-bb2a-2c63ac6df803",
        "cursor": {
          "ref": "8a59d819-71f1-4b04-a166-81612f635110",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "68cee9a0-4a4d-4967-b712-c67526d5f0bc"
        },
        "item": {
          "id": "fefd6142-4c44-4918-bb2a-2c63ac6df803",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2636aa6f-7a6f-4ff0-9949-853fb7496983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f6c3d-a082-4073-8537-6c4c5f928a5a",
        "cursor": {
          "ref": "f7bba7e8-0e74-431a-aae4-beb787800267",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "32ed455b-1fee-4028-985f-794960f774f0"
        },
        "item": {
          "id": "647f6c3d-a082-4073-8537-6c4c5f928a5a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5229f2fd-2ef8-4f74-a7fd-35fbd35567ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00203a62-4e42-4c38-83d8-093c456c8c05",
        "cursor": {
          "ref": "9c117256-a138-4d2a-a9f4-1bbe804a8b94",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cf768fe3-c7f6-417c-b4d7-55ce3a995912"
        },
        "item": {
          "id": "00203a62-4e42-4c38-83d8-093c456c8c05",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a06e305d-5279-459b-85c2-097c11be8945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b9cbd6-66e5-4e4f-9b24-596b1f89ca03",
        "cursor": {
          "ref": "0aa82981-91f8-4a89-871e-196c386dd41a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ca62cc94-ff1c-4bca-912f-4072aa08a786"
        },
        "item": {
          "id": "49b9cbd6-66e5-4e4f-9b24-596b1f89ca03",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e41d53c-b913-4622-b566-439b36a84263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b643c43-6921-4557-b2ff-c6c1d3903cf4",
        "cursor": {
          "ref": "8a60bc6a-2b36-4969-b6b3-1db9a2b76d6c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e0d15c6-4d26-404e-aef2-4421a4b40515"
        },
        "item": {
          "id": "6b643c43-6921-4557-b2ff-c6c1d3903cf4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "efe83b63-d8ac-4ae4-bb27-57d1e7ca71b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dbb36d-eb3e-485a-8850-34d925b53898",
        "cursor": {
          "ref": "40b9699b-5b9f-4ce7-82d9-48ec84b7609e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90103744-7d94-447d-b671-3893d6d87286"
        },
        "item": {
          "id": "92dbb36d-eb3e-485a-8850-34d925b53898",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "22595fc3-2a80-4fcb-b336-f6c8df58a037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4785a7a0-14d0-4414-adda-2169fdf43b30",
        "cursor": {
          "ref": "83112b6e-211d-4bcf-a3c9-53c31d2d40ef",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f3cc7add-f1d4-4df4-9729-3b1dd39f9070"
        },
        "item": {
          "id": "4785a7a0-14d0-4414-adda-2169fdf43b30",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "34675197-767b-4ab3-840a-d3055002bcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8ccbe2-da48-48b8-beec-69b18da5e0fa",
        "cursor": {
          "ref": "5633082f-58ed-4231-bd96-095e57f07037",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4a1d7122-3971-4d66-9aaf-c0253f388c69"
        },
        "item": {
          "id": "5b8ccbe2-da48-48b8-beec-69b18da5e0fa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4172c2db-a790-482f-b55a-4104853e9d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed2c0af-3b63-403f-98b1-d97367b6e96c",
        "cursor": {
          "ref": "398e5ba0-7e6e-4c77-811d-452824f3c783",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3224bfd5-d8ef-4eeb-aa4d-93f4877bfcd6"
        },
        "item": {
          "id": "8ed2c0af-3b63-403f-98b1-d97367b6e96c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "94bdf30a-03fd-455d-82aa-96976349ac5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6d5943-4945-45fb-890c-f75065324592",
        "cursor": {
          "ref": "d7f551ce-f620-4049-890f-3ccc82f259cd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b56cab84-1780-4a76-999b-4227fcb79faf"
        },
        "item": {
          "id": "5a6d5943-4945-45fb-890c-f75065324592",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb450a19-cd6d-42a5-a777-dbb990b0d6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bc6f1a-ee06-43c8-9db3-9cb0725f93c0",
        "cursor": {
          "ref": "311bf4ad-af72-4142-9050-cc621a658a7e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c81127be-6b20-4f49-8f6c-47f5a5390475"
        },
        "item": {
          "id": "48bc6f1a-ee06-43c8-9db3-9cb0725f93c0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f03bb451-f022-4a0d-8c33-1636adb49a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25937ff-d1c5-4ea7-8fd8-f5529e33224a",
        "cursor": {
          "ref": "2f15df43-341a-48ea-a323-e24a00de5568",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "45fa39eb-094d-478e-8129-7162f226d8f6"
        },
        "item": {
          "id": "c25937ff-d1c5-4ea7-8fd8-f5529e33224a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e0aca22-988a-4189-a1dc-bc1d1e4ce0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6623d7-4a77-42c2-b086-713f35bf924e",
        "cursor": {
          "ref": "a395b2c8-c8c0-4694-961b-d4077a4c1642",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "481da301-65d0-456d-8102-c59cf7699eee"
        },
        "item": {
          "id": "6e6623d7-4a77-42c2-b086-713f35bf924e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f52e1503-c14c-4bec-93af-550b2c4b6142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e8869-4353-40c2-9e6c-27d2053f17ce",
        "cursor": {
          "ref": "1d8427af-97ba-4adb-b2f7-1d1efdb17829",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "724aba8d-681b-4be7-bcea-9bd1d57a39dc"
        },
        "item": {
          "id": "bb8e8869-4353-40c2-9e6c-27d2053f17ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6c1266ee-2442-4b29-ab3c-801dfd417fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdb79b5-aa22-4e18-bcd5-65e07f262669",
        "cursor": {
          "ref": "9e007e25-c594-4ff6-a95f-3f8d4b2992da",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "940d5f8e-d3ce-4671-8279-928edad7b7a4"
        },
        "item": {
          "id": "4bdb79b5-aa22-4e18-bcd5-65e07f262669",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3d0e8bfd-1824-493a-a59e-10b4ae8da9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0afb16-3f31-49d8-b6bb-ab25991d02de",
        "cursor": {
          "ref": "c67f2e48-a69a-4109-a885-c28494981f4f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "85707501-7761-4391-8e94-8d3f54e53bf3"
        },
        "item": {
          "id": "4c0afb16-3f31-49d8-b6bb-ab25991d02de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "64921e04-ec93-4899-80dd-f6d99668e0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abcce3a-1dff-46dd-8108-594b876767da",
        "cursor": {
          "ref": "56270338-1580-4725-a88a-ebd60274352f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ee9a69a-44c3-43b2-85b1-0dd433c3e3e6"
        },
        "item": {
          "id": "9abcce3a-1dff-46dd-8108-594b876767da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c6c8717b-2cf0-4d87-8cf1-ce548eb03d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1ff9b4-b2d1-4987-a9d9-b7a420715dbd",
        "cursor": {
          "ref": "f80297a9-4b79-4674-a8c3-43acddab0a72",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9dc17603-de69-46cb-beae-c626d8ee1101"
        },
        "item": {
          "id": "0f1ff9b4-b2d1-4987-a9d9-b7a420715dbd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e97a707e-d104-4960-a507-4ab4afe2f2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199fa881-53b8-4291-a8bc-afe27630d7ba",
        "cursor": {
          "ref": "988ede87-eb65-4215-9623-a9111ecd96b0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3e05ed36-e743-4e03-9896-11013121a0bd"
        },
        "item": {
          "id": "199fa881-53b8-4291-a8bc-afe27630d7ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "236f0812-b22b-4ed8-b567-680a0f52f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f20d60f-7d34-4c29-913b-44f210a81e29",
        "cursor": {
          "ref": "bb1f385e-c6a2-4bc0-ad36-cb1aac2aec1d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b8855734-9d07-483a-8cb3-d1454b13f770"
        },
        "item": {
          "id": "5f20d60f-7d34-4c29-913b-44f210a81e29",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "708afc5c-b3a0-48c6-85fb-4d1234f9cec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac345d2-f294-47e1-9f08-32cbc6bf139a",
        "cursor": {
          "ref": "07da007d-2727-4092-92fa-76240ba39916",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b1a5bb20-7ce3-4af6-b016-dca6be340a4c"
        },
        "item": {
          "id": "7ac345d2-f294-47e1-9f08-32cbc6bf139a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "986c8094-dad2-4d1b-9658-e918c81330f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a2806f-dd43-4411-b084-2df462819361",
        "cursor": {
          "ref": "3305a2a9-15ed-470a-b881-86fffd372284",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "52615145-505e-495e-8b78-02a66846bbcb"
        },
        "item": {
          "id": "c4a2806f-dd43-4411-b084-2df462819361",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "43b369b1-fd71-451a-8c37-cc2bfeabea0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e79a7b5-5dea-4193-ab11-3207e7ce6305",
        "cursor": {
          "ref": "f67664b9-f25e-4363-acb4-460ad666bb2a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "452d0486-4a26-44eb-97d9-c1a2ca1ad459"
        },
        "item": {
          "id": "8e79a7b5-5dea-4193-ab11-3207e7ce6305",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8babf696-c00c-4854-83d7-19ad854c32ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827c337c-3496-4e73-82ca-840a5ff54c23",
        "cursor": {
          "ref": "5aa86e03-3730-445a-9f34-e3fb800c2a23",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "05f9deeb-b545-471a-836f-c063d3f108c2"
        },
        "item": {
          "id": "827c337c-3496-4e73-82ca-840a5ff54c23",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ac97e6bc-df9c-49d2-8de0-b86204b219a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c76c44-1b8d-478e-b313-878e3f6366d6",
        "cursor": {
          "ref": "bd7e7204-59ec-42a4-bc53-45fd0961d962",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b107cf82-fecb-4e06-9a37-8bc56f4539e2"
        },
        "item": {
          "id": "e2c76c44-1b8d-478e-b313-878e3f6366d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "edb95563-a6b1-4362-99e3-1cd6a8316c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17726405-4e84-4e94-96ea-9c3b5b073e95",
        "cursor": {
          "ref": "8de48fe2-26a6-4205-9097-71be40082d14",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "78f932c8-7cc3-486c-8b0c-6d1bc89916eb"
        },
        "item": {
          "id": "17726405-4e84-4e94-96ea-9c3b5b073e95",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e962cb9c-b25e-4640-8a46-7b6103eb9605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e4c5de-97c1-4356-8014-45ccb199fc2a",
        "cursor": {
          "ref": "f84ffc99-2ba7-4537-aa98-fb155086d5c4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1d9bbcb5-6a3c-4b0f-acba-235500966afe"
        },
        "item": {
          "id": "c6e4c5de-97c1-4356-8014-45ccb199fc2a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "74f32856-708d-4a49-9842-c14ed893fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a260b60a-1baa-4648-a8dd-dd417e251200",
        "cursor": {
          "ref": "87ae5d98-f734-40a9-ad24-d2fc02be403f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5321e20c-6d0a-467a-b2b8-c1dea7c03e4b"
        },
        "item": {
          "id": "a260b60a-1baa-4648-a8dd-dd417e251200",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "30e1e5d5-9b3c-4d79-bbd3-7d4b5b331bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0e0b68-8ee8-4560-8631-ecedc151d9f6",
        "cursor": {
          "ref": "4d726e70-9094-45b4-8b42-8b56a4f73abb",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4990e844-2c5a-4cde-8c7a-4a990518617d"
        },
        "item": {
          "id": "7f0e0b68-8ee8-4560-8631-ecedc151d9f6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "238018a6-3e62-4239-b7ba-4e4c17709afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399b9211-5014-4604-9382-6ca80e94e1b1",
        "cursor": {
          "ref": "64b034a2-dd98-4b1e-bb27-210b4e093608",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5021dfeb-d826-463f-8a31-a9856103efca"
        },
        "item": {
          "id": "399b9211-5014-4604-9382-6ca80e94e1b1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f6c6d075-b397-4cb6-924b-fb1ae2366a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0710a5bd-61c3-48fd-b607-c5d4aea5363a",
        "cursor": {
          "ref": "4ebfb0aa-e419-4150-a458-bab80ab3b85e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d4b709b-9abb-479f-a65b-36af3537e2ee"
        },
        "item": {
          "id": "0710a5bd-61c3-48fd-b607-c5d4aea5363a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "17d11556-7741-4005-ba75-1bd8016195f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a3c61b-aba5-4e5e-b144-de2c36995180",
        "cursor": {
          "ref": "9449efa8-edc6-4671-8353-26282f4088bb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6f58b90b-4e2d-49e0-8eee-9c5f2c9c8d2d"
        },
        "item": {
          "id": "37a3c61b-aba5-4e5e-b144-de2c36995180",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b14d488b-100b-4b4d-a4a2-89f307cd5dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519844af-70cb-4213-8a6a-72d760960361",
        "cursor": {
          "ref": "591ff4d2-3335-4abe-bcb1-cbe65b6acc30",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ca382ed7-089a-409a-b6f3-ac666e5cabc4"
        },
        "item": {
          "id": "519844af-70cb-4213-8a6a-72d760960361",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "572a28f8-15e8-4f1a-905f-4bfcf5405b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8beeddc-592f-4824-80cc-4921c9888561",
        "cursor": {
          "ref": "b6d4c380-b9d1-4f90-9e35-6399c7b5f764",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f9c6e6be-e249-4878-ac73-7d190291f939"
        },
        "item": {
          "id": "e8beeddc-592f-4824-80cc-4921c9888561",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "73153c68-246a-4e1f-8e6f-8d3466f1f53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cea2a4-e9b3-4f51-ad8a-06ab99aa5bd5",
        "cursor": {
          "ref": "9f4001d8-4908-432e-9dd4-92f6d89b68e2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b35015ed-cd4c-4306-bff5-fcebbed6b5fc"
        },
        "item": {
          "id": "c8cea2a4-e9b3-4f51-ad8a-06ab99aa5bd5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cab91e71-a3a6-4ec5-bab1-b1fda9209cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30623be8-a786-4052-bb8c-46be84c10e95",
        "cursor": {
          "ref": "3c957e7a-d2f5-4837-a6b8-ad748a54aa39",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e26204cd-968a-4fcc-8c6a-92ad5eb8d276"
        },
        "item": {
          "id": "30623be8-a786-4052-bb8c-46be84c10e95",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9ae5b0d2-10ac-42a4-bed0-66a9b4dedc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ab18b2-940d-4383-b9df-bcacc00a3e88",
        "cursor": {
          "ref": "24a96251-904c-4ca3-a796-186ed9391711",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e2c73576-fbe3-4753-a704-31693f00f7b8"
        },
        "item": {
          "id": "a4ab18b2-940d-4383-b9df-bcacc00a3e88",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b6d03856-8a78-4697-b18e-dffd3264f3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c9420-7d8b-43fd-94af-74e748f58552",
        "cursor": {
          "ref": "94b26d12-6e0e-4f44-9b9d-aad677746f31",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "68516c06-769b-4715-ac33-01e3d0f33786"
        },
        "item": {
          "id": "741c9420-7d8b-43fd-94af-74e748f58552",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c30c6e0-d8a2-47ed-b5d9-368fe1f8f458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a393aa6-6b56-47c2-b31b-8c379b084ddb",
        "cursor": {
          "ref": "cafb1ab1-8aad-47b1-a73d-b597908cacce",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "258c73cc-e986-45d4-9e5b-416b41a4b661"
        },
        "item": {
          "id": "5a393aa6-6b56-47c2-b31b-8c379b084ddb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b35e8e05-d900-42fe-86d8-a7e5b6623960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb70ccdd-7fb3-4ca9-b532-2f48fa912241",
        "cursor": {
          "ref": "8d602eb2-6a9e-430b-8eda-33e2c6a365e2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "60dcb0da-5cf9-413c-a763-cd4cb5014340"
        },
        "item": {
          "id": "fb70ccdd-7fb3-4ca9-b532-2f48fa912241",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "79e3e2c1-95ba-47ca-bc10-28027c206920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6973ad9-be7c-4dc5-b7e0-5967e8bf74c2",
        "cursor": {
          "ref": "7891c498-58e6-4d9a-9352-6b9cf4fadd9f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d50bdf16-2b52-43a8-8b69-7d96d040114c"
        },
        "item": {
          "id": "f6973ad9-be7c-4dc5-b7e0-5967e8bf74c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2af00b73-23a1-4a53-81d9-b1cf4969c0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a64d66-857c-4d57-a4cf-ad4068ce648c",
        "cursor": {
          "ref": "3ab0b348-4dee-48f0-becb-11bad7ab5884",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "714449c9-7129-4389-b8ba-90279b271aae"
        },
        "item": {
          "id": "00a64d66-857c-4d57-a4cf-ad4068ce648c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1e0d750c-c8dd-4b98-9e3a-e4b94ce8d2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9608b69-db76-4850-9790-67b8b6f0f754",
        "cursor": {
          "ref": "4839ecfc-9eeb-4f2d-ad6e-44652f2d4f6a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6bc811c9-04bb-4779-8397-44b427ad7027"
        },
        "item": {
          "id": "d9608b69-db76-4850-9790-67b8b6f0f754",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e235de84-7c49-4598-ba34-b0298d688735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ced8a53-00e6-4470-a6dc-e3b9892997b3",
        "cursor": {
          "ref": "3fe81155-65c4-4c04-9da0-b3b373adb0f6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "90fc6e6d-2994-4d45-b0ec-8a13b0fc5436"
        },
        "item": {
          "id": "7ced8a53-00e6-4470-a6dc-e3b9892997b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c3abe5dd-fd85-4074-a765-fd8de6509110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db643c79-9504-4155-a425-ccae4a65d0be",
        "cursor": {
          "ref": "b1723a3b-9f8c-496f-846c-d7e9f8df2353",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4b90699d-a749-4b6d-8360-9ae9efa5f235"
        },
        "item": {
          "id": "db643c79-9504-4155-a425-ccae4a65d0be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6ae81990-19ee-49d4-8e3a-a64cbf6ae318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cb04ec-72ee-4501-bcd6-b7bb5ac8d31a",
        "cursor": {
          "ref": "51ab8fa1-315c-40ad-af91-597959b9b08c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9018dbf4-39b5-4543-b402-0c5f1463ac00"
        },
        "item": {
          "id": "53cb04ec-72ee-4501-bcd6-b7bb5ac8d31a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "771669cc-2979-4259-b33c-01ceebf7dc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce98da15-c3ec-4bff-8fb2-a941562528b0",
        "cursor": {
          "ref": "3d04e2f0-febb-43fb-9a5d-742e1baff92e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b3a11ed5-4e7c-4ed2-aebd-67a78272a173"
        },
        "item": {
          "id": "ce98da15-c3ec-4bff-8fb2-a941562528b0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "abfc08b2-baee-403b-805b-b70756aaed14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd6526-43a9-46fd-9788-ce4c87a02b30",
        "cursor": {
          "ref": "2538335e-8876-4341-a01c-9ff06722ceb1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9ce97c64-4b56-4aec-9bdf-7719f6929b4b"
        },
        "item": {
          "id": "acbd6526-43a9-46fd-9788-ce4c87a02b30",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "adc99384-a887-4fa7-8fb5-299d26dc608d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4347a638-4df4-475f-8f33-e03bd97751a9",
        "cursor": {
          "ref": "0272218a-ab27-466d-b221-eb1c0f22eb31",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4eee0765-af56-45a3-9174-0051d42e222c"
        },
        "item": {
          "id": "4347a638-4df4-475f-8f33-e03bd97751a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4fd0477a-5096-401a-81cf-08200457c583",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17216169-71de-410f-92ad-d9ae23a69e49",
        "cursor": {
          "ref": "7c56c194-939f-47f5-a5de-d13b75f62cb4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ddf61769-fad3-4ed4-86d7-ba30c6477d4a"
        },
        "item": {
          "id": "17216169-71de-410f-92ad-d9ae23a69e49",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "64722ba9-d4af-4ad5-b1ce-68f3d5fa317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4fd00f66-1237-40d3-9208-10a6634b2363",
        "cursor": {
          "ref": "de611dc0-e600-4a62-82fe-abb29588f8da",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0c68b8a2-880a-416b-a65b-f670ba10545d"
        },
        "item": {
          "id": "4fd00f66-1237-40d3-9208-10a6634b2363",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c2e2221e-44d9-43ea-812b-9fa51c86c029",
          "status": "Created",
          "code": 201,
          "responseTime": 9235,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3189c8-9614-4e78-a2c2-8665bbb24849",
        "cursor": {
          "ref": "c145e027-6341-44a7-98a9-7eb1cc479dfa",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ba411cdf-8c49-4b00-ae5c-0fbd45d6cfbd"
        },
        "item": {
          "id": "ca3189c8-9614-4e78-a2c2-8665bbb24849",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f1bbad49-676e-4680-9b34-f4d43d986a89",
          "status": "Created",
          "code": 201,
          "responseTime": 9189,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09c8831-10ce-4c3a-9e4c-3cad3f7885e2",
        "cursor": {
          "ref": "866caa0e-0d31-42e9-a41b-2051df2fc3c4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e5c4396e-e57a-46a9-b0bc-a1939b9263d8"
        },
        "item": {
          "id": "c09c8831-10ce-4c3a-9e4c-3cad3f7885e2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0ca690b5-2c0c-495c-98a1-85067ab22bea",
          "status": "Created",
          "code": 201,
          "responseTime": 9336,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2166eebd-5972-4e80-ad39-70a6eae61c11",
        "cursor": {
          "ref": "d83c1f0f-7d3d-4972-a063-16441987c3a6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "67954758-2046-4312-8170-0b0b55a70420"
        },
        "item": {
          "id": "2166eebd-5972-4e80-ad39-70a6eae61c11",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74f1ffcb-24b8-41ce-9aaf-9f04c98ae98b",
          "status": "Created",
          "code": 201,
          "responseTime": 8843,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae0eda7-ba42-49b1-b2bc-3aad3cbf3e82",
        "cursor": {
          "ref": "fe91447d-afd2-41c5-9bbb-74f91ef81108",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "da21a7ea-08c4-4360-9303-412ba62e56e8"
        },
        "item": {
          "id": "7ae0eda7-ba42-49b1-b2bc-3aad3cbf3e82",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f3af6434-5c4f-4ff8-b83d-d78b456d017e",
          "status": "Created",
          "code": 201,
          "responseTime": 9299,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-03T00:39:45Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-03T00:39:45Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "20b11948-a21f-41ae-b73e-f1ad38470ca4",
        "cursor": {
          "ref": "06d60c85-7d54-452e-b327-729d9b4175bf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "986ce065-0fd4-44ba-918d-b60046c14120"
        },
        "item": {
          "id": "20b11948-a21f-41ae-b73e-f1ad38470ca4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c5f490d2-f7b5-4510-bd39-0e77b2983cd1",
          "status": "Created",
          "code": 201,
          "responseTime": 8958,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a97332e-0430-4bb4-97c6-5444447c2f18",
        "cursor": {
          "ref": "3f1727de-4536-4179-a1ff-89afac7ed9a2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8993a85d-ef4b-4386-9c5e-d353e60e9383"
        },
        "item": {
          "id": "3a97332e-0430-4bb4-97c6-5444447c2f18",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ad255473-9cbf-4dd9-bcc9-2bf1461eaf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292f2377-bbd7-4f01-b94d-5b7dd69e6c96",
        "cursor": {
          "ref": "4d9d9b67-a99f-45f3-ba31-51914bee43f1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a6dd064f-f60c-4ab8-8ae5-d2dae563c68c"
        },
        "item": {
          "id": "292f2377-bbd7-4f01-b94d-5b7dd69e6c96",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83b32fdb-d710-4526-b05d-31041cd54518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14710a8e-3893-4e5c-bc44-bde8a0626571",
        "cursor": {
          "ref": "359658d3-d18a-45bf-8dc9-fbc229e15db1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37de4fef-8570-4dbd-98b1-3446f03639bb"
        },
        "item": {
          "id": "14710a8e-3893-4e5c-bc44-bde8a0626571",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "69db433e-2029-4e5b-a7b7-69b7c7f47b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf3c5ed-17db-416c-814e-c73b2d00df11",
        "cursor": {
          "ref": "95c9ca98-a3f9-4f43-b7d9-55f094d94b19",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ecc8afe-2687-4e50-9663-c1a5bc1591e6"
        },
        "item": {
          "id": "ccf3c5ed-17db-416c-814e-c73b2d00df11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "58abef41-f33b-43a4-8384-6cdf203234ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba666604-93a8-4b18-845d-3445a501a236",
        "cursor": {
          "ref": "d70eb437-2867-4e9f-8f0b-80faa46380d6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7588357f-28ae-4fcb-b30c-ec8491869005"
        },
        "item": {
          "id": "ba666604-93a8-4b18-845d-3445a501a236",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f0fc2fce-ae2b-490c-b148-58c13173524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c31f8f-234f-4421-b419-abc481155d52",
        "cursor": {
          "ref": "92c330c5-d7af-4cd3-b9d3-6cdbcdc6593e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "17a6fe20-b396-4db6-8743-bdc87a163f66"
        },
        "item": {
          "id": "52c31f8f-234f-4421-b419-abc481155d52",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3157ebec-6e9a-4e76-9a83-195b451c0110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ec4833-f567-4d2b-99db-7e9f8a2b5405",
        "cursor": {
          "ref": "da4b1c8b-2b23-4f66-8aa7-01e19ed0b6f7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e953e0e0-41f1-4029-9ca6-cf9bddf1c00b"
        },
        "item": {
          "id": "f8ec4833-f567-4d2b-99db-7e9f8a2b5405",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f9184773-071e-4212-b0da-5e47e0150bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a970ef-5ba3-4ac9-ba6d-5efb0b360466",
        "cursor": {
          "ref": "8bdf0367-f822-440f-bed2-ed4671e2d69d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "53383900-f4bf-40c2-9c5e-b0753f90df3c"
        },
        "item": {
          "id": "a0a970ef-5ba3-4ac9-ba6d-5efb0b360466",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "71658724-2803-4596-88c1-bbdf512efcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd10986-eda6-49b2-85d7-31fc37615cdb",
        "cursor": {
          "ref": "b8f1a28b-839e-4998-8003-92cf0f8388db",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3e8a2a09-bced-48be-83b3-585878874527"
        },
        "item": {
          "id": "ffd10986-eda6-49b2-85d7-31fc37615cdb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e82ca2fc-9b02-41b7-a78c-23690f42ac31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa894304-98d8-43d3-a8d3-df4e18e89082",
        "cursor": {
          "ref": "6de61043-808e-4a72-a506-18a91b44b69e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8f877da8-d833-4e75-959e-f595aedb3f19"
        },
        "item": {
          "id": "aa894304-98d8-43d3-a8d3-df4e18e89082",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e135135d-f32d-448e-a4bd-9b4f64719924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecd0af4-b0eb-4fe8-94c4-267a1b627289",
        "cursor": {
          "ref": "f498a849-0ce7-4425-bdd8-e6f466a94060",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "33fbe8cc-29c7-43b3-8af3-49f40f6707d2"
        },
        "item": {
          "id": "aecd0af4-b0eb-4fe8-94c4-267a1b627289",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e8da3e60-9819-48b6-b027-da490a297656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d28b57-272b-4162-a06a-66e0c3f8067b",
        "cursor": {
          "ref": "c740db23-99ca-4057-8611-309521e0a6af",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2cf88354-de22-4911-b1b3-8f403675bb9a"
        },
        "item": {
          "id": "c0d28b57-272b-4162-a06a-66e0c3f8067b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "09a4c868-2a73-4fb4-8a54-a48b3d308cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd70be3-57d8-4eef-9fb6-33cc75dc3481",
        "cursor": {
          "ref": "d23e7a9f-4976-4be1-9874-ec57bc5e72ae",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f45c22f5-d70d-49b9-830e-432faa60d000"
        },
        "item": {
          "id": "4bd70be3-57d8-4eef-9fb6-33cc75dc3481",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8887e926-638f-42ae-aedf-c94052d50fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5822326c-4908-4094-905c-7e903760080b",
        "cursor": {
          "ref": "4c7aab12-07d5-4e96-863f-3c70d965d6ff",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6a7a07b6-2425-4cad-8070-e960884de00f"
        },
        "item": {
          "id": "5822326c-4908-4094-905c-7e903760080b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4e742275-b22b-4c96-8b23-e6020d830d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c0bac3-bf63-47f0-bb15-4db1faefc498",
        "cursor": {
          "ref": "53ee3d48-c549-411d-adbb-912019bbcda4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41d297fa-d277-4b49-900f-b6051717ba6f"
        },
        "item": {
          "id": "15c0bac3-bf63-47f0-bb15-4db1faefc498",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "219586fa-9788-4fc0-bc67-81865a989d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4074096-25a8-4315-b3fd-f9a80e88f255",
        "cursor": {
          "ref": "c1be36ef-fc91-4f17-81fd-19b7a1e2ed25",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "97750632-f6f0-4ebe-ab2c-16f12a829af7"
        },
        "item": {
          "id": "b4074096-25a8-4315-b3fd-f9a80e88f255",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd98d7d6-8d82-44e4-800b-da0114475d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18a5ed5-e306-428c-a1d6-7a11cff11897",
        "cursor": {
          "ref": "6f465e30-30be-4915-a314-33b4af1e6209",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d2d8ba07-1868-4f72-9d95-1893bf639e24"
        },
        "item": {
          "id": "b18a5ed5-e306-428c-a1d6-7a11cff11897",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cd44ab3f-3215-470f-8e41-e41608058d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4077e07-03c1-4dac-abc4-bb7853a4abd4",
        "cursor": {
          "ref": "73856352-f11a-4ac9-a3fb-67884a2f04c2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a1264bf-278f-4439-acdf-4d0b4e335727"
        },
        "item": {
          "id": "b4077e07-03c1-4dac-abc4-bb7853a4abd4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "648cd8ac-749c-4dbd-8ccc-c874de2ad5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c51a7d-d584-4416-be63-247e52f52a63",
        "cursor": {
          "ref": "715268cf-aedb-4ac2-9b74-4cd7bc6f392d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "217b508d-de90-4eb6-b5c2-3740e7198ffe"
        },
        "item": {
          "id": "b7c51a7d-d584-4416-be63-247e52f52a63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f4a627cd-45dd-4cdf-811a-c2269c3cd20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd7de2c-b943-4dfd-a0b4-5cb031619150",
        "cursor": {
          "ref": "6113e223-d11a-4e46-80f7-a35d0d277b48",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e545e3f3-8a6d-4c69-b67f-c417a6a8e8cb"
        },
        "item": {
          "id": "dcd7de2c-b943-4dfd-a0b4-5cb031619150",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bcf91352-2462-486f-80c2-098bef810cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89ca5dc-50d1-4db7-8305-a650c56beebc",
        "cursor": {
          "ref": "5df269c8-8a12-4aed-8585-227e88cb56b8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "67ba4a2c-6634-49f5-ba81-81fb5a2ae7c3"
        },
        "item": {
          "id": "c89ca5dc-50d1-4db7-8305-a650c56beebc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d32de985-730e-48ae-9dc9-353a163d3165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e80c8d2-1501-4afa-aba1-cd366665ebe8",
        "cursor": {
          "ref": "47971199-deac-4dcc-858e-32884c9dcabc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "abefe712-f4eb-4c0d-afab-d072d7458063"
        },
        "item": {
          "id": "9e80c8d2-1501-4afa-aba1-cd366665ebe8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b6d7659f-fcc8-4cd1-8648-9d80e25c2b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e8d037-c22f-4b9d-9cb5-66d73c44c4f8",
        "cursor": {
          "ref": "cc2a36c9-28e0-45cc-a9ca-32495b6b4ef7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1af87e35-cf7d-40de-9c60-076c958eefb9"
        },
        "item": {
          "id": "65e8d037-c22f-4b9d-9cb5-66d73c44c4f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e5159822-f9c9-453d-9ef9-7480bba9a80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d90572-4b64-4762-a689-5447cfa43dc6",
        "cursor": {
          "ref": "2ac30b6d-b23d-4079-9aba-cc72dd961f89",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ed0e4075-6f76-45fa-ae67-0ffe83e9736a"
        },
        "item": {
          "id": "c7d90572-4b64-4762-a689-5447cfa43dc6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44b95d89-e4a4-4f47-a1d7-a96cc121a5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4ac285-aa12-4867-9dc9-ca7f44bf4223",
        "cursor": {
          "ref": "ccf11675-3f70-41d7-9d23-fd13f909c04c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f14c1734-1e8a-460d-8068-09fa12dba1b6"
        },
        "item": {
          "id": "3c4ac285-aa12-4867-9dc9-ca7f44bf4223",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "badce7bb-b05c-4d85-9051-06459655e4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e4e118-2937-450a-a11d-9b1ad0c4f191",
        "cursor": {
          "ref": "ce8e8e2f-f91f-4f1d-88ce-24a650ce5a22",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "de3d40c7-16df-48aa-b10d-ff2b4053967a"
        },
        "item": {
          "id": "a3e4e118-2937-450a-a11d-9b1ad0c4f191",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cb655b7b-b847-4552-8319-aae7db8bc45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6e079a-e9c1-4051-9b3f-4aeb52e77e23",
        "cursor": {
          "ref": "dfd64e5b-cc47-4850-a82c-fb213021ace7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c324f1b9-4ea1-4f94-8cf9-240ed9898d59"
        },
        "item": {
          "id": "9e6e079a-e9c1-4051-9b3f-4aeb52e77e23",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "abc75157-c6a0-41e5-9a60-bc0270ca3cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ffab94-94aa-4404-861a-64f60e87a46a",
        "cursor": {
          "ref": "9c2985ee-9d2d-4b81-bac9-17221fba323e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c70cb7cd-40a8-4286-9bc3-f646329bb6a2"
        },
        "item": {
          "id": "86ffab94-94aa-4404-861a-64f60e87a46a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "88bfa06a-7391-4260-b051-e543bdc9a34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eecba2-154d-404d-b700-f69da52ebf4e",
        "cursor": {
          "ref": "d64b9481-341e-4a70-90df-e26be694888b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "709f30d9-80a3-4086-bd8f-6b4cfa8d6db6"
        },
        "item": {
          "id": "d0eecba2-154d-404d-b700-f69da52ebf4e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e01ecd78-173b-4231-adf7-cb05c1f8f70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93601884-3e52-4bf2-9c01-204770ad8b98",
        "cursor": {
          "ref": "4d594ecf-ed40-4fa9-bc78-78c017b0c160",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "033bdaa6-a1c3-4c52-84a5-8cb091ca538d"
        },
        "item": {
          "id": "93601884-3e52-4bf2-9c01-204770ad8b98",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "807ecc0f-8bef-445a-80b5-e6e90f76dd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c80990-d7bc-431f-a53e-6e1685fbce03",
        "cursor": {
          "ref": "5b7e243a-2c36-4050-a0df-6e7c1b02eba6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a988408-a463-4e30-bd28-e59bf3fc2b60"
        },
        "item": {
          "id": "62c80990-d7bc-431f-a53e-6e1685fbce03",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c1d80ff4-f0fb-4020-a4a9-78a7ff87796a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d525ca0-f5d3-4a8a-9c52-280bf80b471c",
        "cursor": {
          "ref": "aa3e2bcc-711a-4da1-bd21-af07637699c6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5a05f464-1518-448f-9d65-4d9bcb8b5cf9"
        },
        "item": {
          "id": "2d525ca0-f5d3-4a8a-9c52-280bf80b471c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3d5b8501-c281-43f1-ad55-a4aba422b323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2952310d-29ba-4612-bd54-32806378b629",
        "cursor": {
          "ref": "542e92c8-dc78-4a2e-ab40-4896ee9db3ed",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "91310801-cb40-4a91-b678-fedd6ab26f30"
        },
        "item": {
          "id": "2952310d-29ba-4612-bd54-32806378b629",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ba07dadd-f8e9-4519-b341-ccae89f3f3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c124e-a376-4189-a1f1-0c051a5ea58d",
        "cursor": {
          "ref": "a6719ef9-8da0-4bbf-9b5d-789f1911fbca",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "94803f9b-c368-4e3f-92a5-7bd1c3ed5f37"
        },
        "item": {
          "id": "5b6c124e-a376-4189-a1f1-0c051a5ea58d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b797b67f-0034-4e9d-a9ca-7782ee2a60b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a499da0a-dcf1-491d-a416-da3314b62b33",
        "cursor": {
          "ref": "63f05be8-7cd2-4f1f-9940-0f901df86598",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "589bb519-766d-44a7-a86f-7e67d6cbf1be"
        },
        "item": {
          "id": "a499da0a-dcf1-491d-a416-da3314b62b33",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ade49a7b-2e47-49cc-b249-617654e0bb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ceea89-17b9-42fc-813b-9eb098967845",
        "cursor": {
          "ref": "21fb3425-8529-4e63-95b4-79c75d620c1b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f17a822a-294a-4e65-84d4-186f71d2ac46"
        },
        "item": {
          "id": "57ceea89-17b9-42fc-813b-9eb098967845",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3e02fa05-281f-418e-a770-66561972832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8176ea-2bf1-48b7-b19e-b0d4f26ce723",
        "cursor": {
          "ref": "a69f1ad3-bdd4-4432-afbe-ce340e555eb8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f3826f17-5b38-44f1-bc60-c6a511c35738"
        },
        "item": {
          "id": "dd8176ea-2bf1-48b7-b19e-b0d4f26ce723",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f746f53e-219f-4a06-a468-5d7fef83ded9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60937ff-071b-4659-b608-fe9c49bb985d",
        "cursor": {
          "ref": "8ff2c41a-6ee3-4f15-a757-1eced3054e73",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b2a2fc26-5fa3-4bad-be32-ca21d5867932"
        },
        "item": {
          "id": "f60937ff-071b-4659-b608-fe9c49bb985d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "796d7301-b069-4766-aa23-dd3eebf4e0a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885d5a4a-6227-4d48-ba55-d676176749a5",
        "cursor": {
          "ref": "53d0fc6d-e181-4600-9459-b6ab1501dce6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7a37e8b1-8c12-4d8e-a170-9f41fe72b938"
        },
        "item": {
          "id": "885d5a4a-6227-4d48-ba55-d676176749a5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "feba6182-bc94-4e0e-8101-d37ca7856e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402baaee-b1b1-471c-9290-632aa9567365",
        "cursor": {
          "ref": "5468f5c4-1bbd-4c21-b8aa-a1d2112c5569",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "577774f6-82dc-4ad6-ab2a-c4efc1e2bda6"
        },
        "item": {
          "id": "402baaee-b1b1-471c-9290-632aa9567365",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "81f534c7-d5f6-4303-b917-78acc4920d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14751911-00c3-4172-ab3a-621d5a5e4b8b",
        "cursor": {
          "ref": "8c754289-c5b2-4f28-8a61-f927fbff8cee",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6759de4f-0320-4eaf-a665-87ddf19be24d"
        },
        "item": {
          "id": "14751911-00c3-4172-ab3a-621d5a5e4b8b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fc1b8ffc-e2d5-4e59-9ee4-24ebd37ad0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1787225-188d-4ee2-946c-22489f112fb9",
        "cursor": {
          "ref": "97976b5b-4521-461c-ba19-38ee2a1c9a80",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "54333b0b-60f6-4c18-bc16-c60291ea887e"
        },
        "item": {
          "id": "d1787225-188d-4ee2-946c-22489f112fb9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "351e44a8-3dcb-4c7e-9dff-1c9a6afd94b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6ef428-d84a-4399-955f-eb71b845e9e6",
        "cursor": {
          "ref": "f6f35963-fe7c-4e5e-8410-b0efb9a077b4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "775e7cb8-a350-4f84-84a2-34f3ac4898e9"
        },
        "item": {
          "id": "db6ef428-d84a-4399-955f-eb71b845e9e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "99446b97-bc42-4782-a1c6-67a0ee03e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f90326-1bd0-49f2-88f8-eb98d820f6ab",
        "cursor": {
          "ref": "3fa237e2-d1d0-44f7-84f7-00cd337a3d45",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "292ba5a3-1d20-43a4-968e-2a65ef2260f1"
        },
        "item": {
          "id": "57f90326-1bd0-49f2-88f8-eb98d820f6ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0459ae3d-b5b8-4f72-94cf-bb6e5ee4de10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ab5c27-c4f8-4f9a-90a7-d16a61627cb9",
        "cursor": {
          "ref": "e0f18ab3-2a9c-4e17-9b32-f7203e34204c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7bca0409-8a34-48d8-ab2d-da4728bf0a48"
        },
        "item": {
          "id": "38ab5c27-c4f8-4f9a-90a7-d16a61627cb9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6e29c778-797d-4935-a0ea-acedc3ef0243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313dfa6-2cb6-41cd-b940-7c753966604d",
        "cursor": {
          "ref": "991aac89-43d8-46ab-a0f9-6a8f49753c18",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6b1fe0e0-1a61-4de3-9afd-9873e466be19"
        },
        "item": {
          "id": "4313dfa6-2cb6-41cd-b940-7c753966604d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2ddaaee3-44d5-4678-9dd4-b8e33d3b3b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08de356-63a8-44d2-805b-6f77c1ab3a37",
        "cursor": {
          "ref": "eea16cad-5fdf-4d05-a586-dc90b203821f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "77a48005-d672-4bdc-9237-cd20872b22e4"
        },
        "item": {
          "id": "c08de356-63a8-44d2-805b-6f77c1ab3a37",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d69e90b8-5d38-45c9-a518-f71ca379286e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8a8243-6741-4746-ad02-d38d2c00e354",
        "cursor": {
          "ref": "f462185d-af74-4f36-868c-6707896160c0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd387310-79e3-4f0e-8a4a-688a8d91bc35"
        },
        "item": {
          "id": "fd8a8243-6741-4746-ad02-d38d2c00e354",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "04830449-e54e-40a9-b8bf-74468ce543e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88839f3a-336b-484a-a599-85cee7fbed8e",
        "cursor": {
          "ref": "ebe89471-b8ff-4af9-b833-8a33f7345e61",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "791bbc2b-6aa7-4b17-a356-b78bf8f74ac8"
        },
        "item": {
          "id": "88839f3a-336b-484a-a599-85cee7fbed8e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5e2d5f9a-3fd6-4ab9-8c18-9cfc712e363e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dce758f-9f2c-4ee6-ba2f-4bbce10e7646",
        "cursor": {
          "ref": "90eef22a-56af-413d-8cff-e342e4675b45",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "45f618d2-8d7e-42ad-b45c-3253f1410827"
        },
        "item": {
          "id": "4dce758f-9f2c-4ee6-ba2f-4bbce10e7646",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eb13e68c-fc75-4507-bdc3-4624a844b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a0702e-f13d-4507-982d-9d7aba4066f7",
        "cursor": {
          "ref": "6a663a0e-ab4b-4bde-976b-0d903bdc91c8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "af1a5073-2cd6-4e44-9b9c-4db1daa996ea"
        },
        "item": {
          "id": "65a0702e-f13d-4507-982d-9d7aba4066f7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25e90444-6472-4cad-838f-053bf243d426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032281c2-ee85-47ee-aca6-3b6b1f481d74",
        "cursor": {
          "ref": "59c7253e-f947-431d-af7e-2eaa57304459",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3f61622f-a940-41b1-a049-1766c3fa7cfc"
        },
        "item": {
          "id": "032281c2-ee85-47ee-aca6-3b6b1f481d74",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f4343fef-0ae3-41f9-a070-714e50cb2e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0cc6ff-90ed-40aa-bf42-0c7af6ac87e7",
        "cursor": {
          "ref": "fd383520-c670-4482-b1a1-2ad37c8688d6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b64cf9fa-e085-497d-ac44-eb0b27112237"
        },
        "item": {
          "id": "3f0cc6ff-90ed-40aa-bf42-0c7af6ac87e7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f2a4fb30-2d8f-48f9-bcb8-791866b2ae3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34ffb9d-20fe-4827-8ebb-8c571bd82516",
        "cursor": {
          "ref": "c0b4cdba-33f4-4eba-8147-ec9d4d15b9c5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2513df3c-d351-4f22-a9ad-9954ac64d80e"
        },
        "item": {
          "id": "a34ffb9d-20fe-4827-8ebb-8c571bd82516",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ede27650-b939-445c-bb83-36b6fd490cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe850ae-a514-49e9-9a08-3cebf7683d90",
        "cursor": {
          "ref": "f66fa907-ecd9-4fa3-96a7-2242674a0a04",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4a7025d3-2e95-45af-a275-58009c33dc54"
        },
        "item": {
          "id": "5fe850ae-a514-49e9-9a08-3cebf7683d90",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "433558fe-df66-4388-af2d-5b73a0556ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abd77c2-267a-4bb1-bf0a-2978633fbb03",
        "cursor": {
          "ref": "37d7b536-c6b2-401c-b24c-f8c0fb64e5f7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7e5389b9-a1a2-4bba-9807-1db085f8e4f5"
        },
        "item": {
          "id": "1abd77c2-267a-4bb1-bf0a-2978633fbb03",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "83dc1e3a-e56f-44b7-aadc-01351ba8d9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4bc5ee-8ee2-4160-bf92-60be4b9b30d3",
        "cursor": {
          "ref": "55e2c219-a0b3-41ca-a066-157b75d25893",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58ef3256-d6d5-4a48-979f-af3ae396d8ac"
        },
        "item": {
          "id": "ff4bc5ee-8ee2-4160-bf92-60be4b9b30d3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f7056fca-409d-421b-b598-76eedc680e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f9049-77df-452c-b8c2-c81ecd7b6b72",
        "cursor": {
          "ref": "fa5201e4-5435-48ae-a3da-8a45681ff5f2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9c2ae7bf-62c1-4e3a-870d-07a1bdb36169"
        },
        "item": {
          "id": "476f9049-77df-452c-b8c2-c81ecd7b6b72",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "56a49371-e1af-4a05-9487-838edf4cec9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed52e932-8d45-483e-94b8-e69d187c7088",
        "cursor": {
          "ref": "658e182a-01bd-45f7-b1f6-9b2c56142b15",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5def3fb4-40c9-4dc2-8cc6-6b5c22908210"
        },
        "item": {
          "id": "ed52e932-8d45-483e-94b8-e69d187c7088",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6532d203-6df8-412b-aac3-0372aff8e7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a2ef4c-6041-4ed0-8473-9a5e2108df52",
        "cursor": {
          "ref": "5d299f11-e40f-4e8f-aa03-06712c1b6a58",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ebb519c7-908d-451f-9fb5-83c0a8474cf6"
        },
        "item": {
          "id": "19a2ef4c-6041-4ed0-8473-9a5e2108df52",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "24785b5a-d4fa-4b57-ad13-7bdbc868f1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360cf1a8-e837-447d-b652-d116a2e9fc13",
        "cursor": {
          "ref": "bd421302-fea6-4562-841d-81ee37ed75d6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "59bbe5cd-20db-478d-a990-81fe61949d54"
        },
        "item": {
          "id": "360cf1a8-e837-447d-b652-d116a2e9fc13",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4987bf60-8056-4b1b-83c0-489af9a3c247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694ee855-7121-4d53-ba0a-1573565516b5",
        "cursor": {
          "ref": "6ffd847d-4ff1-417b-86ae-33633c792059",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dbe17a44-244c-41cf-97c7-6b7ae7b1a9cc"
        },
        "item": {
          "id": "694ee855-7121-4d53-ba0a-1573565516b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a7d98da0-e9e4-43cd-a704-2eb119a903ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b390e3f2-552a-4765-80ff-866c5262e669",
        "cursor": {
          "ref": "65276a4e-d225-41b7-971a-d5866093634b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fb774458-b594-4900-8c4d-8315eea89aa3"
        },
        "item": {
          "id": "b390e3f2-552a-4765-80ff-866c5262e669",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09d1c5e8-1989-477e-91c1-bdead7e913ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a516da61-5d78-4c31-928f-4f282a433669",
        "cursor": {
          "ref": "59240b96-9145-4654-bdb5-f28a92181e48",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "db9ce82e-03e2-4495-b2c5-2e488325f483"
        },
        "item": {
          "id": "a516da61-5d78-4c31-928f-4f282a433669",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ae35b4f3-4fa3-4812-801e-d1ffdc64f0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c25e5c-53f1-4cab-821c-108230a1b3f8",
        "cursor": {
          "ref": "b1b5994f-daa9-49df-9c4e-246600b2d2f8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "06fb903e-8053-4f5d-8461-16009ab414a6"
        },
        "item": {
          "id": "f3c25e5c-53f1-4cab-821c-108230a1b3f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "61995c33-617c-407d-96ca-e9867ce551f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e534ad-5d52-4cb1-9bfd-ee0ec93e8c1f",
        "cursor": {
          "ref": "a29d6c50-d885-4f1d-a71f-604a7f130af2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2d668333-0c8e-4a46-b8c7-6b62db13a0ba"
        },
        "item": {
          "id": "b7e534ad-5d52-4cb1-9bfd-ee0ec93e8c1f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f7964b2b-fc5c-4abb-8204-23477ff59d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c18381-a979-4b48-8997-4c7ee5320a62",
        "cursor": {
          "ref": "7525ba7e-6fa2-475b-9e9d-d572ec43a7bf",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "453d46d1-4104-4969-974a-45bac826d0df"
        },
        "item": {
          "id": "e2c18381-a979-4b48-8997-4c7ee5320a62",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fbcae8b8-3028-4748-9bcd-2de389b24162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917e84da-5502-4666-8dc6-65449f2cbb7f",
        "cursor": {
          "ref": "a219622d-b717-4f9e-a96b-418c63630bce",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6a545ba3-7308-4f40-ba3c-dd62497bedac"
        },
        "item": {
          "id": "917e84da-5502-4666-8dc6-65449f2cbb7f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dc8a2eb9-5dee-4c72-b062-3fe21c2d1ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8c5a97-5a61-42c7-9be7-2ba22a618f7f",
        "cursor": {
          "ref": "967311f4-c465-44c3-b5b6-ab4ad0f43159",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3853a60d-7b92-4cb0-ae80-f7eccf61d4b8"
        },
        "item": {
          "id": "fb8c5a97-5a61-42c7-9be7-2ba22a618f7f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "50562015-6ac9-48d8-9d11-5e45a7e79557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e7b2a4-ec1c-4443-b52f-0cbc4df86a2c",
        "cursor": {
          "ref": "cf27f518-1688-4ce0-904d-c0587dea6ef9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b15634f-94d5-4f98-9ff6-ddfa1b6c3bbd"
        },
        "item": {
          "id": "54e7b2a4-ec1c-4443-b52f-0cbc4df86a2c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ecc26e7d-76ad-42fa-af8d-8fcd13efdafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6a39d6-06e6-4b5c-a633-4927be0ac2ec",
        "cursor": {
          "ref": "2c860b40-e282-4660-ad58-325f1b779e74",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1c45e68a-31d1-421f-957d-9ca4c5255f18"
        },
        "item": {
          "id": "cf6a39d6-06e6-4b5c-a633-4927be0ac2ec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f77b67b8-95a7-44a4-b11a-f089809f83d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3732dc57-1a3b-4c55-9f94-fc3aa82a4868",
        "cursor": {
          "ref": "881311c6-3970-4469-b4e7-c81b65329344",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ec9c648c-eafd-495b-84fb-fe5c2d95cc30"
        },
        "item": {
          "id": "3732dc57-1a3b-4c55-9f94-fc3aa82a4868",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "34fb8dd2-87ed-4dc1-b4fd-6195128002ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb60d2f-dd9d-4002-b75c-d5271b4d236a",
        "cursor": {
          "ref": "3064efe4-96ce-4b35-a6da-cebbfede9d48",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cada37bd-e324-47bd-bc36-b9bd58583e1c"
        },
        "item": {
          "id": "4bb60d2f-dd9d-4002-b75c-d5271b4d236a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e34f16ac-3d2f-4c58-bb26-891cf72ea4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c62d88-567a-4066-939d-827b989e3d11",
        "cursor": {
          "ref": "a3cf5628-ba1a-4542-9a39-36d3c579db14",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "96cad1cb-f6a3-4b10-ad40-b1ad2f67384e"
        },
        "item": {
          "id": "52c62d88-567a-4066-939d-827b989e3d11",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "58ea5e0e-2506-4f42-88e9-8df939be1329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9fefb6-bb5d-4798-bd83-b47069f6ac0d",
        "cursor": {
          "ref": "bceb88dd-4df3-4feb-9b83-8f56f15e1a1f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8fd72524-332b-405f-81ee-c9b0640427ee"
        },
        "item": {
          "id": "fe9fefb6-bb5d-4798-bd83-b47069f6ac0d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ca484788-f221-49d0-9bb5-872cd88e434d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af50d5-6822-482c-ac55-cd72d68604b0",
        "cursor": {
          "ref": "b9c0f9d5-6c11-4ef1-8df8-b1c1cefe6ef0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87eb826a-9a25-4cc4-83ad-f87cb80ff7d9"
        },
        "item": {
          "id": "b6af50d5-6822-482c-ac55-cd72d68604b0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f26c7722-3782-445b-a7ed-5c8a82834c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee238e5b-7c7c-4539-87df-49b798174f99",
        "cursor": {
          "ref": "efd92ba8-67a3-4cbc-9e60-314d1c86ab50",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "465bc27d-ab46-4660-8333-f806abd9f8ed"
        },
        "item": {
          "id": "ee238e5b-7c7c-4539-87df-49b798174f99",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "761f22e6-98f6-48ac-8c16-762abf8bcfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dd2b05-8213-46aa-bef9-b9634353f7ab",
        "cursor": {
          "ref": "18893edc-a6c1-4e8a-b6fb-93af3a744b6b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7b2834b0-09a6-46ca-b3e8-56f2b10bef0f"
        },
        "item": {
          "id": "a9dd2b05-8213-46aa-bef9-b9634353f7ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fba3fc8c-02a7-497a-b5f0-7b442dc8d587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9e0bda-27b2-4a13-9fac-15c105403ab4",
        "cursor": {
          "ref": "84891fa4-0238-414c-b6b7-2a2330d03a65",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "59536259-5cb7-40c2-88b0-94f8fbc9986a"
        },
        "item": {
          "id": "ff9e0bda-27b2-4a13-9fac-15c105403ab4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "018a94d0-93c9-4b10-92f8-1ed72addc21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf00b9d9-5c4c-42ec-a9a7-478e7914b5ca",
        "cursor": {
          "ref": "e3525d25-3a78-414d-b285-3ce034e01334",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "356c4ca8-b5f0-403d-8f0c-620158410b92"
        },
        "item": {
          "id": "bf00b9d9-5c4c-42ec-a9a7-478e7914b5ca",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b202bbc3-d678-457e-80a4-f6bf9b336c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd0e4b-a7a7-4f51-9ff6-85e8f6c8bce2",
        "cursor": {
          "ref": "91c414ad-b1f2-43d0-a71c-0f4e21c7b4de",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b10b5d2-ccd3-4d75-bbb4-6fd0c34b2a94"
        },
        "item": {
          "id": "e2bd0e4b-a7a7-4f51-9ff6-85e8f6c8bce2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "93acbf97-da41-444b-a004-7cc13b6e1d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26fbde-2f30-491a-9eef-1455a449bae3",
        "cursor": {
          "ref": "aef50b37-9c57-4418-841f-4f61d7728aa7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "297ea0fa-ae56-46b3-899d-c01928d9c52d"
        },
        "item": {
          "id": "3a26fbde-2f30-491a-9eef-1455a449bae3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f472b432-6453-4a12-84c0-9032775badaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcfa44f-a83d-46ba-8bbb-004ccc721598",
        "cursor": {
          "ref": "50cfc0f5-f778-457d-9ca6-f8b999590151",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e151d0ed-0c67-4cd7-9abb-d1161754595a"
        },
        "item": {
          "id": "cdcfa44f-a83d-46ba-8bbb-004ccc721598",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ac69d4c-1cc0-4ffc-939b-1cf717bb26ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b61e1c9-5b84-405e-905a-4dc31931aae0",
        "cursor": {
          "ref": "3096ec61-bfbd-4356-8b35-9d0536abf003",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d0667920-49a4-49b2-96c0-40cf1c8c2ae6"
        },
        "item": {
          "id": "9b61e1c9-5b84-405e-905a-4dc31931aae0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c1bfc441-c70f-4e5c-910d-3430732211b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa23f95-efc0-49ac-b56c-cba11765d4df",
        "cursor": {
          "ref": "e9e389d2-0adc-4a9b-b1f2-e2b24ef1ad02",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1b90f10f-7a68-40b8-8504-766a5e569bd0"
        },
        "item": {
          "id": "cfa23f95-efc0-49ac-b56c-cba11765d4df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2e4182ff-707a-4505-a6ba-ef424ce8bdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e9d689-25a6-457d-bd40-512976a93c22",
        "cursor": {
          "ref": "20b90181-8179-4205-a22d-7ccb8f17b3ae",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cab49b1f-6a6b-4bae-8faa-7862c7161eeb"
        },
        "item": {
          "id": "32e9d689-25a6-457d-bd40-512976a93c22",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3d8da65d-171a-4129-9887-8aee3296032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2113aa66-701b-4700-8f43-c1f64e570364",
        "cursor": {
          "ref": "dcb96fac-2da8-4494-8b9a-07952616ed68",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12c912b3-7c61-4f2a-b5e5-13ef0f58048e"
        },
        "item": {
          "id": "2113aa66-701b-4700-8f43-c1f64e570364",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "757c2206-9cd9-49c6-819a-947c3f2e7d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64dae42-efe7-449f-85f0-077f1fe64863",
        "cursor": {
          "ref": "b1909800-2b4d-4a11-8d92-967a02c31ab9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2f5d3bb9-0151-4c35-88ee-dff38c66c897"
        },
        "item": {
          "id": "e64dae42-efe7-449f-85f0-077f1fe64863",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d2ade6b3-dafc-489b-925d-9b7e63ea99d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9610cd7-4f57-484f-9145-c7991db00e07",
        "cursor": {
          "ref": "b900d90e-dad6-4701-8d07-051b59f8d048",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a6670ea2-a167-41ea-868f-066a6afbbdbb"
        },
        "item": {
          "id": "e9610cd7-4f57-484f-9145-c7991db00e07",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "742df9a8-f105-46e3-9983-bd796dc100a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69cf758-e03b-468a-a48d-404b9faf01ef",
        "cursor": {
          "ref": "b47493e3-3daa-48a6-acfb-cb25828f55ba",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "14e0be4b-7e2e-45fe-8377-237d0f9d0237"
        },
        "item": {
          "id": "b69cf758-e03b-468a-a48d-404b9faf01ef",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2b0f737a-95e1-4996-af48-96eb0fd856fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dcf1ce-c6e2-4dee-827e-54bec4320c78",
        "cursor": {
          "ref": "f5a7d531-ff4a-4af6-a599-3cf915120030",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c925cdeb-460e-4c36-891c-0e92a4460a4e"
        },
        "item": {
          "id": "e5dcf1ce-c6e2-4dee-827e-54bec4320c78",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7f5a3174-575c-4123-a9b4-7a44c660ecec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c92635e-cf18-4422-b02f-e505988dbb96",
        "cursor": {
          "ref": "525e3db0-d2b2-4a3d-a3a0-090bcfc9b57b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "789d699d-2059-40fe-a431-9e38d13963e2"
        },
        "item": {
          "id": "4c92635e-cf18-4422-b02f-e505988dbb96",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "61b30052-229b-4e28-9872-8dd3dc1c80d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c95992-1a6c-4703-be0b-e8a323508d9e",
        "cursor": {
          "ref": "63f5ab7c-7094-4d61-b92a-174a4419e3d4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "001ba6c0-8658-4f55-962d-d3fe615e7ad7"
        },
        "item": {
          "id": "b4c95992-1a6c-4703-be0b-e8a323508d9e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1ab2eb90-ebd3-4e5a-bc4c-e7802ddba7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20e4662-31d1-4560-8de0-ad4f1f03dcf2",
        "cursor": {
          "ref": "54ff5577-6f4a-41a7-928f-9ed4582dd037",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5ae6a683-bf34-4a53-baf3-a37fb32b7b3b"
        },
        "item": {
          "id": "c20e4662-31d1-4560-8de0-ad4f1f03dcf2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d3c65e89-3e82-4279-9d8c-bde022af2239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab1bf3e-323c-43e4-852c-6de7bfe1df7f",
        "cursor": {
          "ref": "303c01d7-5d52-4e06-9f0f-7455edb45cb4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9cb4578f-a7b5-4ac0-892f-0f72bfe8095f"
        },
        "item": {
          "id": "dab1bf3e-323c-43e4-852c-6de7bfe1df7f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f5460527-7d0a-4cc0-ada6-8fbf8d10d1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eb8c98-3f59-4ca7-ad30-e6f01ef3f1ad",
        "cursor": {
          "ref": "c5624289-cb04-4c05-9ce7-1a7f08f03b78",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3c613aa9-27b5-42ee-83c2-48facf49cea6"
        },
        "item": {
          "id": "d3eb8c98-3f59-4ca7-ad30-e6f01ef3f1ad",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "837657af-2d54-4489-b879-065e890c42cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03953109-ffff-4810-bbb7-42172eadd977",
        "cursor": {
          "ref": "2213f1d7-43df-48ed-9777-0e51757f0d61",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da6f3edc-79a0-404c-8748-50f7d6b0198b"
        },
        "item": {
          "id": "03953109-ffff-4810-bbb7-42172eadd977",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "53aa3054-9b03-4b9c-9fd6-48f8d1102c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af325a85-ec91-4f54-b78d-f50d647c6f35",
        "cursor": {
          "ref": "c7de7e05-4560-46de-bdc9-8ba7b7fd0d2c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2f50c489-4d28-4c3b-85ba-4b83e0c88333"
        },
        "item": {
          "id": "af325a85-ec91-4f54-b78d-f50d647c6f35",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ba007899-04e2-4f3d-8207-30fdf7386ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851ddb96-2a1f-40c0-a626-00d649c38f23",
        "cursor": {
          "ref": "173c5d9b-fb10-4ab5-b269-420b127a2041",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d56aa295-ae81-4390-88c9-67c6fa824621"
        },
        "item": {
          "id": "851ddb96-2a1f-40c0-a626-00d649c38f23",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5730d803-6444-48fa-a987-8dc3d2d2a5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64202502-b336-43d5-aee3-2cc8f4c00dfb",
        "cursor": {
          "ref": "ab8e9df6-3c29-469c-ad5d-62c21dab139d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf270c12-e344-4343-89c4-813d3164906e"
        },
        "item": {
          "id": "64202502-b336-43d5-aee3-2cc8f4c00dfb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a0f40c38-38fb-4e8f-9a1f-293aebe56903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dd3abf-2eb1-4d13-b66d-c65572d95103",
        "cursor": {
          "ref": "d40bf1aa-4108-459e-9fc3-add27b20e5ea",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ff62fb63-4ea9-4404-aef5-66a7ae945533"
        },
        "item": {
          "id": "11dd3abf-2eb1-4d13-b66d-c65572d95103",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4b3d4767-4177-4777-b1f2-b8cc0732fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754c8e94-4274-4a34-a24a-78020986df6d",
        "cursor": {
          "ref": "1dba96c0-f02b-414c-bebd-44b010187a3b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "59f6655b-eb13-4081-b442-bf857bbac979"
        },
        "item": {
          "id": "754c8e94-4274-4a34-a24a-78020986df6d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "115b24ff-fa09-4d7e-90b5-65549506f6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a377c3-9ee0-4d52-92c9-3a7b48061399",
        "cursor": {
          "ref": "bff52aac-5591-46fb-86ce-dd3e96fe7c43",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ce8ba2eb-4210-4bfc-bc4d-64ec12e1487b"
        },
        "item": {
          "id": "88a377c3-9ee0-4d52-92c9-3a7b48061399",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ade3275e-081e-4eac-b57e-d78cef6ff9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f83df7e-37f0-4c7e-982c-f232e745779a",
        "cursor": {
          "ref": "8ab20baf-3709-49de-9d66-a4913980461f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c310d2f5-297d-45f6-bc5f-2b5078c6c10b"
        },
        "item": {
          "id": "1f83df7e-37f0-4c7e-982c-f232e745779a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "35857174-b1d4-40a2-a7b8-abfa2e49ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad821115-773e-4859-8171-7c1d1f73ad65",
        "cursor": {
          "ref": "b3302fc5-b87f-477b-9fbb-116d764ba009",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "654d5500-811a-44ff-b819-34aa435a4089"
        },
        "item": {
          "id": "ad821115-773e-4859-8171-7c1d1f73ad65",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d75fd904-d298-4d49-a613-b15119fd2490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935dd5e3-27f9-4d6a-9743-2d29abe42e29",
        "cursor": {
          "ref": "2b03c6bb-b47e-45fa-8935-d3f6bd80b879",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "83551b93-f2d1-4026-b4df-c94aa451d40a"
        },
        "item": {
          "id": "935dd5e3-27f9-4d6a-9743-2d29abe42e29",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cea66bc9-3af6-47ef-a05c-4ee31f3413ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ef5b6f-6595-4800-ba22-3e439bd54ca8",
        "cursor": {
          "ref": "fb4438ba-17b0-4374-bba4-714a81c12a8e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "916926cf-4bd8-4c8c-a348-b3d84398b832"
        },
        "item": {
          "id": "84ef5b6f-6595-4800-ba22-3e439bd54ca8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cfb89bce-13cb-4def-8469-83ce75e55a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b517a2-e855-4d8a-828e-b6a2b768022b",
        "cursor": {
          "ref": "4791b727-a2f2-456e-a245-466540c8a52d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d988a02c-aa04-4fdc-8a20-ceaca3713694"
        },
        "item": {
          "id": "18b517a2-e855-4d8a-828e-b6a2b768022b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84dfc1c0-e60c-48a8-a5bf-3a34086a868a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e473d97-efb1-4d64-9760-df56344cf6e5",
        "cursor": {
          "ref": "f946e7f3-bd30-4d74-a131-aa2751c87b5e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "80992eae-c200-4a7b-b96e-05d6f3209c7c"
        },
        "item": {
          "id": "9e473d97-efb1-4d64-9760-df56344cf6e5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6af2478d-6488-452c-afd0-418d6273f18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e4a40d-1017-4b85-9956-2bd557b9a3c9",
        "cursor": {
          "ref": "dc5269df-e2fc-43b1-adcc-c77e0076d961",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "979c3420-a9cf-4e4b-be97-672984bc762a"
        },
        "item": {
          "id": "81e4a40d-1017-4b85-9956-2bd557b9a3c9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fbd80416-e5a2-431d-a335-e05b201fffcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c3ef25-0e5d-47b9-bbb7-5e249d0da492",
        "cursor": {
          "ref": "3aa76eff-cce2-4a4f-81a0-5295d6296445",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "75fe5654-a730-4555-8de7-1ffbf3b1de3a"
        },
        "item": {
          "id": "13c3ef25-0e5d-47b9-bbb7-5e249d0da492",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8cb9b465-a366-4741-bd41-db2ded7c9a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afe82f9-39d0-4923-9ad2-8257a97d7043",
        "cursor": {
          "ref": "fee73be9-b3c4-4b49-9ddf-a85e1ca4d952",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "300f6e83-3b05-4493-b680-e0403c9bb4c9"
        },
        "item": {
          "id": "7afe82f9-39d0-4923-9ad2-8257a97d7043",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7e15adc2-afa9-45f3-9292-2e79f6da1c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25739c90-9d7d-4387-86c6-15a76133fdeb",
        "cursor": {
          "ref": "63c62468-ca17-4995-9700-6aaa938e62f5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f6d25aae-a673-43c1-a028-b3cd5149dd58"
        },
        "item": {
          "id": "25739c90-9d7d-4387-86c6-15a76133fdeb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0fa25b92-d086-4bc5-90fa-249e9797ff77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5444b5-b132-44fb-9794-010513d41b08",
        "cursor": {
          "ref": "0b58636a-7ae0-42a0-8c72-24fea3268365",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f58f6b8a-77b7-4202-b78c-7ac99a713a87"
        },
        "item": {
          "id": "4f5444b5-b132-44fb-9794-010513d41b08",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0c222320-144b-4c07-8893-2221298ce341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b42d72-d929-4127-a03f-9b7947ece056",
        "cursor": {
          "ref": "85a0ba7b-f176-4b62-84ff-f792c2fc57db",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "19150758-9100-4ff0-a8a5-43a0d5f83517"
        },
        "item": {
          "id": "71b42d72-d929-4127-a03f-9b7947ece056",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d9d769fe-5ca7-4f59-b444-2feef908752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3addc8-0330-4a5d-8689-a8f394905f24",
        "cursor": {
          "ref": "3caadfea-b034-4e41-8e6d-48bab3bc89c8",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "20954916-3796-4cf0-847f-61afade311d7"
        },
        "item": {
          "id": "6b3addc8-0330-4a5d-8689-a8f394905f24",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "512100a6-f889-4404-b355-1f689c824cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e65f086-7f39-4742-a3ca-58abe6bfc8f8",
        "cursor": {
          "ref": "6e2db807-ba49-47a6-beb3-609cf0d657ca",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "818c969c-add1-4798-8721-795aa1922a97"
        },
        "item": {
          "id": "6e65f086-7f39-4742-a3ca-58abe6bfc8f8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6a173302-5959-4c3a-a901-69742f396145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036982ed-91f9-40bb-a44e-a69cd2e0e4b0",
        "cursor": {
          "ref": "4e6421cd-e64b-47ed-a60f-8cd2ac7935df",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "015cc9ab-8710-4696-9681-34d3b1d613b6"
        },
        "item": {
          "id": "036982ed-91f9-40bb-a44e-a69cd2e0e4b0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f4397e4d-1853-4508-9e93-b3f33fe52a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18997ac3-3362-4c6d-af1f-be22a28bc4de",
        "cursor": {
          "ref": "5d75f44f-5d96-4f86-ba2a-4e40558c66d1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1fb5689f-09a5-4932-a7ce-38873e678831"
        },
        "item": {
          "id": "18997ac3-3362-4c6d-af1f-be22a28bc4de",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5280bfc0-1f43-44d6-a2e5-8e055d7c65e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861dcd95-356a-4be2-8781-410e3246ea57",
        "cursor": {
          "ref": "af460036-6db3-4c8e-ad07-8372bacad9d9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b63619f5-2b4f-4f6d-84f8-6e37c0c0677f"
        },
        "item": {
          "id": "861dcd95-356a-4be2-8781-410e3246ea57",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fea7b05f-cd81-48f6-9367-c11176594c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd113770-d6f4-499f-8d34-6ee0b39d8794",
        "cursor": {
          "ref": "a28e56ba-5df6-4ac4-a05b-b0253848144d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f31141eb-a07e-4be2-9728-bb66f31a6916"
        },
        "item": {
          "id": "fd113770-d6f4-499f-8d34-6ee0b39d8794",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9ec96bc9-c128-4880-9862-7d8200191086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2794fcae-93c9-47d9-82be-5bd7748cd28f",
        "cursor": {
          "ref": "63fe4dfb-9bc1-4f2c-aebc-e87a0b0df69d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "66c93738-4c8c-4e2a-9604-300abb99ac61"
        },
        "item": {
          "id": "2794fcae-93c9-47d9-82be-5bd7748cd28f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "990effe8-4a03-4abf-8c04-f32181949444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c2c356-cf44-4fba-95c0-329e74c105c8",
        "cursor": {
          "ref": "d41ab520-bd6b-49ca-abd9-a74e51bb82dc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b3ada2b9-3961-480f-94da-35e627ca65af"
        },
        "item": {
          "id": "d7c2c356-cf44-4fba-95c0-329e74c105c8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "af50ac61-bfa4-4784-bcde-adb11fd0436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9644c05d-ed4a-429c-b531-fa6239ceae67",
        "cursor": {
          "ref": "0b8af8e8-5ed7-4311-8bbb-b4c156bbac27",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "31e340eb-54b1-485c-a265-35beff2f7c2d"
        },
        "item": {
          "id": "9644c05d-ed4a-429c-b531-fa6239ceae67",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "52f6c588-afc3-4862-9512-032706ba8ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43016374-8082-4c11-849b-75aa7aa2a161",
        "cursor": {
          "ref": "5b9f6878-6db0-48d0-b264-76c283a2b7de",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f2f6c05-93cc-47b5-8e27-871c5877a2d5"
        },
        "item": {
          "id": "43016374-8082-4c11-849b-75aa7aa2a161",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6603883e-c5e2-44d3-9ba8-b450258fb5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd4698f-223f-4c88-acd9-58a0c8e25063",
        "cursor": {
          "ref": "ef8889da-cea1-43c4-9a0e-5b26d013964a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5c1c01a1-0957-497d-bb9e-fba59fe79182"
        },
        "item": {
          "id": "9cd4698f-223f-4c88-acd9-58a0c8e25063",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aefefe6f-3a76-4842-a2c9-7800ef2f3ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ac9b38-5ba6-47f7-b133-40f19f23ecd1",
        "cursor": {
          "ref": "46855c8e-341c-4b3e-8380-751faa48ba94",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8420d976-5f38-4b3a-907e-056f01273d96"
        },
        "item": {
          "id": "a4ac9b38-5ba6-47f7-b133-40f19f23ecd1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3d059f02-18e5-4924-acac-b03d2d9bafa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad35dc3-b23e-4945-a677-0b31e0451831",
        "cursor": {
          "ref": "71e971b6-db4b-4b5f-a992-90cf2f35a22b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "44df2724-3c43-4b52-9ff9-51b5dd0f2d43"
        },
        "item": {
          "id": "6ad35dc3-b23e-4945-a677-0b31e0451831",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "42671ab1-2efd-4fea-8ee1-0551d8e020ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce30051-0b92-4832-8f72-b1f930edee1f",
        "cursor": {
          "ref": "7f213c2f-daed-477e-8e9e-329c72e73d23",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4ddefc43-592d-4bda-957e-13adbb1ad4ce"
        },
        "item": {
          "id": "0ce30051-0b92-4832-8f72-b1f930edee1f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "528b21cf-f0e5-4bc3-a761-6ce51a6a88ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b90ff94-4f5f-4f06-8a7e-524e94b287a7",
        "cursor": {
          "ref": "b96a5d88-8688-4450-a469-f54ef6a70364",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a8ef63d4-8cb4-47d2-b58e-5648afc2d27c"
        },
        "item": {
          "id": "8b90ff94-4f5f-4f06-8a7e-524e94b287a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c52c895c-100d-4f50-9d80-cb75a5324bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c5029-406c-49cd-a331-5e9a9cae9fd2",
        "cursor": {
          "ref": "64a3e743-6172-4956-976b-5b70e18e9bce",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "049b2697-619d-4ca8-b226-6ac9324e4647"
        },
        "item": {
          "id": "f94c5029-406c-49cd-a331-5e9a9cae9fd2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca1b6140-db2c-4281-82e2-e05a3130c8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361aa9c-cd86-4c9f-a9ca-cb554f2aca2d",
        "cursor": {
          "ref": "85e64c34-9608-4a25-8ba8-b206dc265bec",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "604daf8f-97b5-476e-9c2b-7d607a077d1c"
        },
        "item": {
          "id": "9361aa9c-cd86-4c9f-a9ca-cb554f2aca2d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a456e4ab-d66f-45ae-8fa6-7d58010562a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a99d9e-117f-4f2f-823c-e0d6971ea3ea",
        "cursor": {
          "ref": "692fa4a1-14bf-4105-8d66-9061103d97c6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4a70d735-2499-4ea1-b541-7f7535f7e592"
        },
        "item": {
          "id": "07a99d9e-117f-4f2f-823c-e0d6971ea3ea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4651966d-d303-4a93-a62e-30eab47e6f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2359b5b-66aa-49c6-bea3-000b5cbff2f3",
        "cursor": {
          "ref": "884bdf52-8bc6-4f36-9cf2-5e473468d8c0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20602fbc-50de-4561-b95b-11610efbf809"
        },
        "item": {
          "id": "e2359b5b-66aa-49c6-bea3-000b5cbff2f3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c37bcd6-b365-4d7c-a885-725c349919c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1895dd3d-4df3-4b39-aee5-9ce014a966a3",
        "cursor": {
          "ref": "d2c3cce5-759e-413e-8e13-1e6aa42c0c70",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f5832284-c76a-4b2b-9344-bcad58e4bace"
        },
        "item": {
          "id": "1895dd3d-4df3-4b39-aee5-9ce014a966a3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "068ebe8e-b38c-4f8b-9a83-04d044a74bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42b1e93-342b-4b7a-83a8-dffd5f1e5fd8",
        "cursor": {
          "ref": "27460cfe-f371-41c5-822e-f34890d3b585",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "db988dfb-3e1c-4bde-8aa7-2f313be51a6d"
        },
        "item": {
          "id": "e42b1e93-342b-4b7a-83a8-dffd5f1e5fd8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "896c4c78-c6d6-4c11-88bb-a0c2a135c61c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c580358d-5133-4495-8e73-85106dbe5ed3",
        "cursor": {
          "ref": "43cf02ab-2756-4cf9-9a58-bda6043e0aa4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "486ea087-c244-40c9-9581-3f2c3249953f"
        },
        "item": {
          "id": "c580358d-5133-4495-8e73-85106dbe5ed3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "51758196-3cc8-4a98-99f2-5b6528ef1d84",
          "status": "OK",
          "code": 200,
          "responseTime": 2320,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b62443-dcb4-434d-84a1-dd2c31d8a11d",
        "cursor": {
          "ref": "037e52e1-36bb-4595-9157-0f1c1bd50e45",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3eeaf380-cb70-403a-aeb3-275ddea64567"
        },
        "item": {
          "id": "a5b62443-dcb4-434d-84a1-dd2c31d8a11d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eef5b7d5-34c2-4ec9-8011-7e4962922a7b",
          "status": "OK",
          "code": 200,
          "responseTime": 2981,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4efd039-da01-4437-8b73-55d76f3a4af1",
        "cursor": {
          "ref": "f915a7aa-4303-421c-8266-3b943744f7ac",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a2d847a0-6732-416a-802b-581c440d1d94"
        },
        "item": {
          "id": "b4efd039-da01-4437-8b73-55d76f3a4af1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9b21fe30-3ada-4ef1-b9d3-c2828e216750",
          "status": "OK",
          "code": 200,
          "responseTime": 2416,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093d043-7322-4f12-81e4-6229db12f93c",
        "cursor": {
          "ref": "afc0e761-51d8-47a4-8a43-65642177dcbc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e082c39-b300-4c30-8e7f-12fa5dd6324d"
        },
        "item": {
          "id": "1093d043-7322-4f12-81e4-6229db12f93c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "737eb4fe-67ea-48d9-8fe1-44ad0773e503",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093d043-7322-4f12-81e4-6229db12f93c",
        "cursor": {
          "ref": "afc0e761-51d8-47a4-8a43-65642177dcbc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1e082c39-b300-4c30-8e7f-12fa5dd6324d"
        },
        "item": {
          "id": "1093d043-7322-4f12-81e4-6229db12f93c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "737eb4fe-67ea-48d9-8fe1-44ad0773e503",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e413310e-dd34-471e-80cb-18df6b069b6a",
        "cursor": {
          "ref": "5db9829d-91f5-4f15-b539-3004bfdb5bf6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "399dae37-4436-4ef0-9d55-b3c4b49b6c57"
        },
        "item": {
          "id": "e413310e-dd34-471e-80cb-18df6b069b6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e3612edb-48b7-4342-a611-4d670228357a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4999b8-fa93-419a-a267-1bbcce8338f8",
        "cursor": {
          "ref": "cf1595bb-fb37-4209-b9e8-128d9cb88b14",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "64c7cad4-b5e5-4fe9-ae46-cc238479eb9a"
        },
        "item": {
          "id": "9c4999b8-fa93-419a-a267-1bbcce8338f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "89a065ab-c09d-4be4-bfa9-640d69dca118",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}