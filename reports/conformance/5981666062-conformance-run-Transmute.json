{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "264ce133-1503-4547-a00c-6f95ca666016",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ad32db4c-ab16-49a5-9958-e357f4bebd0c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bb0e1f9-3cb7-4401-9002-6eaa3d06aca7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6766be6d-8a8c-4e42-a23a-afb64eee7570"
                }
              }
            ]
          },
          {
            "id": "edba81de-46fb-4dc9-8d47-bcce35815228",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "361f59a8-5155-439e-8395-e09c9663492b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7c0396ff-c043-465b-b21b-ca6bb5eb3bc0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c1d003c6-7dc1-4402-81b4-0421ab90089e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a888c25-dbef-4c85-91ec-8d57220e9315",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a541ad5-8ebf-4317-99c8-eaad2cede859",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b9004d-402c-44da-aee6-87e193e35060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5be973a-7723-4f55-9ed8-2e70d2d53af0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2758f7bb-f53a-4108-b3a5-7216891bd6d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6eb00d6-2d13-4b62-8b3c-e4545e44802c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a297bd67-116c-430e-886d-fbe3158c9f4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f159bb6b-bdb3-4fab-9227-43f380c5c398"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "066aba9a-26a7-4534-920c-24afd6a5136a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bd12cf87-e4f1-471e-92e1-e06d90020d8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d8dee18-0835-4792-b395-a9179d1eaeeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "993f5ce0-2edf-44c7-b27d-abe07b36d44d"
            }
          }
        ]
      },
      {
        "id": "67a88cf0-f45a-44b9-a6b7-5f39275f166a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fbbc4445-fefe-4c9a-865b-1cebcd4f41c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd31263d-3344-4db3-aa58-89d92d8ebf55",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b13fe51-0d30-4033-b45d-28bfdd62320c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3892dbe8-cda2-4266-bceb-52140eccce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f5571aa-8d16-4a26-bf4e-74b89cfca56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdead31a-862e-4d9d-8104-404a22fbba43",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b05d92-953c-4fa4-a9ff-13c981ff2038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfd35daf-4cb7-4f42-8971-3552e913b8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a2e91-5135-46fa-9a85-ba76f62bbe2c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d874a1-acf0-4431-bab2-0dfaf5a84211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9290566-8729-4c50-9d13-56ec207a91f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "018d342e-4320-4642-82ad-22592feaef6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af94032a-0ec4-4542-a5ca-3c634fdff0f1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f8d8c2-5cd9-4e1f-b04a-97b659d1a49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "283bc518-59e8-4aae-aa95-8fc35636a9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f693a5-1d7f-44c6-a04d-06ea9942b7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2a45e4-26d6-4a55-971c-343cbeb72051"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78737daf-6356-42a9-8ef2-6a39f6a79ae5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b7d0924-5fd2-42e0-9bfc-4dae24ee0c46",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75ae4e43-8cbc-4719-96b9-fbc77b05b97b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ab0532e1-5fe1-43c1-8a4a-75be2fb3d152"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6a984db-868d-4a68-8c21-c0ccf1e58242",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3c8e9090-1165-416b-9c89-2043d22b9d9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9c694d0-fff0-4c22-a1af-35aaa7b22feb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75005fde-805f-4367-821a-8efdf5642eca"
            }
          }
        ]
      },
      {
        "id": "74310d7e-8162-475f-80c0-c576062633f6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "54a89af1-6103-43bf-8311-7df831ed56ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8847a062-bb69-4b0a-ac7e-7481d8897fde",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e796126e-a079-4cd9-b961-beb05ad7ce48",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98263628-d421-4b5e-b793-fb43cad00ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c8ce6a-bde4-4b39-8532-3d5d939aa5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb85e6cb-eab8-4eeb-aefc-639930d8b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4849ecc-af7d-4663-95ff-62dd62b581f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33af6ed8-f257-4a94-abd8-9594b068f823",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced5dc64-9e67-4913-9ab8-a59c0bab5ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a055e91f-6b5e-4209-b377-3d9472a7260b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18628d0-a01f-46c8-a2f8-c83ca974cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ae0e12c-8957-4dd0-b786-85101734452f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73665b86-d276-43ff-9c8c-6dd6f77981e3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65bd604-5127-48f6-bb37-d157cb942f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accefec6-526b-43bc-b8d1-799b37bc8f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97358bb4-a7df-4ed2-93eb-2e365f899150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3b29297-3465-471e-bfd8-36475bcc93ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252f3fa1-5f21-4c11-b7a9-ba1c0e88aba2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bab2a3-cc51-432c-9df4-8779ce97fe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89dd401-1f9e-45ad-815d-ce4eaf764b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0e9998-945e-4925-8f8e-94dbeb4dcf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358d6a95-dfcd-4c2d-9234-a2a26db2e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a17f175-53bc-4547-8546-9258fba55022",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5962c0-918a-4809-bfed-669ef396b12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577c423f-a772-46d6-bc34-4df7e41f3456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fe206f-e92a-4da0-9bf7-7fc1abcaa724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe3f5bb-461f-437d-84d0-53a79e9bcf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02829947-923c-4d7a-a05c-9f31700fe062",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3c111d-ae4a-49ca-9358-0a2faf02c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dd29bd-dc69-48e4-b98d-75a900e693b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb9eb57-f2b8-474c-8339-107b70623746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38eb8540-2523-4460-9ba9-9d229e2becf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f7843e-9c6c-4e49-9d71-0db70c9fc326",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a671d8cb-6aba-46a5-9c2c-870f44148f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5ba835-b748-4b9a-acd5-72526f70f316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424cd8a8-073e-46ef-99ac-fe224d0583fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4bf8450-c6dc-4ed7-9bbe-c4f6fbdfd803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb191a9-6bee-47b4-bdaf-0314c294ef95",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef85cb39-39ad-4d8c-be7e-e8bf2b4b0975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31458265-5df7-46b0-a434-f885ab8d359f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359871ef-6b3d-428c-9779-a76d6cf8a85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e2356be-d92e-473d-a1fe-7b3a235f119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffef8dd-68a4-4561-a067-09e7bb2194d7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a4efce-d2d5-43a7-af34-3cd87ad89fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d1d546-3dd9-4940-b697-9dcf5a63e07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1a81f8-1945-4b4d-9cf8-42e614c95571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d12ef152-1ee2-40c4-a7e1-ec37dc614434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b717fd5-2b29-4efe-8d80-b06accfac8ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2881718-cef1-4739-9500-7bb1e1f488ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e42f2e3-1b50-44d0-a9f5-286b2239f3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcf1e40-a7f5-4611-90a7-3dd0d047afd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c82c9dd-24ef-40e6-9c66-2d3d307da49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67817ee6-158d-4518-a8be-aa38be838cd0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967e9ab7-0310-4b2f-92b6-29cbbed95dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e65fc6-33c0-438f-a5b0-2b38c9904272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5938e6fd-4398-429a-9b6f-c133522e1c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0a74729-d549-4c14-a2a4-795b37d3c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3149c659-0289-420a-8eff-1a7a70aa5702",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e992858-da09-4933-800f-a36db8fc0f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d50fdd9-6308-4c1e-9121-7522ff99e35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1f880e-0aa9-435b-adb4-222349d6fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f01ffae0-def3-49a8-81be-c0324fa6a489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152e04cc-06a8-4073-b46e-9b1b72ad3530",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb90f5e3-509b-4802-b6e7-191b62695bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121e5472-d28d-44f0-af47-ac9713594c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e17ecb0-bdca-4e17-8d5f-548ce4f82282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "660f1173-e6c0-47c8-b0cd-8f97307be7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4907e471-31a8-459b-9bd6-f16ef7a4ae67",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a66d14-c2eb-489d-aae5-9708101314bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6ce23e-5aee-4b1e-936a-2817507b2b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbccf561-e131-495b-9ad6-c9666cf52843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a39896f-c32f-4f25-b96d-b1292fe387d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723726e3-f215-4101-9bfc-8524b5460c8a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b7f452-b073-49ec-bee5-67ea21e2c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07702ad4-daa3-4ac0-a95c-d38a5a825ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ee927c-fce3-4a30-bed8-f3d3b75f1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f831687-232e-4565-8961-b6adb0e259b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c7ffa5-7182-4069-b500-1757c7c054aa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd84ac18-e439-41e1-b212-5c29fa0446c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd64961a-3980-4122-8509-4fe5b224ea32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88386110-0b13-46ca-807d-2552b8b140e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aa3082e-c5e6-40dd-9a3c-b02a895e4306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa26b6e-f80f-4d6c-bce1-3f38a7583de2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9696264f-c9d6-475f-b372-7974eb520120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b243875-8611-4018-a928-47080dd55217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af003f48-431b-4f95-ad2b-baec78808402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01db6236-4f77-4026-ba56-c8f0043f0481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc9d22-ae69-42f7-aefe-1bf99c958102",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b42327-30d1-4e48-a5ba-f0cab624f182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9535388a-ef79-4e88-8feb-0d780f2ba900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c30e28a-9bb2-4c23-8520-d03a1d4a385f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a253acc3-48f2-4ac9-b6dc-ffc5212b6cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad95dbed-eec0-4b72-b1fa-b8fe19d41a68",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea76460-0e28-46fe-970b-b8c5a4c63b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cece5023-f2cc-4b26-9476-626747700f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd05c2e7-6034-425b-a49e-dfbd569f62c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38daca9f-13e9-4cf3-b4a8-2f51dd06ffd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057204f2-60bf-4694-a7d3-b220d469c558",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb341cb-2ffc-4e66-af92-da3c51af4f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d56248-7ac9-4986-8444-a92dc0a91522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b535b5f-a01d-4881-b1f5-5bc435ee2d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "575453c3-cfb7-48a1-8b15-509bd16a3999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6127830c-63c0-46ad-9c20-fc69c214320e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d129bd36-964d-4633-a556-86404e13e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5beeba-962d-48a4-b6de-31d92dc06d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c098671-68df-42c5-916f-07dd9d2391e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2adf006-41e0-4783-86cb-a1d91233502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eea982-1223-45b1-9266-85111aa0cd8f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca76ef45-5ca0-4457-86d7-029210c9fa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82d9aa4-50c7-4dc1-b5a9-dd67ed99bfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04c5a36-e75d-40db-a375-eb98156a7fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f196e1c6-c6ad-4526-a75b-4aa593ddbcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c951df0-9e9f-4969-890c-1ca775d0e534",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f675935c-60ab-482d-b066-b58566f464d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1408eaf8-0a39-4592-aea2-ba766d41e168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115001b4-4729-4e4b-a42c-71e211b7f9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a941261e-9fb0-4400-abdc-aa8938614eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf0b641-9801-467e-ba30-67d53c85d3c2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c0268-6594-4d6a-ad94-f33704cd20ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c279bd-1e52-44e9-aa75-4d447e3740b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e00430-bcca-4eed-867c-9fce1e03ec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc38d1b-006b-48ae-8624-2123c6af789e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69893239-129b-455d-972e-5ede8d8b2913",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093dd667-ac3a-431c-b85d-19ba15864963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2170ce-67cf-41ea-9197-73bb84eb29a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f3a843-3f3f-4810-a3b2-9e54c3987fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2966146-4dc1-4a9e-8683-b42da7db22af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9bee00-18df-4454-b5d7-4011547773ec",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff044e12-8da9-4af6-ab46-c93661bda875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb98fa0c-a4a2-4cc3-9551-0faf0f7a521c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019ef414-a6ce-45e8-8b99-0b19c3695bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8476fc-8c17-4733-8d07-d279b16979b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912dc28f-c65d-4228-97ca-68ebcca43bbf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca400e-b8aa-48a9-9193-cc1599670208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e541d1-f1ca-4aa3-bb8c-8db78223711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7642cb3-f479-4e29-8b76-b70c5c34af3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36df461e-49a7-4f36-a37b-5a4eada0a5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d89598-6d84-4e54-bb29-7dd5fc12ab41",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6d7c8-d076-4de9-9df1-82f55c7ba8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2134468e-ed7e-4913-975c-90c2599d4c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b395c50-d11d-4133-856d-c6e0d6bc10a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd777ad-9338-423a-8f76-9a424edaf147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbb1b51-9541-4c12-b365-12659cd4d5fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983badc3-a37a-4fcb-b59e-6286658b464f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fdadcc-d544-4aef-be8c-4b35a5a6766a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27a48db-197e-4ce1-b3c6-2e1c7bd141d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d86f531-e6c4-4ecf-952d-e8569d8713ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0519591-ab16-4ea2-8986-daf91905e6c5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e65e0c-05c3-4409-81f4-f12d65fc592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae50f3b-0d0a-4da3-b6a1-c6f8814327c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9129f360-f8f5-4458-8861-113429d060ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0724ec26-0116-432c-be99-c05f8b09ed65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec0c90-23e3-4023-9015-8e28219a0b6b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2b923f-617e-4dec-8e2c-c0859b140fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a8fa89-b88a-4b88-b117-a5df9490ee35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcf1f5b-20cd-40de-b0b3-6d313ff06b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe760702-b0dd-4f26-b36c-c57cd45fea83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331bf6bd-30b1-4056-b7a1-80f8d317f59c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc020ac-379b-402d-8315-a80d73eb54cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a7efc5-5e1a-4bc3-ae18-9e09c40d992a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa23c11a-6168-4be2-8a16-bbcc5492e278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de230b34-13d4-4341-bde1-ae9b38d3d2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f81c456-4f24-4378-b58c-4799539da307",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eb9d2a-4444-429d-8d8b-97e4f3ffba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78533d7-b4e8-4ac9-ae42-4b4ea6211c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9322737-a2d1-40b3-a813-59cbd94ac14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e146803-a720-4c59-aa7c-f445ca9a5ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06171498-74d2-42ee-b673-4ab9603ea954",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b5fb6c-b8cf-4490-9715-f096212f2cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135c7312-abef-469f-b15d-14a678ec6643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a37ae-23b7-48ed-aaf0-b277bcc10241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5273ea-171e-4cb5-8bab-ecac7857fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce9fc37-03f7-4f49-ab12-648424ade1f1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbdddc3-37bf-4da2-8da9-536b1a8c5a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589230d3-4747-4327-810a-281cee5462cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb96f57d-cc07-4257-9d21-5f8c7133e342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "107181c3-b2a4-4a12-bdd7-54aa8817ef5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5b834d-df54-438b-af36-bcb5002f07f4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198f6605-9846-47c9-a50f-22466dbeb2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90d3ef93-7107-4825-be48-6ed63400b1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f84c77a-566d-4dd6-b1d1-427a6c8bacbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17b5e005-1255-4f91-9e6e-f0dd6507375c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da96595-53b0-4ec3-8d76-a727db677381",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95feb41e-b0b6-4b92-b975-82bfb64574ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0573cd00-11e2-41d2-bb65-1ce96d24e927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633c7a26-1a6f-407c-90d3-d71b02371897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2482dcb4-b9a1-4c40-83ed-d1036c07ab45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec2c262-6997-48e5-9855-fef25a02bee8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0fa290-69eb-4fd0-aca7-886349a05cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34b4c7d-169c-4a54-8efa-40afa6e1789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fdb9ac-eb3f-4853-aef4-14b5738abe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2b5814-78a0-4b20-b42c-fa8f8d152382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04848640-bb72-4dc0-ba0d-7f610124e033",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcdc650-efde-4069-a3dc-edfc1cbf94e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5921e4ae-be35-44ac-951e-01dece54e467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197d0a4d-9b4a-436c-a4a5-bc9fcf37c5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b54e7438-388d-4d8f-842b-62c27998d8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17eeb8d-52ad-431a-a57f-310931e2288f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6e7a03-a465-4e3a-9fd7-3413fe0cf36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b29a5b-82f2-4c8b-8033-38439c59b8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed35e5-68fe-434e-a63d-67bbbc8130c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8323ebf-135e-47af-804f-8d3fbdc93be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3264c842-4e86-4ef8-aa2c-1dc330c74a44",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f831e37b-31f2-4a6b-9b54-726d91c323ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774f1331-9a0a-4bce-84b6-ae1e63ea8ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1916fcf2-7af4-4d92-bca2-48673e1e2452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81b00000-ece1-47be-a76e-3804b77bf6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49a5338-6cc9-42eb-8ac3-98855ce47278",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4129a17-7bfc-4750-948d-23472257082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a897510-7cd0-4bd1-b769-6c78a03a7c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a30823-06f3-4edd-8d81-6867cb6f6ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "77f225d5-a912-4368-814b-0a5a25339823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab07a6fc-c0f7-4c79-98bd-710f527bd2fb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174f022-a3f4-4f60-9a86-0ea10745b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4216ac89-78aa-43a3-aed3-0f5e68b09297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1958f69a-26ce-4cde-abb0-7aa83cab69e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c77c8273-63bf-410a-a201-d0e8123ffa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2687b23-00df-4827-8b4b-e4e278df8656",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2a542f-4a0c-4c32-bf89-b352a4c59c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabd4733-4fac-4950-bb31-1da8f4b27c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5627ba-913d-4623-b3a8-a9767574d514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e235819-41bf-47f5-89b6-1bc76aae754a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa75436d-666e-4841-83c0-d1de98040638",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a00c60-3d4d-4397-8569-c39ecad331ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c137b44-c53d-4336-b61d-b9a922e79beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac4df85-2069-4013-87cb-7f8ea1ea1b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecdb3cd-e475-43f8-8e10-738405f9d476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80035933-0076-40d0-b127-ba06f0873b57",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfdfefb-59e7-4d1c-a16b-1a437a71c79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c800c0-c6a2-4479-81d5-6b322f7d979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd379ab-3679-4abc-841a-38ba7babaacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7964e66-72be-4bef-a00a-4965b6288d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9972d91b-2a90-4461-841d-6ea47c8958b1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a159c2-eb3c-4dc0-97af-5f35be0b5676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cb8e3a-f9eb-482c-bcca-1d7aada05fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46d8428-9c8d-4f5a-993d-be6a49292544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "643ea568-d0d4-48c6-a21a-64cf531c7835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de0dde5-9d8f-49c0-9eb0-b32fd099c34c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a8c0a-7298-4386-a9d3-640716a8e935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611791f5-42a8-4277-a050-f9196c8bfcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70600b69-965a-4633-876a-4b3aa1b7b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "128d4c32-b678-46c3-b0a9-adf1e678e66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf2ab89-458d-4d59-bdc2-a077a6931ddf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd16644-293c-43cb-b449-be71cd56978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cd4607-6b3d-43ce-bf69-0444924ad2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff94ab54-bc17-4a5a-b537-83bd31171619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "519714ec-eb08-4976-bca9-1ab62c4e4c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f79d75c-b326-4541-afd2-9653f6909d04",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452f2b6e-ee3b-4075-8e0e-27240382577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35c9ac5-badc-40e4-98b4-c241f81c2248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c562d-44cc-478d-b5ed-6a4e6c3a0d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "805024f2-08f9-4846-9bd7-f05fe2982b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edea5cb-154d-4be8-9270-eebf0b6bc60f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fd351a-11bc-48e8-a477-cf1c95694c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff79afde-32d6-47d1-af87-9b7f5c1c3d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a4058a-7f01-402a-a54a-55f54e5d33f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e6fad9-8990-4327-8801-e3846899b3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc9b705-30a1-49d4-97e4-0dd6d4e0406f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d80304-492e-4be3-8fc4-5ef75e95ed24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77962dd2-83c7-482b-8120-cb7f87411f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43be67ca-9fc2-4b56-a718-ef90a8fa0177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c73562-fcbe-44d4-a9fa-68babdb30ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad91093d-9706-4491-af28-4ec48990b1ea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b69a04-f83a-449a-b66a-f3e250a141d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61d5d6a-3c39-491d-b4d6-b8b95840adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5f4665-6c78-4db2-b1c6-c83a79e38610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8d6e73-15c8-4176-b9de-db9335d26a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3be0a4-2d2a-46e9-882b-53abb6aa2c9a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0731e27-1080-43d9-a378-66d20c9ce027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af031cd-490e-40b1-9eef-7ae5adaf6d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967adde7-41af-447b-b999-971d97355df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bedec25e-a62c-4ac2-8b07-c7c407629fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b89852b-3b89-474c-9a69-a156f5d43be7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15dfb40-a6bf-4bee-9e92-0b4af5c9f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cd3547-af00-4b19-b45e-e63f8a775bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128ec1c0-12c9-45e3-8e40-0c5abdde3ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f47fda-8ec9-4bb6-b419-a4d1e64818bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c69005-b778-4c92-965f-d7fa5565a1d8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d361360f-5179-493a-8e17-4239d86dddab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5d1b5a-b93f-436b-9b9d-68168b941e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67dbccf-bb33-4a38-9b65-b60a0275bc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b44b1e0a-ab6d-42bd-beaa-be270e6faccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c45f0b3-cc0a-4c4a-8073-69b0d9a01651",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64f1130-99da-404c-8498-63515c8db3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafc280b-f434-478a-82b0-85bffabe7455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03f19c6-9a1c-46f8-a606-6d80c6bdbaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd319de-b108-4bd9-ac7d-93514e4b8091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e93c47-6cdf-47ff-acd2-837d083a7380",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c98341-d602-45b1-a905-80acd4e9019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4fd64a-2b62-4c3f-917e-b190f1a54530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc88575-afde-45e6-9aea-20f41ba1cd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c33416a-dd35-4788-8419-1ce0fa8481b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e653ad1f-1dd9-454a-8f09-16590ba3e14d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3184eeec-5041-429c-9ca8-dac3bf49b6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64281a82-33aa-4689-bdcd-39157913cbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2a2d11-180c-44c6-b3e7-bbaf1874fadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f72aee54-f3c4-4d41-8622-e286320dd6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1e622a-102d-43a4-ad32-4d1baf64752a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7416944b-b1b8-468e-b49b-859fb7f407c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a34c8e8-941b-4911-84e1-a7ecf064122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90757227-078d-4727-9e0b-80f28b2f93e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d99732ee-e05b-4a2f-9202-255dd5d6d6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8e8322-8b16-4268-8c22-221137a11207",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b08cdc2-9498-4a57-860c-66bfeb7d8e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c885b54-63b6-468f-a1ec-673c5028582f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10882347-6f79-4ef0-98b9-0f82eae389b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ca08a9-1617-4e33-a3e2-f22a13bd1140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329cac59-0c95-4c22-821b-025280870290",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599fcfa7-f595-4edc-8436-eab4c8d67094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abe4166-3643-4be6-9a40-3a95da0dba99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd3db83-233a-4972-95be-7d5eb4e3ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3459571d-2193-48e4-98d6-e7b344ad16b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121e7ac6-6cf2-4a7b-83eb-2dd25cc36ed8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc91863-0022-49d3-8861-a9b090b6e565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e63dd3-92cc-4036-b439-31e3b4c031c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b74f932-0216-4e1d-afa7-8e8997776629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81531565-479b-4d6c-a889-5ceac4e21c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e43c55-c564-41ad-91c5-07c1a96d4ef5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa90cfa4-1166-4564-8ab3-6435d7f7afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9653e50-6ab5-401e-bf5a-be4f18994b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a06921-08c4-4aa9-806a-e89fd6ee8522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb57d100-beb3-44fb-a2af-23ff8b714700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d545d3-644f-4a29-81b6-f549deb87d11",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06419ec-19b5-4248-b952-5626f6c72b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5c1b4e-e87c-45cf-90f4-90fc4deda0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6870f129-90a8-4aea-8d4e-4b23be5ddb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0768aa67-8759-4ef3-abfa-398926c5e337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b73c77-9420-4439-adbc-5a0e9906738b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5cc7a4-932b-4c3a-85d1-56532d8a3268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5ac603-ac3c-4856-b73d-90ff3118a9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1907a39b-53cb-4b42-ab5c-e7cb604ff950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "976945dd-59a7-493d-9149-fc4412fd1649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933bdfd9-d104-411a-b37e-14aa8ee5419e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25529301-9e6a-40b4-a903-235b7a252ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7710958d-a81d-42b5-b1dd-0cd7b65ad90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2692c8-02ad-475c-8277-319f1e75158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "596d3b63-90c6-40da-bf12-d379f8f476b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2376c8-6808-4436-ab55-85c375eaaa8d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb412224-357c-498f-9188-5450c7c6c8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abe4b58-0bda-4610-b172-4d4786948427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6fa84-2d18-4951-8a01-d32ee45d5ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "976b72f6-7974-484e-8115-b564a876eb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a12b12-2cac-48cd-92b8-40544734393d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b26901e-5228-463b-96f6-c774997ba676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78874ab9-7d06-42b4-956c-9a7c874b30d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834332d5-17f2-443d-988e-b41eb3beed48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "464e3ffd-6dd6-4d2d-b713-7070ef6b3370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e16c90-f74f-4983-be57-75570a8679a6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57937316-d5f7-4f0e-aeb6-85623c4d5c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17720d6c-3fb4-4b53-9a38-2e826cf7b6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ccf453-922c-4343-bbd8-ee2ce9e484cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03c013f-64df-4066-ae3d-4e98ef663fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f949db5-3647-4957-9ea1-6404551aab37",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4ba65b-3f96-41a0-b76d-b83e30ba67da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90c9a91-29b4-4e0f-a2c6-4372af603b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9434021d-c3c3-423b-a742-d802051f054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "722680cf-1f91-4393-b643-ca05244d0fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8fcb7d-f178-4996-ae2d-04c4e54a439a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d47108-ed58-4db4-9701-80975de5ea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dd29f5-9ee3-45df-8f03-abc5414a5e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e16d8c5-9fcd-49b6-84f2-18cacd45ab45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0cac92-8144-484e-bc26-c1c37370187b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4703dca-4624-4fcc-9fda-ea1312185c77",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3975dd-63ab-44b9-86f8-d20974afeb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1499a1a0-e526-4321-a22f-e44eed1991fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8454eb72-dedc-4e98-9c12-9923f733b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f07982b-118c-4b0d-96ea-20258be68ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168496c7-7042-4159-b792-a5eb7990a95e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86365ee1-a22d-4653-9a24-1f5d2ffcb414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf8d368-d07d-461a-b4ee-638261c7dbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74afddf-0a03-4598-a120-7bccfd7a3fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8de1de7c-4b92-4d9a-aaa6-b1ac0f2ac136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb9285e-00db-4c05-a9ec-fcc6f2158b50",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a818806-1996-4717-a8f2-171d55da2308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87af690-c261-49cc-ab24-5b13ea50787c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e56abed-891e-4601-90f4-f7016cd158cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ad932c-2d6e-4cd3-a1ff-bbcdace5ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f56a1e-4453-4e86-ba4d-04dbf5c4121e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f1fe60-f1ad-4eb6-b7bf-b0f38f95de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea48e49c-d695-409f-8680-b3b8eaa6215e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f76a72a-42a9-4447-b5c5-a747e5af500d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5283963-70be-45a7-ac1b-d0bf8290d13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a3d241-08fe-4dc9-9e5f-4881dca38ff2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aa77a1-994d-40a4-91f0-ac86de63aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58f7ad9-1119-4f0c-80c6-e368641f6aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a3f19-5303-477a-afa1-7cb3f8f37006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6994a1-3ebe-4ad7-853f-671850bf891f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38334a9f-b36b-4be3-801f-7619a4d1f4fa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5078002f-5671-40ce-a82f-d39b848e3246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1ca9e7-27f6-414d-9c9b-df4e6d5bdf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bec4b6a-78ef-4aa1-955c-84cbca61e308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c63dead-c5b9-4c75-ac69-b1ee497a1f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d6d5a1-3422-46b9-9c87-8a8ac3e0497d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ed6efa-fff1-45d9-8630-91a99b952975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097c5103-e1d8-425c-ab39-7a726b8326c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655214bc-659a-41b1-aff8-ea12dfdf51c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a54a229b-4f97-4b52-84b4-56b9b56746df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb206d6-fe15-421f-91b1-f6af15509bfd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d490e7aa-4999-4dd8-9c98-795a6f597090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e519da84-8565-484b-970b-1fcb2a8043b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4047de-b01a-413d-8ad3-ff511484bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4af920-004f-4c02-8893-7a741970fe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa37544-ec4c-4e7d-80d9-ba8535544d2a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c12fc-edba-425e-b2cc-27fc3bc2bf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee79ce5-c6cb-41b9-9a31-9991e64d0558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b6e41c-92d3-4d0b-9cb9-a04c49248f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3171ff30-f961-406a-8bd5-fee0e50b58a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef2f26e-d30c-445f-a55f-840771295862",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed91834-51e5-47c0-a855-25aacfbeaf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d16654a-116d-453a-bb5e-222edc6814e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7937c64-ae7f-448b-875c-dfe5dd893651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60726fe-82c7-414f-b3c3-2caf18a05f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8c559c-2215-4333-b50b-8824157847c9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b62462-30d9-4b29-8047-2de41e770625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ea6496-5733-4c07-9601-1f390fad10f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076772a4-3c67-4722-b35d-7d592ecafca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0df6699-cff9-4428-872b-55695eee3d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb08c60-2eaa-4dd6-813e-b04c4ff767a5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5a331e-1038-41f2-a756-80fb078586ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7089d261-f670-447f-bad0-94841d6928b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383219e5-6144-4bd7-b0fe-dcc1953809b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71369b24-8674-45d9-bd66-dcba61681d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358b7aab-1c5e-42cf-bdc8-65b10c435f98",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81b06b6-3bca-4978-a022-bd67ab19160a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eaf1c5-ddf3-471f-9adf-b01287c90400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03323a6-a659-4da4-a9e1-d0822cca0baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81d6c0f7-fabf-4a97-a88b-5b7f80b15066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeeda56-ae86-4eed-b917-9e28efad1184",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f85b909-1f29-41e7-b966-015d5a60d506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2feae4a-e3a4-4fc1-8e1a-e4050c15d8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1132f5df-ad2e-4f6d-b1e7-a7e658cee1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0ed309-4145-40cf-9009-7591450f2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa83e8-2c74-4ee9-8f0d-2023179e20b2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6727763-d885-4982-afc2-2772567104e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6745afd3-8c64-40fb-acf5-0cc0e8608be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56af2d80-a708-4e05-ac69-78e827c6f429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcc14d0-d5fc-451e-9bbc-7412d18687ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e63f61-bee7-4907-9b17-7303e7495b60",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564aca72-5f40-41a1-a526-e53bdb24c74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf1eb84-d5d2-4350-b907-f1106a8067cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c649d29-bab3-4d16-adf0-2c27cac19310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df666a8b-58a3-492a-bc56-316d069bb530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4305a086-68ff-4f4c-9294-d89da89c52f4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b1adb0-66e0-4dbf-8082-a4724aacb6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37c95ae-266d-4903-94dc-47db9310f12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd23d7a-141a-4c7f-9161-41e69300adaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aadd934-801a-41b2-9c76-fa1b901bd5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b94c28-6172-49fc-b14a-978632b5e171",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54b5d91-7f55-44e2-954b-4823ba498208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d393461-d03c-45e4-bcf9-7040bc6b039c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a5ecf8-b4ac-4666-90db-cee877cd7b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3dc242-73e0-4f2e-b0d0-9fff88a8fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c46b33-df4b-4872-aaf2-8b2e538181e7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f648919-a72d-44c0-9580-c1f8805531c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fb2171-b07e-44bd-8825-349ed8094c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7ceda2-8874-4b59-9869-6d95cb3534bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1dfc70-4e48-4cf0-8c42-931be82e8c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eb428a-28ac-4361-acec-890e39f0a273",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d054fc04-025e-412f-82df-2ae14a1ff5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "accd7fd1-952e-4509-94ff-27d6f476865d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b01f2e1-feb1-4441-b6cd-5c84d4efb52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62fbf04-ca2f-4ad9-91c4-8821e844f7bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "949c580e-e107-46fd-ba6b-7153790df415",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9491121a-3c52-406d-9bb9-188557f2f33d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb1513-899c-4b14-b9af-a2cdc1c7f6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9b872ef-40ec-4431-aafb-9c5ae43f3421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba898cc-de53-4fc0-99ee-2057af4458e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8113c19b-bdc7-4a99-ac91-a63f742c881f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff7c116a-042f-4d02-9fe9-f0916b7bf495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71ec1a73-301e-4b65-8807-b011d1d3f526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47027809-102b-4eb3-ac37-4bdc1614e4fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d73f0739-c71e-46ba-862e-a329c29a4082"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ec190bc-4d5b-4d23-8364-7d1e16fbc373",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cd267df-0f37-4351-a31f-63e9199d5f8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab98ff5a-2137-40f2-962a-c63a0b609e41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ae5a0cc-e8a0-41d9-bbca-2686119bc9e4"
                }
              }
            ]
          },
          {
            "id": "15d91a38-ea5f-419d-94eb-f111ebfd2c54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83a52aff-cac8-441e-97b4-7d4d27d64078",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "935005df-8f86-4f02-b0de-c94f50b87557",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6d3ef7f-d15c-4e6b-821a-cb8d74692d90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "834175b4-5f1c-4ea6-bff1-ebf701305b48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be0c028a-9bd8-4985-a298-7968a02b0b5e"
                    }
                  }
                ]
              },
              {
                "id": "6044dcca-7f23-4c33-96f8-a739e8578731",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e844553-d7bd-44ff-a66e-8e48f0e4b21f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da7ea2d1-eb0f-4738-ac12-70cb765b01f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037f5f08-bc29-4bc4-80b2-20609888388a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2813fbba-f76c-4b56-b012-91c0de21f54d"
                    }
                  }
                ]
              },
              {
                "id": "0637925d-f705-4b52-aee9-707224ac25ac",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "498d6aff-d623-4a11-b77b-c55cc4129511",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1677542e-d656-46de-b8ef-07a4ca06b008"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67fe63dc-556d-45ad-a913-a09d6b621d58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "892a9923-25f0-4260-a683-ee0a754d5e36"
                    }
                  }
                ]
              },
              {
                "id": "730ef636-75bf-4c54-9a66-b9875d09f635",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ceb6c5-d4cf-4bae-accb-549b33511e2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70fc0b60-393c-446b-87a0-5584ccb62b41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "466324f3-a306-41e9-ba18-f1ab1aa1326f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74a2247e-7dd0-42ed-8c16-369f0f7357eb"
                    }
                  }
                ]
              },
              {
                "id": "d679a34c-be62-4df2-9c18-21a26c6a5c2a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0154fbd-eec5-4bd0-84db-d0babff7db43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02acbb8a-a65e-46a1-8cd4-960106ea022f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cf75b6c-f188-4f35-86c0-0eceb110f81a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "34f2dd50-0882-4726-b522-0c27d52494e3"
                    }
                  }
                ]
              },
              {
                "id": "45488496-3f1b-492f-a58a-ae0c6d1874a2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d540f24-d9b0-4476-81c1-a7c9e17819af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "caaaf257-9a24-407d-9421-61079b5cba59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02ef3a93-fc5e-425a-b15c-18ecf02d0bfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21b9e20c-9a11-45b4-976c-2935f0adabab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "600b88d0-e8f0-47fa-aa39-f94364d73417",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bc26b7a-409c-4023-8354-01ee3db7c1b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d154a697-310b-4675-82e3-f2edbef6dbea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8070982f-83cb-460a-bbeb-ee38913ec78e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21f0f631-c5de-42fb-8c1a-73bc54d91130",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9cf312cf-bff1-4111-be2b-b1e2d7f6ec52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3dc7787-1479-4fa9-a266-2d9e5d102d0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43053dd2-29c8-4025-a823-099107eb01e4"
            }
          }
        ]
      },
      {
        "id": "1dd0813b-d6fb-481e-9418-d0d19abfcbe2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fff7a98b-972b-40d4-a9ad-89987e98f372",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5869f546-e676-4334-9a16-a7f6dbf1db44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7dacd276-8df8-4a80-a0c3-b9f8c2c41e1f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fcc16c-8ac8-4c63-9cde-7500f1c9d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8f51f3-3056-42fd-865b-991c4176bece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb6debe-bbbf-433b-8392-6418672fe36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3394d0c-e9f6-452f-bbeb-3df71ad9050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd84ce8f-7c38-4045-b0b2-df9873a994b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf3da75-1388-43b7-9016-2f60467312b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb10065-05f7-4ba3-b265-4d684e879101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f79aca-6294-4e2a-adf8-3dd645f0a531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd94a434-474e-43b8-80e9-74af9c65eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d17e0c-491b-492d-a369-4501900f64cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc30cdc7-e80b-4ff0-ae8b-285ba54ef588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d437bf3-8591-43c8-a2f7-3f0ce1bc1fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28ceacf-bdf3-42be-957a-5857aee1263b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e25ea5-99f2-4fe4-8ec9-d8ae438582ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6636d8af-4b3f-4224-9405-22390b8442d7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6967ffbd-26e9-4e28-bc9f-96cd7efbaede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5bcfd6-e933-41e5-bfd5-9a0377dea2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23460049-6174-4364-af37-fbce8e8595ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "157f1664-2e6e-4545-a756-015e7403712e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e00e8af-a8e5-4785-b5a3-797c34fe9300",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff8fffe-3203-41e3-a927-bb9ea2a96a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96b4396-295d-44d7-bcce-67d07fbc37a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2751fbce-2d2d-404b-b8cf-b754b1dadd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c158d6-7343-4e5c-a1b1-097f42bbb143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ad650-2acd-47c7-8fed-8ff7d4ebd5a2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc14920-222b-4246-a558-75c4aa92a95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88164582-78db-428a-9599-5ebffd38e1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129bb96a-2429-4cc6-a409-fbc232a6d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "396a5f28-1871-4135-bb97-ab61ac44bf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40753b1c-2f9a-4dc4-8da3-7809922f3ba1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc9f8d2-a51e-4bc5-be48-60cbd11afa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3d6a3f-2cef-4e94-a8cf-b2cc241b7cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e687310-c00e-4b2c-90ff-f63720f237f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf05364b-24c0-4b75-aedd-a7911acfebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dd15d4-12a4-4b98-9bbd-185c3f5dd877",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1045ad1c-8457-4457-a466-649bff72846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694e1f6d-07d7-4578-b680-edf9e7c6f692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312e6264-7c49-47a5-bf33-0bd86371df20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4a9e11-e9c7-4117-a44d-f99c127f1e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4723e2-9b0f-4562-bc6b-0dbc1c1c647c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf1b5fe-7b02-440b-8c6d-2eb63e1796e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87766498-afd6-42bb-a5b0-1e9e3b144a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dba377-209f-4fa5-b18b-1bba91a098f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "949c43a4-983c-4ba7-86a1-dfac15ec2547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07be0d0-0fa2-419c-be19-a25521138836",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78279693-dddf-4470-8cbf-cb3b110837f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50bf8de-b578-4ef8-b33c-efade0de99c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1a1d92-a96d-40cc-a9a0-44a150b18d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f88125-6105-442c-8acd-a2dcb9837243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0854d695-8651-467f-ab6c-64f70bad421b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daf1d27-209a-4deb-8d05-30a5652b12f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d1fb3a-40ea-4ede-9d61-31fded67fda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c464c6d4-90ba-4223-8837-321e183604d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "653c9f1b-047c-4839-8b86-16c8897c67ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38f4a9e-0475-4567-866e-8348f2cfd562",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6bbb08-6e32-46ac-810b-f15afe165494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a12078e-9711-4d36-99f6-d8cb3a0c2e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803a8de8-db08-4ded-93ae-b37cc50c0e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2fad10-5a85-424b-8c36-8c937e8c8001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b66cad6-8365-4cf9-aa72-0427accdd18f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b839dded-7f0c-4bde-ac25-03e209dd1c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1622737-e168-45aa-8efd-9ba9a3d23b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20ce59b-300b-4c2e-ba90-6a62bc03fa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7824047d-d6ec-47ee-b0e0-e2642b031152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ace646e-e1dc-4282-8c8b-38e86446a305",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeffd101-be12-4e96-ba7f-5275ea9282d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d27f350-1baf-4a11-9a55-a09f161fd121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e887b81-6316-4638-a463-98c3ecd59a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd1c877-fb0e-4949-9e37-e7c3f6c7ba47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24db875d-05b7-43fb-b990-f361d52cdb24",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951d033e-06d2-43c7-b7e6-537358ce7896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86a9deb-a3ff-44f4-aaa7-ac6dbb0e72fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07102242-bf2d-488e-b762-6fa1a42cf985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0bbf74-2d55-4f6e-a3bc-3479d27576f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc46bbb5-6b08-4804-bc08-0dd2e424515f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f6b93f-162e-467d-beae-8b00b936dbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63672cb-483f-4373-961d-2766bc995000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e072a714-ca11-4bd2-a2b0-20da33182fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "54dca25b-cdcb-4ac7-993a-45f4f13e324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b19df85-58c9-4ff7-a83e-d35adfe4d0b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6fc606-c571-4fd6-91cc-4d138c36b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f97649-6df3-4f27-b592-5dcdee469c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236c24a6-3fef-481b-8258-9f1effe4c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6a4dd3-9554-4686-9278-d8658c18fe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d6323c-2e8a-4d7b-8cfe-8b3290298a58",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3598ff-3543-426c-852e-276130f56f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12698d3-3edb-40d6-8215-92346224d6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f5136-facb-4be8-88fc-f829483bba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5460b9f-0ec3-4f5b-aca4-7fabc8deb981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fb83d5-46a5-4d5b-8572-b084f2beb06c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0a7609-d5bc-4149-87ce-5d0cf801fa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0098e278-cef0-4c69-a75d-b155045a8dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eae7e09-7f60-4268-b59a-a88f4207d7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91e8bf61-ed26-4329-ae14-7791eb974a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e324403c-dd78-4986-8394-c2c5bf3487af",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e6c58a-e8c5-4d97-a581-0018f0a6db86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f6f2f5-031a-4cf4-8e15-276520eebc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1283ee-17b2-46dd-9c0d-14eb0e5d422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15078e69-a36d-4673-be20-68721bdda1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a17f64f-d9e5-4474-be83-813ddba45e94",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a41c6d-76cb-45ce-881b-f30d79c51c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ef03f0-4698-4a02-894e-353e961929bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c66b92-643d-4f3b-82df-3b17e274ac78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec2416a-17e7-401f-b64e-512708c09c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4af69db-699c-469a-94ee-cf58f71dc581",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c14ab00-c907-4153-aaba-717e532cd20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb0678f-c03c-4a44-a34c-f18bab5f9bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547b4667-a590-47fb-8d92-17be49779212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49853cdc-8aa1-46d5-a6a4-0b5c7cafc1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b001a4-ffec-4ce5-b0ea-01ab16b25217",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb184dca-041e-424b-a2be-9efd17e022e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d07c00e-de28-46e5-83a5-f68a96cb1ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d46ce85-abf9-4d1d-967d-c3e324831fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862ccd90-3c67-4a88-a07f-c7da84c08cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac88c745-cafd-43c9-921f-b95739964fb4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b514adef-cf7c-4bb8-a7eb-bb651f3fe320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe98718-8e64-4233-8bc8-12ff993489ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66083c5-a03f-4b9c-b297-5faeeaafcaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce1fb95-1a70-4b9b-aa80-fb76417799a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9885c7c8-9a26-4e2c-9f32-0b3882618dc7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae03c48-05f7-40cb-986f-2243664c3ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0270f74-86e0-4122-ba20-064e6d1d0388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0875907e-1731-4c46-97e9-93c7f20eee3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5e30d3-e8f4-4d1f-a14b-72bcc0d93232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c4b22-1c83-4c7f-bad6-929b0e4d5606",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843d900-28d0-4d0a-ad33-695fa3b36a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0d13d6-6991-446c-bfc3-84b869d5a93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be1c128-8665-47c6-94ac-0250074535a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6fed7c-10c6-48ae-85b3-efb748ef9a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65799f-1a42-49f4-a501-8c671163d1fe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd8f4a4-f842-45e7-811a-18c95e151835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d665a4-022c-473b-957b-ccfcf6448ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f8cfa4-8d11-4768-99fd-4d5f9451170a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc6675f-d36c-4329-ace2-e1d04029ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fde4a4-5ee8-4661-9660-2f646c9bdb78",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e32c3-1057-42b3-b200-740ff3c406d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caef310-c73e-4f1b-a528-fab48c8e3fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a749c4c-c721-48ea-84d6-233c83f82da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc90f0bd-20ae-4cb1-8b18-9d2f31acc5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b88e55-4a9a-42a8-8a4b-c6be8169bd80",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fccbdc9-3f66-4cdc-a25e-c22c378af86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d7d1a7-e37f-4c08-97ac-55a1bf11fc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd380dfb-34be-48d8-b4f4-8904b6619108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21ee172-3fde-4ea8-96ea-b1e8f3032382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217712cc-7b4a-4381-bcbd-179ffe239911",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9e346f-b6e2-44e9-a16f-93d0be74197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc35a2e3-61b0-4106-8350-673dc687cd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1944631c-f46b-4bc7-b1a6-5249706d10d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c259503-0f37-41e1-b166-0f3380f29414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c39fce0-c25b-44f8-b170-f12c7ea5e2fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18360fcd-842e-4e30-9490-58a5f303f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae623b-006e-4516-b398-11daf62cb763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b23619-d3cd-4a97-82a9-62575a909f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fe78bf-6177-4b34-bf05-b45b070eae87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09373b13-6148-41ed-b2f8-bd6a34b49bc7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e65ab3-b5fb-401f-99f3-99200a22382d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837141b2-c26c-4126-b4d8-cfb393e477b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65bf318-2c29-4f7c-bc10-616f0e37a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae6d0a0-60b1-4f22-b845-78c23b9ef17e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "929f76ec-3e87-4f38-b050-4165641d6535",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57dc554b-3e20-4c50-aed0-1d4149d3f1de",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73298313-c02c-40b4-8272-264e883f642a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "121963fc-cf15-468b-a5c7-399eedeb6e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423948b0-2a4a-4ae5-bb99-20b8edea4077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e35faf6-238b-4381-a3dd-1898f666e387"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85ee8695-020f-4647-94ef-50f991917379",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d26813-cd47-49bb-97c1-f0e56ab11b4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb0492b9-e113-4239-bd82-ca0a0b0c2087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd3f4ac5-984a-458a-9578-6e7384e472f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a11721cc-1cdb-46cd-a3f0-a5ca9e5e4e70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e59e3446-a24f-42a6-9699-0a3be29877e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8f446fe-094c-4e47-aa3d-02b3d19bd32a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f42d8ee-f52a-473b-b88a-2d465cf833f7"
            }
          }
        ]
      },
      {
        "id": "f886450a-64df-4e10-bcb8-c24edc33b588",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a791f9d4-32a2-48d4-9af9-5bf4ede02a96",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76b82977-480d-4f3e-9a2d-e39f34c33ed6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbc86fa9-2a34-4d1c-944e-c5ab5508f0a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a10c9b-a971-49d6-bab3-92b8778b19b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a907a4ce-8459-4f74-9756-ddffa8deee63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8e48b9-d9f3-4ddd-aca6-d7bf9c187bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "327ec28d-fe6a-4174-a67d-492ec83b18a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de281b8f-8ce2-4c9e-9f79-0894d6cf7431",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b3495c-a25e-4f41-9489-08aef0bc7d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1046a2-1066-4056-9996-5d1993cb680b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68ad1a-8f24-4c6b-a916-15f369174015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06fb2af3-049c-4c55-b5c7-4dd78eaba805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4013a950-b60e-45be-ba6a-e1e46deb2ad3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bc5677-97f2-4057-b640-851b15c2dca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c146dd0-d771-427b-8982-75a12ff4ed6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d662ef3-1f5c-470b-9f1b-c60b2e8ada5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8919d2df-c873-4f62-b985-9f5f0415eef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f46407-e2c6-4a9f-a1c4-8c8fe92d245f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4b8f97-2b6c-4bd2-8c27-8a20910a8576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16289e53-e3f6-4d34-9906-a1e76432f50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c9cb98-d7c2-485e-b1a8-05666ee30f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8585336-2316-420f-b92b-b8cc4eda6b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dee439-e374-44fc-be13-f31c67efa56a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24027517-2885-44ce-baef-fa5708da4ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b3032a-9a52-469a-a47d-1c3df48d0109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644b990b-122b-4dad-afd7-a6af54115aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa547c47-2051-4966-b51e-21cbd8a88183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59137a08-c5b1-4ecf-ba1d-13bc8aa93c0c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1df496-4486-4919-9c22-ac390efa382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfdd48e-84b1-4836-ad86-afd8b26fa2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5d0056-8199-42ea-afa7-526a1de99817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c22bd722-e1d9-4e8d-957a-f435ae041abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e63551-5654-459c-b797-5e2d70bd0b7a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fba672-1869-450d-a71b-22cbd86de0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1248ba-9983-4617-946c-d9e6d0279881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc132b2f-72d4-42ae-9cc7-ebfa57a80afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f242e0-5842-4d86-9012-873ff94d79b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a418801-da10-4650-8236-f0257e779e8c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d3aefd-60a5-46b4-9800-cf36739a0017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab87dfa-6943-4ab0-bc66-15e8d01a89e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c516d1aa-6a87-417a-8cd3-d0ad8f22d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9a7235-c444-4cd2-9a12-1b32545b82be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727702e7-6b84-4ffa-8bba-a4a150f0873f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e189d5f-4016-4f6a-ba75-8d6d886554d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b0d185-f744-4c6f-b5e3-ac54d10184bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a5f261-2a37-422b-b8f7-74c95ca9096f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0368d3-8fde-4e89-95e1-53dff353c6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35db58a6-99de-4ef6-9595-e7f73c33e9d9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d30521d-99cf-4aaa-8536-aeb0399d60c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f069b75f-d3e2-4522-b51a-8f3f87927bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fff0c08-a70c-4442-97ed-f5ee96f70a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "644d7c8b-7e04-4405-8ee0-802e1d97673b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3706c4-f491-4a4d-9001-660b9c469173",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ac5f78-743e-41e0-8ddf-edd77c2563dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09cdb59-7a34-4f06-8733-cc3872ee5b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf8baee-cc4b-4815-8167-4d1e362b7fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db29d083-ba82-422d-99ed-8b7742386df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aa2d97-8678-4c40-beb2-62e7e424ce1f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00afa8ba-7e11-4e02-a332-37a42892643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e7c0f9-e1c5-42d0-9efb-7971f28dab7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f5f6f7-947b-4c6c-a8d3-752909611864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cd6ae3-21d0-47be-af4a-164030ab3f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c97b75c-bea1-4bf1-86f1-ab6d743a1c86",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f4d585-d993-43e0-bcd6-51318d775fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87d997a-1397-4ecf-b9fc-68b20da307ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef255ca-8e5c-4c3f-ba64-fe88ea5fa9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61b4ad2-ea64-480a-b3e0-e2befdb62146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6fa0ac-b307-4e0b-b0af-9ec5e9290528",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cde64b4-a9d9-4a36-81f4-4ba1c83014ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5496ec-99da-4ea7-baf2-b7190c5888bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6467b8ef-172c-4778-8271-f1db55b7424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bdef8c-a0d0-465a-8480-c37dc97b6048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3078f680-0618-41e8-be1f-c698b1b18703",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac926f1-b8ee-420d-ba77-ec04a5eb37dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfd5e1f-12b2-4179-9289-c660a4dbc2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc826af-193c-4d43-b543-e237a1c16028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8220f4b8-4f90-4cc7-b431-c526bd1fc991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b5c4b5-f91e-4dbc-9514-262e4372cd4f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d962954e-f280-469d-82a4-6d037cada589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56e61de-8b28-47e3-ba8c-5a85e3b24e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550ff480-a126-495e-b332-0a5dad85e3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e392d1-b24d-445d-823b-52163f11dc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10380de9-0a85-4289-b03d-ff87e5a8aef9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e0af9-68fe-4143-a5ed-cfc725abb6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003e20bf-418e-4bb3-9bb9-c8aefe17d740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be50db0a-25ab-4de8-993c-1fd1a12b6cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e675a16-b442-464c-86a1-fb07ed007610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399f7475-24fe-4a86-8b97-f3338ede6db1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bdd664-57b8-4a26-8d4d-fc8a3d5d7c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bff6697-184c-42e6-9be3-c7d5c6d9042b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cec247a-241a-4e9c-b3a9-8ef38f9ba127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc6ff7e-4d05-4439-b541-5d3427e3a863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7362be4-bdff-4db3-839e-4bea30410d13",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09acb114-c7e6-48be-863f-d6bd9ce7c45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815d797d-c496-4c17-ad9b-e8e78873f7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2cc0c9-d361-432d-9c86-882f101ad1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a83c511-e2b5-4e3e-974c-7ebc6fa97b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606375dc-acc7-43c0-8b14-6189d9c94050",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3057f47-b3ce-4b53-b9cf-f9b2effe0c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053cb0ea-cd09-4437-b99d-7d62a2de49a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d581da-e102-4dd9-9b8e-35c3a38bbf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d608f7a-89f5-4874-8671-aba93f1ee8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed25bb43-d8a5-43be-b14b-990c62ba15cd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a91c112-e041-45a2-b0f2-e738550fe8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f65faf-7835-46ae-810c-ea2964a6581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1726727-94a7-426c-99a7-d7adf5722e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9efcd2cc-f52a-4893-a116-c2ec4c84040b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346a9000-6515-4267-92a3-ca1ac3c6c918",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6796980c-c8f9-4966-8a58-2567fac67325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cbb1bc-cd6d-49cf-a065-84c614c45fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4862cf-2eb8-406c-9209-2429a2484b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1892103d-69d1-4ca0-8a26-5861e9db23f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992baa7d-c301-4c73-bf54-ef57e23465f9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90677362-aa1c-47af-adfd-f982cdc9a31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fdaa33-a5ec-49cb-902a-281ce4a739c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106a3de6-a78e-4d3f-9df2-025630a7dcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50e7ed2-1ebc-46d8-8187-3633634c79d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44525f9-6fea-456e-8aea-73505743b86f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6be146-7222-4a38-9be6-e8d3355fe2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746147a2-9802-4ef9-a398-dbd7e4c383ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e2967b-9610-417f-a290-22cab96877da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3943799-a386-47db-b659-0404a081224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae3fbf4-c4d2-407e-9a92-03bb5f9c6853",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aebab47-367e-4cb7-b770-e31a454b8fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a93744d-20da-4cdb-8497-4bd6f41817fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2851c2-e76b-45d3-af37-22a6ea4a6ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad83b66-3cf9-4d93-a6a4-97774b200a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb2dfd1-59a6-490e-b2ed-c845287483ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f21148-a57d-447c-8019-22243fa61fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb290f6-49a5-4e23-a870-717706937e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe7390a-9ec7-4117-9422-cb4ddb5901d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ccf6d0-4ec9-4d69-94ba-3a2a145f53d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17ef045-79d5-4cd6-9707-8e719d009d22",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b92a634-5af8-486c-9d60-accc8c22ca04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc073179-7018-4506-869b-44ef63d86436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76dfdea-0042-4990-b08f-8cb718ff4abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad337cf-4e60-4c21-a8e7-e2cf88c296d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decdd44d-6919-4f14-b917-953e383f1d63",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4bfd0c-38f5-4882-b983-633f30300de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1485ae-c593-4475-a425-c47ce7a287e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf064d7-e7b7-4f68-abff-eee3da5b7df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c561ed67-0cdc-4fe1-9643-9881de7d3a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af90986-b5fc-4e18-9b3e-a84fe643cc0b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949fcc1c-4b6c-4e42-a171-920b60903ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac09021-fe36-46be-b00f-386e33b1486f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f25956-956a-48a5-b35a-1862705d4845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "443f3fe3-a22b-4fb9-a6c5-d5a9135e875b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f467afc-997d-41db-ae28-78723c17af6d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea93907b-84fd-4234-996c-696adfa79d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f12c09-00fb-4cb3-a990-035c41ef6697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e42bde5-4d51-4f79-96a3-a9ae71860f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c139174c-dff2-404c-8de2-40085d6aad0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ccbc3-3d53-435b-9f6a-f85ede283cfe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003df06f-bb34-4b10-9258-b231209eaeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a895fcb6-0d5e-4cec-84e2-e7172f8433de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6099d935-ba67-4a2c-ad09-727f4a971a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad5959d-18ac-4eb5-9997-4731a2b02161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd68e46-969d-4a8a-9336-e3126db623d2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22fe45f-1202-45eb-b469-0d8a1e925462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6075be5-e2b9-40fc-9a59-8d43940625f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57996551-3bd4-4c6b-927f-3408eba234dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2fc63c-f10d-428b-92e3-91a13c13ec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a90150-d6a4-45c5-8a20-2dc1f3f15cdb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae081779-aeac-43b1-9719-a4a6e1dfd30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae2631b-bd74-4c4c-940c-67f18bb4729a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93904446-69e2-499f-a18c-2d14fb7b2443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cda1bf4-b4fb-45ea-83f3-3e13e2234a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408e1393-9c92-46e5-9bee-1ad3ec6dc9c3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c6acb6-a9fb-42ab-aab1-c5296606b9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9c9050-f39a-4675-a634-8aed6cfffa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0099b936-d689-407a-9644-18a29d5c925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2daef1d7-e000-4814-bd7a-0db3ee4b322a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccdb0e5-e60e-47d0-a908-ef24c9aa88c9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d746a623-31e2-48c4-b048-07203cc7cfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b143a4-4da9-476f-9052-c1d8b1eeff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af4a040-b86c-4ec6-9728-1e764b9f4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d2b279-ff0a-4b4b-ad93-9608394021ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf455cba-9cf5-491a-bf52-b885db60a899",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b65c04-0b00-42e5-9ae1-5f148c3a1d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb2c825-a1be-49f1-ae7c-0c8bb9d06568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6580885-dda2-402f-aad8-6353467d9ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "961d50e8-c00e-4cc2-8ca9-2865e9f70b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85308863-61fb-41b2-8cd8-ec1db9b139d5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c340649-23d7-4ca1-9e45-74bf661c0733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9afd0b-87fa-4fc1-9c48-89da1dc692d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878e07d5-3469-4c7e-a0e6-77e3eec03dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed86994-c3b4-49d9-88d8-f96fdd086dff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3a8e772-bae0-4e58-a95a-f6328f2f8c96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b06f8f98-cd0c-422f-92c0-9d355a3f7581",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddf9c56-c5dd-4884-a857-1684a2914f70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2c803ee9-791f-4e25-852d-535d4fcf8fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51953f2-315a-46bf-938f-3a4d1876e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92b922f4-1434-432b-a66f-d9510e51949c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0daaa08-2003-49c1-a037-7a8e19df9eae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ad488fe-6e6e-49f7-8ded-a0f7366cbf1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d64f08a-e282-433a-92d5-e17764cf2770",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31b6f62e-9619-414f-b154-830b2e1a3351"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8b14aa7-7246-4e02-aa6a-90a895523414",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b46c1a5c-2b4c-4f4a-ac63-35cbff20aed7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "598a7f1e-53f3-4c1c-abdb-e145750e0325",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ff0d1c9-4594-4248-822f-451b9da9acc0"
            }
          }
        ]
      },
      {
        "id": "48cbb058-01cb-4423-91c8-8512334c504a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "de7e5bc3-2a1b-4cb7-84d2-3b5a0e2f3833",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cba648f-909e-4e6e-b9d7-f7f097b78865",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6e3c7df-aa9f-4e1a-8cc2-2fcfe1cbd6b0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb24af44-8e4f-470d-b8cd-ffc84cbb9a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9484238b-375c-4911-a9bd-2b83d5e88673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8db5f8b-b27d-4710-82cf-950a4142412c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1659b40-c721-468f-9a12-9ead38f7e49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c2c79-a23b-4a42-88f1-611bb6525ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7814a8c1-1535-45b3-848d-93c1b6f0b8cb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce8e9f5-e5a8-452f-a9ce-a72d73d6bcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7b6650-0565-48ac-aeb8-4b4e49daabfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53032af1-2555-4fa2-81a2-7e838f1cf23f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3657652c-7a3f-4b5c-90c5-b107dcc0740c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184fa148-3a85-4118-afc6-61ccfe408c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8201d62e-c197-488f-b573-474696f30822",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f141b131-8ad7-48e3-be14-bcc22029f2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957d1624-6e35-4d54-aca8-310cef0dbcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab277705-4714-4586-820f-e2ac50a3343c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7a98f4-98a3-4e0c-9421-5b6aaddab188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d1bf8c-698c-4c1d-aec3-d52ba317079c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38196a18-aaed-4f4f-b07d-1922c9c3325e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf58756-1e37-4663-b157-938983bfa29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a9220a-9801-429c-8c90-010bb2e628bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06f414f-de3d-4df0-ac59-b5337b314580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431e15b2-63e9-43c6-b89d-f908b305efa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd8a99e-20d1-4a5b-812f-86c9c5215d22",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb1fd8d-754a-4223-a2d1-aa2a01e9b0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9d379b-887a-40f6-9bdd-d6fc09cfa1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7638e-59a7-4306-9d62-a1f977838b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409bcf98-d9d2-4191-b211-27366e7d455b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c62d22-1647-4a9b-88cf-238e09995d28",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203d9d4c-54fc-4080-8dc1-1ee63e41370c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47bbe46e-55ae-4249-8bf7-5c933bc9afd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de6dcab-6073-49e5-8aff-bc2ec1200905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a050509c-352c-42d5-aa9d-a3a3c7bdd516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b053828a-7ff6-4694-a197-4f38f4f94d55",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be94d9b-26bf-4214-bbe6-c20c4a84f95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9939c72c-ea01-4d50-a0fc-47db7b3fcc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3d96f3-a687-458a-9dd4-b56fa8880bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136cc259-1aec-4f2d-a5a3-4aefbfa7ee05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e39e85-64e4-45ac-97b9-15a5107eeac8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ba4cf3-7cfe-4279-9598-ff2bafa31d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcb5f04-490f-48b5-9856-e841f989cbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdbe131-4c2c-46de-bc32-c333bdede7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaa0688-3d95-47f1-97f1-0346a1ae6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421b63da-8899-4f06-8dc6-4dff6b09f12a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f95e11-2751-4da6-9974-7a7b65f02242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c6d03d-e731-4390-86e0-3f66a2847b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b7f56-4b1d-43c0-9641-4ad34f609a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6279932-e040-4814-bed2-589ffd572b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8608443a-d9c8-44ae-a666-75c33ce2da0b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141e590f-3a09-42c0-8294-b4f873ab4b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f70df74-118d-43d0-a0af-d989c5ce5e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f48b62-1f8d-4aa6-9236-e456e65e08ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0c6db6-f345-4db9-963d-1e9b5627a737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351fd80c-b5a3-4385-98b6-f91ad6f10416",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13a03f5-1fa1-44b1-8985-953f272ef530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4669e2-3d73-46ec-bde2-6f1f4ac582a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b1159d-bbca-4b39-92ac-85beaa2c1e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c8ce5d-953d-4bde-bcce-9d657425ef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5567ff4-95b3-40b3-8660-e984d3c9d51f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c21249-4a4c-494e-9302-fc835ed5c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e0fb88-d27d-4d15-95b2-0f69053e8265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d93e7a-aafe-49e6-8563-7a03587a4453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62dbacb-ff73-413d-bccc-b3e50659f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d449a3f3-019f-4954-94bd-3f35e4daa10e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cef47d4-d394-4bc6-bd11-0303f0644dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c914c78-096f-4e4c-b606-0ae7fd3f88d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5466257-409d-4eae-ac3a-2f9b4f9fee61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66603ab0-a4b5-46bf-b06a-3c1886c41f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef4284b-4876-4b1c-a591-0d3369edcc2a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cee5747-c1ad-4386-b9c7-40bd2449f51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5996d520-7d1d-48fa-b1d2-a4f336551245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae40d8f3-c513-4b1d-8e03-310dd89ffc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24695a57-a9e0-4615-83e3-92d47a67dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2041fec0-71d4-4fb6-89f3-78d1d14b8da5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb23dec-8428-420f-b47d-187eceddbf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1e273e-3e46-43fe-98b2-a8862541e5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5f1d28-4826-418d-a757-ee1ea64fa682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e798a9-825b-488e-95af-3985fa9e7302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d889c63-0b27-4017-af38-4b0830623efb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19e9396-7b4d-4c57-b013-0dd2d1dd7574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b780471-ac90-42a4-8434-8da6b09946f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a61287-f3f3-43c9-b50e-4bdbf7784ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bd6ced-2d64-448c-97d1-998d3f62596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7592f6-e6b2-406a-845e-0a15f9f96555",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6cbfbd-da1d-4a00-9a8c-f59be74c7dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c80d24-42c1-46fb-a33f-6404f0f20e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a5b8f7-9e5a-45d3-b547-fbdafa09d371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f7aabb-1a7d-4f6f-827b-87717d1fbd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b5065c-9959-4672-be4a-7722fd41020a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f45944-fa58-4c6f-bf05-72c8eeec5c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c519c3-0013-42ce-8fcf-3dda37106873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce474b-2c7a-41bc-b9b3-338fc68e4043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a724f0e-a38a-49d4-a762-1d935831affb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43021ad-8fcb-4814-94b2-9325a32cd065",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b369a771-f080-4c2c-af2a-732da5b7a086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87f0122-88f8-4e7f-803b-276202db85f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb7c07-eb35-4333-827c-8dc5de0c6489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f461fe-edf4-4d17-8d66-d8248587e707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b45d7c7-bc38-460d-80ae-5df9faa8d65f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332c0ec3-76b8-474c-9cf5-e439d087104b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f2dece-5a09-441d-a142-4670b39f9250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d0430e-525d-47df-86d3-58e417740885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4781d60-20cf-46c8-861c-420edbebd761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15052dfa-f718-49b5-9204-2bbc67310a99",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8b144c-35a9-4d36-ac03-407a7ba7f394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "104494f3-5493-4b55-9969-d7b900d30268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621628d2-1206-4cee-bfdd-16f2ea30f6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00eedff-a408-4050-9b9d-b416edc770d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939a0442-a3a0-44e1-88ca-a669f1f9d9a4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b0617-f030-465a-83cc-f203e2e443eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72917da8-11ba-4543-986c-576425c3042f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad17636-1c0a-4eec-9353-629fcabf65a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d53f7b-9a19-47f2-81cc-459911025d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8c7a4a-b41e-4543-ab53-e8fd7a3d4730",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18f4721-020c-4c40-a935-52bf03ce6504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae4a368-e45f-4d0c-ae47-78bd3b963f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a46835-3ad7-44ca-9423-c926f80183f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53e4dc8-45b3-4bd9-b858-6f5b7b93a461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040fc3a7-1d92-45e4-9cdc-6ceab677d69c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae142f6-df2a-4d99-b91d-77c5c869dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542e9054-480a-4126-aa20-3107cea856f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f20c2a-20f7-4dc0-831e-2a84e890bed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7181fc83-4708-4160-9ade-bb3c7e0ad1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caa03d5-c519-4e57-908c-1772fcc7db4d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c933507-2a9b-45b0-9633-45fe50409cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10770bc8-f01b-4260-9960-d49c0292b4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e9b702-f5c0-4199-a1ef-bdce72d0d4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f7cf90-1610-45ad-aac5-0c7e21f9a314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620aa314-dc91-4173-962d-fe9d24758db4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb3430a-4144-4dcd-8258-a69be53abc5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8475bf-0fc2-4baa-b008-52d464c87d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295b5599-4c1f-44c4-8651-5ab830d59727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72447cba-0c8a-4b0c-941d-006c3f8820f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d1c18b-42f6-43e3-9d68-52b6d51d10cc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f295418-ecdb-4b9b-b3cf-1af8135e9c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d11cf79-5b74-43f2-8b63-d2f3c5c91682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a73ec28-93ba-464f-97cd-42da40006b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e17d54-9ba4-4522-85b1-5e9b732ace07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de9f84b-a88e-45ad-a058-a2125748aa1f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c1cb98-6bb0-440d-8de6-aa05d1962156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac35ace-4ec0-4926-8537-9ec2354dbcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68069e1-e622-4e47-be83-05b6ad1ccb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d5e6c6-4d9d-48f2-86e8-511805d743e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d74630-e42f-469b-9bad-09f3a0c0049f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f72a36-33d8-4e40-81b9-5c18b7a7203e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9edc6871-1ae7-4268-bcf1-aea17040c633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e8fee9-f105-4067-9e6a-5dd6220b392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9533eca-208c-4660-be23-3c314ea0e83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d3a75d-a697-4560-8219-44da370ff963",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb0831d-6316-4e56-9b03-fdc9af6d3df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f143c0-bb81-4532-b839-d08f27e130f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c62a5b4-ca13-4dfe-aff3-982c772c9d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd32eea-65ec-4875-a994-bbeb36eb64b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65910f2-b1e6-40ed-ae13-5ba8fb6e18ef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8483bbef-c9b4-4634-a561-4ebaa0667198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc69a2c9-1841-4d18-aeb0-9c76c963870d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c0c25e-b6e3-4871-8ed8-7c3c90db2a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b80d238-b0cb-49d5-bc29-b44f8876108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49abe9b3-c291-46b8-9e87-35d7d62b66b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1408d9b2-8176-4c6e-9415-1abdb701f0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc48700c-05e7-41cc-a235-e1763ecd051c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1054087-d101-4482-a284-29fe7e851578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4018da-5d78-46c2-bac0-9df5a9206a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd30de59-1f64-4219-acf5-05f28cf75049",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c363437e-c0b9-4b80-ae3b-c741e747c807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b422cd2-a1bd-4a8c-896c-b17b6e229a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ec1d08-2054-4b89-bef5-934af00241a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0503414a-ae09-407d-a7e9-7dfa1b65d2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d703475-21fb-48a0-b7d9-5d708bd708ca",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd34d67-0761-4c66-b570-541c75fda0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363af352-72bd-43b8-aaf7-d923e9d08c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6bd591-60c8-41af-904d-2b9f542adc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4d5776-1456-4c73-ab56-bad2d6d9b1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c35dfb9-2f71-478e-9028-161d7ea35a44",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ede9bc4-ab64-4fc4-9b55-77f996b983ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66696249-1ae0-4cf9-8435-28bd9fe2d9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580557bd-961b-4e7b-87ab-580f29270a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad256e2-9013-49ac-ad8b-e049f229c5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc8f08a-d2ca-4ed2-bbb6-103c899da7d9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcc143e-cff0-4f80-83ab-9de60228ad06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b09054-3a8a-4860-a587-ee1ec2e46354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f7ba9-d7dd-4ba0-9d0e-32890a1b9d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46a95ba-ed94-4687-8e30-b620c8935fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5594948-4573-484d-aa14-4b020edc8aa9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1707458e-afaf-4995-892d-0dd71cb95775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732ccf09-96e0-46c6-a63f-1805ec549a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835ead8d-7cb3-4302-b483-1b8ae511874f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2e5d08-7ef5-4008-b078-f590e26483e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e76d287-4bd2-4635-bd75-bb823f7c25fe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c0c2a2-111c-4173-b504-6994f2d06b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b8f8c3-4025-4eeb-b9e1-02e2c9c46914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900b17a5-6429-4ea2-b92e-d653dfd28100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4576f922-15d5-4b38-b3bb-b2d28a0d5fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f684c56-a636-43d2-be8b-997e8a8802b2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0717749b-5766-464d-90af-a3a1d1d850be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ad2595-1521-40df-9820-7c3591edf38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64954e85-3708-4817-b220-298083c677b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc18057-3865-4567-86f1-9027d01a2a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83ee705-b16b-4d59-93a9-67c60cf450be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2310b5f8-3ebc-4841-b8b9-847a152c8df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f0976e-b83a-4de4-8fc8-7292ee83f797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90380ad-39f8-4e13-91d7-1c452f04115b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c169eea-e21e-45da-a441-6f10c5375d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08ab4da-eb5f-4f7a-9431-a7569b8dcae1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438425d-ed70-4c87-8ded-7564feb9eee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115731e0-4345-4ba8-8361-0271eeaf908e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c24210d-6b42-49f1-b175-00901851be37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab05211-8ef4-46e1-903c-196b4f1e0df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d9d6a-8c32-4959-801c-4a6f7a8dbd4f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5a713f-75cb-436b-b91f-1f5ef7de4405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86467d42-b332-4fa4-8a49-ec362316ae4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff561657-eea0-493a-9674-e306fa437c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6229f6bf-80be-4fcf-b7cd-ea763f7ab157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf31b34f-e549-4f7d-8c74-5a6c2f8d654e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ba029a-3b59-4a3c-ad43-a3e85bd90761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c25e20-6446-47a6-8f5e-90da23157dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2795ce03-1442-41fd-aacb-7ed442557d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f613edf4-c85b-4368-8f3f-417bcf4026a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9831c636-f222-4693-98a1-e4554964934b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0754ce-0f48-4763-b50e-73a947d072aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cceb4762-3964-4c41-8b4c-8a0c3e249acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f71f73-ccae-4000-9974-ccbf65ef30cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64621bd6-9b59-4762-a828-e44bd5429e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6410f1b-0b08-43db-8b7c-7ae5b462ce42",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1930c516-bb75-436a-a8b6-2a8839f2d5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbfee01-bcd3-4d64-b1eb-3097fe8cbaaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f311dcad-24a0-4a83-a18e-fa7b3c705978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e743e8-6110-45de-b00f-43270c3227ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7ed57a-c95c-4ad6-a372-4a4c5cc4e40d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e155f5a7-8920-4643-8b3b-8587208c60b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23575ca-4320-47d9-81ae-84f6efcbc32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7493d0d9-6eec-485a-9e5a-75b205295853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10613e7d-fc84-458a-bf25-70c05cd89c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c6bb0b-0c29-4e79-8b31-22dde0b7e842",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd9234e-46b4-4daf-86a6-0ee48b9421df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77cc87d-8a5c-4940-8210-20fffc477b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80e41fe-5b67-44f3-9406-69ea9225b9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7264336b-a37d-4079-88bc-5df60759d465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baf655e-7194-4b5a-8303-7f1f0efebbe6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff342515-198f-4a4d-a114-4257af66b118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bd9e23-d871-4e9b-8882-5d77496e6b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84adbcbc-a317-4215-b9ca-a5666a3a51f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214060f4-ea05-421a-8aec-d7804f80a3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a43661e-307c-44ac-9286-0d4da0673930",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11c20d6-3454-4a83-a5dc-2baa622fd2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dc6bf7-f633-422d-add4-89cf97abf754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bb351e-8daa-466f-b36c-31d185be6b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13adf8e-4050-46e8-a818-fcc171bf76e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301493f8-ba9e-42b4-81cb-35bf19dbc3d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aede2b1-3852-42c9-a04b-4ca84850c3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6640a95e-eba4-4db0-9495-d74fa68cb97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102413d2-7c0c-4697-9f21-6dcc0d477444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a483121f-dc21-4a72-adac-fdbd1b735ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c180d50f-ceaf-4a06-a5f1-ce585fd8e25b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aed7278-c188-4e66-8381-a7bccfff51df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ad9c2d-99d0-46d9-b2ba-a58b68a0db36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a251c57d-7f1d-4440-8091-4a2240181540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96f6dbd-9b7c-42b5-be01-cc74056d1d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9c04c0-a69c-413a-9a94-59a97d569cf2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc2d06b-ec7b-47c3-983f-824a117d5de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b39732-29f9-422f-9516-ff8f8a6661fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e178c0-4e1d-4e48-8b87-fca96d468b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6367f157-de59-4923-aa40-927389812cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b746618f-e2ae-4691-b31b-de68d2b51dca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08c4125-2424-40c8-b73e-017ac7521e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7500909b-6e78-45e1-bfd0-caec15521ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86bb898-e3bc-44e2-b3dc-9a195e282ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104824be-2df0-4f14-b26e-41f6ae288e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efdb28b-30d7-4dde-b537-ac24a17b534a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d4818e-5df3-4033-a366-90dd6ae00634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c63dee5-b439-4e85-b280-96352580ab8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91524527-aab6-49ac-bebc-5e190b58d725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb17c1f-7122-494c-899b-e21ab73deb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9e384d-734e-494d-9ff7-c4f42d974f87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e6436f-2311-4105-a4a0-90034ddb6aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85298cbc-e90b-4b68-b586-099e5851b58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80fe63e-61a6-4736-832f-ce4c6b4ce8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec705d22-df46-41e4-af7b-e0b5aa00feda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1bd36d-47ba-4f01-a3d9-f791f3b1e090",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753d53e8-0dfe-478f-8560-4dd04e8ef443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcbf0a2-b68e-4041-b14d-4a29f7334f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03bd84a-9046-4b62-ac64-f8bc76a941fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be773730-11d5-4ab2-bb7c-9e22bd313520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867d580c-663f-4cb8-97de-f73dc89773ab",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e04a821-57dc-4e3d-9920-837c61dcc065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ebff1d-f840-4283-b09f-a41d4fd1a270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f0a0bd-c6cb-4d1f-8efb-fb17a36e2e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba584c13-e2a2-4567-8658-e8e87691d894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ce714a-c04e-4c44-86f1-5f94f61068e7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd5cf64-8ea9-496d-a8bb-a418d7d47d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5aa87f1-6188-411a-bed3-412bd4206ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e3ba08-ca2b-4229-b9c9-017fdbca62a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedc3317-9785-470d-860e-01e2e5b81ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a03a48-962e-488c-915a-82f8deee1016",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52b0a3a-b5d7-4f0d-9569-a288790759c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b023bb1-684d-47c9-9f2b-4166cf1e86c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a16e7a-68b5-4fca-b428-172e4e562bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e0d1b8-a935-4285-b459-c03b80cacaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c282ae4-373c-4501-891a-39274d9032fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4462db-bcde-45da-af09-0d2c8bf375e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bca4e94-3bd9-495f-aadf-3b1d555d9e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e83595e-760c-45f4-ac7b-f66b80908070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2f55bd-337c-4b35-9e74-4301ff8ae7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c25c0e7-abb0-4ea8-89d6-360d3f39cd1f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bba4a62-8936-4c9f-b0e2-013e67f62b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c88bdf-9c22-4786-b11f-98294c9ad8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9110bd2-31f6-42ad-8d4e-a0e763168ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4851d5fd-e54e-411b-b4f2-936254429eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5349f0-0eb5-4f03-aae3-0036adb48d4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f37de00-2162-4c63-b5f0-b03273fa2b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25726ff5-d027-49d5-aaa7-bdae7dd965cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aef329c-931e-416e-bd36-88286e2426c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1a01a5-144c-4512-8724-98caf43a63e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea86579-b14a-47bd-95db-48455f2c0a76",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3fa352-a2a2-4f9e-b2cc-1686faca9269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace7d721-e02d-4996-9919-b2f2b1b5759e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca2fdcb-ba52-4dfc-a6a1-5d982dc3022a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1cd523-7d60-4fda-a171-06d3113c2b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8dfda8-cfb9-4e79-b9c1-6bad37e3f278",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1e8ae6-3003-4345-8899-b4b9ff3e8158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6de5e7a-17e3-4a84-ac5f-44ed22e07e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0e9d8e-48eb-48ce-b8a3-1f629ac53e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d4c709-5081-4c0f-b2fb-48ca4a577fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668247a1-cb73-49f2-808e-e668f4bf0b59",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e796fe8-9d24-4bee-a976-ab3afa7b81b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f42fb9-15d2-4e0f-a770-a0004ebfc836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9577d34e-9419-4dfd-8846-6569c24d73b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9371e0-1b05-4859-ab24-f5b4961cf438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5cacc5-2a44-4bd4-b707-1bafbf2e8127",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8d90df-c598-4eb0-a463-79ca847820b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5c7129-7511-4189-a2dd-64a7f1afdd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0116b476-925f-49a4-b71c-b1948581b8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024d4f07-8fad-4a30-b878-ed82ee806dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fb8911-e577-4c99-a427-288628a451a6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e59e2df-ff39-4bf5-8d9a-259281522d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1459a28-21dd-4066-9cbb-99b3af55bcab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c17000-a21b-4cdc-be77-cb0bc82d86b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8252f2-0824-4462-826b-eec4618b8036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95edc7cf-47ab-42d6-9148-5079a2a206ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ddd1f4-49d9-452a-9f1d-7358e31a0c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdcf250e-4d60-4631-a95c-b9454dc2addd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4bca70-cf8f-4fc9-ac99-d1a16bd1df08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aaed85-c643-4213-bd7e-faefc78c4d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29109f7d-5baf-4e8f-8702-b226df9a2ece",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac75478-4fa2-42c0-b6ec-cef037a60a7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880f3938-f2c5-497a-9aa5-3928bcd503f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7e17b5-58e4-4fac-815b-c77e79d51e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc1b29d-4b9a-45e5-bc7c-cee26d4c6972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c08bb6-7a76-4516-b93c-99bdff66405d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664e6cba-f652-454e-93ac-1fa02c2d0ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90456c7-544f-455b-bc65-45f38d0702bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef579c6-ebf5-4637-9c1e-d8ca1a687013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4aa798-7ef0-458f-a5bb-09f2dce16d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d44ad2-fe5d-4dc2-92e4-3959fb755ef2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6179db-a479-40a6-a02b-a189b7ba0870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b37cc2-cab4-41d1-a488-f0d6c758fa54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216a9e22-17f2-4afd-a3b1-cb0c17d72e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900caff7-7c79-43a1-88d3-ab5b98e3e1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a4edb9-ae7b-4e24-a298-01e42b4ebadb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2930e87a-68b6-45b9-b727-6daccbcc4a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4482cb2-8f64-4cc2-869a-4fe2c7ecdd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3aabcd-4cf7-4795-b867-1b0ea98f318c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465fddd1-f8af-41e9-98d0-dc56f1f38c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bae1e8e-f1d8-4362-89ba-12139c188307",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e0171-931d-4343-bcef-36886909e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef58cdf-4e42-418e-a335-e291fbcbabaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8447948c-c092-4ae4-95c6-9c86a452a361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccdda39-f7c7-4084-93e1-8e2f77b073f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ffc509-4d1c-4a42-87ce-bcf580c1a040",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fa005b-ec78-46d8-9ea5-8941621df16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810cb6bf-c618-406f-ba43-2bb879038023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29e8e17-4505-456a-afa7-1aed41c798dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7721c0-4f07-48f7-a033-546bf6a3965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c19dc31-9e38-4609-8ec7-563f5c7ab6a9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0155ddbc-5900-47b0-b418-70ec0c23a939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7477edd8-8436-4b33-a16e-47da26cfe772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882ee5e1-daf7-4fd1-8032-f36748819f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8146ba0d-6253-4456-86dd-ce290d3a7bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1110f83a-62fb-428b-ad95-7042bb8ac685",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363fb396-8219-456f-ba72-10336313f559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6dc65a1-5b94-4c5f-a8ef-f32f508454b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb9d022-58b9-4acb-acfd-4412990f7d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f3063a-3895-4a31-a7d2-1434bf5ef88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b502017e-0dd3-4462-9893-d036868c0a6d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0247262b-03b2-4a16-8ec0-dbcdea5787ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1fa77d-0294-47e4-a31a-b7c56cec3481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b344b5-0a9b-4b6b-b997-729523a84379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbcbdd7-8eac-4b51-adbe-e27fa174dca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ea6703-7335-44f5-bbca-f3462177a746",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5451d587-ee33-44bb-8b39-891ae9a99741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bedb1a-380c-4b77-9454-8d3e26ebdfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abfdbfb-2a3c-480a-ae88-7a5f33e8f0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f51799-3565-4f38-98e5-fa9980445095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a4fbd-af2a-4693-a0f2-23bb12ecfa26",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48edc857-5010-4748-a0c6-779f38c1633f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90825c6-56d7-452c-99d5-32d29d5cb660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052742bb-38c0-49b0-8aa8-4749d9e1f1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527110b5-81b2-4f07-a765-eb64bdd14649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33e5191-7b1d-40a6-9027-d8ec8f4934e3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6faacc7-0ee7-4a45-a7d7-fd351bc5b95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8a06dc-c96d-49ad-bd66-1696b154e4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b915e2-6cb1-4ca0-bb55-9d87dd9b704b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0cb820-7ef9-4bea-a8c9-67213babda6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa0ae1a-af83-4751-9da2-20ac963a86b9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505477ea-977e-4715-9654-9987bfa39b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6907424c-5303-41ee-ae13-47f84ac11ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0b2159-062a-4601-bbea-aa99c4bedb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbb76c4-7f44-453e-962f-0d148a9675ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2a8c02-17a7-4f03-b819-5295f9dfe6a4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb03f1a-59f2-4a69-8bae-6215f328c3ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50da00ac-c4fa-4d5a-a8d3-71a367ab679c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb42161f-0f0e-4367-bc1b-686557bf106a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e68cab8-5954-4f09-84a7-51efced559e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5c9271-1385-4fca-b645-2d44f3f1ae65",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ed9ee3-4f77-4c56-8c7b-9ba99009e0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97573bfa-9264-4851-95b5-1d16977faf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477cb56f-0042-416d-bd1d-c9b4c16e2e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bef0496-54ac-4f39-8e72-812057d8b987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cc13a9-6f78-4ff6-8b20-91ec2551e3c3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d5be75-d3d1-455c-8d05-bbffe1612f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b2197a-2e8d-4c56-a3bb-bef73807f8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e62069-d9e5-400d-8069-2850247f1134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7ebb46-f65e-49a2-8083-7414d2bc8c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2ece42-6601-45e3-95bf-39cba1f07dfd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19f81ef-95c3-437a-8c23-17f3fe6e83de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4268e9d8-c268-4c08-9f27-7492bf0773d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2ed576-fa2f-4c6c-9bb2-e30e0fa078d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39351181-9edf-4c5e-9d89-f584722f0bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5e0122-601d-4be6-ac7f-fdde748bce01",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc869da4-123e-4921-9619-a15419ca9d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd28629a-c8f5-4cbf-98da-c1e2ac9c0485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4b5201-fc3f-4acb-b8ad-4ba15acd994b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254fffa4-a1e8-483e-b8ea-6406942e093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a54e1f8-9da7-43de-a84c-5d1a6e3f2d69",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e87256-6db8-4558-b9a8-d87dcccf6732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d8393c-e69f-49c2-938b-e186d19199ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47481c16-9a0d-4e49-81bd-1f9707e2310b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d206cdd4-d102-4614-a579-8e89d91010f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95227541-e216-4236-a07f-5b937bcc9d08",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8fe69d-1a0c-460a-be70-7d598bc58966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd610efd-42c5-4190-a96a-7f3af0495b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd99fc2-5464-4909-9197-aa0e37341e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217f1e15-81bf-4b9e-944a-31dd29ac11f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d24a88b-7054-48bd-83c2-2022519a26b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0d7c45-8299-4b76-85c9-8abeefcd7a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47deff15-dd5d-4250-8147-52bab1a3d932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee30eb65-e53c-4f2c-95fb-4d796ec502cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dd22fc-6b44-478d-8faa-180c293679b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3010cb-3327-447d-86d0-b87940468d17",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b330d-f6b3-49c6-b685-1354b342d017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb440b6-cf0e-4ef9-ba6e-72ade684c4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaf00c1-55b0-41fb-bf10-02a9cb200ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959d5c32-75c5-432f-85c9-8378460fd5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634fe409-8b5a-42fa-9517-106896452924",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6654210b-cc6c-4dd3-96f5-ed5edbe2fc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e19690-1d89-4feb-8854-e80db4700ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dffd50-8140-48b6-82a4-c8adaac96ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbe4fe1-cf81-44ac-be37-0bcdf0e5818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de082f5-961e-4eb8-8eac-011753aab9ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92ecccc-bb59-48ac-bc0f-8b661f8e36c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643db69d-b398-4455-ba1f-5c7453c77268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79320c5-17ab-4246-a8c8-5571e189d2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ae763f-d932-4d7d-8086-5a91cbd3e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a565734-cb55-42b1-a30b-f0ca6cb40756",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df39c52-6746-4e21-bcae-7714b96289b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76eab53c-1cdc-4fb4-aadb-b4c78e025ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15150e1e-f3be-4764-8dd1-d2d0e4e10ea8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b2556e-5616-4a00-a368-69b868d3caca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6de75d-fbeb-499f-bee4-222bae4a4e29",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae65705-a1e7-4968-afcf-9019beb588fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ac2028-6def-431a-85ca-5734042874f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302ea24d-c3f9-462a-aea8-8ae57f91e0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853dc510-9a59-4def-8b29-d82f2a1340d0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c85484c2-148b-4302-b079-8655eb31285c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd19314a-8271-4d36-9048-ea36192e79b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da37ea83-a374-47c3-bd06-2a5914b46588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6cdffb0-78f7-412c-a944-ced30fbd83f0"
                    }
                  }
                ]
              },
              {
                "id": "c4e1213b-4102-49db-a62c-2e5de4b12724",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52024c7c-7fbc-4de1-9004-3e8442e2b655",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150038ed-4f98-46f8-ba69-3539f121d612",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30da0ecd-903c-46ce-878c-eb4fd6ec7695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75de926a-dec9-4e4e-9ddf-54a5bca01722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a0c9eab-9b65-494d-983b-e310d2844362"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f7243f6-13b0-4452-a6af-2778e9e9ae55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c107e06-07cd-436f-b1ec-b226df677c21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e44b2c7c-f404-4ef0-ac5e-478a270b1e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c926763f-7b5a-402c-9c36-571adf7a5325"
                    }
                  }
                ]
              },
              {
                "id": "eac221dc-fbe4-4716-95c4-437e51cae34e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a0421a4c-f1f1-4022-ae13-729143258aec",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e69d38-9f6a-4561-a9d3-d3184f7e3cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b5539771-d363-48c9-ad84-ed10010618e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94342312-d1ce-49ba-a03b-3f79da3c643e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df48bbae-45ad-4e92-a8c1-5a9b48d7379b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1643b3b2-e91c-4a25-891b-fa8eb1cbe456",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7a25322-9db9-4211-9fca-9017b4faf2bc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfa4e7ca-8d8a-4f7e-8ab5-0ae1e1824b45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1eafdc36-5ae3-4302-bb14-d15024316047"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00901982-8892-464c-a22f-8992872138e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5855189-cee3-4429-963f-45bb40e3dd9c"
                    }
                  }
                ]
              },
              {
                "id": "8f633d48-1533-4bca-b4b9-a71fba01c8ca",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c62be71-8b8d-459c-9db0-1c94747b45d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c627274e-492d-4a38-97f0-a43cbe649b85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00fba735-0afc-48a1-ac73-35c7a218a35f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c64b09a-c7ba-4ebb-860d-39b081023399"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13d564a2-793a-499f-b00c-84bb431e6868",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "53d89dc2-650b-4c58-96a9-762876eafc13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa33cb8b-c065-40b2-bf2d-e7e6776593cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91401673-a0d2-408f-9e11-9e49937e1e34"
            }
          }
        ]
      },
      {
        "id": "107d6770-af0a-4afe-9672-350a9758f7bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dac1f9d1-f320-47bc-8009-b912b4623b54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b265ee9-0834-491b-b6ee-f9566a2a7fcb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d961bbe1-3ee9-4980-be01-06d5357f8f7d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59f2cf0-6938-4a75-a60f-44136c03d6bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21a7d249-ff78-498c-a8f4-c4d425870700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6413fa71-89b5-4157-9e5f-b39df91b2235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efd2a848-a08e-4291-bbe9-ca8f85214664"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdbad817-5d38-43b2-8d44-88895831e9c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2beb858e-62e8-4359-bdc1-a45cac63a50a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b1d72bc-9262-4fd9-be99-6c9660b41ea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c61d5788-d79a-4b71-8394-19fd8d8623ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "919249e5-0a7b-473c-9092-be3a68536188",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c22a2aed-3e69-4d47-a171-f58d293cd5ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70d4ab77-23ff-4b8d-ac8d-91ae900c3b70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2296f37-e305-4281-ad20-0057c07f87f2"
            }
          }
        ]
      },
      {
        "id": "eb51ab23-bef9-4835-beb2-0e66e4c21e92",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5a457117-2c3d-4a0c-ba42-299a0947e8e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8686e20-7d86-41d3-a83e-ee0810e40bcb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9de053a-c2ee-47f6-b310-9270cc9e9880",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a44f23-6975-4102-91f0-1e555b12c76c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff6741e1-6e91-4ad4-a91b-498825f2774b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dc8238-24d8-490f-9623-208b001b1c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a17da4a0-f79b-4f17-ad38-67038141db61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8ae431d-596d-4ade-a3be-1151164e952b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91745e7e-1459-4a41-a272-b522c710ded8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16475fb5-ccf9-4489-8c9d-0ec5fb32e16a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "026f8ee9-6f1c-4568-bdfc-ba3aba9d2c82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d1b00fc-a845-453c-8380-f5f670eeb1f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e7c5075-def9-4315-a4cf-f7d9726270f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbbd61c9-c692-4232-8971-4154fbcba69e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d193b877-bbef-4673-9006-311a2d10260b"
            }
          }
        ]
      },
      {
        "id": "2684b650-0779-49a0-a218-fd019b9c54c6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2e739a10-6799-48a3-9810-c0e2a46f5115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6bea41b-03e2-4c9e-8f24-5ec0ccff8316",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cb21528-7e7a-4a9c-b769-604354dda8fd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12235669-9c42-4720-ab96-6330d945aa59",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f4d752-dafb-4605-a59d-cda07ca60bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab89b0c-69f1-4d97-b030-4ff6cb5e8268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3ae1ee4-3bf5-4c9c-97e7-139234c6b98f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264b62d6-835e-42d5-98ce-4b3f7cc265d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc43e3af-7008-446d-8ad5-01ef45ea9241"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44952283-2cf0-46e5-8650-5e7dd2300ee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf31d071-6e6c-4273-a085-339929d43dd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca5edaf8-1825-4023-862b-c7d23e47e132",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "460a53da-604c-476a-90fa-681aaf37f618"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40a26a06-f184-4ca3-a090-1f06784e6275",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dff80c4d-6a48-424b-93d6-b5a03353013a"
            }
          }
        ]
      },
      {
        "id": "510a63d7-d17b-4123-b753-150b1f0d2de5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cbc085c-974b-4058-b83e-a126c13e2c07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aecdddbe-cff2-4fdc-855d-28f0c0605c44",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f41a6414-998a-4963-a107-ea5175090208",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e60ff1f4-b2f9-4e9e-b16f-990dd71c9a56",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "222e87db-8c76-4fe0-9483-b9cb01478d02",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 323.22535211267603,
      "responseMin": 16,
      "responseMax": 7913,
      "responseSd": 911.4656699658443,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693009865485,
      "completed": 1693009973263
    },
    "executions": [
      {
        "id": "ad32db4c-ab16-49a5-9958-e357f4bebd0c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6cbd2f52-b550-4c86-9fc9-d5c42bb11769",
          "httpRequestId": "5280d336-6cfc-421d-a1a1-9081aa1109a0"
        },
        "item": {
          "id": "ad32db4c-ab16-49a5-9958-e357f4bebd0c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0d3917fa-59af-49a8-b14e-0e42efab56a7",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "edba81de-46fb-4dc9-8d47-bcce35815228",
        "cursor": {
          "ref": "98c8aa0b-b464-4673-85c7-b2dee0376f61",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1eb4d1d8-99b7-44b0-93d8-7cc3bcaddcd2"
        },
        "item": {
          "id": "edba81de-46fb-4dc9-8d47-bcce35815228",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9b7b6116-95ee-4e8b-87b9-f78045d30c7e",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "5a541ad5-8ebf-4317-99c8-eaad2cede859",
        "cursor": {
          "ref": "f137731e-ef10-4ed9-8e95-623f83f66af2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8a51b5bb-157e-4710-b55e-ccc64fcca60d"
        },
        "item": {
          "id": "5a541ad5-8ebf-4317-99c8-eaad2cede859",
          "name": "did_json"
        },
        "response": {
          "id": "210d2064-e121-4761-a362-aeb3f2ba4622",
          "status": "OK",
          "code": 200,
          "responseTime": 1327,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b13fe51-0d30-4033-b45d-28bfdd62320c",
        "cursor": {
          "ref": "476a17bf-cb01-4a83-9871-d5b059663ac8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ebef1fca-0cfe-47f6-b3d9-2c50ca5b93df"
        },
        "item": {
          "id": "3b13fe51-0d30-4033-b45d-28bfdd62320c",
          "name": "did:invalid"
        },
        "response": {
          "id": "9212cbda-2f3f-438d-b529-37aaf4dc38f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b13fe51-0d30-4033-b45d-28bfdd62320c",
        "cursor": {
          "ref": "476a17bf-cb01-4a83-9871-d5b059663ac8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ebef1fca-0cfe-47f6-b3d9-2c50ca5b93df"
        },
        "item": {
          "id": "3b13fe51-0d30-4033-b45d-28bfdd62320c",
          "name": "did:invalid"
        },
        "response": {
          "id": "9212cbda-2f3f-438d-b529-37aaf4dc38f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdead31a-862e-4d9d-8104-404a22fbba43",
        "cursor": {
          "ref": "ab3425c5-249a-4ef5-a194-607c5513b51b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a1489490-cc0d-4f5a-ace4-1b4144498e3c"
        },
        "item": {
          "id": "cdead31a-862e-4d9d-8104-404a22fbba43",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "776ac1a0-d61b-48cf-8d12-766cf9eca85a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 307,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a2e91-5135-46fa-9a85-ba76f62bbe2c",
        "cursor": {
          "ref": "2d1e322e-9a81-4a3c-b278-c560d61efe27",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "63c34961-a877-4e88-a2e9-1b90431e4442"
        },
        "item": {
          "id": "d82a2e91-5135-46fa-9a85-ba76f62bbe2c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a30762b8-b8dc-490a-9c28-6f5494f597a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 328,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af94032a-0ec4-4542-a5ca-3c634fdff0f1",
        "cursor": {
          "ref": "ca6f3326-7bd6-431d-8b98-f9290d7b3f02",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "58939370-927a-409b-a99e-44d638ad27c6"
        },
        "item": {
          "id": "af94032a-0ec4-4542-a5ca-3c634fdff0f1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bda19e74-e6da-4079-91b6-6ed34ab1de44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7d0924-5fd2-42e0-9bfc-4dae24ee0c46",
        "cursor": {
          "ref": "fb33dbc2-991a-49c7-9dfa-c2d4b6a8c2ae",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c20ed593-c55a-488c-ad72-8b1c56fdd28e"
        },
        "item": {
          "id": "3b7d0924-5fd2-42e0-9bfc-4dae24ee0c46",
          "name": "identifiers"
        },
        "response": {
          "id": "c672a014-07fd-4806-97f3-9d5caa4d7e10",
          "status": "OK",
          "code": 200,
          "responseTime": 1612,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e796126e-a079-4cd9-b961-beb05ad7ce48",
        "cursor": {
          "ref": "80504e0d-e4c9-4730-91e8-c423e23950c6",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "005fde5b-6166-4341-b9d1-cdfdd058f35f"
        },
        "item": {
          "id": "e796126e-a079-4cd9-b961-beb05ad7ce48",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "02cf3bc0-cacd-45b2-b5ee-65d5889bf86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33af6ed8-f257-4a94-abd8-9594b068f823",
        "cursor": {
          "ref": "cee01830-cee2-40a5-ba09-207f83a335a4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "446ca594-a0c1-4c51-80c2-82cd2095bc0c"
        },
        "item": {
          "id": "33af6ed8-f257-4a94-abd8-9594b068f823",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0893c79b-de75-4f98-a3e6-4e4b32c5daca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73665b86-d276-43ff-9c8c-6dd6f77981e3",
        "cursor": {
          "ref": "6a9e0121-c942-4d17-9892-e00e4ee7d35a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9c5ab651-3ec5-447d-9189-bee184d8763b"
        },
        "item": {
          "id": "73665b86-d276-43ff-9c8c-6dd6f77981e3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e224bd01-8c7f-435f-ad98-0c28c52dfce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252f3fa1-5f21-4c11-b7a9-ba1c0e88aba2",
        "cursor": {
          "ref": "002b1ebb-0b53-4e49-aede-776218be873b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "01817b7d-08b3-4c8a-9028-6bab15463dc1"
        },
        "item": {
          "id": "252f3fa1-5f21-4c11-b7a9-ba1c0e88aba2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e6d58c8d-6cfd-4951-87c5-bf139d98898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a17f175-53bc-4547-8546-9258fba55022",
        "cursor": {
          "ref": "ff9b3f9a-6b27-46f3-b9c8-0d18077c473d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3891aaf1-47df-4cf2-9080-12afa416d2fc"
        },
        "item": {
          "id": "2a17f175-53bc-4547-8546-9258fba55022",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ca394491-c635-4217-874f-33b8f49155d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02829947-923c-4d7a-a05c-9f31700fe062",
        "cursor": {
          "ref": "a921971c-b337-48b7-af0e-aca6850cc2ff",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "58eee215-9756-4b7d-bd74-37e559dc5eaf"
        },
        "item": {
          "id": "02829947-923c-4d7a-a05c-9f31700fe062",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cfd498a2-160c-4d81-89fe-645352bb027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f7843e-9c6c-4e49-9d71-0db70c9fc326",
        "cursor": {
          "ref": "a5bb396d-dcbe-4f3a-8fbb-e7908b38e3b6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "14ae52bf-5095-4a6f-a657-a396455974e9"
        },
        "item": {
          "id": "f2f7843e-9c6c-4e49-9d71-0db70c9fc326",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e142452f-76ff-4193-91c2-e3ffa5330e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb191a9-6bee-47b4-bdaf-0314c294ef95",
        "cursor": {
          "ref": "6109b6af-82ca-474a-8d52-29f7f3376f24",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa580b6a-674e-4887-ae20-de81efc6f351"
        },
        "item": {
          "id": "6fb191a9-6bee-47b4-bdaf-0314c294ef95",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c9d3615a-f1ab-421d-bcc2-aed63cb53882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffef8dd-68a4-4561-a067-09e7bb2194d7",
        "cursor": {
          "ref": "bff5f5a0-9b78-46c4-97b7-15a1dc4c0c51",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5bc4b2cb-ec46-4b97-b475-d937aded7984"
        },
        "item": {
          "id": "9ffef8dd-68a4-4561-a067-09e7bb2194d7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f5650041-845b-4f00-bbfe-5560f4514322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b717fd5-2b29-4efe-8d80-b06accfac8ba",
        "cursor": {
          "ref": "3184de4a-06e3-49d5-b892-ecc9a9ad6d9d",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "86536ce8-cd6a-427c-9024-fb3f98a4bc7d"
        },
        "item": {
          "id": "6b717fd5-2b29-4efe-8d80-b06accfac8ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f7195318-da53-4bbf-b7e1-ca6e3040ea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67817ee6-158d-4518-a8be-aa38be838cd0",
        "cursor": {
          "ref": "d5e02811-ca92-40d4-adcf-6456925bbb54",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bf971c49-0e24-4eba-8484-9725735bd990"
        },
        "item": {
          "id": "67817ee6-158d-4518-a8be-aa38be838cd0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8d52201d-5399-471a-aa68-ee5021752122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3149c659-0289-420a-8eff-1a7a70aa5702",
        "cursor": {
          "ref": "48d65f3e-5e28-4756-8258-c80adfd84944",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "466cab7b-741b-43af-87a9-9b809eb1c4d8"
        },
        "item": {
          "id": "3149c659-0289-420a-8eff-1a7a70aa5702",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "acb791f9-4e2d-40b5-bf4b-5a2b1c65c1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152e04cc-06a8-4073-b46e-9b1b72ad3530",
        "cursor": {
          "ref": "f77af1b2-215f-49fe-98a8-39b8ae8f2594",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1fcdb640-658b-41fa-84e7-fee93d081f33"
        },
        "item": {
          "id": "152e04cc-06a8-4073-b46e-9b1b72ad3530",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fa966912-bab6-4970-ab6c-6b0b260d2d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4907e471-31a8-459b-9bd6-f16ef7a4ae67",
        "cursor": {
          "ref": "e1fb87b6-6df2-4a49-ba6b-68e053f5b2d0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7618514d-6f8f-447c-9ebf-c5e62d99335f"
        },
        "item": {
          "id": "4907e471-31a8-459b-9bd6-f16ef7a4ae67",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c83a790d-3460-4dfc-a733-83ba08c01f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723726e3-f215-4101-9bfc-8524b5460c8a",
        "cursor": {
          "ref": "65791b1b-032a-4283-8e99-41c1ab47418b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c6fdd0e-24b6-48d9-808e-03b058bc1fb2"
        },
        "item": {
          "id": "723726e3-f215-4101-9bfc-8524b5460c8a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ea2417cf-e2f6-43f6-8f0a-80d8661e4c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c7ffa5-7182-4069-b500-1757c7c054aa",
        "cursor": {
          "ref": "faf7292b-c1cd-4deb-a602-100457cbd98e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b3ad8c31-3436-428f-a7fa-d1be8e3d6b7d"
        },
        "item": {
          "id": "08c7ffa5-7182-4069-b500-1757c7c054aa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea515ab0-f75e-41af-878c-a93bb9701cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa26b6e-f80f-4d6c-bce1-3f38a7583de2",
        "cursor": {
          "ref": "db5b7cd0-5e43-484a-81d9-eea0a9ac91d7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f19a285-f7e9-4370-b466-1954b88c1475"
        },
        "item": {
          "id": "8aa26b6e-f80f-4d6c-bce1-3f38a7583de2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c451e299-51ea-4821-a24d-1bb0fef0caf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc9d22-ae69-42f7-aefe-1bf99c958102",
        "cursor": {
          "ref": "75296bd5-11e6-4108-8c1b-aed47b60b1b6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e7d5f2e8-e1ec-4a8d-a644-6ec26bb95f62"
        },
        "item": {
          "id": "73dc9d22-ae69-42f7-aefe-1bf99c958102",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ea1d3884-06ba-4ae9-bf7b-9aad3bac28e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad95dbed-eec0-4b72-b1fa-b8fe19d41a68",
        "cursor": {
          "ref": "1371f299-35e5-46f4-9584-223ec911b89c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6b4a9d09-887a-431c-9971-5d0895ad1311"
        },
        "item": {
          "id": "ad95dbed-eec0-4b72-b1fa-b8fe19d41a68",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f10825e8-c077-46ca-9dfa-4958083d1433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057204f2-60bf-4694-a7d3-b220d469c558",
        "cursor": {
          "ref": "e132184b-0125-4f3a-ad3b-2ab8ca030fc0",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dcdc4c8b-a26a-46c2-89c4-498306c6ed6c"
        },
        "item": {
          "id": "057204f2-60bf-4694-a7d3-b220d469c558",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3e0e3668-de99-43bb-b0b3-b330ce0bfa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6127830c-63c0-46ad-9c20-fc69c214320e",
        "cursor": {
          "ref": "1b450d43-51a9-4106-8bdb-3767f7bdca09",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "710655c8-5fbe-43ea-9ee3-666e145740c0"
        },
        "item": {
          "id": "6127830c-63c0-46ad-9c20-fc69c214320e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ef613ff2-93fd-4aaa-bb1a-fdbdfd2f41fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eea982-1223-45b1-9266-85111aa0cd8f",
        "cursor": {
          "ref": "49b94a69-494e-4f19-bf53-02ffbe5598c2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6113ba4f-0aaa-4d9e-91cb-ddaed94da18d"
        },
        "item": {
          "id": "12eea982-1223-45b1-9266-85111aa0cd8f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5099242e-9ced-43d8-8b0e-05767d650c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c951df0-9e9f-4969-890c-1ca775d0e534",
        "cursor": {
          "ref": "aa24b4c2-82ea-41df-afec-6a74d962e2e3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6119e2f3-5786-4d76-8a1d-716dc90abb76"
        },
        "item": {
          "id": "6c951df0-9e9f-4969-890c-1ca775d0e534",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9b407ba8-dc73-4152-8121-3c50ae940b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf0b641-9801-467e-ba30-67d53c85d3c2",
        "cursor": {
          "ref": "23d96b1a-a8a5-465b-a556-f2da2819b7a5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1c130d2d-e4f5-4ccc-ad30-beb3317a3b52"
        },
        "item": {
          "id": "9bf0b641-9801-467e-ba30-67d53c85d3c2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e7634d4c-e14c-4cd2-86b3-1f972d0511f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69893239-129b-455d-972e-5ede8d8b2913",
        "cursor": {
          "ref": "74ac71ae-2ac8-49cf-8c20-7d4a7818d6ab",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c0ff4ee8-ef37-4a5e-8b02-4cacc92f94ec"
        },
        "item": {
          "id": "69893239-129b-455d-972e-5ede8d8b2913",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a78bca25-cb86-4eef-a994-db1faf3f5d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9bee00-18df-4454-b5d7-4011547773ec",
        "cursor": {
          "ref": "5ceb129a-380b-476c-b072-cb6ef2869ef6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b3bec056-693b-42b7-aa2c-ac883c2258a0"
        },
        "item": {
          "id": "3a9bee00-18df-4454-b5d7-4011547773ec",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6150dbf0-e013-4b2b-b939-89038df12688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912dc28f-c65d-4228-97ca-68ebcca43bbf",
        "cursor": {
          "ref": "071c2b41-029c-4a52-b0ad-d8278579d574",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "68f00c2a-e2e4-4385-92fb-f89eaf4275bc"
        },
        "item": {
          "id": "912dc28f-c65d-4228-97ca-68ebcca43bbf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "76b275a8-e486-4fd9-bc24-4b2f6863c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d89598-6d84-4e54-bb29-7dd5fc12ab41",
        "cursor": {
          "ref": "5b4fae14-48bd-433d-8282-3369707feea4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e703955-ac48-4cf7-a652-d79f291ef25b"
        },
        "item": {
          "id": "f0d89598-6d84-4e54-bb29-7dd5fc12ab41",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6dcfd1b4-b2eb-4bff-9c95-424c53ac3c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbb1b51-9541-4c12-b365-12659cd4d5fc",
        "cursor": {
          "ref": "1db0cef0-e576-4f0c-8f39-609724133f06",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cfbc56ae-dd58-49ab-9d62-0fef5f80b022"
        },
        "item": {
          "id": "afbb1b51-9541-4c12-b365-12659cd4d5fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c33a23c2-0132-41be-87d5-8f579ed52136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0519591-ab16-4ea2-8986-daf91905e6c5",
        "cursor": {
          "ref": "31be871a-a35e-45a2-b974-9262d619ad64",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5cba93fb-821a-47d7-aec9-c16ae1a2a7e2"
        },
        "item": {
          "id": "b0519591-ab16-4ea2-8986-daf91905e6c5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "02deec64-9bb1-431d-88f8-abbe03fed78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec0c90-23e3-4023-9015-8e28219a0b6b",
        "cursor": {
          "ref": "3cf42089-4d41-4162-9110-e62c05bd85cf",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ca246b3c-48b4-46a9-8ec8-513ec04c7953"
        },
        "item": {
          "id": "bcec0c90-23e3-4023-9015-8e28219a0b6b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f94247a3-29ea-409d-8f0f-9bfaad67954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331bf6bd-30b1-4056-b7a1-80f8d317f59c",
        "cursor": {
          "ref": "be1969e7-9e15-4ee7-9137-269e3abd4ad1",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f000ad88-477e-47e2-90d6-ab8506ae8008"
        },
        "item": {
          "id": "331bf6bd-30b1-4056-b7a1-80f8d317f59c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e9b1c5ed-7736-445c-b5a3-0dc92d0589f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f81c456-4f24-4378-b58c-4799539da307",
        "cursor": {
          "ref": "b7db0f42-abaa-41f6-89f8-0035ab35177f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a322263d-b662-449e-abf4-4b9762797397"
        },
        "item": {
          "id": "0f81c456-4f24-4378-b58c-4799539da307",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fbf631f2-7657-4592-b550-a4a1b051cfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06171498-74d2-42ee-b673-4ab9603ea954",
        "cursor": {
          "ref": "5b82e17f-9f2f-45d6-ad18-196e19c526d5",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6756561a-30ad-4573-b507-f72611183896"
        },
        "item": {
          "id": "06171498-74d2-42ee-b673-4ab9603ea954",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b12b822a-f5ed-4bf4-9251-11d9d24c0f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce9fc37-03f7-4f49-ab12-648424ade1f1",
        "cursor": {
          "ref": "b427c8c3-10a2-4e56-8960-85bc800c23fa",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "370cd9a7-561b-4085-9346-f3f58a9997f5"
        },
        "item": {
          "id": "4ce9fc37-03f7-4f49-ab12-648424ade1f1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3038ce08-2d19-4127-8d97-41e3a42e0854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5b834d-df54-438b-af36-bcb5002f07f4",
        "cursor": {
          "ref": "e6403c8e-d947-4129-92c8-ee33ae3a6da7",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eee6257b-3ae1-491d-8dbb-e158cb18a080"
        },
        "item": {
          "id": "5d5b834d-df54-438b-af36-bcb5002f07f4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1ef36c79-ca01-4950-84df-017ac672e427",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 607,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da96595-53b0-4ec3-8d76-a727db677381",
        "cursor": {
          "ref": "28ec1a9e-3584-49da-97ad-c63f6c6fc349",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8b5d1198-22ce-4576-b19f-8ea5cbdf54b8"
        },
        "item": {
          "id": "1da96595-53b0-4ec3-8d76-a727db677381",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d51b3ecd-988d-4abf-8b74-ff91c37e374a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec2c262-6997-48e5-9855-fef25a02bee8",
        "cursor": {
          "ref": "6db7f2a2-e17f-4835-8c0d-02a7e4548e58",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "47df69e3-58a2-4d51-a2de-d2ce8fb4d5ac"
        },
        "item": {
          "id": "cec2c262-6997-48e5-9855-fef25a02bee8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "391a2e83-b2d3-4517-a054-b312f69b4038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04848640-bb72-4dc0-ba0d-7f610124e033",
        "cursor": {
          "ref": "68ac5d4d-c348-4bdc-a41a-67aa5feec3eb",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a0b091d6-9037-425b-876e-12a7d261aac0"
        },
        "item": {
          "id": "04848640-bb72-4dc0-ba0d-7f610124e033",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "219ef856-0a13-4c7a-b334-236f95723b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17eeb8d-52ad-431a-a57f-310931e2288f",
        "cursor": {
          "ref": "91267a1c-3836-4d1f-80ca-505a33553ff5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4f431a02-3b76-43a8-baa7-68a6a2488ccd"
        },
        "item": {
          "id": "f17eeb8d-52ad-431a-a57f-310931e2288f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0cbfd5a8-a3ba-48e0-8f34-de348e3d8df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3264c842-4e86-4ef8-aa2c-1dc330c74a44",
        "cursor": {
          "ref": "95bdcaea-6587-45de-8150-fd05e7b22161",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34813b0c-3607-45dc-814d-41d374a6d9ce"
        },
        "item": {
          "id": "3264c842-4e86-4ef8-aa2c-1dc330c74a44",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3997ea1c-71b4-4833-b065-e6b1138b3f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49a5338-6cc9-42eb-8ac3-98855ce47278",
        "cursor": {
          "ref": "de30b355-dd3d-4e76-af02-945c5bbbc199",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee09ca53-1b18-4480-a8e5-0538f361afc2"
        },
        "item": {
          "id": "d49a5338-6cc9-42eb-8ac3-98855ce47278",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ea4847c9-971b-4d78-b454-77b0de6ced89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab07a6fc-c0f7-4c79-98bd-710f527bd2fb",
        "cursor": {
          "ref": "935946f8-49f6-47a6-8ac8-28029d2e3a7a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4212d206-244c-40ed-b212-c443f686a8d2"
        },
        "item": {
          "id": "ab07a6fc-c0f7-4c79-98bd-710f527bd2fb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "62ba972c-fd7a-4a44-b88c-c39eeed3b1d4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 576,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2687b23-00df-4827-8b4b-e4e278df8656",
        "cursor": {
          "ref": "472f12e3-3b85-4954-a289-7d2911d6539f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "38d0edcc-a204-41a9-be77-00450d0f466e"
        },
        "item": {
          "id": "d2687b23-00df-4827-8b4b-e4e278df8656",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a77662a9-eae3-401e-bc6f-2f6cd99aa2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa75436d-666e-4841-83c0-d1de98040638",
        "cursor": {
          "ref": "43b0c1a4-c22f-4a88-a44c-b179ce1b9f34",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d5fc158f-ac07-486a-9ce5-cad3dcc9268b"
        },
        "item": {
          "id": "aa75436d-666e-4841-83c0-d1de98040638",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3890a69e-b4fd-49be-9646-19792193fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80035933-0076-40d0-b127-ba06f0873b57",
        "cursor": {
          "ref": "e9460aad-381b-43cd-806e-f0e57f6824e5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fad17031-7489-4932-a8ea-f6ba8b3f6f81"
        },
        "item": {
          "id": "80035933-0076-40d0-b127-ba06f0873b57",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "352e92b2-0b20-4ba1-b3de-67528780ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9972d91b-2a90-4461-841d-6ea47c8958b1",
        "cursor": {
          "ref": "7b1766af-6988-42ed-9678-981943451fe1",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e7303a7c-a6e9-4581-a60b-78ce53d7a14c"
        },
        "item": {
          "id": "9972d91b-2a90-4461-841d-6ea47c8958b1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cd636b63-0fc8-47ee-b42d-475b686f5ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de0dde5-9d8f-49c0-9eb0-b32fd099c34c",
        "cursor": {
          "ref": "9b83dc59-064a-4923-ac09-84b83928feaa",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5eee8a95-7cc3-459a-a88b-c886225415b9"
        },
        "item": {
          "id": "9de0dde5-9d8f-49c0-9eb0-b32fd099c34c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8f2d61e5-bf61-44f8-8721-370b3f8061e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf2ab89-458d-4d59-bdc2-a077a6931ddf",
        "cursor": {
          "ref": "7021279a-da88-4761-b4bb-038268b38d3d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "30f36416-3824-423b-a0a2-5d3128cc1955"
        },
        "item": {
          "id": "7bf2ab89-458d-4d59-bdc2-a077a6931ddf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4bfb9343-c739-41b2-b62d-cd2ad5b41984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f79d75c-b326-4541-afd2-9653f6909d04",
        "cursor": {
          "ref": "e8e6288b-eb50-4581-b7c2-5b061004d3fb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3f1bd617-46ee-4c20-89e2-2d5b40dd4d1a"
        },
        "item": {
          "id": "7f79d75c-b326-4541-afd2-9653f6909d04",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ce85b4ba-122e-48c7-9c7b-fb952445f800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edea5cb-154d-4be8-9270-eebf0b6bc60f",
        "cursor": {
          "ref": "26ab441c-a3a7-4de4-a427-bda76838d11d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a14a5265-f0ba-4e43-8a4c-f9027ce936c4"
        },
        "item": {
          "id": "1edea5cb-154d-4be8-9270-eebf0b6bc60f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f166e44f-a5a9-4610-8801-d29238faac8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc9b705-30a1-49d4-97e4-0dd6d4e0406f",
        "cursor": {
          "ref": "e389e197-37f5-4f2d-9d38-4d65f0e04a0d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b4816bea-0046-4cf9-9237-1b162c464785"
        },
        "item": {
          "id": "9bc9b705-30a1-49d4-97e4-0dd6d4e0406f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d7d895f4-446a-4d1e-9bff-1902e8a83786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad91093d-9706-4491-af28-4ec48990b1ea",
        "cursor": {
          "ref": "618082cb-7ad6-4e7b-8aa0-19c75ce9956c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0bdd3cdf-100c-494a-8f5d-58fc161b81ba"
        },
        "item": {
          "id": "ad91093d-9706-4491-af28-4ec48990b1ea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "19cfd27b-e82c-4c90-8683-bfe238575752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3be0a4-2d2a-46e9-882b-53abb6aa2c9a",
        "cursor": {
          "ref": "0be3e2fa-365b-450f-b526-fefb47888038",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5d59cfb0-214d-4083-893d-91181d08c2e1"
        },
        "item": {
          "id": "ba3be0a4-2d2a-46e9-882b-53abb6aa2c9a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "36b517b9-468b-466a-a9ad-a7d61195e183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b89852b-3b89-474c-9a69-a156f5d43be7",
        "cursor": {
          "ref": "723dc5c4-cede-431d-9897-61a74c9ad908",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cfbf8031-c2b1-4776-b4c3-8a7365ef4dc6"
        },
        "item": {
          "id": "0b89852b-3b89-474c-9a69-a156f5d43be7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "681b65d4-f81f-4cf5-9c41-b786e0d25093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c69005-b778-4c92-965f-d7fa5565a1d8",
        "cursor": {
          "ref": "24be24c0-0fbc-4cd0-bf93-a779482aab0e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b3e9e5c5-b97a-4d49-b3d0-ee52141b3ba7"
        },
        "item": {
          "id": "e0c69005-b778-4c92-965f-d7fa5565a1d8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "faf71aa9-e72f-4944-9fbd-a678c15703e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c45f0b3-cc0a-4c4a-8073-69b0d9a01651",
        "cursor": {
          "ref": "00e57b05-3069-467a-b7cb-22d65e526e5f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "871dc3d9-488c-46f0-92c3-cdf9317bd3db"
        },
        "item": {
          "id": "8c45f0b3-cc0a-4c4a-8073-69b0d9a01651",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f28101f5-abc4-4b27-8432-8a8a5d964e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e93c47-6cdf-47ff-acd2-837d083a7380",
        "cursor": {
          "ref": "44d30a6c-fc97-486f-9890-368799f0357c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3113e91a-e7fd-433f-a474-6086c2321392"
        },
        "item": {
          "id": "a0e93c47-6cdf-47ff-acd2-837d083a7380",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b30bf6d2-404e-4c7d-80b3-90990726ef84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e653ad1f-1dd9-454a-8f09-16590ba3e14d",
        "cursor": {
          "ref": "862495cb-1f8c-437f-8713-e942ec3be3b5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5248e7fc-68ce-488c-9896-50c3b2f5e792"
        },
        "item": {
          "id": "e653ad1f-1dd9-454a-8f09-16590ba3e14d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "940266bb-f487-4976-9bf5-3ebaf1e547f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1e622a-102d-43a4-ad32-4d1baf64752a",
        "cursor": {
          "ref": "042fb5d9-9a91-466e-8041-38063986d528",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8ffc71aa-17fa-495b-81a7-917f75e2cabf"
        },
        "item": {
          "id": "ee1e622a-102d-43a4-ad32-4d1baf64752a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0844cd3b-0b5c-4f3f-a22d-1e3279097d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8e8322-8b16-4268-8c22-221137a11207",
        "cursor": {
          "ref": "f264f7c0-f7a6-4798-8add-9e58b0419d10",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5fda3c2d-fb77-4f52-94a3-0bebbd363eb9"
        },
        "item": {
          "id": "4c8e8322-8b16-4268-8c22-221137a11207",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "adab1434-2029-4502-bce1-5fbcfbf10d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329cac59-0c95-4c22-821b-025280870290",
        "cursor": {
          "ref": "f850b59f-4251-49d5-84f6-3bf84dd7aef3",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "24fd0861-d3c9-4857-8c04-aa2d654e41d9"
        },
        "item": {
          "id": "329cac59-0c95-4c22-821b-025280870290",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6d2b0eae-e883-4d57-a8e5-1ad34d14f0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121e7ac6-6cf2-4a7b-83eb-2dd25cc36ed8",
        "cursor": {
          "ref": "afb63d00-e4cf-4b27-a38c-c821910820d1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dd92c077-ce72-43e7-9641-dbf5a9b73c0d"
        },
        "item": {
          "id": "121e7ac6-6cf2-4a7b-83eb-2dd25cc36ed8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5c8ab914-925b-49df-bd91-91158107beb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e43c55-c564-41ad-91c5-07c1a96d4ef5",
        "cursor": {
          "ref": "02eec8d2-4949-49d8-87cf-83d84a7461a8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bceec0ed-3d4d-4f14-b52f-3f2df6c488b9"
        },
        "item": {
          "id": "d3e43c55-c564-41ad-91c5-07c1a96d4ef5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b98b6a09-b9d7-48ac-b57c-a345630c91ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d545d3-644f-4a29-81b6-f549deb87d11",
        "cursor": {
          "ref": "d4c9f047-c283-4391-a9a5-9728388063ad",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4e45f74c-ec34-4bf8-a4a3-1e693080650d"
        },
        "item": {
          "id": "15d545d3-644f-4a29-81b6-f549deb87d11",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d20fdd98-a461-4c0a-8245-198facf8daaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b73c77-9420-4439-adbc-5a0e9906738b",
        "cursor": {
          "ref": "e8059b5d-fcc4-46da-89ac-1f9d5e3db5c5",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "df87fae4-0ead-4821-a14c-4cc49e4d252a"
        },
        "item": {
          "id": "07b73c77-9420-4439-adbc-5a0e9906738b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5a9f0a28-7de8-4356-83f4-c06986061c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933bdfd9-d104-411a-b37e-14aa8ee5419e",
        "cursor": {
          "ref": "0e3a2a5f-ecee-428a-8a1a-9fb17728e695",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5eb7f691-71ca-447d-bc2d-6e29069653a3"
        },
        "item": {
          "id": "933bdfd9-d104-411a-b37e-14aa8ee5419e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c842d27c-953b-41d8-910b-1be6556b67d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2376c8-6808-4436-ab55-85c375eaaa8d",
        "cursor": {
          "ref": "c48f514e-3936-4ee0-8d94-7b304f95889c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b2c0bff8-a5f0-405a-96dd-96b4788ef126"
        },
        "item": {
          "id": "fd2376c8-6808-4436-ab55-85c375eaaa8d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "28bb618b-717c-4393-84ae-99f47d0a68dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a12b12-2cac-48cd-92b8-40544734393d",
        "cursor": {
          "ref": "dafc6fd6-86ae-4179-96ef-111771614e48",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f41f614e-dc70-469e-acda-38641b91faa9"
        },
        "item": {
          "id": "28a12b12-2cac-48cd-92b8-40544734393d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "41bf7442-0248-4529-90d9-94e2aecbb4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e16c90-f74f-4983-be57-75570a8679a6",
        "cursor": {
          "ref": "8128cd7e-3fc4-4a99-bd8a-0086d08e969f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d31ff35b-aae8-468d-83a9-aa35683a51c0"
        },
        "item": {
          "id": "58e16c90-f74f-4983-be57-75570a8679a6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "08659df8-51c4-4afe-8465-c3490ccaceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f949db5-3647-4957-9ea1-6404551aab37",
        "cursor": {
          "ref": "128c16b5-c610-48f1-ac41-a38665b581a5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d411532a-2a43-4e37-8872-0a57bc96e9f2"
        },
        "item": {
          "id": "1f949db5-3647-4957-9ea1-6404551aab37",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8b93c52f-31fe-4faa-b52f-0e0597b27244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8fcb7d-f178-4996-ae2d-04c4e54a439a",
        "cursor": {
          "ref": "bdffc12e-a9f2-4421-b28e-566c39812882",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f016e876-8a55-4a05-91d4-cf41d7815506"
        },
        "item": {
          "id": "cc8fcb7d-f178-4996-ae2d-04c4e54a439a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "113a7b91-c86d-4731-9ab3-e3fc325bb04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4703dca-4624-4fcc-9fda-ea1312185c77",
        "cursor": {
          "ref": "856bff32-a61c-419e-8ccb-4659a1244357",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6ed9d768-0115-4364-99cf-1f2b327c1f8f"
        },
        "item": {
          "id": "a4703dca-4624-4fcc-9fda-ea1312185c77",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f7b14ff6-31da-491d-89d1-e8bad2fe64ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168496c7-7042-4159-b792-a5eb7990a95e",
        "cursor": {
          "ref": "ccef764c-4fc6-43ec-a6e8-4245a67c76c5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "14ebbf73-e9e1-49aa-bb62-24eb19ecf4bd"
        },
        "item": {
          "id": "168496c7-7042-4159-b792-a5eb7990a95e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1fb15a64-8d9f-470f-aa0a-fe596c842898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb9285e-00db-4c05-a9ec-fcc6f2158b50",
        "cursor": {
          "ref": "196c49eb-6013-4043-b222-a0dbdab35654",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c0708cd9-dc14-4020-9f7a-9db0c1dff7c8"
        },
        "item": {
          "id": "9fb9285e-00db-4c05-a9ec-fcc6f2158b50",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "23a7669d-5cd8-4f6b-858a-1af72125116d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f56a1e-4453-4e86-ba4d-04dbf5c4121e",
        "cursor": {
          "ref": "3982a1d7-bcfa-4b59-bfdd-0d1d7367d34a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2d16bf26-a51a-47f6-9fd8-b3b31424a56d"
        },
        "item": {
          "id": "46f56a1e-4453-4e86-ba4d-04dbf5c4121e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f0a90847-b13c-406d-bf31-2e3d6280a29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a3d241-08fe-4dc9-9e5f-4881dca38ff2",
        "cursor": {
          "ref": "5d4c5e4e-bb96-4166-94e6-3a73c7b691d7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2e2bc1b1-f876-4466-a166-842b2e46fcd0"
        },
        "item": {
          "id": "56a3d241-08fe-4dc9-9e5f-4881dca38ff2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6c825282-bd25-4933-9479-c46b555b9feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38334a9f-b36b-4be3-801f-7619a4d1f4fa",
        "cursor": {
          "ref": "a06b0878-601f-4e8a-b5a2-752837dad88e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9e07fa42-d82e-417f-86f7-81ed7e6dc663"
        },
        "item": {
          "id": "38334a9f-b36b-4be3-801f-7619a4d1f4fa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fd7c5974-aa7b-4903-8109-49e6433aaf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d6d5a1-3422-46b9-9c87-8a8ac3e0497d",
        "cursor": {
          "ref": "bce09888-7cfa-4aed-8280-7a4f27597786",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "95e2809e-c565-4153-bbf1-291de4de5ea4"
        },
        "item": {
          "id": "45d6d5a1-3422-46b9-9c87-8a8ac3e0497d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d74dc7d9-326f-4fbe-82b8-a472d175797f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb206d6-fe15-421f-91b1-f6af15509bfd",
        "cursor": {
          "ref": "812d6a9a-ed28-4876-b4d3-7f7f0111b54f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7d1c4a66-13cf-403d-84b5-ff43c191980f"
        },
        "item": {
          "id": "ecb206d6-fe15-421f-91b1-f6af15509bfd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1b66ff6a-aea9-4367-881a-dd3042959a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa37544-ec4c-4e7d-80d9-ba8535544d2a",
        "cursor": {
          "ref": "2c98002a-d985-4c93-a446-cc3901945ef4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f74f0618-be3e-42cf-837f-3e3d87e7c919"
        },
        "item": {
          "id": "faa37544-ec4c-4e7d-80d9-ba8535544d2a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9408b261-7cf6-426c-b3c7-a0a14fe76d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef2f26e-d30c-445f-a55f-840771295862",
        "cursor": {
          "ref": "9b39c0b5-a3e6-4073-9ab6-3e0e70234542",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "31cef7d4-7b56-47b2-87c8-4f334358d274"
        },
        "item": {
          "id": "bef2f26e-d30c-445f-a55f-840771295862",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "057c9ed6-5527-4138-8202-4caacd2ba05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c559c-2215-4333-b50b-8824157847c9",
        "cursor": {
          "ref": "a35796d2-ecf0-43fb-ab6f-5c874ae0c937",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b4cacaff-b395-40fe-9e7f-6baea1000e24"
        },
        "item": {
          "id": "2c8c559c-2215-4333-b50b-8824157847c9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "39f550a9-21e5-476c-b467-9993683e1b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb08c60-2eaa-4dd6-813e-b04c4ff767a5",
        "cursor": {
          "ref": "b3359ab6-4229-4914-9a3f-a9786a1310e0",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "65df1bde-55aa-4718-af89-7cf233f56de7"
        },
        "item": {
          "id": "dcb08c60-2eaa-4dd6-813e-b04c4ff767a5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c2703563-bcec-465b-a6c7-433388394536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358b7aab-1c5e-42cf-bdc8-65b10c435f98",
        "cursor": {
          "ref": "bc4e3b9a-cfa8-488d-bbea-3207f427db54",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e51667d3-0d3c-4189-a01d-bf88569ac9b5"
        },
        "item": {
          "id": "358b7aab-1c5e-42cf-bdc8-65b10c435f98",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6f9014df-833c-426a-847a-9cc8ebff8a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeeda56-ae86-4eed-b917-9e28efad1184",
        "cursor": {
          "ref": "cd20b12b-1681-4f29-9321-9b05f8a3d774",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ee89e780-592a-4f7f-a440-1202befd6180"
        },
        "item": {
          "id": "bdeeda56-ae86-4eed-b917-9e28efad1184",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fa213453-573b-4797-9d15-a0291094adbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa83e8-2c74-4ee9-8f0d-2023179e20b2",
        "cursor": {
          "ref": "e2b821e5-23d7-49aa-9dcb-a3d45d14c162",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "091e83ee-7c50-49e0-ac9d-067d403fe1cf"
        },
        "item": {
          "id": "f5aa83e8-2c74-4ee9-8f0d-2023179e20b2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "95ec6dd9-03d4-419a-b80f-d790264e6c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e63f61-bee7-4907-9b17-7303e7495b60",
        "cursor": {
          "ref": "e968b16d-d61e-474d-b763-f9c5efa7791f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bc98c0e6-7ce5-4795-ba86-74a9f6c5ba5e"
        },
        "item": {
          "id": "d1e63f61-bee7-4907-9b17-7303e7495b60",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a314015a-36f6-4f92-8d34-4d4f74700a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4305a086-68ff-4f4c-9294-d89da89c52f4",
        "cursor": {
          "ref": "a6ae1438-42cb-409c-afd5-9e7185ec43b4",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1a7e7650-ae54-427d-9393-c4468228411f"
        },
        "item": {
          "id": "4305a086-68ff-4f4c-9294-d89da89c52f4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "19a25c7e-081b-4462-88fe-de2a28a18823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b94c28-6172-49fc-b14a-978632b5e171",
        "cursor": {
          "ref": "314db4d7-0884-45fb-bc17-7c1a36987a89",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea0c8fe0-93e9-43f7-86aa-1501669fe00c"
        },
        "item": {
          "id": "a5b94c28-6172-49fc-b14a-978632b5e171",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e7d70ffe-4f2e-470f-a856-f4d7d28e1e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c46b33-df4b-4872-aaf2-8b2e538181e7",
        "cursor": {
          "ref": "13e7b457-bead-4b13-857e-cc9b6910605b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9cc53d7c-3abf-4c66-a427-c3a5e2a94d51"
        },
        "item": {
          "id": "71c46b33-df4b-4872-aaf2-8b2e538181e7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb81629d-3e64-491e-b928-f3bc2063f663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eb428a-28ac-4361-acec-890e39f0a273",
        "cursor": {
          "ref": "1a550639-04e7-4660-b977-fe5698c44c81",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7fb4a72e-19e1-460f-b0c9-d17e01a0373b"
        },
        "item": {
          "id": "f0eb428a-28ac-4361-acec-890e39f0a273",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "be13ea67-bbf8-433d-8a97-617d0772101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9491121a-3c52-406d-9bb9-188557f2f33d",
        "cursor": {
          "ref": "a1c8247e-ce9e-4b9d-bb86-cf4b9e561876",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd69f018-9167-47e6-8c53-278a0612f852"
        },
        "item": {
          "id": "9491121a-3c52-406d-9bb9-188557f2f33d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d75cba01-1fe0-40db-9735-09ee22a8fbbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a52aff-cac8-441e-97b4-7d4d27d64078",
        "cursor": {
          "ref": "d4c5e6dc-7dcf-4ee1-b21f-ffb3ab197e84",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6fd33fc8-f10a-4a02-8de8-34d4e21f27b4"
        },
        "item": {
          "id": "83a52aff-cac8-441e-97b4-7d4d27d64078",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c77a2894-5401-491d-bc0a-25d78cdcaac5",
          "status": "Created",
          "code": 201,
          "responseTime": 7342,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6044dcca-7f23-4c33-96f8-a739e8578731",
        "cursor": {
          "ref": "cb0bc165-3336-40ff-ba07-7eaf8f763efc",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9fa5c7a1-9d8a-477d-80d5-80d579583d35"
        },
        "item": {
          "id": "6044dcca-7f23-4c33-96f8-a739e8578731",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c6ffac4d-372e-4f23-b671-a9b025271cd3",
          "status": "Created",
          "code": 201,
          "responseTime": 7913,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0637925d-f705-4b52-aee9-707224ac25ac",
        "cursor": {
          "ref": "f1804d83-6a61-46b6-a946-224a6e66be05",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1502092a-c799-46bf-b90f-c73f918d6bf2"
        },
        "item": {
          "id": "0637925d-f705-4b52-aee9-707224ac25ac",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9f0bb277-a4e6-4b96-b15b-36301a77d8ee",
          "status": "Created",
          "code": 201,
          "responseTime": 6331,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "730ef636-75bf-4c54-9a66-b9875d09f635",
        "cursor": {
          "ref": "caa5015a-ec93-4fe8-8de3-06937e0589da",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aa9a6696-6cb1-4dff-9627-a335bfa63ad3"
        },
        "item": {
          "id": "730ef636-75bf-4c54-9a66-b9875d09f635",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ade4c5fd-986b-40ee-968d-a470c64652b5",
          "status": "Created",
          "code": 201,
          "responseTime": 6763,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d679a34c-be62-4df2-9c18-21a26c6a5c2a",
        "cursor": {
          "ref": "04670fbf-efde-4c6e-899e-c4a205c11d97",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bbffe9ad-8e06-49a0-a238-fac5f56b54b9"
        },
        "item": {
          "id": "d679a34c-be62-4df2-9c18-21a26c6a5c2a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d4ee970e-6328-487f-9827-c30eb0498284",
          "status": "Created",
          "code": 201,
          "responseTime": 6333,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "45488496-3f1b-492f-a58a-ae0c6d1874a2",
        "cursor": {
          "ref": "212e2303-e249-452d-a392-216dcd3717ec",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7421f1c9-7716-49e2-80e2-f57e92fc8953"
        },
        "item": {
          "id": "45488496-3f1b-492f-a58a-ae0c6d1874a2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "95ddd9d5-fba7-4a84-a130-d249f4726574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7dacd276-8df8-4a80-a0c3-b9f8c2c41e1f",
        "cursor": {
          "ref": "6accfe78-3037-4556-a789-136ac2c36405",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6630b858-efab-4282-8e73-13fd34db7e13"
        },
        "item": {
          "id": "7dacd276-8df8-4a80-a0c3-b9f8c2c41e1f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64a70393-e529-490a-a4be-3280b8d571ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd84ce8f-7c38-4045-b0b2-df9873a994b9",
        "cursor": {
          "ref": "1852d104-e4d5-4ba4-a84e-e2ffe81fb39f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ff5edfd5-7bae-4849-badc-b9b0a2c60931"
        },
        "item": {
          "id": "cd84ce8f-7c38-4045-b0b2-df9873a994b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9c61a309-d21f-4eb7-9d4f-5cfd4dc4afa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d17e0c-491b-492d-a369-4501900f64cf",
        "cursor": {
          "ref": "46d6c562-bc8f-4828-82a3-a407d46bbcee",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "67c2eabb-1d78-4e7e-8648-1d9b2d4b7c58"
        },
        "item": {
          "id": "a7d17e0c-491b-492d-a369-4501900f64cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "02d39fc6-fc8a-4777-9d9d-b187a4caea7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6636d8af-4b3f-4224-9405-22390b8442d7",
        "cursor": {
          "ref": "cff8efb7-f681-4058-9bd4-22470251ccc9",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d0d7290e-402f-4e3a-a62f-9d434f305a62"
        },
        "item": {
          "id": "6636d8af-4b3f-4224-9405-22390b8442d7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a78120cc-9a67-4775-bf1a-b8f9ca5d8a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e00e8af-a8e5-4785-b5a3-797c34fe9300",
        "cursor": {
          "ref": "3572110d-4b28-4a37-80e1-cb7b88fd5614",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3cf95a93-9392-4bd5-bf58-bfde252a034b"
        },
        "item": {
          "id": "0e00e8af-a8e5-4785-b5a3-797c34fe9300",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c2561c4-f19b-4184-8e23-183956ca3a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ad650-2acd-47c7-8fed-8ff7d4ebd5a2",
        "cursor": {
          "ref": "8f13d077-3823-4319-8bbe-55c3a2de131e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c7bd8f1-b38b-406b-bf9d-e4521cd0f6d3"
        },
        "item": {
          "id": "565ad650-2acd-47c7-8fed-8ff7d4ebd5a2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "67f64f8e-c089-4705-90f0-ccd773ad84ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40753b1c-2f9a-4dc4-8da3-7809922f3ba1",
        "cursor": {
          "ref": "8d067865-e0d9-46e6-996a-bc918b156082",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2a01d36a-e522-424b-a81c-bd4d3b3c0bb1"
        },
        "item": {
          "id": "40753b1c-2f9a-4dc4-8da3-7809922f3ba1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "652eaf75-8fa4-4d12-b71f-f343a8599195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dd15d4-12a4-4b98-9bbd-185c3f5dd877",
        "cursor": {
          "ref": "e3863d31-5158-40fd-836f-8ff38f122b84",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "04f663fe-60e8-45e1-8611-af68bf892651"
        },
        "item": {
          "id": "58dd15d4-12a4-4b98-9bbd-185c3f5dd877",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fb93f597-b573-4b8f-b77b-0813c0506dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4723e2-9b0f-4562-bc6b-0dbc1c1c647c",
        "cursor": {
          "ref": "2d05187a-d85b-404e-9b5c-a92b49ff1064",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c15cb08f-a141-4d6f-9066-c8920a23c372"
        },
        "item": {
          "id": "8f4723e2-9b0f-4562-bc6b-0dbc1c1c647c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ebf34646-2167-46ab-a119-b1c6e9c1280f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07be0d0-0fa2-419c-be19-a25521138836",
        "cursor": {
          "ref": "028d7893-29a8-4f49-897f-ecb0801e1bf8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dedcb4a2-47db-4b20-a74f-4d1b26dd33ba"
        },
        "item": {
          "id": "b07be0d0-0fa2-419c-be19-a25521138836",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cbaf9a21-4fb0-4f25-8482-2c7a55271da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0854d695-8651-467f-ab6c-64f70bad421b",
        "cursor": {
          "ref": "e68f63a8-b2a3-4e67-8075-6da4a130ce9f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "97e359c5-ac64-4e3d-830b-453dd0e332aa"
        },
        "item": {
          "id": "0854d695-8651-467f-ab6c-64f70bad421b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "079776e0-12cc-40ac-ba83-ea82c7221cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38f4a9e-0475-4567-866e-8348f2cfd562",
        "cursor": {
          "ref": "ff6e900e-e0a5-42f2-8033-c0d371f26187",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7c522a71-766c-49d9-887b-ec1452566e88"
        },
        "item": {
          "id": "e38f4a9e-0475-4567-866e-8348f2cfd562",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "47011842-1876-4202-9061-f7eda21c2271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b66cad6-8365-4cf9-aa72-0427accdd18f",
        "cursor": {
          "ref": "cffe56fa-c24e-478a-980e-ac27f85835df",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3784f6f8-17d1-4dd4-b586-9c5708b79684"
        },
        "item": {
          "id": "7b66cad6-8365-4cf9-aa72-0427accdd18f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ad1dc0e9-8b39-46c8-8018-a1c6b60faf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ace646e-e1dc-4282-8c8b-38e86446a305",
        "cursor": {
          "ref": "6dbe8acc-35cc-4de9-8a80-e44022150702",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ff61d90-3811-4b99-ac61-d664d4afa8c5"
        },
        "item": {
          "id": "9ace646e-e1dc-4282-8c8b-38e86446a305",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7c934ef2-0e0d-4ae4-95c4-63495d93e096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24db875d-05b7-43fb-b990-f361d52cdb24",
        "cursor": {
          "ref": "f849c1a3-35fc-4022-b5b3-eb28741649c3",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ae1881da-1f2f-4e6c-a381-028307fc8fa1"
        },
        "item": {
          "id": "24db875d-05b7-43fb-b990-f361d52cdb24",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b39fe56f-416b-4688-8079-4570299cec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc46bbb5-6b08-4804-bc08-0dd2e424515f",
        "cursor": {
          "ref": "9bc4baf1-71c1-4fad-b6ee-354db1027b48",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41afcd86-4067-4c9c-8252-140c66f7f28a"
        },
        "item": {
          "id": "fc46bbb5-6b08-4804-bc08-0dd2e424515f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be5cd0b1-e614-4eff-a244-84592d3249fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b19df85-58c9-4ff7-a83e-d35adfe4d0b5",
        "cursor": {
          "ref": "b1d4ed01-a6f3-455e-9ee6-399cc1037a94",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "06d7ed5b-4db6-468e-919c-ad35373ce987"
        },
        "item": {
          "id": "1b19df85-58c9-4ff7-a83e-d35adfe4d0b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab43c664-172a-41cf-86ae-503235c6a70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d6323c-2e8a-4d7b-8cfe-8b3290298a58",
        "cursor": {
          "ref": "f77a25ad-cb46-42bf-833b-a83cc9ce7f55",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "afccec64-3e2a-4938-aecf-ecddc895e8ba"
        },
        "item": {
          "id": "74d6323c-2e8a-4d7b-8cfe-8b3290298a58",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2db04b09-7b7f-4eaa-8e88-b192cd22eea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fb83d5-46a5-4d5b-8572-b084f2beb06c",
        "cursor": {
          "ref": "02e5fb2c-eb5e-4d0c-9c6c-158fac8ddbb0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "22d59c56-deba-4b84-aeda-7d6f1526c08a"
        },
        "item": {
          "id": "b5fb83d5-46a5-4d5b-8572-b084f2beb06c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7b6a508b-767e-481a-b036-27b407bf1ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e324403c-dd78-4986-8394-c2c5bf3487af",
        "cursor": {
          "ref": "ba57b358-41c1-46ed-9dc6-6dea29813647",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "67dd1081-4996-478f-beab-3b4245940bd0"
        },
        "item": {
          "id": "e324403c-dd78-4986-8394-c2c5bf3487af",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "20a9a958-505c-40d6-8dfc-f676a43b31b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a17f64f-d9e5-4474-be83-813ddba45e94",
        "cursor": {
          "ref": "a2203d7d-a372-4791-a001-61a01382dcce",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "46184195-981d-4bf9-9a4c-55176739481a"
        },
        "item": {
          "id": "5a17f64f-d9e5-4474-be83-813ddba45e94",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fdba1f1a-082b-43b9-8365-bbe9eb2ccc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4af69db-699c-469a-94ee-cf58f71dc581",
        "cursor": {
          "ref": "ec53ea4c-4d0a-4d6d-bd3b-acfc84c378e1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cf58c116-edab-4540-9590-8babe05ddf74"
        },
        "item": {
          "id": "a4af69db-699c-469a-94ee-cf58f71dc581",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "85f1a0dc-10cf-4de2-a12c-eeead3a7f14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b001a4-ffec-4ce5-b0ea-01ab16b25217",
        "cursor": {
          "ref": "fb40920d-fdc5-4e11-8a14-0e6e61df4f65",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c673da49-d7f4-48e7-ad2f-8e02ecaabc45"
        },
        "item": {
          "id": "e7b001a4-ffec-4ce5-b0ea-01ab16b25217",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab47f940-456c-4dfa-a3e0-642827506070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac88c745-cafd-43c9-921f-b95739964fb4",
        "cursor": {
          "ref": "115480a4-7b32-4c9f-9727-5958651e2a80",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9ae2b58d-608c-4a29-ae19-f1b70ab1d2a8"
        },
        "item": {
          "id": "ac88c745-cafd-43c9-921f-b95739964fb4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0286011b-bd43-42c1-860f-92316a8f2fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9885c7c8-9a26-4e2c-9f32-0b3882618dc7",
        "cursor": {
          "ref": "f1070902-08be-4ec4-a02c-cf6b7079338a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "43bbe556-730a-40b2-bb2e-291775213bba"
        },
        "item": {
          "id": "9885c7c8-9a26-4e2c-9f32-0b3882618dc7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31420809-b291-4ee6-8ad3-553b3b31e4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c4b22-1c83-4c7f-bad6-929b0e4d5606",
        "cursor": {
          "ref": "5eca265e-f362-4e97-aa5d-9477f2787391",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dab54c47-786b-4b77-85d6-5fa5371da5bc"
        },
        "item": {
          "id": "9c9c4b22-1c83-4c7f-bad6-929b0e4d5606",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab23ab7a-9ab4-4310-aa5d-c64d78010736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65799f-1a42-49f4-a501-8c671163d1fe",
        "cursor": {
          "ref": "af1b042e-9cdd-4fb9-9812-56891db5a8cd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "38e13841-95d8-4c7d-af48-219424dee2e1"
        },
        "item": {
          "id": "fd65799f-1a42-49f4-a501-8c671163d1fe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5ed1fbd4-209c-4621-90e3-47d0580ec7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fde4a4-5ee8-4661-9660-2f646c9bdb78",
        "cursor": {
          "ref": "7b399917-e596-414c-8d20-090f5cb36a28",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "13d28877-4b31-448e-9db2-1d1d3eb49183"
        },
        "item": {
          "id": "d6fde4a4-5ee8-4661-9660-2f646c9bdb78",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ee2b8e7-8d5b-43a9-8f3c-4ac8a38978f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b88e55-4a9a-42a8-8a4b-c6be8169bd80",
        "cursor": {
          "ref": "c0254612-99a9-407e-bfd0-d03ee33123b4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "959e5748-2f8b-430f-bff5-d7c63d876742"
        },
        "item": {
          "id": "b5b88e55-4a9a-42a8-8a4b-c6be8169bd80",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "424c2d3d-906f-4481-8a99-97de871718a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217712cc-7b4a-4381-bcbd-179ffe239911",
        "cursor": {
          "ref": "fe05fbd4-5c64-4cf9-a43a-885b321e0962",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cb5364ed-d131-4858-b934-8f95cae60aad"
        },
        "item": {
          "id": "217712cc-7b4a-4381-bcbd-179ffe239911",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c37deeb5-0163-4a6b-9b58-50acd4eaa344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c39fce0-c25b-44f8-b170-f12c7ea5e2fe",
        "cursor": {
          "ref": "ed4f3306-8848-434e-9b95-a306285f45f9",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "29be1a41-1fe6-416c-b287-599bed5caa88"
        },
        "item": {
          "id": "0c39fce0-c25b-44f8-b170-f12c7ea5e2fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31709d9f-0e19-4093-b528-cff07d32b357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09373b13-6148-41ed-b2f8-bd6a34b49bc7",
        "cursor": {
          "ref": "fcdc60e6-c945-4d0e-8dbe-def8a1ce16b4",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "61f8e28f-9f68-4511-9a55-26c2a0c462bd"
        },
        "item": {
          "id": "09373b13-6148-41ed-b2f8-bd6a34b49bc7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8d5bc3fe-5db2-4c15-87c5-02449f1c215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dc554b-3e20-4c50-aed0-1d4149d3f1de",
        "cursor": {
          "ref": "8cb102f3-ed59-47fa-83d2-c50575c3579a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37dd768a-4901-462a-a715-755d799178dc"
        },
        "item": {
          "id": "57dc554b-3e20-4c50-aed0-1d4149d3f1de",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2fa4294-a7f3-451f-a0d8-b4733d013746",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc86fa9-2a34-4d1c-944e-c5ab5508f0a5",
        "cursor": {
          "ref": "5df5f242-9cde-4e72-99a9-94cfb132305c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a0c04e26-e305-4bcf-ab11-3a37cbd402f5"
        },
        "item": {
          "id": "fbc86fa9-2a34-4d1c-944e-c5ab5508f0a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "51b25875-41fd-4fa9-b232-356ed55b8691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de281b8f-8ce2-4c9e-9f79-0894d6cf7431",
        "cursor": {
          "ref": "d85d4f63-b29a-484c-a9c4-5106ee23814b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4521f2e5-7924-43d3-9d97-2379d0f87777"
        },
        "item": {
          "id": "de281b8f-8ce2-4c9e-9f79-0894d6cf7431",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b801ea09-5c45-4506-9fac-0e3abe37aaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4013a950-b60e-45be-ba6a-e1e46deb2ad3",
        "cursor": {
          "ref": "af66026d-08e0-4995-864a-85701ea9069b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d69546f0-45d6-4b2d-b372-741558a0545e"
        },
        "item": {
          "id": "4013a950-b60e-45be-ba6a-e1e46deb2ad3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2c3cc803-7238-48a1-8f78-d2832b8a874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f46407-e2c6-4a9f-a1c4-8c8fe92d245f",
        "cursor": {
          "ref": "b0305ea8-78a1-4098-abad-e03730757c14",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bd889936-3f71-405f-9307-bcf8f2dd3dfb"
        },
        "item": {
          "id": "04f46407-e2c6-4a9f-a1c4-8c8fe92d245f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2400e459-e528-49b2-b7e7-17c9bdcd8d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dee439-e374-44fc-be13-f31c67efa56a",
        "cursor": {
          "ref": "a4515226-3ea0-42f5-9fe0-7b4e3149ee70",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "608f95d1-d083-4a62-a6a3-28e82ab26868"
        },
        "item": {
          "id": "a8dee439-e374-44fc-be13-f31c67efa56a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bb979131-e2ed-4f0f-8f7d-bc2934ebaa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59137a08-c5b1-4ecf-ba1d-13bc8aa93c0c",
        "cursor": {
          "ref": "3bba832c-6b94-4879-9e11-5c5165ee0117",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "87984c4c-8752-40ed-b8a4-fb5e761732b2"
        },
        "item": {
          "id": "59137a08-c5b1-4ecf-ba1d-13bc8aa93c0c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66ca8d9e-8cba-4681-a01e-75b852d3e8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e63551-5654-459c-b797-5e2d70bd0b7a",
        "cursor": {
          "ref": "177afed1-f4bb-402d-95d4-cf8cdbd45944",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c1cc8b4c-48f7-48aa-985e-467bac038d61"
        },
        "item": {
          "id": "18e63551-5654-459c-b797-5e2d70bd0b7a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4e02415d-7c0e-4811-b547-4910c1463cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a418801-da10-4650-8236-f0257e779e8c",
        "cursor": {
          "ref": "e83a4bf4-93dc-49b4-825f-d01c8bb09140",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "74326976-1603-4d95-99d9-af92fc861b90"
        },
        "item": {
          "id": "7a418801-da10-4650-8236-f0257e779e8c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d19eedc-d675-4bd8-bced-f7ad70892a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727702e7-6b84-4ffa-8bba-a4a150f0873f",
        "cursor": {
          "ref": "6e2b32d9-3bb0-44b7-bd11-202116a5b49f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a571b61f-226b-4d6c-92c1-f7f1d14a9a85"
        },
        "item": {
          "id": "727702e7-6b84-4ffa-8bba-a4a150f0873f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e24b3367-8329-4383-96cd-97b631c2ac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35db58a6-99de-4ef6-9595-e7f73c33e9d9",
        "cursor": {
          "ref": "91e551c8-3892-417e-8554-664719d30efb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "af02ac46-2306-46ab-af20-18a78c97c7cc"
        },
        "item": {
          "id": "35db58a6-99de-4ef6-9595-e7f73c33e9d9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a03d22e7-81e8-4138-a875-35495d325cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3706c4-f491-4a4d-9001-660b9c469173",
        "cursor": {
          "ref": "0b662dd8-5b54-4362-9da2-450ddc857102",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "292fb7f5-c5cb-4b42-be85-a6b59d4b7b11"
        },
        "item": {
          "id": "7f3706c4-f491-4a4d-9001-660b9c469173",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4229510d-d38e-4923-a2c7-7e1cd3ac731f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aa2d97-8678-4c40-beb2-62e7e424ce1f",
        "cursor": {
          "ref": "5aee2366-8505-4cbc-ae3e-37bcee2d54f0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f316b09a-653e-47e2-bab0-3989fb176da3"
        },
        "item": {
          "id": "f2aa2d97-8678-4c40-beb2-62e7e424ce1f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1538bb37-e221-4ce6-ac6f-84bb4ba989fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c97b75c-bea1-4bf1-86f1-ab6d743a1c86",
        "cursor": {
          "ref": "4f3dd8e5-47e6-43ef-86a3-22214bb73561",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6a90154e-a5f7-476e-a335-376237413b36"
        },
        "item": {
          "id": "1c97b75c-bea1-4bf1-86f1-ab6d743a1c86",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eef65d46-83e9-4bcc-b141-59852c22827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6fa0ac-b307-4e0b-b0af-9ec5e9290528",
        "cursor": {
          "ref": "d714cf7c-2d4e-4013-84f0-4c2b58da5042",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e360b528-9295-4286-a540-fb2db8344d6f"
        },
        "item": {
          "id": "2d6fa0ac-b307-4e0b-b0af-9ec5e9290528",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6221df7e-7b18-4665-96f7-cef5132ef2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3078f680-0618-41e8-be1f-c698b1b18703",
        "cursor": {
          "ref": "70298cd0-f023-495a-9f68-b0427bc34f32",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "06ccdb43-abb1-4fd0-8d97-0cbe4268cb1a"
        },
        "item": {
          "id": "3078f680-0618-41e8-be1f-c698b1b18703",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f2950272-cc27-4633-842f-86d645162db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b5c4b5-f91e-4dbc-9514-262e4372cd4f",
        "cursor": {
          "ref": "3438e192-9896-4fb3-9d94-a8e657aea152",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "60664865-9221-478a-b518-facfa37d0867"
        },
        "item": {
          "id": "13b5c4b5-f91e-4dbc-9514-262e4372cd4f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "69ff6766-f70e-452e-af04-2f3357e6658a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10380de9-0a85-4289-b03d-ff87e5a8aef9",
        "cursor": {
          "ref": "9ee9eb72-205d-4547-93f5-5ea037f47025",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cde34e60-339a-4d3e-b2fa-2714bf552290"
        },
        "item": {
          "id": "10380de9-0a85-4289-b03d-ff87e5a8aef9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b7fc9a81-bf11-4c71-9187-c92bdd93f7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399f7475-24fe-4a86-8b97-f3338ede6db1",
        "cursor": {
          "ref": "71352c03-7a1b-4b70-bb38-f97d39d4bf6a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bcf7b852-4263-4ea9-8646-9d3c286238cd"
        },
        "item": {
          "id": "399f7475-24fe-4a86-8b97-f3338ede6db1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9e1aaade-7c2b-4942-83a9-580600ebcd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7362be4-bdff-4db3-839e-4bea30410d13",
        "cursor": {
          "ref": "492c3e96-b0b5-4e9e-a137-e70708c0cfe7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cc678134-5047-4e1c-a2f6-5b32e85a70d7"
        },
        "item": {
          "id": "a7362be4-bdff-4db3-839e-4bea30410d13",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b445d094-a4bb-49eb-b56c-4b104ed130b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606375dc-acc7-43c0-8b14-6189d9c94050",
        "cursor": {
          "ref": "49bfefd7-60a7-4cb9-ac71-34a0038467f5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fc61ad50-9802-4b5a-ac09-029d83091351"
        },
        "item": {
          "id": "606375dc-acc7-43c0-8b14-6189d9c94050",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb9b6ff6-55b0-4e60-a447-9469c29a5876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed25bb43-d8a5-43be-b14b-990c62ba15cd",
        "cursor": {
          "ref": "4b9326e7-99c4-49da-9ce5-17c3c22ab9e8",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d4f198e7-9fbb-4593-ab6c-e3651e3241a6"
        },
        "item": {
          "id": "ed25bb43-d8a5-43be-b14b-990c62ba15cd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28b20da2-34b3-4c37-90e3-8cd9b2c50a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346a9000-6515-4267-92a3-ca1ac3c6c918",
        "cursor": {
          "ref": "ed1ae539-33cd-4646-b16d-42605f1cb128",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "94e51c83-dc4b-4cd4-a370-60f52278e82a"
        },
        "item": {
          "id": "346a9000-6515-4267-92a3-ca1ac3c6c918",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1f9de782-0f35-4a3e-a48a-56705e549bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992baa7d-c301-4c73-bf54-ef57e23465f9",
        "cursor": {
          "ref": "6187315c-883b-490f-b6d5-ede2ebc231d7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "77d7c8a5-9a3f-41d3-ba65-745ffe978053"
        },
        "item": {
          "id": "992baa7d-c301-4c73-bf54-ef57e23465f9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "152077c6-f3a7-4fef-91e1-1286a7173380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44525f9-6fea-456e-8aea-73505743b86f",
        "cursor": {
          "ref": "b5ad44d8-b8ef-4435-ac1a-6d923fe31f28",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5b8cdb6-2f7e-4f5a-b1a8-61930232975c"
        },
        "item": {
          "id": "f44525f9-6fea-456e-8aea-73505743b86f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "927e28be-4637-4976-8223-f2440980767e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3fbf4-c4d2-407e-9a92-03bb5f9c6853",
        "cursor": {
          "ref": "748407d2-19d3-419c-b7e0-7fda1fa32bbb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ae559a1d-640b-45cd-b0e2-94323a346dfb"
        },
        "item": {
          "id": "8ae3fbf4-c4d2-407e-9a92-03bb5f9c6853",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fc387b41-d385-4f0d-b927-704d3392254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb2dfd1-59a6-490e-b2ed-c845287483ab",
        "cursor": {
          "ref": "803ffddb-8b33-4c4a-8f3f-7d54dff6a8e5",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "879e2093-1279-4569-8b2c-e84d81c87666"
        },
        "item": {
          "id": "5eb2dfd1-59a6-490e-b2ed-c845287483ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "186a10d1-d482-4fff-9613-71cda15a6d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17ef045-79d5-4cd6-9707-8e719d009d22",
        "cursor": {
          "ref": "be99c0cd-d958-44d8-8566-69e2dadb97b3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d4357085-a459-410e-9f5c-0ff54d1c8b14"
        },
        "item": {
          "id": "e17ef045-79d5-4cd6-9707-8e719d009d22",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fe230350-3438-4f2f-b326-04537dbd7887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decdd44d-6919-4f14-b917-953e383f1d63",
        "cursor": {
          "ref": "73a38db7-7172-4383-8bc0-8dae834eb5a7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "578e4562-7aad-42ae-82c4-13641d0fb583"
        },
        "item": {
          "id": "decdd44d-6919-4f14-b917-953e383f1d63",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32b29204-5166-46d4-bcbc-74f3c3583666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af90986-b5fc-4e18-9b3e-a84fe643cc0b",
        "cursor": {
          "ref": "6638ef41-68d1-4a34-9657-011911d047c5",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "657478d3-5846-4911-9f29-5ed7ad670738"
        },
        "item": {
          "id": "4af90986-b5fc-4e18-9b3e-a84fe643cc0b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2481197e-093f-4163-aaa0-efcbbcd6808f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f467afc-997d-41db-ae28-78723c17af6d",
        "cursor": {
          "ref": "9112d561-280a-439d-a623-af482284d733",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e6377519-14bd-4694-9653-aaa3b1b619a4"
        },
        "item": {
          "id": "5f467afc-997d-41db-ae28-78723c17af6d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "615fd531-7b1b-424c-831e-3726246002a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ccbc3-3d53-435b-9f6a-f85ede283cfe",
        "cursor": {
          "ref": "a7360474-eff7-466d-a703-fe2ca9690efc",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0b652036-0d12-448a-b25c-5569651c5115"
        },
        "item": {
          "id": "1b8ccbc3-3d53-435b-9f6a-f85ede283cfe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d8c98311-75f7-4b36-9aaa-cba1dfced15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd68e46-969d-4a8a-9336-e3126db623d2",
        "cursor": {
          "ref": "d1bed2db-ff09-47d8-945d-f4a8d77c4175",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "026e2b29-ac38-4a0c-ae5e-380417c44347"
        },
        "item": {
          "id": "7cd68e46-969d-4a8a-9336-e3126db623d2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "655ae67e-0fa3-4deb-bcd9-92fd24f2a7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a90150-d6a4-45c5-8a20-2dc1f3f15cdb",
        "cursor": {
          "ref": "4d0897a1-53bc-4eba-8f95-00aa0bd4fa20",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1f5ab4ea-0289-43e1-bfe9-7b9ad1071234"
        },
        "item": {
          "id": "e5a90150-d6a4-45c5-8a20-2dc1f3f15cdb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a7c765c8-f83c-4d26-917b-b67c148518dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408e1393-9c92-46e5-9bee-1ad3ec6dc9c3",
        "cursor": {
          "ref": "6894fb4a-68ae-450b-ab9a-29c8c9c831bc",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ad9fb606-328a-4fdc-916c-7af44e10a2fe"
        },
        "item": {
          "id": "408e1393-9c92-46e5-9bee-1ad3ec6dc9c3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4054f1a4-0b43-421c-bc5d-12dc7fd7df87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccdb0e5-e60e-47d0-a908-ef24c9aa88c9",
        "cursor": {
          "ref": "7308f81e-91bf-45d9-b32b-589adeffac98",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "acf55383-d3d3-49ac-bae3-413f9f7d30d4"
        },
        "item": {
          "id": "6ccdb0e5-e60e-47d0-a908-ef24c9aa88c9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9f003dbc-81a6-4fcd-ac21-e38cc938a15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf455cba-9cf5-491a-bf52-b885db60a899",
        "cursor": {
          "ref": "7e9de996-a354-4a41-9a08-588a2491ce15",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6ffbf47b-cba6-4ff1-a42c-8ad1102c9fd1"
        },
        "item": {
          "id": "bf455cba-9cf5-491a-bf52-b885db60a899",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b3cf8c94-abb1-4553-a3bb-c79fe5a71987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85308863-61fb-41b2-8cd8-ec1db9b139d5",
        "cursor": {
          "ref": "7820a3fe-74fd-45d0-be31-d93aee947d0d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4b0bc391-e464-4a3d-aebd-76b7faae9dc1"
        },
        "item": {
          "id": "85308863-61fb-41b2-8cd8-ec1db9b139d5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "09443017-19a5-4053-972a-32a5156a9821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06f8f98-cd0c-422f-92c0-9d355a3f7581",
        "cursor": {
          "ref": "c69483c0-334d-4a24-9510-2090b1d3176c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "55081993-84f3-4a3b-a02c-4d1772d89080"
        },
        "item": {
          "id": "b06f8f98-cd0c-422f-92c0-9d355a3f7581",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "51ca9ea4-8a52-4e5c-8f5a-a208eb357f9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e3c7df-aa9f-4e1a-8cc2-2fcfe1cbd6b0",
        "cursor": {
          "ref": "f10bb2bc-39b8-4757-802b-c3184b6a1243",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7c22bd7a-3e3e-4dca-b9a0-678803caa502"
        },
        "item": {
          "id": "e6e3c7df-aa9f-4e1a-8cc2-2fcfe1cbd6b0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5d0f7a67-9a88-4635-8afb-d2aa2764f9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8db5f8b-b27d-4710-82cf-950a4142412c",
        "cursor": {
          "ref": "00281247-9dc6-4f15-acc3-b135408ba2e1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "63df86ca-90d0-4f29-ae35-36b67f61ad84"
        },
        "item": {
          "id": "a8db5f8b-b27d-4710-82cf-950a4142412c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7fa63b81-fb75-426a-946f-8549bc9b2568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7814a8c1-1535-45b3-848d-93c1b6f0b8cb",
        "cursor": {
          "ref": "6592df9d-01aa-4f00-8ec5-441df21ff7f8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1083eee0-635e-4cb4-b2ca-d8fbc5c2dc06"
        },
        "item": {
          "id": "7814a8c1-1535-45b3-848d-93c1b6f0b8cb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec5fd97a-1136-461c-aa32-95ff1acb60b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53032af1-2555-4fa2-81a2-7e838f1cf23f",
        "cursor": {
          "ref": "6edc3199-0ac8-4710-ba92-c2f27c896cd1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f47e32d7-bcf7-4ad0-960b-077fe6a31179"
        },
        "item": {
          "id": "53032af1-2555-4fa2-81a2-7e838f1cf23f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "54987143-953f-4ae8-8e7d-5c56ea91de55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8201d62e-c197-488f-b573-474696f30822",
        "cursor": {
          "ref": "f6393f97-8d22-496b-8d0d-ea6aa17df9e7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1cf8c394-4d02-49f5-b400-2a6271c4c09d"
        },
        "item": {
          "id": "8201d62e-c197-488f-b573-474696f30822",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "28df24f6-5b16-4fb1-94a7-3112b329b98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab277705-4714-4586-820f-e2ac50a3343c",
        "cursor": {
          "ref": "934a831a-bd4e-4672-b835-4006b99b5ed0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ce986929-d538-4397-9175-7078d3e1d68d"
        },
        "item": {
          "id": "ab277705-4714-4586-820f-e2ac50a3343c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b10536f-a8e7-45f4-b1cf-2434235a3ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38196a18-aaed-4f4f-b07d-1922c9c3325e",
        "cursor": {
          "ref": "cb3e5103-7cf4-45bd-aae5-01683abf80af",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "322d4b61-72e2-44db-953c-eec5b70e6900"
        },
        "item": {
          "id": "38196a18-aaed-4f4f-b07d-1922c9c3325e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d3f4aad4-8198-4744-a316-822603f041da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd8a99e-20d1-4a5b-812f-86c9c5215d22",
        "cursor": {
          "ref": "35ad355d-70c4-41ad-9566-fffc8f817be3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aca8d64e-c7cc-4358-8976-87453c6125bd"
        },
        "item": {
          "id": "5bd8a99e-20d1-4a5b-812f-86c9c5215d22",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4c2e1e3b-afe8-484e-b995-6bfd623058db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c62d22-1647-4a9b-88cf-238e09995d28",
        "cursor": {
          "ref": "c6ae0018-8e65-4bd7-907c-c31d26f215bb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4ea78e3f-a071-4bf9-92a9-c7fe323bfde8"
        },
        "item": {
          "id": "47c62d22-1647-4a9b-88cf-238e09995d28",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6a8461d7-0ded-43ff-975c-e757814e129e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b053828a-7ff6-4694-a197-4f38f4f94d55",
        "cursor": {
          "ref": "8e318aef-87b5-4948-a15e-337e2444d6b5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "56851b3c-29ed-4b0f-9a80-e66c154c7bca"
        },
        "item": {
          "id": "b053828a-7ff6-4694-a197-4f38f4f94d55",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b1e0817e-ac9f-459c-be84-f3f60c4efc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e39e85-64e4-45ac-97b9-15a5107eeac8",
        "cursor": {
          "ref": "9c4db400-d493-4352-a008-c0a1e3853830",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bab39662-b113-4447-aee3-1625f6380c51"
        },
        "item": {
          "id": "61e39e85-64e4-45ac-97b9-15a5107eeac8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fb1eda6d-1a27-4799-9b67-82e7e32c12e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421b63da-8899-4f06-8dc6-4dff6b09f12a",
        "cursor": {
          "ref": "a33ae0b5-f5ce-45c2-b011-31650d4d2cdb",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3fafce2e-d6d8-4054-95b4-e3111828775f"
        },
        "item": {
          "id": "421b63da-8899-4f06-8dc6-4dff6b09f12a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed08566e-a430-4163-aa4c-bcc66eba648e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8608443a-d9c8-44ae-a666-75c33ce2da0b",
        "cursor": {
          "ref": "ab42514b-0883-4e82-99ff-307e02b3c84f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e1758731-1a68-4be1-ac0d-50d3c6315b20"
        },
        "item": {
          "id": "8608443a-d9c8-44ae-a666-75c33ce2da0b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3796be6b-7e38-40f5-be6e-1a5ff069157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351fd80c-b5a3-4385-98b6-f91ad6f10416",
        "cursor": {
          "ref": "e25bb7a7-a0ad-43f7-bd6d-ae727ffea4dd",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e860e056-80ae-4aff-8dea-347aa2cfe1b9"
        },
        "item": {
          "id": "351fd80c-b5a3-4385-98b6-f91ad6f10416",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a87fe677-102b-49b2-9df8-f32d191ed4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5567ff4-95b3-40b3-8660-e984d3c9d51f",
        "cursor": {
          "ref": "69cd7632-d0a1-471c-9387-69013d37132a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "044f9481-a8db-4a84-9a8a-4e63dabab9e6"
        },
        "item": {
          "id": "b5567ff4-95b3-40b3-8660-e984d3c9d51f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0b864636-9dca-410d-ab17-fbc87195b7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d449a3f3-019f-4954-94bd-3f35e4daa10e",
        "cursor": {
          "ref": "46eb638c-20ee-4911-981c-8d885ecf53a2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b1650a2e-0d29-4674-95f7-04b611e16801"
        },
        "item": {
          "id": "d449a3f3-019f-4954-94bd-3f35e4daa10e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "03ad9026-dd9d-42ed-b45c-704cb939b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef4284b-4876-4b1c-a591-0d3369edcc2a",
        "cursor": {
          "ref": "59476f86-a174-41e1-8bd3-5915547adc0a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dd8ae836-d69a-4adf-a361-8121761977e5"
        },
        "item": {
          "id": "3ef4284b-4876-4b1c-a591-0d3369edcc2a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "54696f9e-8aba-4ead-8904-07bfa955519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2041fec0-71d4-4fb6-89f3-78d1d14b8da5",
        "cursor": {
          "ref": "ea3fc7af-eb27-4fa3-867c-db729492b00e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e813180f-8d9e-4cd6-af10-fd3378f33d96"
        },
        "item": {
          "id": "2041fec0-71d4-4fb6-89f3-78d1d14b8da5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3165d7ba-5a95-4536-a15f-fed4c162bb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d889c63-0b27-4017-af38-4b0830623efb",
        "cursor": {
          "ref": "baf395ca-4f81-470f-b13b-a2f17a50bf81",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1a8d1181-319d-4fc0-b992-6e7742d611e5"
        },
        "item": {
          "id": "7d889c63-0b27-4017-af38-4b0830623efb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f8772b79-8390-42eb-b073-319cb239f055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7592f6-e6b2-406a-845e-0a15f9f96555",
        "cursor": {
          "ref": "c1d1cda6-b475-4893-83bb-2047e93551b3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9c6aec91-bc85-45c8-9a33-2fb736e0686a"
        },
        "item": {
          "id": "7a7592f6-e6b2-406a-845e-0a15f9f96555",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1fafe586-24d2-4c4d-a0bf-0b30b4aaf8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b5065c-9959-4672-be4a-7722fd41020a",
        "cursor": {
          "ref": "a01453c6-1e80-4604-b7e1-8cb635b01a18",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5ca6eedc-7a90-41bb-8d88-6f5a16e3af13"
        },
        "item": {
          "id": "54b5065c-9959-4672-be4a-7722fd41020a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1dd26267-2ee6-4849-a90c-2a60ab248fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43021ad-8fcb-4814-94b2-9325a32cd065",
        "cursor": {
          "ref": "574f0c2c-c2fc-4d62-8eba-b8b645879f82",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a2c551ca-4f55-4c0c-b733-0515bdd726bf"
        },
        "item": {
          "id": "e43021ad-8fcb-4814-94b2-9325a32cd065",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fb345c94-166d-43a2-8d6e-e860eed1bea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b45d7c7-bc38-460d-80ae-5df9faa8d65f",
        "cursor": {
          "ref": "b31abfc0-2b6b-4ab1-8d1a-4144cc47c4bd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d15fd759-0f61-4a93-b05e-8948b530ffb2"
        },
        "item": {
          "id": "0b45d7c7-bc38-460d-80ae-5df9faa8d65f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0e52d57e-a323-4105-893e-fe9a8bdae418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15052dfa-f718-49b5-9204-2bbc67310a99",
        "cursor": {
          "ref": "cfa50c74-ae85-435b-be96-93860541ca46",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "43f4dfac-58d5-4e3d-84fc-29df4b09ced1"
        },
        "item": {
          "id": "15052dfa-f718-49b5-9204-2bbc67310a99",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b2959bca-94b1-4ac0-896c-2e18f88cb1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939a0442-a3a0-44e1-88ca-a669f1f9d9a4",
        "cursor": {
          "ref": "cde2e907-c1ca-4329-afe3-290d5b43c995",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3e74c76c-6636-419f-935f-631d6f241d61"
        },
        "item": {
          "id": "939a0442-a3a0-44e1-88ca-a669f1f9d9a4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1af4fc3b-9413-443e-8198-cd7ddeb1aa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8c7a4a-b41e-4543-ab53-e8fd7a3d4730",
        "cursor": {
          "ref": "aaa93584-e7b3-445f-89e8-651975867c8d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7aa8d0d9-f99c-4cfd-85e3-9b76f482524d"
        },
        "item": {
          "id": "ec8c7a4a-b41e-4543-ab53-e8fd7a3d4730",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d95b12fd-7300-429c-846c-43c6bcf8afba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040fc3a7-1d92-45e4-9cdc-6ceab677d69c",
        "cursor": {
          "ref": "8b923257-f5bb-4f13-8879-4690745ce999",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b944b75c-5529-4981-adaf-5ec9c2226214"
        },
        "item": {
          "id": "040fc3a7-1d92-45e4-9cdc-6ceab677d69c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b65ccc0d-8e68-488e-ae93-ad8ea319d512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caa03d5-c519-4e57-908c-1772fcc7db4d",
        "cursor": {
          "ref": "7b7a88f5-3f08-45dc-9edc-bc698920e18e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2bdbe763-31a5-410c-90cc-da3e42bc223c"
        },
        "item": {
          "id": "3caa03d5-c519-4e57-908c-1772fcc7db4d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0239d479-f41e-489e-8759-9193cfcc0738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620aa314-dc91-4173-962d-fe9d24758db4",
        "cursor": {
          "ref": "fef16bcf-4c61-4b59-aecc-474a50deaf04",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7353208a-954b-4245-b7b6-d0e3d391d348"
        },
        "item": {
          "id": "620aa314-dc91-4173-962d-fe9d24758db4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3d512239-9d98-4ec9-961e-bae6b068ef07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d1c18b-42f6-43e3-9d68-52b6d51d10cc",
        "cursor": {
          "ref": "f23638c0-1dad-4d77-aecf-71422e7a0775",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "54620d23-b2b9-44e5-a63a-4d0b090d211d"
        },
        "item": {
          "id": "07d1c18b-42f6-43e3-9d68-52b6d51d10cc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7000d0de-620c-4686-b143-6964d317bf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de9f84b-a88e-45ad-a058-a2125748aa1f",
        "cursor": {
          "ref": "6c142518-8cec-4141-b059-460adb19a01c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ccb94b52-cfc9-4d0c-8220-f1c138af00ef"
        },
        "item": {
          "id": "9de9f84b-a88e-45ad-a058-a2125748aa1f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "22756378-efc9-47aa-809d-5f54de8c5959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d74630-e42f-469b-9bad-09f3a0c0049f",
        "cursor": {
          "ref": "b69c6ab1-8b09-4808-a2e8-3be8bea82a99",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7707c8db-f500-4fee-8d94-d235065622bc"
        },
        "item": {
          "id": "42d74630-e42f-469b-9bad-09f3a0c0049f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "94caf754-4c9c-4cf9-ac3f-17e31ab55e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d3a75d-a697-4560-8219-44da370ff963",
        "cursor": {
          "ref": "65bf6a62-0e75-474b-9a44-eea53045e955",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "134b8679-867c-4ab7-8b0a-1c7167d014ee"
        },
        "item": {
          "id": "a7d3a75d-a697-4560-8219-44da370ff963",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c01c209f-7c10-4cde-b4e2-f437de552efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65910f2-b1e6-40ed-ae13-5ba8fb6e18ef",
        "cursor": {
          "ref": "e0c6dccf-a8d3-4aa9-a2ce-aed75ac1394b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "56bca9b4-c8da-44e4-887f-9be16c87b801"
        },
        "item": {
          "id": "a65910f2-b1e6-40ed-ae13-5ba8fb6e18ef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "91d3a773-f713-4c4f-842f-9e321e6c4fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49abe9b3-c291-46b8-9e87-35d7d62b66b6",
        "cursor": {
          "ref": "6694a002-b9c9-4a3c-a7a9-7b27d291075d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ee134dcc-82cc-48eb-980c-65504481cc8c"
        },
        "item": {
          "id": "49abe9b3-c291-46b8-9e87-35d7d62b66b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c536c2b8-73e8-4370-90de-ffd11ec2de96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd30de59-1f64-4219-acf5-05f28cf75049",
        "cursor": {
          "ref": "42ca7dd6-a7a3-47b7-8b08-cba906a440a9",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e40dfd29-dbb8-48de-aae2-bd115b50a13e"
        },
        "item": {
          "id": "cd30de59-1f64-4219-acf5-05f28cf75049",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2cd5ec74-a4e4-4b1e-8296-51a23352a69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d703475-21fb-48a0-b7d9-5d708bd708ca",
        "cursor": {
          "ref": "04558cad-75ec-4499-a270-0d19cbf20fd7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "41e5950d-2d3b-4656-9485-0061ffc03787"
        },
        "item": {
          "id": "5d703475-21fb-48a0-b7d9-5d708bd708ca",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64293f42-d4c7-4d91-840e-d03966acf2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c35dfb9-2f71-478e-9028-161d7ea35a44",
        "cursor": {
          "ref": "929190b8-d203-4155-b90b-03e0ca36207c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9efd630f-e33e-4585-b8bb-168fcfe77a15"
        },
        "item": {
          "id": "0c35dfb9-2f71-478e-9028-161d7ea35a44",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4f466130-0877-41c5-b081-d74c2de28b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc8f08a-d2ca-4ed2-bbb6-103c899da7d9",
        "cursor": {
          "ref": "a8a598d5-e1dd-4501-8a0b-0c87bd7b5c39",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5c5e7622-bf72-4107-a522-05f5cada6f97"
        },
        "item": {
          "id": "ddc8f08a-d2ca-4ed2-bbb6-103c899da7d9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bb0073f6-66f5-4013-9eaf-d24453089919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5594948-4573-484d-aa14-4b020edc8aa9",
        "cursor": {
          "ref": "57ae3490-59fa-4219-8390-f77f4a3909f2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f5049589-da93-4031-a9bb-86bfb96db1c4"
        },
        "item": {
          "id": "c5594948-4573-484d-aa14-4b020edc8aa9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6c9c5e36-e6f9-4e3c-9a0f-2cc58c8b022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e76d287-4bd2-4635-bd75-bb823f7c25fe",
        "cursor": {
          "ref": "fdfc2e86-80d7-4257-b899-dc7fb5a3cb02",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ff915c1a-3168-48e2-bef7-0cccaacad911"
        },
        "item": {
          "id": "4e76d287-4bd2-4635-bd75-bb823f7c25fe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e65d7dd4-4918-4223-90e3-321a66fce972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f684c56-a636-43d2-be8b-997e8a8802b2",
        "cursor": {
          "ref": "14005d7a-3426-4994-90b4-6045d729ebfc",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cdf1bdb0-32a5-44a2-9b87-ab29b5a428da"
        },
        "item": {
          "id": "0f684c56-a636-43d2-be8b-997e8a8802b2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a03ffa72-32bc-44fd-81f3-4eafcabe506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83ee705-b16b-4d59-93a9-67c60cf450be",
        "cursor": {
          "ref": "87baa296-e180-4ea6-835c-b58c02faea0e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c2f0ca61-272c-48d6-b951-84337ae32c02"
        },
        "item": {
          "id": "e83ee705-b16b-4d59-93a9-67c60cf450be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c02f9db4-3313-40b7-9920-37abcd96b03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08ab4da-eb5f-4f7a-9431-a7569b8dcae1",
        "cursor": {
          "ref": "ea40de88-f05b-4937-a672-fcf531ca0196",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7394a1ba-f7b4-4115-b510-fd908c4458d5"
        },
        "item": {
          "id": "d08ab4da-eb5f-4f7a-9431-a7569b8dcae1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "47b338db-aec2-4cb5-97d2-93c3617dd25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d9d6a-8c32-4959-801c-4a6f7a8dbd4f",
        "cursor": {
          "ref": "1bf21a61-1b0a-4769-b2d1-e6ab81c49654",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "01fb16be-6c09-4192-aea2-e9714369fff2"
        },
        "item": {
          "id": "8a1d9d6a-8c32-4959-801c-4a6f7a8dbd4f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3ae295ff-3ac3-40fa-88a2-e88b856ac516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf31b34f-e549-4f7d-8c74-5a6c2f8d654e",
        "cursor": {
          "ref": "5968799d-9546-45cd-b8d3-7a2ccb1b1bb9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d76bd119-a569-4c5a-9e6b-2558feee6f82"
        },
        "item": {
          "id": "bf31b34f-e549-4f7d-8c74-5a6c2f8d654e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "25fb4a78-ca45-4b64-9693-55fb258d19ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9831c636-f222-4693-98a1-e4554964934b",
        "cursor": {
          "ref": "bdf8498d-d717-4c7d-ae1e-01e44644c471",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4eeb5783-3b66-4fb8-a844-53c160a9077a"
        },
        "item": {
          "id": "9831c636-f222-4693-98a1-e4554964934b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba9a4537-9c1a-4d0e-9341-ac6d53544ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6410f1b-0b08-43db-8b7c-7ae5b462ce42",
        "cursor": {
          "ref": "c7375763-027e-4326-b3b8-45aa72c76c9b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f0bd5915-1a77-4e15-adcd-fe8802f95757"
        },
        "item": {
          "id": "e6410f1b-0b08-43db-8b7c-7ae5b462ce42",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0f5e286e-5834-4b66-860c-b8e4717561bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7ed57a-c95c-4ad6-a372-4a4c5cc4e40d",
        "cursor": {
          "ref": "e9ff9dd8-3f0c-49ce-9464-4117600cf7eb",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8f759c8a-cd06-4003-80f9-f22ae8f15284"
        },
        "item": {
          "id": "fe7ed57a-c95c-4ad6-a372-4a4c5cc4e40d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "18272b1e-9cd9-48b4-9319-b2b7dde27b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c6bb0b-0c29-4e79-8b31-22dde0b7e842",
        "cursor": {
          "ref": "d4a4b655-8042-4b8a-b3aa-8186e3c1be7e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "24c2ea5f-e4ec-4e44-8d9a-64301ea3e5e1"
        },
        "item": {
          "id": "97c6bb0b-0c29-4e79-8b31-22dde0b7e842",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "be91ad94-0974-43c9-9953-a5e296f0a346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baf655e-7194-4b5a-8303-7f1f0efebbe6",
        "cursor": {
          "ref": "28829e60-a453-45dd-a68e-759a63455327",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "87bbf8a7-994f-4c9e-92a9-a4b68e5b63cf"
        },
        "item": {
          "id": "0baf655e-7194-4b5a-8303-7f1f0efebbe6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7ced1f71-ff1f-428b-baac-660ab2379f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a43661e-307c-44ac-9286-0d4da0673930",
        "cursor": {
          "ref": "433a88fe-c390-4e25-87ba-ed4815a31a23",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6b367269-bb4f-4df7-b27a-f24ecf128fc0"
        },
        "item": {
          "id": "6a43661e-307c-44ac-9286-0d4da0673930",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6276d770-d15b-4330-9076-cf6d56cbea7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301493f8-ba9e-42b4-81cb-35bf19dbc3d4",
        "cursor": {
          "ref": "632a1e1e-7abf-4c5e-833f-7a7c38f4730d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e5b5733a-8f77-41cc-a669-e046bbda0a32"
        },
        "item": {
          "id": "301493f8-ba9e-42b4-81cb-35bf19dbc3d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b7c9bf5e-0afb-4cd6-97cf-a1a0db89016e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c180d50f-ceaf-4a06-a5f1-ce585fd8e25b",
        "cursor": {
          "ref": "257dced0-b0e6-4a4e-b4e3-5afc2709ed2b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "22ba0ed5-08b1-4a15-acb7-b0d36e012476"
        },
        "item": {
          "id": "c180d50f-ceaf-4a06-a5f1-ce585fd8e25b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "90bcd455-ac8d-47f3-96eb-dda3649eb7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9c04c0-a69c-413a-9a94-59a97d569cf2",
        "cursor": {
          "ref": "3126a36a-9bfe-41e6-99e0-b6dff91af9f9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7608a29d-4cb1-49c3-a003-e1d811e15699"
        },
        "item": {
          "id": "da9c04c0-a69c-413a-9a94-59a97d569cf2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b1d1f06a-8fd1-410b-ad30-49f15f62e3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b746618f-e2ae-4691-b31b-de68d2b51dca",
        "cursor": {
          "ref": "ae7ae3fc-4d63-45c9-8058-b297b90d1fa3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cbfca8cf-ad6d-40c2-8645-de79fd5ecc50"
        },
        "item": {
          "id": "b746618f-e2ae-4691-b31b-de68d2b51dca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ddb2f442-7260-4ed9-a776-0f2758955fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efdb28b-30d7-4dde-b537-ac24a17b534a",
        "cursor": {
          "ref": "2ca4e2a1-e11c-40f4-82d1-4a7ea3c97023",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "46870305-bfd0-49d9-9bd9-b6d3ff1b373c"
        },
        "item": {
          "id": "7efdb28b-30d7-4dde-b537-ac24a17b534a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e10a6820-079b-4d8d-b510-f3c55d58a5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9e384d-734e-494d-9ff7-c4f42d974f87",
        "cursor": {
          "ref": "d879442c-d61d-4d31-ae52-54258ad269e0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c6523d69-27ce-4eee-883b-5743f7ddcd34"
        },
        "item": {
          "id": "9d9e384d-734e-494d-9ff7-c4f42d974f87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fe3c31bf-7aed-4896-84d6-425728d5d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1bd36d-47ba-4f01-a3d9-f791f3b1e090",
        "cursor": {
          "ref": "45ee6410-62f1-40f2-a3db-f7228268755b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8d8406b7-f836-40ae-a322-414dd23cb133"
        },
        "item": {
          "id": "2e1bd36d-47ba-4f01-a3d9-f791f3b1e090",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8bbbb81e-0727-4425-bbc9-e0007add8fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867d580c-663f-4cb8-97de-f73dc89773ab",
        "cursor": {
          "ref": "8fcfbe12-51ec-43b1-9c45-a803ec44c99f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dba91326-6256-450a-a20b-b4205df416e4"
        },
        "item": {
          "id": "867d580c-663f-4cb8-97de-f73dc89773ab",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0c8da53-9299-4221-a955-85bf0b85d504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ce714a-c04e-4c44-86f1-5f94f61068e7",
        "cursor": {
          "ref": "35687d49-594f-4128-98b8-cadc9b4d24fb",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "37d1c0e8-29c1-4171-bd63-604b94b980c7"
        },
        "item": {
          "id": "21ce714a-c04e-4c44-86f1-5f94f61068e7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4bdde20e-db36-4b34-936e-ee9d98816d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a03a48-962e-488c-915a-82f8deee1016",
        "cursor": {
          "ref": "5f65c51f-0cbb-481d-bca1-62e089bdedc6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d0dc2db0-2d6f-41b4-939a-4f29d6a9e398"
        },
        "item": {
          "id": "54a03a48-962e-488c-915a-82f8deee1016",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "402956e3-4dfa-40b9-85b2-56dd75209ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c282ae4-373c-4501-891a-39274d9032fa",
        "cursor": {
          "ref": "8a040183-8e17-483a-a6cc-2a793266a9c7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8ec8676d-b52c-4495-ae30-0ffdd7d726fc"
        },
        "item": {
          "id": "8c282ae4-373c-4501-891a-39274d9032fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ad4dfb15-e593-424a-a855-5ef9ce155f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c25c0e7-abb0-4ea8-89d6-360d3f39cd1f",
        "cursor": {
          "ref": "f5a620d2-51b4-4d0b-9343-669026ba7d25",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3c6cabbb-7515-4237-b821-0e5a7391fb03"
        },
        "item": {
          "id": "6c25c0e7-abb0-4ea8-89d6-360d3f39cd1f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9e5dafbd-0163-41db-838c-004473bcace6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5349f0-0eb5-4f03-aae3-0036adb48d4b",
        "cursor": {
          "ref": "743ca4a3-c6d1-4768-8ebf-81835276d3f2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c22a99ef-c1d6-4ac7-8b7f-fb36ddc7fba0"
        },
        "item": {
          "id": "9b5349f0-0eb5-4f03-aae3-0036adb48d4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c84be993-5e2f-4e8f-9a28-f8d276bbe996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea86579-b14a-47bd-95db-48455f2c0a76",
        "cursor": {
          "ref": "bdbf5a8e-a7ab-412d-b1e3-208f3154e635",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e3ca8a66-cf05-4f04-aa71-916ed6d60448"
        },
        "item": {
          "id": "cea86579-b14a-47bd-95db-48455f2c0a76",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f4ad7edb-0b15-49fa-ba32-9680321cd70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8dfda8-cfb9-4e79-b9c1-6bad37e3f278",
        "cursor": {
          "ref": "667ac377-4272-4ba1-8484-61cd478e7407",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f3108e51-b24d-4d5f-941f-9d9d1cdb17c8"
        },
        "item": {
          "id": "cf8dfda8-cfb9-4e79-b9c1-6bad37e3f278",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3b6d5f7c-e1a1-4691-ac5e-1d24eed24eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668247a1-cb73-49f2-808e-e668f4bf0b59",
        "cursor": {
          "ref": "2869d0fe-1ea6-400b-bae3-6a12b4283b29",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cb0e1264-e39f-4166-8723-41fa0c2ba37b"
        },
        "item": {
          "id": "668247a1-cb73-49f2-808e-e668f4bf0b59",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "136673f0-66ed-4bfd-8e43-95da76804e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5cacc5-2a44-4bd4-b707-1bafbf2e8127",
        "cursor": {
          "ref": "0c1ff8ac-61f6-426b-993c-af47df81d2a7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "62694f89-ee82-4992-ad1a-21f6e75167d7"
        },
        "item": {
          "id": "4f5cacc5-2a44-4bd4-b707-1bafbf2e8127",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c3faa37e-9ee0-43d5-97f7-31ed84412cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fb8911-e577-4c99-a427-288628a451a6",
        "cursor": {
          "ref": "1fcf2126-4e0d-4069-933d-a538db44039c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "599bee21-f150-44c8-b3a5-9eeea9e7a3a8"
        },
        "item": {
          "id": "49fb8911-e577-4c99-a427-288628a451a6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "99f1b0bf-a5f7-47d2-92a2-ee5342e1118a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95edc7cf-47ab-42d6-9148-5079a2a206ae",
        "cursor": {
          "ref": "b4e404b5-27f5-48d1-a9c0-d2806cd34172",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0353f9bf-86a6-40ce-a43f-d7faaf88a289"
        },
        "item": {
          "id": "95edc7cf-47ab-42d6-9148-5079a2a206ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "86dd8a4c-6712-45dc-bcc8-70e14fb5310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29109f7d-5baf-4e8f-8702-b226df9a2ece",
        "cursor": {
          "ref": "f7d36be1-55a4-470b-9901-37c0a62db6ab",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3fab6eee-e92b-41d1-bbde-35693bf2c5d7"
        },
        "item": {
          "id": "29109f7d-5baf-4e8f-8702-b226df9a2ece",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9227e767-ca46-4070-93e5-035607361f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c08bb6-7a76-4516-b93c-99bdff66405d",
        "cursor": {
          "ref": "ac3ec60d-ac45-4974-8117-b12a50234a44",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f6969d89-a7d4-4b78-89ea-f4b00ab7eced"
        },
        "item": {
          "id": "46c08bb6-7a76-4516-b93c-99bdff66405d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "456c97dd-bf68-4721-8c32-1363d3c91a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d44ad2-fe5d-4dc2-92e4-3959fb755ef2",
        "cursor": {
          "ref": "fbf7011c-ef36-496f-9883-cc19b8d6ccf2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b5448abf-dfcd-4efd-8767-0c17e5506e98"
        },
        "item": {
          "id": "b4d44ad2-fe5d-4dc2-92e4-3959fb755ef2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3cab72e5-d70d-4208-a1e6-fd794f6e286a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a4edb9-ae7b-4e24-a298-01e42b4ebadb",
        "cursor": {
          "ref": "02a9177e-935f-4eda-96f3-af213b094563",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bd9abc2b-a6aa-4540-b82d-bfd487fb28e2"
        },
        "item": {
          "id": "c9a4edb9-ae7b-4e24-a298-01e42b4ebadb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ea1c24c3-4047-4c7c-899a-6276a1e8310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bae1e8e-f1d8-4362-89ba-12139c188307",
        "cursor": {
          "ref": "19ec2d42-3535-4353-acf3-15bfa5b00741",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "55a7df0b-fd48-4acc-839a-5496db359b34"
        },
        "item": {
          "id": "6bae1e8e-f1d8-4362-89ba-12139c188307",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "48b35b29-505a-4970-bf6a-a6b14cc87ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ffc509-4d1c-4a42-87ce-bcf580c1a040",
        "cursor": {
          "ref": "53e363be-8fdb-45c7-a4a4-409b13ab439c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dc23b76e-85f1-4136-ab25-085b0d6c5bf5"
        },
        "item": {
          "id": "d2ffc509-4d1c-4a42-87ce-bcf580c1a040",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4aac8c23-b16b-45fc-9179-325193464c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c19dc31-9e38-4609-8ec7-563f5c7ab6a9",
        "cursor": {
          "ref": "4c917678-059f-416e-ac0c-8fb82f630b7b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f1661855-326d-432b-831f-58c9079b2c9a"
        },
        "item": {
          "id": "3c19dc31-9e38-4609-8ec7-563f5c7ab6a9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1b7d5861-c4e2-412c-8bd9-081d3bed8ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1110f83a-62fb-428b-ad95-7042bb8ac685",
        "cursor": {
          "ref": "213f0f75-15b3-4932-a2e2-49c8665de20d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "041e4252-2e4e-479f-89d1-38dcc6e36bd7"
        },
        "item": {
          "id": "1110f83a-62fb-428b-ad95-7042bb8ac685",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "20b2b50a-2674-470f-b407-a564cff3d6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502017e-0dd3-4462-9893-d036868c0a6d",
        "cursor": {
          "ref": "cadbb66c-1424-44f2-b2cd-10d8e0a935a1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4790bb21-a614-4911-bca7-e4d798cc6762"
        },
        "item": {
          "id": "b502017e-0dd3-4462-9893-d036868c0a6d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "112cfcb2-64e7-4b89-8967-046f55c6d2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ea6703-7335-44f5-bbca-f3462177a746",
        "cursor": {
          "ref": "b9ab94cf-5ec2-4846-9c78-b841c8a44524",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4be9cc5b-e55a-49b0-9287-9535e69436d3"
        },
        "item": {
          "id": "11ea6703-7335-44f5-bbca-f3462177a746",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90f4fb90-f016-4cb7-b645-861611d37ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a4fbd-af2a-4693-a0f2-23bb12ecfa26",
        "cursor": {
          "ref": "e43dc4e3-d1d1-4805-ac19-82ee31af6a3d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27cc851a-8132-4e19-80c9-1b6817eb0681"
        },
        "item": {
          "id": "2b4a4fbd-af2a-4693-a0f2-23bb12ecfa26",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8a084a29-6b6b-4b97-bbb3-c58fbc9f9b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33e5191-7b1d-40a6-9027-d8ec8f4934e3",
        "cursor": {
          "ref": "4616f53e-9979-43d0-9a65-dc069f97b8d8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c4ea545d-9eda-46ce-8cf4-b0f4b9496374"
        },
        "item": {
          "id": "e33e5191-7b1d-40a6-9027-d8ec8f4934e3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cd414664-7e66-4a40-9610-f2b2133b712d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa0ae1a-af83-4751-9da2-20ac963a86b9",
        "cursor": {
          "ref": "6b4639ee-bb33-4eec-b3b5-72cabbbbd6e3",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3c634efb-a5ab-455b-840b-eddcd3933692"
        },
        "item": {
          "id": "1aa0ae1a-af83-4751-9da2-20ac963a86b9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "516ecde9-943e-4afc-988a-5683457c23b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2a8c02-17a7-4f03-b819-5295f9dfe6a4",
        "cursor": {
          "ref": "ac4f4238-1fef-40e4-b57b-3bd36853149b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "28614b97-3c9d-46a5-b4a1-024ada2e38ec"
        },
        "item": {
          "id": "2d2a8c02-17a7-4f03-b819-5295f9dfe6a4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3829524b-ad5f-4b53-9bb2-46d285299fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5c9271-1385-4fca-b645-2d44f3f1ae65",
        "cursor": {
          "ref": "c03b14d3-25bd-4139-a657-17d7c0e25fa8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1dbe51a7-984d-4459-b23a-3eda4b7a5a49"
        },
        "item": {
          "id": "7c5c9271-1385-4fca-b645-2d44f3f1ae65",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6a2b0523-58bb-41d5-b26b-5fe45c4285c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cc13a9-6f78-4ff6-8b20-91ec2551e3c3",
        "cursor": {
          "ref": "5be81f15-f5a4-47a3-b800-ad832e0c4263",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3e7ba7f1-8398-4d32-b55c-d37028800762"
        },
        "item": {
          "id": "76cc13a9-6f78-4ff6-8b20-91ec2551e3c3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bf3a9e74-fe21-4d90-b4da-f182f4f04cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2ece42-6601-45e3-95bf-39cba1f07dfd",
        "cursor": {
          "ref": "867221c2-320a-4f79-92f8-dc39dd3db971",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ff1c469e-16cc-4ac6-9416-f0cbf03abf28"
        },
        "item": {
          "id": "2b2ece42-6601-45e3-95bf-39cba1f07dfd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b5221a10-0da2-422f-8bbd-3278febca4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5e0122-601d-4be6-ac7f-fdde748bce01",
        "cursor": {
          "ref": "d640e989-7232-4097-b3e1-90fc8deb79ce",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cd4d98a3-98fe-45ad-9e93-69a6102257fb"
        },
        "item": {
          "id": "ec5e0122-601d-4be6-ac7f-fdde748bce01",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6d14c2e1-a084-43cb-95ee-818fc62c5053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a54e1f8-9da7-43de-a84c-5d1a6e3f2d69",
        "cursor": {
          "ref": "b1b6d376-c0ca-44a0-a17e-ffa213efbc02",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ab9cf025-505c-4c5e-96f6-e2f5a8be5f13"
        },
        "item": {
          "id": "0a54e1f8-9da7-43de-a84c-5d1a6e3f2d69",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ecd58c1d-6e26-48a4-b828-e29382237840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95227541-e216-4236-a07f-5b937bcc9d08",
        "cursor": {
          "ref": "bbdb0163-fa97-4cd4-a63b-9e7a2e4e5853",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ede5efab-3059-4be1-b93c-cb2d7bf0dda6"
        },
        "item": {
          "id": "95227541-e216-4236-a07f-5b937bcc9d08",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f8d5962-aa0a-4ae5-8ffb-55507a492767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d24a88b-7054-48bd-83c2-2022519a26b4",
        "cursor": {
          "ref": "946dbb97-e22d-43b3-89ed-e9c4ed2e1127",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b746bb2a-e6f5-44fa-beb8-6e13773efaba"
        },
        "item": {
          "id": "1d24a88b-7054-48bd-83c2-2022519a26b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "927b2289-b65a-4825-9bac-2ec0ad6f34c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3010cb-3327-447d-86d0-b87940468d17",
        "cursor": {
          "ref": "6b459510-f398-49e8-b652-80a49e7cf782",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0cd56f30-1bd5-409c-bb0d-be710f3ca6c4"
        },
        "item": {
          "id": "6d3010cb-3327-447d-86d0-b87940468d17",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "449ce821-408e-4ea3-b955-4c0bd84035db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634fe409-8b5a-42fa-9517-106896452924",
        "cursor": {
          "ref": "e369c815-41d4-4526-af52-e8fa46a8aff3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fb7bb38e-8d25-4bad-97e8-982434cb9dc8"
        },
        "item": {
          "id": "634fe409-8b5a-42fa-9517-106896452924",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cc4aada0-75bd-403e-b670-466d748aaf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de082f5-961e-4eb8-8eac-011753aab9ca",
        "cursor": {
          "ref": "6cf9d97e-2dcf-449a-8b9b-d0f8d3d16818",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4fce3946-db2c-4be1-b0e6-fa40877f87f9"
        },
        "item": {
          "id": "1de082f5-961e-4eb8-8eac-011753aab9ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "546de8ac-2b52-4491-86a6-500be36d3261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a565734-cb55-42b1-a30b-f0ca6cb40756",
        "cursor": {
          "ref": "1c70e116-d0d2-4ba4-83b8-8d44c336a7b3",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "96eb3b3a-fa48-49fd-8f42-17ef156f0687"
        },
        "item": {
          "id": "4a565734-cb55-42b1-a30b-f0ca6cb40756",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "01e5d43a-3405-46e4-99b3-412d03f5650b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6de75d-fbeb-499f-bee4-222bae4a4e29",
        "cursor": {
          "ref": "092ecf6c-1437-4196-863e-000d61cedd32",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f91a3288-2eb5-44ec-a679-7f1144a7e831"
        },
        "item": {
          "id": "8b6de75d-fbeb-499f-bee4-222bae4a4e29",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "43568795-70b2-4640-8f90-7cc9b01912f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52024c7c-7fbc-4de1-9004-3e8442e2b655",
        "cursor": {
          "ref": "eab8b5dd-6bc6-46c8-88c1-133429a5e703",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3fbda5ca-7fd2-4ff7-8ccc-c19b1c3a5f71"
        },
        "item": {
          "id": "52024c7c-7fbc-4de1-9004-3e8442e2b655",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3ecab58d-ab3e-4f87-855b-42d0fd438480",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0421a4c-f1f1-4022-ae13-729143258aec",
        "cursor": {
          "ref": "1209668f-93f3-4d4b-b103-00c3837a8e86",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "31e7188c-5bff-485c-afdf-88f1a1d7fa4c"
        },
        "item": {
          "id": "a0421a4c-f1f1-4022-ae13-729143258aec",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6cfca558-0e79-4ca7-a29c-bd7b593fdb6d",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a25322-9db9-4211-9fca-9017b4faf2bc",
        "cursor": {
          "ref": "83a0a33b-dc92-453a-92e4-79b3dc631046",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3a4ea0ad-1989-4230-a0c0-bfc61f66fc9a"
        },
        "item": {
          "id": "c7a25322-9db9-4211-9fca-9017b4faf2bc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f1304bce-c999-4f61-80e5-673f04824305",
          "status": "OK",
          "code": 200,
          "responseTime": 1689,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f633d48-1533-4bca-b4b9-a71fba01c8ca",
        "cursor": {
          "ref": "0d118be7-2fbd-48a9-93d1-d5fe273a54fc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "88afe756-14c5-4b57-8c1f-0232f12b77bd"
        },
        "item": {
          "id": "8f633d48-1533-4bca-b4b9-a71fba01c8ca",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eee43900-c3a3-4032-abed-312f39e64353",
          "status": "OK",
          "code": 200,
          "responseTime": 1443,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d961bbe1-3ee9-4980-be01-06d5357f8f7d",
        "cursor": {
          "ref": "f99ea2c4-c90a-477b-973a-6f3284f8664c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4aa83d3b-05f3-4153-9056-d815361f2b51"
        },
        "item": {
          "id": "d961bbe1-3ee9-4980-be01-06d5357f8f7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63eefd5f-dcfd-4d9c-8eda-ae098aef6356",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d961bbe1-3ee9-4980-be01-06d5357f8f7d",
        "cursor": {
          "ref": "f99ea2c4-c90a-477b-973a-6f3284f8664c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4aa83d3b-05f3-4153-9056-d815361f2b51"
        },
        "item": {
          "id": "d961bbe1-3ee9-4980-be01-06d5357f8f7d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63eefd5f-dcfd-4d9c-8eda-ae098aef6356",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9de053a-c2ee-47f6-b310-9270cc9e9880",
        "cursor": {
          "ref": "147790d9-4e62-47e1-8794-71f41e45fa51",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3d1c0727-c33c-42b5-8dc5-d6eeb0d7a69c"
        },
        "item": {
          "id": "d9de053a-c2ee-47f6-b310-9270cc9e9880",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2daad558-98ad-4b4b-8584-2e80749dbfbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb21528-7e7a-4a9c-b769-604354dda8fd",
        "cursor": {
          "ref": "e2329b22-dfc1-414d-b91e-c9503e0fbf91",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b3c0b4dd-4b44-4737-9513-8b3f1421809c"
        },
        "item": {
          "id": "7cb21528-7e7a-4a9c-b769-604354dda8fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7b64a6ee-bc97-4d5d-b230-eb2ff184d4b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}