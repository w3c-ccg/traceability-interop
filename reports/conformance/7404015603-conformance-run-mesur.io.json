{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4df17a4e-7158-4272-a94b-5a472662dea5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cd6518ba-f92a-4b90-b15f-8485deb45fee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "584a1429-4505-43fc-8ee3-2d3057e1e3ac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0436baf7-56a1-44b0-87f6-e34638d31413"
                }
              }
            ]
          },
          {
            "id": "53557ec8-fd3c-4c86-98b9-0f8f2f0aa4b1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f5aeef4-48d5-4035-9f6e-ecb28b8f44e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ec05a79-92c3-4287-8547-784981386a27"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a6cc568b-fa68-435d-a258-073199e84255",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "24d20d99-8116-4a9a-8bc4-01d63830e42c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e75eee9-cedf-4fc4-bbb7-d159ed806b22",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c60a795-0c39-4d3b-9e74-b2d3cacdb68a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7357f858-7330-4d68-ad77-bc8c4dc0ec98"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b42fdcac-0e83-435a-8ce6-a253ca7b56a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8aaedfa6-e728-4e82-8930-705e31158858"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a99fd098-a19d-40c6-977b-5bb9993d9a99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dadb406-8725-493e-8bd7-415ec5419176"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40688158-59e7-44f8-824f-2f2c38dd3d39",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b2d7e3bf-72d3-4f43-a8f0-cac9aaacf4bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d74a6cad-bc68-4412-9b88-5e0a260c2d86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f3bdc5d-870b-464a-ae18-966e8fa581b9"
            }
          }
        ]
      },
      {
        "id": "00eb468f-e774-4a7a-91ff-76f98debab4d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6b7ea74f-9f17-4f21-90a5-ae85f3db70e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcd8a613-ae52-4205-9ca8-1c8c37c0c5aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c2f8710-142b-4c8e-8949-b0ebf248fb64",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649c4304-bafb-4db8-bd8d-4f0017eab35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "950ffc28-56a3-4e6b-b564-640b5f943006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c91ee-a425-476e-8d3a-dd1e086da3cf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224ad65a-2a6d-4701-825b-60175e353d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4aed549c-c860-401d-a110-d9021e74738b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f81dc2-bd19-4c97-ad70-0d2ba6309dba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf94cf-6b2c-4b39-99a0-db8bc7b52fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dce772c3-17bb-4915-a03c-500ada818f87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9db4b9c9-243c-4011-9c61-56c7411afd02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4f32a0b-5a3b-42bc-9c2e-8d90296f9582",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6350b9f-74c1-4a4e-a43c-bd1e433d169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5495ff39-1c25-4da6-9c45-02fd67cc7f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed657c7-6bbd-4942-aadb-4f61625c34db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37549da4-7cd3-46ca-bd7d-0796ce4128f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96edad58-6b4a-4135-b5b6-dfb86ecbe1e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad8acaf4-1566-4481-ac7a-6eabb2e1b8cb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f447d04-7292-44e9-99bd-8ef58adec22c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d93fc23b-1e0e-4b07-ab13-140546c0360d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1796c169-2f54-4fbb-9136-56075fc624cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ad8a3179-eabf-49a4-8252-e0e4f763d115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7154cc2f-c3d7-4e04-acaa-c7af6a9b3265",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d281d18-a4cb-4226-a48e-8ee6a9d2c062"
            }
          }
        ]
      },
      {
        "id": "d95d3430-4e27-472e-8f4c-41bc336a3743",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ab69bb5f-d366-48cd-9a45-ca4146dea173",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d90a353c-3e1d-4823-8fab-b52d826167aa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4be60503-8f90-47b1-a5fa-b02865953651",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2772e26-f8b4-4aff-a18a-8bed54484159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd89d021-d45b-4849-a143-c482f3f87893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc70e6c-1ead-47d5-b90d-4facb995e7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5147fd62-35d3-4444-be8b-c82c2388bb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbfc4bb-06f3-4ee7-9cf9-7d6de54ed359",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8fd5c8-7dfb-499a-a1fe-27e3eb94f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd44d2b0-b2f4-4675-ac72-c5202f6cc0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320f388b-7cb8-4346-ad20-871ce50881fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b94ca68-be7c-45b4-ae51-a61be019be93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1481f986-57ce-4ea8-bfd0-4c50398a9c9c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c3c11c-af1c-4b02-8136-9f41fda24d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35031c3-518e-46e5-9f9d-e0423ffefa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d984e52-19e4-4d07-a228-369950069080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97260ce8-8cb4-492f-80eb-9746cc3cc0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d77be43-99c3-491c-bcef-264860a58848",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7a2608-1594-48c4-a3b2-e2fc4cab238f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aee0830-d3a0-4a13-a0a9-ab3f1861b4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa071136-053f-4eb6-a717-6f6970887c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aa1a075-93cf-4e2f-8607-60a60091e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792b758b-9c69-416c-9592-6c0d624cb8a9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238516b8-e9df-48c1-bf20-653215be64e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff19c1a-760b-4d04-bea6-10f1768da7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf777b6-37fa-4082-9ded-397e8c12d8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ff1330-e012-495d-a4da-feb3b1a69a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdf00a7-6380-42bb-9f26-8736577d2fd9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1435c295-080d-417c-995b-bd13fd6a35fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c279ac08-c300-4f34-b67c-209e2adb4dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a64069-be0d-45e4-ab68-075ab6ebce17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa065f1-a6ac-433a-88a5-5d4f61cd2ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f7a865-3400-4e36-b63f-899613bcd5bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205c8512-b05e-4242-8760-7046f36a6d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f4df70-633b-4d5b-993c-2c804df1c160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d200529a-32ff-4ff7-8198-9a56c0f980a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e84eef-f8cf-4835-be17-a8c730a907d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833392fe-ea1c-4ac0-9e2d-0c638f9547e3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13c4c29-67bf-49b2-a193-9466e17f3c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5f6aea-6cb6-4eea-b052-3d6678c1e527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac829a2-6da9-496b-ba77-714e217fddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2556167e-105e-4e28-b0b5-c42a7f12f552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9be12bb-30ec-497e-a328-d266d170751b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c5d291-c1a0-4701-8977-8e723099a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708f6c24-44c5-498c-aa4c-9e337c867146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b86dcd-9265-4bca-b528-77fadc816563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df80ee12-727c-4054-b3e7-7cace4e8426b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2e5f16-44a0-43ea-9df3-d85fcc87f168",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910da936-3e9a-43c4-ade9-37604bd6b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c61db1f-fb84-4cc3-a8a5-5bb46636ea4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3e7075-a9ac-4524-a9c6-6d2fdc0faee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a83f25-fbf8-4de9-b881-884191b77210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224b3609-e9bf-4f97-be54-2f87762014d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c45992-474f-42a5-a5b2-2e85dcb3ed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad60ee96-25a7-4878-a456-cec3e11d2e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f17977-6ff2-4c21-baf3-0aa4c6fe9d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a594b82-6ceb-44ce-abae-ac7d4e4f92cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d4a743-24c5-4f84-9eab-ca45cf913e89",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2e4c05-35f5-4acf-a6b6-bbb7e8b69020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f165369-7ab0-4c2b-81b4-c4cedcb31317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24534d9-848b-40ea-82dd-0e1595e020b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e256f31-c5fa-4868-ac19-fb4d6deaed2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f29616b-6c36-4eaf-9ee6-90e8caef7f2f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb431f77-58f4-4d39-9303-a6ae4a0d3cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9b4f8e-4688-4526-8ba7-3ce68db4eb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6b1899-5946-410d-8cdc-c8f38660fd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01d53b42-0e58-4fd8-a37c-94c6ef5fa39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f2bfcf-fe55-4e74-9cfa-891e63da8b0d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4236b9-64b1-4e36-ae59-07cadae6ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79afb0c2-799b-4994-98c0-bf0ec5c4482a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a95d19-363e-4629-804d-d1aeac9c873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdc92ce9-9745-4045-a4a3-5ef7157a9907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf965010-751c-43dc-84d7-49d0194d1a1b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d802b1-49f1-4967-a029-363fe80255f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc3e03d-77aa-4794-9e74-f19110e71d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7ea9c0-7d42-4ffa-bdfd-acb7c06373c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc02e6d9-b1ae-41d5-ab8d-a3aa8b8d34a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4233f6e-91aa-4668-88c1-09026ca0c5e4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427ab951-77d7-4ecf-88d3-180ea80779cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d2010c-a8a6-4e90-b600-be785bc9bf88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da472820-e239-4566-afb7-d49214566a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8423f52-b491-42a2-9f9b-f18f8c563bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dc3d39-5f65-43a6-8ea8-9b8111ad4050",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e5817e-9542-4ce8-bf14-f898a81b28ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33ccce6-eb4f-48a7-8bcc-dbd30922a35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffc449e-da32-4319-908c-19bf10ac7427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb08207e-9fb2-41ec-9c70-dc75afa90b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cd8d8f-2bc7-4729-812a-d3af5704c38c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3651c0ea-46bf-45fd-843a-04b630f3ca95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4120655-087a-4685-8aca-aa8cc4b754a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c640e975-e560-460a-8921-5ee913de453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0370e2-9f15-41e7-9ae2-86d319c0849b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38bb8df-65fa-4b55-b0dc-3ca0c6ce0c35",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307b2dd-2fa9-4121-b768-67dcbbc0a0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ad0e45-b858-4a0b-8b19-c44e3ae7ea08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79ec31c-1a8c-4507-80c1-9dcd168c39b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba32b94-a48e-49dd-8083-8bd4a7e76fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cfd0a7-24df-4901-b1d3-6e00b4802143",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd75b58-b741-4a7e-8f7a-1fa938bb2789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb928cb-3548-4734-81f5-ec67feab1188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9430452c-3178-4ed6-af97-0e2d76b97aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6a17a8-669f-41a8-a1ca-87ec1d9466c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9cfa3d-4b90-4e3f-aeb3-af87b89b13d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7f0c81-7a2c-489a-a24e-dd3842cdc049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac287cd-906a-48af-88d2-254616563469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c4e02a-f0f2-4497-a82a-2671b368d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d7d641-994a-484a-a39c-fa27b7068817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3f6a65-4fdd-4022-b535-b38dbd9ebc15",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51beedcc-9e9c-4e4a-b7a6-5e2014f25afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fe9fa8-b3ca-4bcd-9b90-81df725c4dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91666c05-9d9a-4cae-846a-f6c87de21d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3e4604-c3aa-4b5c-8983-227f778f6a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84fa6c0-7b45-4cbc-938f-e49dd1db8672",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fcb439-757b-4a54-a1fe-aa00d2db8d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc6d4c6-2f30-4d47-adbd-bc835c2f4390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ed2b08-2369-479c-a5c6-29cd41b6cb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50fa5eb3-d762-445e-b1fc-0540f2d8e2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b87c5ff-1495-474c-927f-0b7bb76fc248",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbdf130-0388-4014-9fc5-e2a5cc2a897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a24733-9e50-49df-9dbc-b720a7d1f307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea1a00d-29bc-4802-8afb-6a1f7d2022fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b18d47-b980-498a-a848-33b7186fd5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753a74e1-7700-4d04-925d-226099ebe284",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b99052-02b8-4411-ac4e-599f48237b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986a7232-cad3-402e-8b61-314f48a1f72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abc48e1-7573-483a-a314-4e580b1b3b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8acd8358-b0c8-48c8-9c8f-21a533f6aced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1e2002-a96d-4372-b52b-5ffbf1a58cce",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6405a4-3f96-4f13-b0ae-acb9992b605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48e6995-cbd6-4a0a-a9f4-c77d21c36491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c627fac8-a17a-4526-b041-659dbb21653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde2d780-0cc1-4f26-bcb0-953e0a751e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735f36bf-5259-48dc-b2ab-9c1f0c04c066",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547d705d-2231-4b37-aa96-6804f7c3b191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019989a6-d4a4-497d-8829-f303d80cfe94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e799deb8-0a37-4267-85de-3f5042fd75e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2953ceb-6b01-43f2-b301-bb6f77b29e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e64255-fd7a-4b7e-a2ab-f315ee560e65",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3944d370-00ef-4b5b-a3a9-312848fe6324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcabcb3-45c9-49ba-82fc-7048919ebf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144e8161-802b-463e-a529-4cba2491eedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2684e061-b32c-479a-afd5-d5e42accf546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d098c5d4-bfd6-46c0-950a-685cb9c175a9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c4f67-4872-4bd0-adce-33a050dac88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edb3f62-649d-4c04-882c-c4946361c290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7795dbc4-0f51-42f9-89ab-4e5786f1612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ed11b6-4922-4bad-b6f0-55750d6222ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1943f6-093e-47fd-9bde-b55d6093336a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911cff2-d27b-4fe2-b642-e31fd8a4effa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bca97b3-0903-4c3e-a8f6-5862a7953115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59d6362-d01a-4907-a336-18aeccfde92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9da12b-90e3-4b7b-941b-6f8beda67415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0cea83-6893-42b5-8d3f-395d35cdcdc5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77025e82-f6cd-45cd-92f7-2dec330ff27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8df023-a6f7-4e89-94cf-ec3c5add608c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62352159-1865-4196-abbc-4183653d5ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f35f6a-69cf-4d7c-9baf-5fc174356fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3be09b0-5a39-469e-8944-6e109750c796",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf103b2-7a84-4de2-a6e8-d705a812fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca022b2a-8057-4551-b692-86ef2716d794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55128cf0-fb78-4ecb-a0df-e157e442eb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ab3f26-164c-4712-bae8-3b347eee1411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaf1d3e-19a7-4b1a-8223-b7b43d8c208a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b9ae5f-dd0e-4a06-88b8-a0b0cd8d9c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4533d8a-edd2-4c4f-9efb-85dc88cfc7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918f9464-052f-44f9-add1-446cf1c702fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7106d71a-d29c-4b44-95ea-52eb56b1b046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a97f424-17c1-4a70-ad42-01ff2a24387a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95b4daa-f974-4b36-8779-486635a01b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eeda87-1f31-400a-939a-effe023a9dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1718a992-9283-44f6-9d51-3a3e98c80556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03288239-155b-4a3d-8570-9f9d72c78dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b3450b-3922-4084-9850-09c6f47d77b1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64672bf8-95cd-4988-959f-6f05207b5d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d606534d-2e53-42f3-84b8-02edb2e8270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b4fa06-bb1c-4ede-9451-7a3575fe41ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d816208d-9bb2-43ea-92e8-5d3240307e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a30d0ad-b276-4333-b4f6-5c8407dd0810",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf101a-73de-4695-90f8-9452953e8a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5bd07be-c838-4d39-bdba-a16b94660049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497eba17-8497-4ff3-8ad3-077999d18e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e200eef2-4df3-4f11-87fd-776f9da25b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829a63e0-2c5c-42cd-b2c5-3940788682e8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51de079-ba25-4cf3-9938-7292398e4ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379d81bc-5174-40f2-8686-b8db7bb1a387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799b28eb-51f2-42ba-becc-ce33f7417435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9bbef4-cb9d-426d-a08a-e355bb8a1bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f6252e-8ff6-4dcb-84a6-834d480d568b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c820990d-ce10-4754-93ac-9afac5ef76c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38da9ab3-ea09-4a27-8136-3a9082934bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f62d4e-1cdb-4540-8765-61564b53cd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d69ed2-3101-4b40-8b40-884cde72dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef7fb07-541f-4190-a370-7e33b1a93d51",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fd9b23-d3b5-4605-8824-8f6976a3dd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c0a39f-05ed-49c0-9cf5-6297425e850e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490db685-c2f3-4ba7-8a09-a9114b9f7c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd9e901-9a2e-46f2-8559-eb1b84250d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55462ab-0694-4dfd-89aa-bf3b3e1346e6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a345a2fd-afb6-4de3-aebf-798c055be660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a523d95a-e304-456a-af78-e416f1d12d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76156d5-f258-45a0-98bb-b915afcbba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9796c1-f850-4872-996c-67c0ea386f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ac921a-0f77-4732-b741-81368eacccf8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ff0d2-21a4-4dc3-a156-13210a708d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba1d5b2-acbe-46bb-9ae1-8fb2de88841d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a149be8c-4390-492a-ba3a-db12a49fd067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed3e16e-f6c3-4b42-a46c-5279a7c0981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055dbbdd-ccf0-4a7f-8c62-c55db14913fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd8fcca-ffc0-4e82-9fec-cb8f8a199cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a23fe5-491c-49ce-a310-6eace44d9903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef4574b-2286-43a2-8243-f6fc1432069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "022afd5e-d042-43a7-866b-1b0c3dddfb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e02ab5-f8d1-460d-a2b9-701a87351193",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef027dbe-3d3a-407a-a0cb-28c1be05f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd7fdc3-6adc-4e5a-b4c9-098d312d5c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d881c2cd-6c2b-4a32-b4ef-ccdbf2fa5611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe13d99-1fef-41dd-a6ef-ff3ebd74b97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce6599a-763c-411e-9076-a35f3263708f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac959c1-a9a7-4b3c-9687-594e9b94d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce9990f-19ea-4e6b-aab2-74e41366d914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43972d26-0fe2-4f71-a3ee-2931306592da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0925b279-f278-4e2c-8710-5afd16fc4e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dec5e4-d6aa-4bb7-a88d-d66492a09655",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffd718b-38a5-473f-8a7f-30627debac40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea21b16-47d1-4ff3-a700-028e2d53078f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555db930-685e-4649-80d2-b78f0784b15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de476a59-69e4-4da1-8b48-1a17f4970e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb14444-ae72-4a67-9d82-43f32531fac2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b45fb1-84ed-4c88-bf8c-41f23f925874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d720632f-cc57-4d91-a400-571b48d46024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaa4e0c-97cd-4509-9d52-a14e163c2eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4829eb-d9e3-48c0-bbba-f8de612e25cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee2c5cb-7ce3-4fba-b682-26f83e4c2075",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0615c8cf-6edf-4a5b-b5bb-3e8e07daab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f624119-b807-492c-8041-603a85fe3536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46b4fa0-9ff7-4350-a26c-479a70023270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39a84f4-ea05-4927-91a6-b5dba58a0a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45bbad3-7617-4782-bb85-ccab3e72aed2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bb5064-37e3-4ea7-a7f7-d41a36af435b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e257f3-102f-441e-a34a-d4c23fcf8f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51123b4d-85f4-4dde-9b59-b0c9df5d0e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de95ece2-623d-4856-af8d-8776d2a39f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adab42b7-6db7-4684-aaba-54a742f10b99",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04ad387-824d-4a17-ac0e-5521afa47109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc6e172-4b0f-4a76-af50-660e81962e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a89e6f2-284d-4fbe-872b-9e9cbea22abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf847ff-2a2b-47b1-b510-5fd9568ae414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299518b1-a7b0-4de5-9b70-731f42001644",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02416ac6-fd4e-4a17-8e08-b9c5d511df7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cc1f98-2beb-4a6f-9fb4-4e8e43fd9788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ba57c9-844f-4751-8ebb-e392f6fe1e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5679f457-a6d6-4c92-9f3d-bd034570ef59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d227d-9b7c-4849-b173-c95c0e3daef5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37bf6b-16f6-4562-9639-e3785c6947a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a84c021-528e-47db-971e-9389b64ea653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cc9357-b132-4222-bae6-16ea0fd836bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0bea69-41be-4799-838d-05686a55d9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b59374-675c-4238-bc53-30fd530583a0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2bd9bb-20dc-4b81-b669-0e8186c1fded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8170cf84-ad4f-449f-ae9c-2509b7887a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda55cf3-bb02-4982-9f19-1468ac7a78f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d95f787-6293-46a5-b4c7-b5db04235962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ad6611-b065-4300-a5bc-18811f394d8c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55e7e54-18d5-4cd9-b410-82288a60e1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9beae3e8-ec67-444a-ad59-6bd6c72d76d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039aaf0b-181e-4368-9a22-ac9156b1b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3495bcab-6a0c-4ad8-b185-852d6fd637f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdcbd4e-6124-4637-832e-7cc6222b71df",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db59f338-2bb8-4f12-8fa2-287d8520daa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd93cf85-a675-4b34-8949-3faa601fab30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc9b70-7dad-40d6-8b6b-e22587ffae2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6daacd-8c1c-40f8-926e-a624c45efbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4713f6af-4acb-41f2-830b-178aae25d016",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0228b1f6-5e38-42c4-b17a-4d4df58ae5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5544f8b7-b4ab-4d27-9a3e-1124922c8b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e620f454-c79f-4120-9e3d-6153d385bcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c51afc-3a0d-44d7-8d7f-f66d3752072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa9a3f4-1532-487c-ae31-9c56fa14ddbe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d9e44-75d9-4389-bfca-54dbe653e8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25de6e29-d584-4b39-8d93-54de56680a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e68d8f-0cee-46f5-9cc0-9527680bcfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "69d55f23-0981-4e31-a52b-851327b2c2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38f87e2-cd4b-4593-86dd-96c393a6f384",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8bc357-6088-41fb-8763-a809f40ff1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff607e3a-0322-47a3-8a9d-5350dd894e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d899b136-4dca-4c46-bd77-7832ba46d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88489a2d-78c8-4926-85c4-8804cca3ee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d07773-2797-45de-ad46-ed254fa404e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b956d0cc-27ba-4f3b-a8d1-3be165ad5da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17b6d16-0e6a-40e8-81ae-72b073325d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ff5d7e-ed66-4931-a7a8-dda382933d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf4ff64-b39c-4cd5-9bb7-5deae5e3f377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8ce982-8418-45a9-8250-983af8cdd61e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d348b066-490f-45df-b449-f55d7ee9c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09bb758-ddbb-4822-b6ac-d2d4ace95a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f45bce-486f-4eba-9075-a9a625101a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2846cf3-9c67-4649-987b-d0a9fa9bcc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a98212-4647-4ca0-81ea-82c391c4a5e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45be28c8-a740-4248-948b-4ecfec118a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cb65f6-c4d9-4818-aa47-f0a213afd86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05af372-c27c-41b4-affe-fe7e838f091e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c696a2ab-b8e7-44eb-b19e-9ded1528d6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7b8264-98ba-418f-a571-91d90692be33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88a336f-f611-40a2-8858-56f3eda55266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159e1f92-64c3-4277-a58a-b6dcc3c4107c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfeee16-47f6-40fe-af09-afe477fb35d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79985660-5be9-4051-b17f-f7e74b11ce01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c13b6e0-031a-41a2-bbec-4829633d57f0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716345d5-9c21-4455-a853-b79fe2d5d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e52e37-b1c1-46f1-99f8-c34c03170474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e075e10-ab33-4cbc-a263-723b59f458d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8712e9-9ba7-45a0-89e4-b035497d32fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1762b1e-0049-4087-ab14-99af0a407676",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed561ba-824e-47e0-9626-b1b4c673e5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db22ddf-33e5-452c-af16-527b41023e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2342e49a-7cea-4503-aecd-39b65420e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e097052-5023-469b-9dcb-65fbe95760a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03623312-ecff-4128-bb19-482f86d32f84",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e7d35b-8ea2-4ccf-bf1a-c0233cc43eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba03c42c-eb8e-4aab-a438-7906484edba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071c9e6a-24ae-4969-9d91-1ff000ff67eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f666efd7-94be-4481-b697-4ba77ee03c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a3691a-a534-4a66-b555-42e20967bde6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941ecfb-a992-444c-a65d-f204a9591a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c08847-ea23-4031-b9d5-6985a345817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c94064-22c8-4316-9f5b-84c81ba94af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a1173c-0c5e-446b-9842-ecacc67bb044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5acbeb-8387-4c52-be34-d6a2899fc929",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc711322-32ca-40c7-b70a-3ed4d4ca0162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6816df87-ef38-4d35-aa83-6986fa13e8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ba08c-adc7-4287-b237-3c879c2eb14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e19b45-6ec1-4f9e-9494-17362af8c71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b19d5fe-bf14-4e64-bfdd-93c890b611e8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4840baa7-432c-4cf3-8b9f-b7807ca47a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6437d30-4909-41a8-8a49-0fa31744b50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad7d11f-4921-4f3d-b665-3947aee18dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "710aea07-5a15-423e-835c-c9588ae8a04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb51367-de11-4ac0-a4a2-9fe0349ba0aa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb3bd08-925e-43b5-a0f9-547624327906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eed2d1-ce72-41ea-92f9-0d5ebece5d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed77287c-c7e4-4332-a952-3add64700386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4f60ba-4ab4-4eec-abdc-4c694820735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221a251a-54ea-45bf-8490-32abec667b62",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb75599d-678c-4a71-a44f-93b74cdfc7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01b8a2e-c96a-41ce-bc38-70213cde7ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542c6047-601d-41cf-bf44-9dd9383e46fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37db823b-821f-4c39-a4f6-55d07009d2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba0e1ce-f3c0-428e-a23e-e0cd133b5039",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3951e1-48f6-40fa-914c-e1cd3c0cab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964ee408-728e-44b8-9477-d1febd9c79db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327e3185-f927-4157-b276-a5a6a1824966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5812b332-a38a-4b80-87e1-ddaa3a78e41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d348193a-415f-4e81-9694-7cb098808eaf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e570b62-ae0c-4061-b203-fc9414d8e33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e58b1f-4b79-43b4-9cb7-34d38268d91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d91f0-a8f4-4d94-b848-b522ba956564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2426fe5f-3037-4b1b-b8dd-03aa702b14e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6359ff-e281-4944-aa54-129020a2a4d8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546f41a7-12e4-44db-8057-30f053c277d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d3a731-8f89-4ef2-941a-aa0ce6dbadf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cec829-5124-41a3-bad6-b2cd8edfdc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "706801e2-242c-4a6f-a3f4-378265c3eae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4640edf-a91e-49b7-bc0d-0e81b916a337",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f590e3-28db-4ca5-b172-5b7e02c4829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ec3df8-ff24-42c8-97e1-0d56d71fe34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a16bafb-4eac-4e85-a914-c727bc19816b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09e7214e-a25f-4c71-bbc8-d696906cd11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a02ff2-c6f2-4fb3-8a11-ff02b32adfde",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db389f0-652a-4375-a37d-40590dc9e06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42413e9f-a7ec-452d-a7ff-504bc6e43b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db10b350-9b30-450f-a194-97831f7d5e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70ed2d5c-ff06-4b45-8188-1ede966fc321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405c2abc-dad1-430b-945a-762eef11b950",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cda38a-ec39-4c89-ae4d-fbdd4323c31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156ecc2e-9060-4d1a-bb8c-5f8c61a72d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f01cecf-89f1-4c3e-a795-873e6becf56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51951357-0e97-41d5-b8da-9f38ee45b1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9770f538-295c-4da3-b73f-1186181dc696",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a1aa2-7887-4665-8e56-a55e3e6f8928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f5b389-740a-488b-b072-f170144aedfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3540d0-344a-4b4b-95b9-5f68053214cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d7e2d6-8e33-4b15-abfd-b40df645b9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294a7abd-de16-4bba-a0aa-b70c6c130c71",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8fd5ac-42d6-4f63-bcd9-34f067652211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbdd40b-c700-4722-b1df-28e32ecc4f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5747574f-65a4-47ee-ad51-7dd294e0b286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ac1ea9-615f-476a-9389-10b476e3c9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e329b768-0b99-42cc-89be-d631255c6b2a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd5fba-3dd6-4093-a3e6-3c12e148b120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47887235-f005-4ead-8f9e-e562c669af08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7e6536-434e-4af3-a1b8-39b73d2e37ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62da74e5-ac29-4e38-b13d-077e7b96f099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a594bfc3-7bb4-4cc5-9690-9b0961827920",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a830df0-2e53-4a71-b68c-9015ea612989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e8653c-f5bb-458b-92af-b93c90e52957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6c15a9-817f-4bc4-838c-39a730361b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa1b8fe-c6a1-4ffa-98a2-92e883e75097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499d894e-a3b0-415a-86f9-e951b3a49320",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a96f87b-137e-4c53-a211-a022d78be2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee5cc24-27a4-4845-a70e-3c32d374ceb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d20be2b-d2cb-4ff2-8f66-1aaf91438926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa31469-f3d8-416c-989a-a26d7c9c4d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5c41fb-e648-40ce-97c2-309cf117773e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03688a55-3f58-4844-93d6-9c5b29279885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5366a644-23f2-4c37-b680-f2b6e9572ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7312f4b8-79a3-41c7-8502-8e2e1780ed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19003f0f-dbf5-4809-9ac2-dbb40eb254cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101ef1e9-7baf-4ab2-84ab-9360eaa9728b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d2088-486e-4221-a337-e90315b896ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0c02bc-20f9-4228-897b-46bbffec328f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6790094-80eb-448e-b331-7622a08aa0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9c8303-2d08-4a53-bc3f-e034c4d2f5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b023983-9f0b-427a-806a-6acd0e69a1c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7cb3c4-b10d-4fef-b9ee-9d31abd062da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30666150-4539-46bd-85ca-eeb6f71ecf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9307efd-b893-40fc-b1c3-4c4e724b1bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "687562c4-3e47-498b-b7a9-927f74b9a001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3a85dc-3bec-4dfe-a3a5-cc0e5e891434",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1ac0bd-530d-48df-bf7b-80dc76c552ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26efc1a-9b12-42d0-8974-0f8ec0fa4cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc87dd74-2ec9-44f7-b746-58a29f438e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf14489-96a8-4c1b-9837-ce4db4dfd7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6377b1-cf7e-4cbb-ad31-420b8e5b18a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd665b75-8786-42e4-92f0-a0b54e4634e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626c24a1-9bd8-4ab0-9b4d-39384d39df17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6637c020-d4c6-4e97-ae23-0ad6bfa209a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1951ddb-bd43-4c7d-8fb0-3264102c6283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a131b84-32bc-4cbd-8a6f-55689d5c970a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2c3807-becd-4ee4-90ea-79aa7fc0786d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19895350-6338-442a-988c-4889df5378f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813e5979-45e2-4678-aaf2-1415f044c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c61f04f4-40be-40af-89b2-f1407d2f9c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a971dd-7b13-4cf2-a9bb-ac09f4560234",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a1b215-bb7c-4ea5-81b9-22d9349b9e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5dc982-dcd7-40f2-ae1e-77bb247011e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d880ee-87a9-434f-9250-46102f558234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95d1a07a-d9f6-411d-94d1-e4d691059cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac23ca4-772f-4ad0-ab05-99b396b7788e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4611cad-f551-429e-b6e1-cd81ddd2660f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa257bb-35fc-4875-a4f9-6ee7a2861e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a0f073-9b42-444a-beef-72cf5cb1c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f90bf30-faeb-4c69-9b74-649e6d69450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78533df8-4b51-4d8f-bf32-5bfea6877dd2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c7fda4-1244-4bc6-adc0-a72f9f9e2078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435c6a40-72e0-4aaa-a348-b0da753ab1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3263a136-d82c-40ba-80f3-706284c5b885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d1a526-22bd-4750-91b6-2ebde6c1fae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3eb833-8450-4fce-b718-543bd8fcda06",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f45ddb-5572-4004-9d8b-787a67d28fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724acc57-3672-4fe6-a3d7-d9f15b95536e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17240d5f-588b-457a-9509-ed99f3a40d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4ecf59-636c-4b6b-97a4-a3cc1de7a7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b3cb7b-03f5-47f8-b593-ca34f7d5ae0e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a66004-9e0c-40f4-978e-8d8f9b1fd01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113fddf4-0045-4756-94bb-71adfbb38a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348dec37-9eaf-44de-b70f-5ee23c107a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "92682a21-514c-4f7c-9a5a-4e293ca653ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70895746-9555-4f18-b002-0d2594cc617f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a86d8b-a858-4dd7-b389-a5d75283cdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "22f5ea9b-84e3-4a39-a048-0b45b14714e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7de3f3-bc8f-4df9-bf0f-e90dc608ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c79d9c-0615-4cd2-bcbc-6ec0dc68bd02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e69b3b1-c922-4118-9974-d7bff6ffe9c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2849b617-8d58-4709-aa02-e74904982944",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee6479b-1409-49f6-9281-38ef0c3fc278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "085a7e53-06e3-42a4-88b6-7d5ed485e274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b1fad4-41ca-4a0c-b8df-b764efe9be33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bbd5ce2-ec4c-4784-b20a-c7a9819be649"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30b386fc-7afe-45b4-b645-80817ec07983",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4077aca-012a-4438-b319-beff5a2c4aad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1445519f-a96a-4f53-9f7d-8d5d757f59a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db987d50-46a8-440b-9d69-267a637eb0c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc984b42-a0ae-4709-abef-c45b1bb8aead",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d1c7052-88da-4cc8-9e22-ab731c8ad884"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1172cc08-a7fb-40c7-9650-e9e9f848e6a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2da93ed0-7d04-4c72-bd54-f043b244d51e"
                }
              }
            ]
          },
          {
            "id": "61ed32ec-4987-427f-bf30-5c4571326d52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06737182-d7f7-4396-ba21-176d12222013",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4198c350-6060-4ecd-8d79-98407218ffe2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efba2f53-d4d4-429c-a54d-e8ecd2b08b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e51cefa9-82fe-49e4-8aa6-c316395ffb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458fac20-19ab-4039-83e7-0694734215b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82d3899-2ec3-48cb-812d-b3c93081f200"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc4f585a-2af8-4b17-ab2d-be1b3be1731f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77cf04d2-ef22-40e5-ad5c-bfa3d101a92f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b504db7-4eac-4aea-8075-762d64b8a09f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51b0ad15-e151-4c2b-b7d2-198e139b701e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46ad490c-058f-4600-8ecc-91220545870b"
                    }
                  }
                ]
              },
              {
                "id": "77d1c418-fbd0-4754-9d80-69ebba0c8931",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca83a1d-5b44-4cae-b75f-4b662872ea98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb6c0ab1-ff18-49b4-aabe-99b7454681e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b04fc5d-aea4-467d-8b43-8a0cd2ee69a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfa3e2a0-d4bf-47c1-b2ce-ee87d42fa56f"
                    }
                  }
                ]
              },
              {
                "id": "756c5970-4cdc-4410-957c-e9154615b915",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "043df6c5-753d-4b6a-9d78-0c28d904cedf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83450761-45ec-4d70-b2ce-be7ea2dfa721"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1826acd8-cae3-4554-8678-d0173bb10182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef2f890d-d517-454a-915b-03257341f749"
                    }
                  }
                ]
              },
              {
                "id": "0c391e67-0cf0-4a60-a8a9-cd479c71ee2c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfc6b6e6-0333-4d78-b2dc-3cfad31aa4f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eddd8e2e-3dc1-4779-9776-8c1daeed46d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee35f67-74a6-4531-9692-64c40583b809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "13f648d0-9860-49cf-a3bc-8a3358789f75"
                    }
                  }
                ]
              },
              {
                "id": "1ada138e-e163-4ae4-9889-299e7a8affe2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca3f5200-2b91-4541-8e68-c2ab955dd496",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b54eee0-e862-4456-b99c-0c26fa42828a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55fa3579-2850-4188-9eb7-23b6f91dd9e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "02692528-5be2-4d65-a9a1-b1a303b92788"
                    }
                  }
                ]
              },
              {
                "id": "9b14eeb8-d7b3-492e-a80d-7b46b3ed781c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e6ae12f-8603-4fc1-b23b-97aa5ecc873e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79c6389b-4125-4deb-b925-8e5614e854ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cc19399-a384-4e10-a684-6c098a21396e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6db92e65-4884-4849-ac66-294bfb92215a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fb68dce-6da8-4364-9014-2457ec65be04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "051716c4-bbac-4069-aaef-d4b274a564d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6727b71-1610-44ba-b276-f1a7e49a3b07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74dd488c-ec20-4009-a3c8-4e902d295521"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6f3e927-befb-4061-96cc-49ed536dad58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5fd7c49c-a1c6-4604-8a48-234c7493d398"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b43a494e-838d-4d16-b2e8-c5e0e5fc9267",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8de6177a-f6ae-4f80-b66e-21b7cc4b6905"
            }
          }
        ]
      },
      {
        "id": "98778f3b-b35a-48fd-be94-dcbe8880c3ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c1d59b62-494a-4ee0-8c5c-111c41875bda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19962426-8d02-4ac4-96d9-386afe1bcdda",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2025c87c-3a6b-469f-acd0-be1227320d3b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6265cfb0-387a-4bd0-9e8c-f11f80af829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166af393-4a4d-4429-a6d9-9f5b199952f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6b3907-9500-4acf-8769-c551a9356dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b68cf92-6c5a-418e-a618-f4c7593e41e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fe7a7f-2b85-46ad-bc5f-e1d9d7d83b6b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e48d39c-fe13-4ea4-9a76-2325ff57952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934368d4-ccac-4b8c-b33d-bbc1080e50fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0041068c-ea51-49af-982c-698334ffd00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7241d32-9692-46cd-9551-3b973333137c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4312b39-6f9a-4f8f-8a7a-2d24b11042f9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e6c06c-aea9-432e-a91c-e7a7a7229e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0812523-cacf-4a0c-a47e-584279954a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31cf51c-b627-4734-87a5-b57d1fac5cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab2c2b8-b8bd-4230-a6f2-4f4913cee945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851a1210-94cd-4de9-a885-af37c4a69c9e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8d2fa7-c1bc-4f2f-a38a-8c6233a1fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670a43b4-94ae-4f6d-b2a6-7ff613842cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72c71e0-4264-49a9-aadd-1cf9f3bdc923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "482578c2-c975-49c5-a903-5b6436ee1ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9a2aaf-c191-4c1e-b744-71f24bff59ec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46924ae-260f-4796-85f3-9287229175a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffe9bcc-2ea7-48f8-af26-91c3cf87a2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6beefd9-8ed6-46c4-9ea6-8ef8f01f0e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c2a32a-2547-4e77-a5c3-d86686189b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26e988-600a-4ec7-828c-4fdfe94826bc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca383ae2-7dc0-4f0e-8e18-add671650c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceae3f28-79e1-41a1-a307-72e656956c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ec5e7c-6d29-4756-b5eb-be2915f6748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd04e9a-6224-4973-8c7c-78be2f4e9641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5051670-dc77-4e15-9916-c829726553b2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1c6892-1ddf-4b85-8465-42869893cb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a6456c-dc4d-4904-a3cf-7b5abdd1a44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eebc250-1505-4d2e-a239-2a8fea69c5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f542288-9b1f-4429-89c9-f290f88732f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee3dc41-bee6-400e-bff3-2d3cf6f2f2d5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bc25d9-3386-4db8-8d7c-a83084e3d4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a567013c-f852-4011-a1d6-c35124c74c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0a11ad-e90b-4ad5-a505-3b7cd6a3cdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd96305f-cb99-43bb-bef9-60ac903fc2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63c9c00-f30e-46b9-bcf2-e3476fd0d45d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893f4062-94ea-4c81-9967-9b2ee60d72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c181402e-cf22-4457-bcfc-5d214605a8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cd57dc-0c53-4342-9b80-73646fc3459b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "735fdc9c-8668-4d2d-8fe3-f6f8d95dceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70125c5d-4063-4801-9ab6-f0432a455d45",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cad528-c3ff-43d8-a223-439c88d4d9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94717f0c-6faa-48c7-9d6e-8a7095659008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b216fe-7097-49e5-8e7e-643e8084693e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5b3048-9385-41b6-96c3-fbd8818f3490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2632d3-ef9b-4141-8ad5-8055ffbddbf7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bee201-5b54-4235-9264-608efa0cd466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d12e63e-70cc-4804-8e75-dbaa186d1070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea34c93-560c-4e27-ada3-aff06d909f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db0f2a5c-5a35-4841-ad1b-6194686773b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4cee56-0967-4194-81f3-39d707b2d563",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566dc719-17cb-44f1-833e-5904c5087414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbad2da-4927-4916-8ac8-ec23c572b84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1acc98-82e9-4ba8-a239-37e5c440cc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf9347b-bc21-4953-9fe0-9e02b7b72d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98b1625-140e-49d0-b174-92abcfd84a43",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d09ba3-d4fa-46b6-9ffe-02de0c51ca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db93f14-f475-44c8-860e-e6cd2316670e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01a0d54-0f18-4725-85d5-aa43984f108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55590456-aa71-4bda-a0f1-df48cff4b18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a058aa-8707-4618-9932-a3c48975c0ae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55561988-2b43-4eae-a374-ed1eae622b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce490ba-4167-4a6e-978c-8c3529a7f36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fabebab-cb7d-4223-8f3d-aa507733be48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd54f56-54be-4c97-bca2-7a3d58573890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7a598d-9609-4049-8db5-11874c25a989",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b429f3ad-f0f7-4903-bc98-0316725661f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaad2b5-2d33-4d5b-9914-db3717a1ecaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441d145c-10ed-426c-a924-e078a86363f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cebf82a1-2c3c-407a-bedb-f18a4dc3fe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d8c991-f78b-48d0-b5a8-397eccce4fcf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc97224-38fa-44da-8d16-461e1368e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56376d7-e253-4b8c-aee8-61e0c2e7a521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e6686c-719e-432e-bfce-a811749584e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "300a012b-fa07-472f-b6da-52b7bb77c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f4114-f043-4bdb-a238-23ce48a4064f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce95b540-c196-4562-ba07-0177fe3f46fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a1ad34-5d2a-4427-bc90-2e91be772800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbc3969-ef75-4986-a3b3-fde442177415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e1c81d-76fc-4ce7-8d4c-08c4bd060f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba0b87c-74c6-4fa3-b1d5-99ba9e0185ac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46768ff6-2d01-47b3-a343-72c0a96e3913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3415df6c-ede8-49ad-b3a2-f97d50fa0940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f159f97-d5c0-41af-928f-197d07826df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e48ee22-b8bd-406d-b60d-1a579527f1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e66a00-679f-4db6-88dd-5479c10d3977",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c435c61b-858b-487f-b6ae-d2e9cb9ac80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6821957f-fefe-4bfe-bb07-599cade27672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb41e87f-28a3-43f2-8aad-fa3cc05f64aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55bacdd2-bf50-4c88-b4cb-95fbf69cdb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa97fdfb-cfa8-4582-96fd-3b789895e1d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7a64ca-96a0-42b9-b43e-537b31e6497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be0c26a-530d-449a-a249-1dbad0c496e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f520cb-3de9-494d-bbec-c443e993b3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a6f9fa-cff2-40d8-9d37-cdd9ff0c7a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49859c9b-5c59-46e7-a862-1f2f482b2f88",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d477d7d-cf52-4b78-b697-17fea196c10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a13903-b48a-4a24-9c9d-dc2166c19e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f8bf9a-a7f5-4d80-85b3-d0c32171bb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb3d67b-420e-45dd-8f40-ab094f2491da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d23ad34-11a4-4535-a116-b6a9b6a5a5a6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47646aae-aecf-4779-90cd-07db275e9f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20409046-60eb-462d-993a-4781298a9801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867a6493-f9b3-4c70-bf36-145e98f75ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b86bba-f718-47f0-a921-014762a4e873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0963a53e-c04f-45aa-a04b-c176966802f6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0880adcf-bcca-476d-ada6-ae5ec742ec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b4fdea-0014-48a1-a80a-01b3d9229087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b288a4-7397-42ab-984e-dcabf897c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7519e21d-5648-4a65-be34-08a71401e15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deb5c4d-0498-4efe-86d8-5281005eb858",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb79b31a-44e6-4244-b7e3-096eb30e6708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76fb706-365f-4df8-86c1-752efe19acc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f0ad60-135f-43e5-a034-7b3d580ab78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b7977f-261c-4e6a-a0cf-814a61efda23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73a901a-6769-4da6-a0de-1055f5b7e654",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8442f9ad-b0af-41e9-a772-8354b05bdb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfefce6-5200-40af-b09b-557c8a008a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9bcf99-4549-461f-a106-d2ca60b590da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b62486-d552-4d33-b004-e75a91b76d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb4d606-c623-4810-94f9-ec25918801ee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9989a8-3206-4e23-93ec-f1dcdf0c23b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb53def-dc56-41b4-9767-2eb124800a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8611cfdb-e150-4770-b187-f6d9e0b85bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdddb64-a6ef-454a-b786-1e0dddb473bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8124251b-f66e-4dcc-b91e-d3ce466db220",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ed6e12-972d-4e51-a9a3-415b761eb799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e00e14-1795-46bb-b681-f68054a49eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17ff7b3-bada-4d83-b6ca-aec75c7e872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "625f9d90-2b5b-4930-8ffa-81a5114ffd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28edd7c3-315c-4883-9f25-2a1b4cd461e7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef702c9-4a15-4726-8694-457914f2e6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52026c19-0788-41d4-b9fd-f9b5cc94f4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8431f7c-f6cc-423e-b212-fcf347dc2b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8c97d2-17bb-4d69-93ac-1b9e5d11c92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfccdeb-f769-476d-98d1-12b27425fe91",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae02573-e839-43e5-9635-df8ca23c6043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2907c1-3760-43e9-8d18-3f11f6260e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92864f22-4503-4143-831c-6c228346d086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac158bbe-4f0b-40e8-9ff3-a6fd666286a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c5054a-7bf1-4dab-bfa2-aff0f374872a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de2c8d2-c4ac-44d9-a79a-0ab35bf3003b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8974742d-472b-4b9e-833a-18639bc926cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30806f8-094c-4174-9f48-19c6e82f16a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa689dcd-0b81-4d5d-8591-2f50a298a5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61f87d8-84f4-4eaf-83a0-e55068013bed",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98811a7-13d6-4eb2-ad60-8d17ec79bbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1ff141-7e02-440e-84f1-8b37ca747c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33dd3bf-1f96-4676-a60c-79c9bffd3e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa371fec-a2cb-4117-827d-cd13ae0cf3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd7926e-36ce-4850-aff6-66ce5acb5043",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263eca89-8bf3-4cad-aa53-1b961ba434e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a39c9b1-5017-481b-b19d-beb667b66b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a76cb9-c28b-4e6c-87a5-466434c17736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5e3b9e-23e6-4ec7-94fb-1d2d7edddde0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43cf717a-54b8-412c-a251-5a0fc85f9ede",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebc5c6d5-2392-416a-9a66-bda99e849599",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b36e5-c020-4d9e-beda-b72245ffb7be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46a7d288-8651-493e-8c3b-f1ae617c4fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3557138f-31b2-4a99-a4be-09a0565e1612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff7aab53-e2e6-4446-be03-fbc5c7906772"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d3e5e4e-02da-40cd-bb72-b5476cc0a5a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fa91d09-ece5-44d5-ba21-cd207650048f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d85fbf6-a1e6-4752-aa20-8e6eec846fae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62a845c0-28ab-4db0-bafc-a18293b862db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce0c2752-86b5-438b-ad1a-a1730800820e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f708c4e-703f-4027-9850-7f0542b28960"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84409df6-cd7a-478a-a44d-3d5804af8fd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "293c7bbd-d1e4-4a88-b750-2a962f3f20dd"
            }
          }
        ]
      },
      {
        "id": "c3cf80bb-adc6-44b9-b210-a9b78aebefac",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d86abdfa-092a-42f4-8046-9b939b76a5c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94624c69-550b-4fe5-a6ea-f7f5ff8bde40",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e49d27a-3654-4c8a-93be-44474bb22e5b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a685f22-035d-41c0-8baa-c8396e197282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b652b4-9424-49aa-9f0a-ce682da2a229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3548c339-a5f1-49f8-b313-e44f27c77a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "12558510-5669-4178-a869-3e0291f6927e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360233fd-6085-4f90-a0da-7ad2a978dd21",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cadc99-44a2-411a-9b28-acff8d3cfdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a80e7df-9f14-4320-92e6-0cea8cb4bcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b87b34-2889-4b6f-b3b0-f5d7d7a76574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a7ec27-a791-4783-93b4-89b9bb3e27e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aeab5e-30f5-4b8c-b09b-0d27eaa8f5cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bf51e8-603e-4e7c-aa1a-0862a8f578a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b03551-fab8-43ee-8bca-49d15313e01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1b1094-d7c8-4008-bbd1-739a3974b8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5fe4df-48ec-4fff-a3f3-d3965ddbd01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9ccbd1-5b6c-46a4-882b-0b9ad70175ab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe300c7-d44c-4269-8b6b-ab4fc8633164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e27d76-bb77-42fe-82ce-3dd3bfa9e33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d23d073-cb85-400d-8b76-878930cdae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7518c9c-d8b2-4b96-aaa5-2ade2d742faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473244d2-2aa3-4bf0-b02d-29a690efe92f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420c7800-14f7-4042-89f2-cab5add0260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55eb8b8-e55c-4c5f-aa9a-88e6a479b091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21136e7e-7c52-470e-91d8-06df6c017c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71bf4b89-bcdb-4db2-9f28-e76a378cb1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962b0018-d34c-44d8-a59c-ae59d6b5ea0f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0e3b65-f9da-4b1b-b8f5-4e2d9667574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36acae0b-7ff7-49d4-8fcf-1ce62e4c5228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83182a00-8654-4b52-a1e2-f8fe14d16470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f736a33-030a-4802-b588-9dce609b1d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf8bb3d-61e2-4644-8be5-3ad39998cc61",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7f203b-95d6-46c5-9490-96fbd4321d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c781d5d6-10d0-47c5-824a-5c91a91c24d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a36293d-330e-4116-aaf9-a135d3aecd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bab2db-6ab8-489e-ba1b-df78299e3c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fcd3b3-996d-40f8-8cd5-0bf2e3636c8d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc01f83-ac00-4bc0-9be4-0b83c795e780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347d6d7-98c7-4003-9877-1259204674a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88565c6a-d135-4726-8533-943014b2a24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aed148b-8e63-4c07-826f-d16341f1369d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a5dae0-e91c-46c8-b4d7-c22eeaabfa9b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987fc8e6-b6da-4412-ae9d-5d18cf21b8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba9be6f-ce6a-416c-b28e-f9cd9ba4dedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf547af2-24d7-4bd6-9679-840828edda83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7768c81e-994c-4716-9410-d8e1e06d1544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46de2b33-fca0-446e-bdbf-836c531474aa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ce760-1cf3-4fcb-8840-183101fd53e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb51eeeb-f4f1-46a1-8b86-cad6f1c0b395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c143d9c9-4899-4539-8ff3-5db15a86c5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8acb4daa-2d1f-438a-b385-24e9083e6a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06be1bc5-cab3-4263-b5ce-5273a6f0cd55",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647f031-8d20-4d6c-aeb5-3c0f1257255c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aca2b4-2c20-4855-bede-c6e313f2aa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdae51c-7354-4dad-8869-df0055357884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02edca60-d549-43ba-96f3-825c739ca59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3042d7f-ba6f-4644-bda2-a69451ddaac3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52bd00b-c6d6-494d-96fc-5414e298870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c26aaa-b2fc-464d-b50e-1b9827763d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fda2d3-21a2-4954-91ad-b007f9e218fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e575241-d6fd-41ed-8c0a-c24bd361fce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa0634-d688-4a4b-8272-92667f485d23",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d98153a-232a-4493-b4f5-4ee3da07f6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1757ca-8eaf-4879-a0cc-092eb46540c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe7f56a-4e68-40c3-8402-c899dc329c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d732bb0c-e89f-442a-bf09-38dbe1b7553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315fb3d7-fc29-4136-815a-ef1557cc4817",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76474a4-9736-486a-b0fc-710350291c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00682867-0360-4c3e-89a8-61c1c1573c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd018e4a-44e5-4eaf-bc2c-d08917300c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4bb9dc-d634-4be3-9485-f9648adf528c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52abe837-de44-4d74-83bd-b9188c5a47ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561741a7-2fd2-4325-a8fd-ded08dec6a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bf4777-8260-49d0-b3bc-1eef19935502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a84d8-0354-400b-90d6-93115bc3d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2e7a9c-72a1-4e61-803f-5cf1920a6af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce02db1-1ff8-48b3-87f4-207a124766c0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ac16e5-9059-4ee7-97c5-3ab826e97e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2967841a-d682-437e-985f-b0e9b9108fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fae3c80-6bae-422d-8bb8-6ce2aefbecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "356dada2-d1c7-476f-a838-daa180ddedb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021161c1-0f66-4f8d-9ae6-be265ee4ea2d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d4af7b-5bd1-4539-bd0f-51d8582e0b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5082e1ed-ed0f-48f0-a89c-ff48df5ececa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154eef73-bb83-4345-906b-4fc6807dc6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "636cc7ce-ef9c-4979-95ca-37c4597bb0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cddbec-6b8b-4213-bb65-a1042e8cc072",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806f89de-63a0-47c4-b172-617249d53e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feaaad6-143f-4adb-80aa-959a9ddba09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648a068-91f9-40e3-8323-8a2fd0c622a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91242bdf-d4a4-4641-9701-93bd87059c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e9400b-29b6-4c77-97de-887233c2349d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7779de6a-5052-4951-a5f7-788065ab49bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dfe4cb-1d8f-4ef7-8cc2-9130613c54d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c45f701-8176-4517-96e5-c5a4749324c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2497cab-8105-42b7-908c-b61bc7534336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4b8fb-1d34-447e-88cc-bc87218ab745",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f9202c-d85b-44a9-bee1-d1a885bbf54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eda01b-3ede-4fe5-af22-897f70219f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99b7cd1-ab38-420d-bc67-b31eefe13088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e75a2a0-b380-4ec4-9278-9ddff7ddd871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2802efc-734a-4a7f-894c-e2e670932dc3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f964ea-15f1-4e99-a18d-655ada73fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660447f7-7acd-4978-8193-8a81558b2279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea0ce9-12c2-4b4e-8522-badf08796543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d47a140-8ff6-4ed1-867f-9f8f1fb2aea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adcc203-bda9-4add-b88f-10715c8984e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144da299-6df5-485e-bd8b-50dad2aa35d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb65db98-8862-4d4c-b447-1917bc7ad2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47261385-751c-4cd0-9e62-f5c2a9947b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45926591-d523-4373-b50a-eaf2a4644c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2585fc8a-f623-4b19-ae26-fd67aa4dabcc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1be6b9-bd43-4689-9a31-7549e818491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78554906-082e-4489-a4d5-2f3483d19c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fce0b08-33ae-4240-8e00-a27edfe7218d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4ee48c-a87c-4323-8468-e80f6ee4b812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ab957-5b1c-4197-aac1-7be17d2cdf5e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d594de-14a4-4c79-9a23-7eaed1828d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77de1ba9-efc2-40ad-ac17-3ce1bbb3d617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c475a-9280-4c22-9474-fbbe1db597e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94945aab-2f2b-4fc9-86ae-e04264cb90b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159392cf-600a-4921-8ca0-7b9710bcbc49",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad2eec9-6ccd-43c1-acf4-fd9ef0c794cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536888b6-29c6-4983-a6fd-22e94030ee6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e2a7d7-c689-4afc-a828-2e6d69f0554b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fb5243-8780-49ff-9171-f2813bedfcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586bb4f0-1a63-41af-8936-4e08580c53cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e56ed84-b0d9-4add-97ea-b7864249238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab30dfd2-7cfc-4194-a0ed-2af2cfb487bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f14ea35-5260-4857-967f-1dfaf86ba8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd24269-b02b-459e-b06e-1feaffc29577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c98f253-8e16-44a9-9413-5ad40f220466",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940dbb92-036a-4149-a9e0-e2fef333c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db596908-b8fc-41e9-8de5-d4478411f474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2f1273-cc29-44dc-a36a-e07d18babd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7170dda-6736-47bd-873c-c1da0e7dcb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6abcbcf-65d2-44fd-918a-079884cd4686",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5ff03a-742f-4a12-ac38-0dae938f55a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fab5cf-bcf3-4407-bd26-3a0556fea243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f47a047-5e35-4347-9072-9124f1f247db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "746aeb89-7a88-43e2-bc62-c9cf564d2004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e6e0d-6842-4b01-a80a-0c9827a96bfc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca656f4-434d-43a7-9c1b-91c00dca192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2e2cd3-4d0e-49d2-853e-b820eb0df03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68d88bc-3040-4348-ad2b-e5c59d43a0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e3f28f-5c6c-471e-87c4-547db4e8fa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba8dc74-183e-494a-990c-8a5e1be203be",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6ba412-c538-4c2a-af9a-3ca1b9d1e532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf62106-72e6-470d-b5b5-2ef62ee7d51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effcb63f-447a-4654-8f9b-475e30624518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81eafaf0-6ba7-42ec-ac14-41b3f01c18e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bee5714-6ca7-4cdc-9d0f-c71d1cdc60cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ec0b27-26a0-4ab4-8e01-d7acb60a9ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81d4143-e30f-4f8a-b434-70b8de8751d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4f995f-24c2-4929-a715-d21037ebb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d07b38-7c61-42ab-8929-143dd53ee974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95c0c21-9c95-4a26-b269-b6c855998c66",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71666bef-df5d-4e5c-887f-9dd46306a080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd3e430-7423-4011-92ad-3c181d1ff34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe12bfb-bfd5-4ece-a056-337df2f5d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f492c38d-7bdd-488f-bdce-f70549a6b022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026886f7-aad5-45d9-a0d7-831bfbef7748",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a5e383-fe65-439e-bcae-86bcf356a0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018d487c-b006-422b-8245-77c30c502f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074fb55e-71dc-455f-ab0b-83b289422d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4fca99-c587-4504-ac71-db650958111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9928c7e6-55c6-46be-9b61-a9377142a0bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc84daa2-9fa4-44b3-b271-57876430b173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019cca39-7a5c-4119-80bc-4a6e8950b256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aae4a3f-d4a0-4c3d-8a73-ac78e6887249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbbbb27-f811-4fab-bef2-14c6b2519c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655011fd-ad0d-4c46-9a10-e3ec885960a1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d7b623-321c-41d0-a41b-fb15e2e12419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503729df-bf16-4ba4-b10c-2ff02aeedbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4976b62-e15b-430a-a381-b7ef61097dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9822e206-5a76-41b6-8647-43aedbdb1a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c59f3-4f76-495f-a610-e267e6b862cd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b4271f-0385-4509-be41-65d16dc4c22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4ab793-2604-4938-8b4a-fcd552a009f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d4b6da-30d0-49af-8243-00cf2eab83b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b5fc1b-395c-4b22-a6d1-c2777aac9e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f162026-fba9-431e-91d8-b0fc91c53f43",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1784c3e8-3425-48af-b7c0-ede75401c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a9ba95-e326-4fc6-ab6f-a416c7fd0f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79c6b07-319e-4344-8ba9-adafbf64bc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41bbd560-033e-48f8-a441-f14ae1b70578"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5318fa70-9e44-474f-8b86-49f3278cb8b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d934d576-8938-4e07-96e1-5adbff892000",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da52461d-33c2-414c-a15c-e4525113c280",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34aa92f3-2255-40e4-8b0a-331f9a3a5862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47016ac-0141-43cc-8890-670fa0e798ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27577369-46f6-4749-bf64-5f11c31fdd99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e80e2ba-9120-4a63-9ccd-1b66995ca538",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b5c7fe5-8540-46a4-99ef-9081f756c5c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a49dca-75ec-49f7-9542-14e16417e8ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9063a085-40bb-4822-a505-b5c781ae4897"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "068cb574-bb8a-49a0-ae47-d64815855489",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4ab50108-7534-413e-90b3-bb94af062b0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0a5067d-38e6-414b-849b-0571f2911b1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "870c79f1-80b2-41b0-adb5-6f0d6b7616d7"
            }
          }
        ]
      },
      {
        "id": "70b1be5d-4681-4b6f-bd94-4f54189741a5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c70bbc3a-d5d6-494f-9938-14b37f3c7b48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01c3a221-fb9b-4638-9e04-f91069f4f802",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a2cc04d-46a3-4bdc-b06c-8337ae652021",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f7b2c-e24b-436d-aa75-5890c9aa557b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc3934d-d12a-4fd1-bd6c-1af5a9a838e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b14279-ec26-482c-abbd-a532b08b934d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23de222f-9e10-4901-9850-7247f3ece5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ca6e71-88d6-4b17-b281-df5bba70b8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd01027-7ab5-42f3-9cac-eb98a373a57d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068080b0-70f0-4436-b036-1fec7fd6652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ddb225-1cd1-45ba-bb6a-4a821be90db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a94653b-b8bd-4210-b299-9c484e9209e2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769f997f-a444-4883-bef4-da51f6c9f374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0707d6-a5f5-4bbc-b232-a8589bf97647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fe334f-cdc8-4df8-b625-6bddb360640f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23257378-1b1f-4c54-afc9-301f1fa4ea0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472e47e0-25ff-4e27-a4e4-0ab10e2e7647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff9b707-7839-4df5-a214-7cfeb4672e23",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1498c8-af1d-4073-b4a2-a515c04576ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fe20a7-86ee-4ff5-a8db-d88574b5632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb12949-64c6-446c-a0da-3390799ac5f0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e3d4ee-0aed-4687-8cda-b5eede71afd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a51b4f0-9ff9-4949-ac5a-ac598a5089f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f472059-37ae-4c8f-ad10-f182135df30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8998576-26fe-4922-b6fb-f0f46f524dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505a8553-1192-4465-9395-13669326310b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4745275b-bd0e-42bd-b4c0-c4aab9ad68bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd80e41-41e8-4302-a9bb-269127464109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e9cc1-8903-4455-9e54-5e942dc734e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0761a652-4015-4ac6-a252-c26e8cb8987d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5191cf-5c54-4adc-8ad2-a79354822df3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2c2adc-4c4b-4884-adc0-7dfbc4149dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a92253-bf73-40f8-ae1c-2a64f6251b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f80c94-dc53-4035-9bd7-270ae7070d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccc782e-69cb-43c6-9f14-8807daffd285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8daed7-251f-4c65-a95b-fe5d3321e058",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43161777-14f0-407b-83c0-47e15d4a588e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5a54f8-3ab1-476b-8254-33be83af18a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f385e152-1c20-4dec-b3e1-d358c4b817b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57945cf-f4a7-4ae2-9972-0514b62202e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a22137-5c57-49b0-8354-5af26725b915",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9b341e-cfcd-449c-98fa-c77ecd0deac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ad11f7-acc8-46eb-830c-502186b9beec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4434cc-5258-4d92-a625-60faf6b6b787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25536810-d89c-4edd-9891-20dea234a3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cc025a-2fcf-4345-84d1-d1d968f79b1c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c7cb75-cc1a-483b-ac28-00fcbe39b1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8348c0-a00d-4f81-b023-5d80766d7ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2726275-f7b3-4e47-a714-595610c10976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39aed571-4361-44f8-af02-6b01d8055166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e497c27-f7be-4420-8b3e-460de1bff8eb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e8103-614c-4f81-b7be-0d6a4e1a60ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc00139-cede-423a-8334-0220cf72f021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd96aeb2-d995-4aed-9a47-9f12273fc157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd54637-b22c-4b1f-94a0-8eb88403c419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344e9df3-736c-4436-91c1-1d30b1ac82de",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec2b6a5-3286-42c9-b24c-07c38d8f099c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eed57aa-2c7d-4bc3-9a0c-c8440f9f172a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3269ecf2-72e1-4071-96f5-716f5234e921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73e4a9c-ac51-427c-9893-f7602cbcedc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfa6a61-56fe-4e58-8ff5-0d4b24344564",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d1fc96-4147-4049-b6ff-24005c7cf556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdad82dc-022d-4d37-8ff1-d64c8971013f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c9562b-eadb-49f6-9579-19fa797142e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e4c42f-4924-46be-9644-86d22f5bde16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7974e37-1574-4a09-b5cc-d15e79f38744",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb66573-d55f-4fcc-ba94-db29cc25a3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a1f3620-9699-4eb9-a2ad-2f77bcc290e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4137d75-bdb9-4d06-936f-e209eaa4a64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276a80a0-2708-4280-8071-006abea2305b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0662bb-1e0e-4358-bd33-ed8eb81ca2ff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2a328f-8f9a-43d9-9f1b-1d09d6cdacd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec99d188-2cf5-4176-b286-7956a54c5167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac269b9-ebb6-4d90-aa9b-73be52872bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6508d4c5-2477-415f-bc6d-6837cbc60007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa7427e-676c-4bf0-adca-e1516af4054b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea2f453-f535-437e-b383-1f0759e5957d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f848cb99-04aa-466b-90e1-a1b685031d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae927f9-2308-4c98-9bf9-c8396c287296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346b817b-3415-44d5-8444-10cf01a0228a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf655f1-1648-41f7-8184-b38c90d91b8c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9d85de-c357-4e47-a6d6-d2c127f5771e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ed01c9-46e6-4b9b-bea9-0c82bfa3c8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f40a084-b481-437c-85e7-15970c7cb477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5efb1b-f24f-4122-8ee9-791d09dcf917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d8f950-4be8-4b69-aa50-e006750cbcd2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bb8f9a-6dc5-42be-8ac7-085759246e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ee9800-ddd0-40e6-9739-f6217a68df27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f14b5d-6c91-472e-9a99-2b8f8ba5505f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44ada38-6414-45fd-8931-70252bf42926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbfeda2-6c0e-4b5e-8189-b08c15d97f09",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ed9436-feba-460a-a795-e41b2c638772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30ceef1-4d65-413b-a416-529205eb93c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c88663a-45c3-4ad6-b275-52e728cf5be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998d47a8-cd52-4601-85e6-d6028d153d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc08189d-3241-4cce-bb9a-6989864d51a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e706f693-9c46-400b-ae46-25f1755d0007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2533d908-16fc-4c0c-a986-113b3158e668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde26b39-0d47-4b6b-b482-f2665186ac2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36ad222-e106-4a34-ab96-3a851c46aeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a811ea3-2b6c-447e-b461-8e28dd785815",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9509f412-af96-4074-be96-714dc412a219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bf40ac-3b04-45ae-82c9-6aa13bc71da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfc76a6-49b4-4bd0-a345-5429a7d3da3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7bff5e-2e81-418b-a9e2-c313011c80ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b062d8-e255-4183-a7a9-9c518e1588b3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f703fa-4f6f-4e0f-a136-42514cd1f354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f13dee6-b22b-41b0-913c-5945f64af07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a339b5-d91b-4878-947f-ba36c59cddfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9a16e4-3a67-4eaa-93ef-38142d056f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459d04f5-2b8a-45aa-a65f-68b501be40a1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6881df-1bd9-4007-b848-0fbb8defcabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c5f47a-e228-4257-a144-fa6b975e83ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2b01ce-9cdf-4441-ac93-332e4a0a100d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe09a0f-18ec-451a-b136-80a2eaac64bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a88b94-66d9-42f8-bf5f-e592e4b7d67f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e427978-9984-4676-9da7-cfc4bc593d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac804014-6bc2-48d8-86a2-bf77f04e5d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762793e5-802d-46a7-bf3b-cd83979e6167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db0f2b1-08bd-4fd1-88c6-12f1167bae48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1769a54-c55e-4822-ada7-5fd705ca6bb6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba454a9d-1ff2-4dff-b450-cf656e1a72ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fe0ec3-e53e-4113-a1f3-cb4ede6e2dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0519d5c-6848-4ac3-be4c-4f2a671f3e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634eac3b-3e8f-424f-a84e-71b04ca2a498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fb4828-449f-402c-b8e2-3beaa056c5d7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62e8b52-c261-483d-8a3e-7a14204b2ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17618804-2449-46ed-95b7-7628027d6e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41533994-6319-4468-8c59-a938c50fbf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9bc4ad-25ff-4f2b-ae7a-e984837c2a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2698d70-00fc-4fe1-b26e-1b2608ed8692",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bce284-432f-41cc-9d92-99a29a300871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866e238a-155b-4f3d-8bb3-7819700fdce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bafd61a-b3cc-4e2b-8b7e-088673941edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb88e9f-7fe0-4b6a-885b-6b7875736fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0224a1-a0b0-4028-a50f-75ceb4208b36",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2842ec4-3e0a-4aaa-a592-76255d8ba98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76225d92-8c31-4274-8245-fe51d4fba538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a77502-d6e6-4784-a74c-49e67f350bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2a831c-ae9e-4cfd-b164-8f5f97ba9dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5027e415-a19b-433c-b727-7e8ac1434c61",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ca2b09-068b-484a-8dda-79a7f9631765",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd92679e-c7bf-432f-980f-9b9f6c8c5aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fbec47-6319-4ffa-ac3e-49d4fe4f28a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc9f535-354f-4a5e-aff2-7beaa2606486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468fdbf1-7a37-48fa-be1c-ea1c67bc4282",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6c07a3-80e8-404d-b78c-70924b759876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e126c54-977f-4fea-b951-ab7c0ca200a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752e1652-5d1a-4fa3-b760-7c05cebea1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe4ce0f-2cbd-482c-90cb-ecfd85adc349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d60a634-8bfe-4072-9891-c88642ad988c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc8ccae-e822-4bcf-9dc5-5faf245105db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f379eb96-5209-4d7a-aa9b-8efa2a567723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddfc2d7-d2a1-410a-8d4f-8bef8a796fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906a0795-869b-4287-a6f7-7e84b67cd62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f842d2-2533-4625-bedd-f347ae22a0f3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c4326-0a21-4ba1-b6fb-b2ea1b1a033f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9477eda-4548-4831-a32f-6a5ed43955bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b50ea8-aa54-40ab-a748-2a3d9d1b8d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbadac2-a301-4943-8301-fed4a7b774c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c18201-d034-45fb-906c-86b29ca9bd62",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481120b3-b674-4fbe-a1ae-65f5a38e38b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b370e018-b618-4a70-88aa-75d4117a1b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3418d556-fcfe-4b82-92ff-089bc8cdd48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ff2dc1-7e2d-495c-a420-0c5cbd92d6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50964f0c-1450-4a79-b4c9-af6cf6b38e61",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e46bae-8b4e-4559-b51c-d119d1bc14ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d5715a-db0a-4803-892d-b12a9743a5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bada0077-7484-48b1-97c9-d4408dc3a62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bd4523-b121-4414-8303-140ea83a7e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc84f84d-01bc-481b-9352-8ecb961a2837",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcffe32-fdee-4cba-bd96-42e1cd22238d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47790bbc-56a4-4735-8ba4-2a6c9b92cb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8c5bd6-6011-44a7-af1c-eac1d69bc9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565453cf-f131-4330-bfdf-8337d0c0ea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22939c4f-8d01-4019-9a1e-a96a25300889",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95645ec-d927-4e14-9716-e1a729164c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7c2f2e-9ce0-428a-b184-60e70ece53f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16aff75-e15f-4100-8e89-b75ddc7db602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a173ce-c41e-4834-8dcd-160fff35c43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1fb131-deee-4a3a-9d9e-bd064403f0f6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e783d0b-9a41-42fa-b5ee-00d496ea690f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9ac095-5c4b-4c33-b6a9-4972e4f2b5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caf15f9-be67-40e7-98b3-efc07d9abd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f4bdc2-42c7-4373-9c97-8caa1e8402ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4701c9-91f7-4da4-8705-05c7691f9505",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b0158-a972-435f-b45e-bb6dd57b9b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ca820f-6904-453f-a57c-0d26c161c3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a14553-43da-40f0-a7d2-cf985c1bd611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf81d00b-a109-4c64-9d1c-4a55732ba7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daf1387-5cd8-4846-b5ef-dbca0baa63bd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606291d0-ee74-4c9c-a924-18d81527bbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ed5580-5a89-4e1a-b7fa-bfaaf5774d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fc0b4d-7959-4917-b6a8-d28b091f69a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d7f640-a1e5-46ae-9fb4-33ae2b6571b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18fff8-bfe5-494d-88e9-a5dc6f758f81",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8057e815-86d4-481b-af3f-30dd5125cc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b37599-d3ed-4f04-95f7-62e1a38ec962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af4ed72-e5ac-4d4e-a85c-7d8b1e3a2747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8764469-933b-4139-81d5-45180996cb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd43ed0e-c8e0-4e64-a4e5-c320a8f66241",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892c4801-2ed8-4c0d-8574-fc7ae3a53447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1f0910-89de-41ed-88d4-aef9f98278c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e2b141-57e8-486a-9d88-ffbe0b5b9f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd67c0e-55b3-4ac4-9226-e9fd11267767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005a28a1-a819-4ca2-8814-ea3b3007a4af",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306dbe27-e02a-4dd6-964f-e3d5e6c3d465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd4b787-bb62-472c-92cf-1141553703ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc97620-ee08-409d-b17a-7af891738c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceba773-effc-4cb1-b791-9d5088efbf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a21e9d8-8d89-4d9d-80b5-6e09a6d07045",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559829ea-8dec-471f-b235-cc5a485f43f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f120ec90-6210-458a-93ec-0538d90c56bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b974953b-ff64-4637-8a5f-9c68bc8b848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f38c8a-44fd-4f99-87f4-80019d7b3c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275db6f7-d270-44d3-aa1d-e50dbfada022",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff93c73e-3de3-40ec-8407-169334b51ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda890bb-f172-47a9-a3df-0d713cdfd45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a1a8e8-2ff5-4b24-b80f-3fa56e342738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66af6f0d-b719-43d1-8245-72c0e10ae878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2532e20e-4321-4b1c-a2e9-338e8cd2f5b6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb3d491-d023-4d1b-b0f8-fbdcf139f9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d55c5b-6724-43a2-8bd2-05d5d3f559fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26c351-b867-43bc-a6dc-93187f082d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692311ce-de17-477c-bbdb-eea34c5b25d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a54bff-c9b7-481d-b6f1-ac86b150f865",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4980f5c-e9f1-4a71-816b-dcabe3f043a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae2b92a-51bc-44e6-993e-6d422051d824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b74b21-179d-4aa9-8051-340d80aff7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f1e538-9c81-46b1-bbde-68e68a2bbbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c74cd44-6280-4ae7-892b-63adb802d957",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bec7390-b602-4cc1-baac-e14ea49370d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d9519c-18c9-47d7-a36d-e10b0106b321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af850821-d0af-42a0-8838-b1acabbc92ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377e9187-2d07-4599-82bb-9577d9c2e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa47e09-855e-42d6-a0c8-34e0ba3001d7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dfbe57-6dd4-4b6e-b819-44004ef39b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a7b5ab-6f76-4ad2-83b9-19d5919ac140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2a25ce-d88a-4d82-90c3-9f7ba98b5f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743d31b2-075c-4141-a039-0df9559cf81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7c5b1f-b493-4d02-a67d-a4fbe218a4b4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd86e34-85d6-4e18-b6d9-bee8a8b98a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051bc9de-42d4-4fce-8547-6ddab204e195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3814731d-57fc-4986-8d0e-e65f3944fd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a0dbbd-6fd5-40b3-b448-15d42b4d4274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd2b32a-549c-4336-81a2-1f4c38c886f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb18e0b-fd34-4dd2-82d7-eb13d16dd246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0082926c-d6cc-4f89-a563-f41e90bdf456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c92f9e-1095-49df-bf33-092911494e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdc09be-061e-4cd4-a420-06ade6818980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024a83d5-0cfb-4ffb-bebf-6abddb010004",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fee88a-3fc3-4074-81f4-d594a0973270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99c2844-83f5-49da-af98-9745abbca03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19439fd-9e4f-476a-a0ef-b9895ddc6556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7c6dc4-2464-4303-82be-15ed41eefec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e69f01-e26b-4c23-9e32-429c1acba3d5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bff8d90-4f15-4c1e-b52e-7a25c7c4bf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53961578-c36b-4737-a6cf-5a4f4909dd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf98b03-ff47-48b3-8cb9-53feea96130d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2dd7a2-cc75-4839-a66a-fefd6a5d0ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197d44c-3cad-4923-ae4c-beabbb88fcf1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302ff5ce-8faf-470a-b391-2879ea1239b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083e9e36-45b6-4486-89be-70c7a16d86d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e278cb-4fef-4730-833c-e01d7eb83b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee7d978-1a37-49c3-b6f8-6a236af7fb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c3d9a4-207c-44f3-aaf6-d64539040fcd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62fa52e-b7fb-46b9-8b46-16672e567ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bcf5a6-530d-4c61-8d8f-03bac36dafb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d164cb-5cb5-45d0-9abe-032e23738ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf1550a-3e1f-462e-a682-51cec349c1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a813aff-29c1-4396-8ed3-371d3fd06086",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd05543-48f4-47ca-a8aa-84e8107538aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5e0ae0-e113-45dc-849d-e0fe45b3de92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8d6840-239f-4645-947f-af8f3958e6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18721f70-bf92-4b75-b4ff-f01a0b5b1b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39034347-9f40-4ce9-bc01-992b32d64389",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ae4864-dcdd-45f0-9ade-1f853f0e8880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea705e7-6ae3-44a9-957e-4c3a901f00b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050e8bc8-b4da-418d-8875-f6e085c50d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0844bcec-d06c-4049-a8fc-4110b7d39984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10f4f46-8515-4e58-9fb4-78e0b9dc69c3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a308902-3c66-4c52-b418-52fffea6bb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e992e22e-7594-494b-a40c-2cbae17b351b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957b7acf-7f5b-453a-9b97-1c9841b2a43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab61d1d-8af9-4214-b90d-7c533d94d038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3647c24b-805b-489d-a576-e7f972415f34",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006804a0-d3fa-4b62-8070-a6153b0173dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ed9a30-3a02-4595-a6c5-75fa1f887a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3381de1-4ec0-4aac-af04-e92e4822c34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b6edff-e594-4ea2-9011-c821302c820a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3192eee-a796-400d-ada9-39e6b629fd9b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109c87a9-83e9-454a-bca5-34629f3f337d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a6f0e2-9ad8-4c94-9a1f-374346173bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0ec28b-1344-48a5-b9ef-ab8b9ed251fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c4aa5d-0bd4-49e7-8f98-883e6759ecb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dc2345-a830-4dc4-87bc-1dcdea11e280",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad165b6-bc0a-4819-b688-7e8d8143b49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075c6c40-08b2-4fcf-b5fa-a92ab4212a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055c7f63-4f98-4052-8742-5c4f43a5f500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2275135-9757-41bb-828a-7de713d03ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367fb1d-33de-47e9-82f2-23010df951c5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5704db-df19-41ba-998f-47ba7a02f409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61cb4ea-fe5a-4869-87b8-ef70bcc37a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91880c9-18f4-4e36-8bf9-29345d01f127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c45f5c-d6a1-4a7d-9b32-ff1628f21d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c626ac-a115-45eb-a3a7-23b64f915231",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a22a05-81fc-4a7a-b1f1-20dfb50b3b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c3fb97-05c7-4472-928b-5202d449a750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01b84a0-f70f-4d85-a031-55ea65d5a65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01158798-c538-4360-86b6-e6fabbceb6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fee818-bf13-4e28-ab47-7aca568f5989",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9aeeea-123d-4c60-9acb-5401a094d711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1989485e-eca9-4f8b-bc77-7b9c55517e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf1e9d1-4c52-472c-ab9f-210bf9b3ed8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18ce7e6-98a7-4236-bed2-4eb8a0b9e41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cac016a-17dc-49c9-bd4b-de142474a12a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce179df-07ba-4c9a-9274-152ebc66e10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecdfa8e4-1249-4b80-adea-07cbcf96785b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8354e4d-290a-4f34-936d-41e18000a9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60013a63-2b56-42fa-b74d-895ce980c9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a595a90-afcc-4df6-b2de-f42fcfdac18c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c39e34c-f0b1-4632-9842-8f4bb89c1ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f428cb4-4bc4-499f-8b2f-78c34b951daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d37a1c-f2eb-4bd6-b921-36e69f6f8c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dafd070-73f4-4529-adc6-f1345950eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50340f3-33be-41c7-b7d1-76bdbcef8c68",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc910cd1-2fd7-4377-b027-6cc6e93995ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07686a6d-24cf-4031-a879-58dd3a54748d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6fe6bc-d991-4c0f-984f-4bf1cc6af85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c1afe3-b0d0-4657-a2da-f607e498145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595666d-3a84-4c79-967d-cc14c925f025",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6695c9a-6976-465a-a8a2-dc00723264cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a151551-227f-4ff6-9280-4a65698bada0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f5a417-fc68-4e5b-8c78-a7c249706c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9bba8f-1d2d-40ee-a019-b9f3f2d45f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ac67b1-262d-4793-bb8e-28d13f3db3cf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb9706-dc80-4809-a5c8-7cd779996870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c8172cc-56cc-4eb3-a895-9ea65a03bdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dcbc9e-4f05-4c78-bf11-1708f6123189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebf0581-ddda-4160-8d96-2f3f62866d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505943cb-9105-4f7f-81a6-d84f7d54a056",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928a6905-eb2b-4496-b88c-1817e8b31cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "370c63c8-373e-44cc-bc0c-f781116df15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f07962-853d-4556-8240-12ebcb01aaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af63596c-1de9-468a-b563-78d4e00e07b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93570221-d38d-459e-ab67-4559da585cbf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53cde92-2317-49bb-963a-f091d8e2e310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd07f86-ff69-42e1-8ecb-a7a4c185bfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14d58b5-65ca-4c14-b495-90392d2ddfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f2a221-bec4-4764-9d36-76ac56407344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a0568f-facd-4f95-8fee-d38f8658fa9f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c072946-325a-476e-b8ea-0aa87cc0d566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f2ac99-8869-403d-a721-7b9781292799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93a92c1-5596-410d-a746-bdcbde773c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fcafe7-5a25-4f7c-a266-7a4909bedebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818ff58f-6894-4ce3-819a-0031023c8730",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec453f1-7f0e-4734-8410-701c9e014d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28af8729-177d-4d4f-9353-8191232683b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb36728a-bf97-4654-89dc-5313ffc909a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af4d492-f9e0-4c4d-beb4-a1e1da778ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636d23f-fbde-44b1-81e1-334acdd47c09",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b62d21-9416-48c3-b189-d8506e56ed35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d64b5c-db89-43e0-9ef3-5829bcd4cfe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54dec05-53dc-4101-8b22-9b4628e4c4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6c4091-e491-42f6-b577-c05832706366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d47cdf-b6f7-4d65-8c99-74e53473d2bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596bf485-27a7-4f87-9648-8b37bedc7812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f463ea-f785-4438-ad4d-6282178dae06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0744ef7-3233-46ca-b93d-7bbee41268bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ab4467-3a54-4ff4-8987-04f9555b77dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e088d125-98aa-4346-9e14-11982925f099",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461b8754-5878-4656-bbdf-3dc4ccaeb0dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c947e00-1844-4737-bbdb-e2b1ca5eebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8cc2e9-e515-4451-997e-a97d4089f1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc6fa8d-3088-4fd5-b2a5-e757629a4f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a458ce-a411-42fa-bcbc-ae1c75cd9c3c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7082df9e-c3bb-4897-929d-134dafb97ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9069c3cf-0ec6-4d04-b5d2-52bad4f44416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e132287-ca88-40c6-91a0-f1bb5e533661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2320c7-7614-4ad6-8f6b-d295eac3b258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e260c6-1b6d-4d4c-b5e5-1bd9801b708c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d574da5-79a7-4756-9a71-74a74b0c7eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea11ec4-73eb-4cc0-a33e-d53a20b52719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb9188-570d-41e6-914f-f7d876f98e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37a061f-85ac-47a0-af0b-ffe040cd7712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c697e78-52e0-4cf0-9775-a6fa539ed41e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7442b989-4cbe-4329-9d89-0ab275d36f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eac91c9-07dd-4e64-896c-709365f81a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d7dbc0-911a-47d6-8313-5b3ef918ad2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97da5571-8022-4e25-be29-734481439944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307960ea-6acf-4b97-a187-b429c12e3d1d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98b31f2-8d35-4d3a-ab64-e20025e19da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8cf1c04-c3e5-49ad-8847-ca689181df22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdcc27c-65d3-477c-93d1-311a530c8c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357cb7d0-9e27-4eec-a48b-29e5d66c8ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff4f39-fd52-44d2-a5d9-7b5389500cfe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911b4ffb-6c84-41cd-a3a5-c78b95bd9e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf55cc7-cebe-4d2b-8efa-c621e6238c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e721aa8b-0dbb-451f-a550-18bd0c3d26cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795a76ea-fd35-4a82-b58a-4dc356c21c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c3d73b-5247-4bd0-b17e-cd1388c80cc0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23207215-afbf-4892-a9ea-28f26f4d235f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56cd72db-fbfe-403d-89ba-cd667d19c516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8af7b7-280c-46c2-919d-d29b93e1adbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcf5fef-561d-4334-92ea-fd433bc566bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d662423-8b87-47a8-9d8c-c18475bdad13",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce75d9a-423e-4e68-a50b-04dd7ba783bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eb112c0-c70e-47c4-ae35-0d6240e0f46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5957eb58-2163-4c87-a16d-4900600f8218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc96719a-80b6-4477-8427-214ec83a1533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1695c806-1481-48cf-91dd-807c9e8d82ca",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8316186f-0431-495d-87dd-3a5956835784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6731383-344e-4d9a-9e77-c7c59487985e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec9ff3-68d8-4ea3-a859-f209a73133ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29933c6-cc76-45cd-b9d8-f8bb371c8c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8517e9df-bafd-4c2e-bc9b-d34a07d21f86",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf788152-85c9-4af7-ba97-8fef6cd7ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9c8fdb-dc94-4acc-af8d-47ebb9ef5e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b8f0de-d1b3-4c40-8525-44334d500d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3070a94b-e08e-45c7-968c-b390e2cf4344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de326bc-19c3-4ff2-8e1e-83476f02c3c9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75456e6-aa41-45ee-addd-61cc1472386b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f644d6d5-f732-4500-aa4a-8d2e604e24f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae7170-c47c-490e-8f58-557c9a40320e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42123989-ba67-4515-a969-32d37d0d8f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c78f47-ddfe-4fe5-8744-ca25e8019c10",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a83372-d767-4099-bd61-1c47af6c7def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20cb9ebc-356f-42fe-a61c-d75f327aedec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f5f325-45f9-40cc-bcf5-356862d10b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e041a8a-ef22-42cc-b6f4-1ed985e49151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2aea57-4682-4d22-aeeb-85fb1cec18ca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e561894-40ae-46b3-8799-93501b16ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332d6783-a59d-4f19-9c53-3d1b0c5e11a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46e5b3-3375-46ed-80d5-ede87c3f8fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd898999-3476-428b-b819-dc538cd6ac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c7a7da-9143-4ecd-a79e-f10afd6e9231",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30721b79-4e7e-4da9-bb54-58bff6ca2299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f0c191-2ee7-44e3-93cd-edfc98411e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de076a6-2090-4520-a35f-63bf27c4c56c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e1582a-08bd-4e5c-abb9-3a7a247f3ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3104f6-0fa6-44fd-a6a2-246ffa59618a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d5835f-bafb-4054-8049-5acb57b247c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50775153-97c2-4f14-bee6-a54e74a91a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f0184-d8b9-4445-a050-98c87c82ef53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6dc548-2bf7-4ed7-b24b-b9c3433f1ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a129047b-d2f7-44ce-8b55-303eab242ae4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11982eef-7025-41d6-a6dc-7113ca27a3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c29fde6-88b0-4fe6-9627-49c73828fe27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb86d90-3b20-424f-9fc0-0faf66e494a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e225f7e-12dd-47c6-8ece-f5ac9b2fe2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9518fac-39c2-4e06-81ba-b1f698216954",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c840dd81-209e-486e-a1d1-a404ab0e0be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ee73b3-b781-468f-aff2-3f50c1dfa77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f845e9-70f7-40a6-945c-3969e08d06be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f56143d-2dc3-417a-a5d2-6c12c0bc7c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348fc75a-6abd-431d-bc29-601c52e18ea3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25604197-8951-41c4-9e13-e689dd2860d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d870252e-ce99-42e7-a579-c1bb17983044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed9322e-430d-4c32-b711-28e2d1040921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab538bcb-49f9-4f9b-aa5d-7816b29115e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bca000b-0b1d-4909-91cb-3a2733369eea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6d0938-ed42-47d9-819e-954318253aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73a6934-8bed-40b2-bc41-1f5b443daa23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea03721-d254-49f3-8d93-8bdfd684c830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1905a7ed-7c48-4b44-bb41-d206328c0173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4a03f9-866e-43c0-989d-ceecd6322dca",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf22ec42-3c02-413e-8394-7248516d064f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fde602-56e2-4c62-8717-55ad72d17ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ad5b7e-6b50-4574-ad71-eca4f7422678",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cabc840-267f-4ef9-8e11-7098bdcef490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78ca934-f63d-4375-ab66-072409a65f48",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95456d11-f02c-4bbd-a6fe-d665a681a673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3835daf-6f6a-44f6-b1a5-37e8a65c3a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a0d4fb-af0f-46ef-93b3-b5860279e1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bccef5-937b-4986-a6ec-0da4956cc77c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574a50c6-4d93-46a5-8767-bf6045896715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b29d53f4-ea04-4523-8ec4-5370414dfd51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8898f2f-a93e-412d-9d4a-e2dbd4d529a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fa07dcd-3ebe-4891-a1cb-5ce64e60733c"
                    }
                  }
                ]
              },
              {
                "id": "5dbe8903-50ff-4790-bbc2-badac28a8b85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "791ea76e-4577-49f6-b429-37621ed3d447",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4786f0db-d6c8-49f6-84b5-3bf04b3d396c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0ec4377b-cd8b-475c-9312-175fb01a8032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fa4616-fcfb-4951-8a40-55d09cdee685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36004b19-1f66-4792-b5b6-074966f90d53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdda8913-e0e1-427c-a1a6-d4327908cd48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54bd11ce-8682-4000-9530-723b6b60ec06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21ddb269-526c-4d87-8d14-252304daf38f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60d680b-5ba2-4f17-a05a-5d2a6704ae28"
                    }
                  }
                ]
              },
              {
                "id": "f0a8c412-e525-42f4-aad0-6dd3b52d8e40",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "37691111-ade7-4e2b-8fe7-1596a7cead0a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ed8339-5755-4a64-a259-c53d357aa950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "46d7a26e-0314-4796-96d9-85319669e1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dcb162-dd0b-4b45-a54c-337c134ddb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c637a427-3b7a-418d-bed3-bfab7d675c09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "184684e7-be71-4b7e-90df-a6de6341043c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0e067a7-8a31-460f-aa62-41a0fb75409c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd95316-62ee-4580-9bec-3afc719d6442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02bba41a-6ffe-422e-be65-37253044a2f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06eaecea-2955-4801-b416-9f2ca8a8fe9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af40658f-a91d-4032-bbba-8cbc02aa4638"
                    }
                  }
                ]
              },
              {
                "id": "b7ea9bc8-dc4d-45f8-b277-9456ffc1901a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3ffd668-8ca0-4f87-9100-d5ea083456e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7ae17050-f9a2-4d9e-88d2-1e83f23c148d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a479417f-ae34-4a81-b06d-0716d7e8bbef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "401a283f-d82a-446f-903a-4bd22110404d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d1596c6-d3c0-4674-8af1-f10efaea33dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "db1b7382-9603-403d-9771-ef8f7ea83f45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e4c430d-e58a-49cb-b10c-8298245d4424",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79e8f9a3-6469-484c-a9c7-b0d078abc5d6"
            }
          }
        ]
      },
      {
        "id": "cb19549b-cc9c-48ab-b753-5898ee3070e9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "46388023-7c1e-4073-a828-075c745b9e0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dce48b5a-f5cf-444e-ae4a-5f3c7db6fb44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2b29430-8029-4df2-bca1-f20fd4dc17be",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b2b459-6821-42ed-bae1-bdb9408887a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1eb09faa-51dd-4dd5-890e-d59257c85ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e1ba04-6d59-4934-ad57-9b148806bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6838e1e5-abd6-4cfc-9b75-f3d3d202e5ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3684b8c4-8c63-45e2-ae4b-03115d417ebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12e114e5-679a-4699-a233-ef574d3b963f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2970817c-d901-4782-9d1f-57f7ba1c3e0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44cddb62-35d3-46df-8eb4-f181c5b95770"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66ae63d8-a14a-4486-a5eb-a67c09264dc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "589aed5f-8967-434e-b5ab-fbc5d3aa2c6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b825012-c608-4cc1-9c58-c78e96bae3cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "835d54ad-bf53-4bf4-9201-e14a4acdba3c"
            }
          }
        ]
      },
      {
        "id": "8d495c9c-fe39-467d-b7f3-ce6dd02d2a9f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "62ea5903-9d55-4e0c-a3d5-ca769834df81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "813ae5a7-f379-4679-94ea-9a03a7e96a54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e464331-8539-4867-83b6-df0bad6f39d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a3222-91ec-4d0c-b0a9-2a69b162c59e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad95353-57bb-466e-9713-d77036a67254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cc4ba0-d71a-4c9b-9516-31471c628267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68f42c60-b9be-448b-94a6-041c6f00a6c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77edde33-85a0-4112-a942-f97bdc687b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdd363a1-ba39-4abd-aeff-a9014594ac53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70607672-983b-429f-b00a-8814e0d2afee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aade704d-5341-4ba3-b0f6-fb653fb7db97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2d81c99-441b-41f2-ab6b-2b77be603d04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bed2748a-ea6f-497d-9e42-20c21d50d830"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b2b1692-e480-4856-80fb-6fe2b4c485d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2a90b13-8284-4a6d-bda8-efa34f6d00f7"
            }
          }
        ]
      },
      {
        "id": "8a164c1e-f877-43db-aae2-4d6afae1a38e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e149bb41-9b23-4915-89c6-d59f5d9b5f51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36a3096e-0feb-47d6-869f-22e31f4f4ef5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e3422a7-1b4d-4d69-abef-20a22d7f6eeb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f041b6e5-a97a-47c2-94f1-79969e938e97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eb010f4-7122-444a-80b4-9f302eb3a6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78005ac6-79b2-4eca-ae79-5c2911022167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c63ddbfc-a379-4e8d-9831-295397403dc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15138faf-3efc-47b3-8357-cec27866d900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5caf848d-82fb-4638-9303-a7009c36acd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8db37763-f884-4ed9-9551-506de4181b22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0b8fc97-f8d5-41bd-b118-21cdc6f23201"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b9c307e-0e85-4ea1-a6cb-0bd0750b5211",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29291cd6-fd58-45c3-be5c-57860bb73753"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d6d05e5-1451-42c0-b44f-0121876b3305",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25cc4554-bb39-4ab3-bd6e-34acfb0a9de5"
            }
          }
        ]
      },
      {
        "id": "4ded1d45-4775-417c-9a1a-d8c838b897cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdee0e1b-b358-4530-9b81-a6bbbf66f2a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc1dea83-1b9c-459d-b556-693238aa4780",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "30d85536-77e6-4fe1-b935-433ef9ed2c61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87bc44a1-918a-4725-b268-b04d007fed96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d076d8c-632c-44fd-965e-8d9bd7923a61",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.82456140350877,
      "responseMin": 6,
      "responseMax": 228,
      "responseSd": 18.039647181185924,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704328556933,
      "completed": 1704328574093
    },
    "executions": [
      {
        "id": "cd6518ba-f92a-4b90-b15f-8485deb45fee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "19d982d1-d4da-4520-837d-ebb37a23253d",
          "httpRequestId": "893e33bf-67d9-4950-964f-e3d4b852afac"
        },
        "item": {
          "id": "cd6518ba-f92a-4b90-b15f-8485deb45fee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1b9de004-ba53-417c-8d89-b7cfc2a9e032",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "53557ec8-fd3c-4c86-98b9-0f8f2f0aa4b1",
        "cursor": {
          "ref": "d54a814b-f6f6-418b-865f-86914298c3ae",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fac19e21-755a-4144-af60-2f9272cf680f"
        },
        "item": {
          "id": "53557ec8-fd3c-4c86-98b9-0f8f2f0aa4b1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f978e27e-70d8-4d02-9a0b-f424176ffe47",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "7e75eee9-cedf-4fc4-bbb7-d159ed806b22",
        "cursor": {
          "ref": "ccac4a2c-1244-4ff7-b4f8-a8123b83e186",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a537d337-f18f-4972-b047-9079c7f1768f"
        },
        "item": {
          "id": "7e75eee9-cedf-4fc4-bbb7-d159ed806b22",
          "name": "did_json"
        },
        "response": {
          "id": "43a583dd-8f34-4b9d-b25a-f3c3b1c4a612",
          "status": "OK",
          "code": 200,
          "responseTime": 226,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2f8710-142b-4c8e-8949-b0ebf248fb64",
        "cursor": {
          "ref": "2e848581-ba79-41b3-aadf-2a433c877390",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "077a038f-3176-4dc0-aeae-93b966dd5b2d"
        },
        "item": {
          "id": "0c2f8710-142b-4c8e-8949-b0ebf248fb64",
          "name": "did:invalid"
        },
        "response": {
          "id": "a89091ca-6099-4956-9dca-611ab5386b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2f8710-142b-4c8e-8949-b0ebf248fb64",
        "cursor": {
          "ref": "2e848581-ba79-41b3-aadf-2a433c877390",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "077a038f-3176-4dc0-aeae-93b966dd5b2d"
        },
        "item": {
          "id": "0c2f8710-142b-4c8e-8949-b0ebf248fb64",
          "name": "did:invalid"
        },
        "response": {
          "id": "a89091ca-6099-4956-9dca-611ab5386b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c91ee-a425-476e-8d3a-dd1e086da3cf",
        "cursor": {
          "ref": "daeb5e1f-ad9d-43c8-ba5b-4de811d48cae",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a184bbcd-55e2-417c-a3ba-1cda9ad2b77c"
        },
        "item": {
          "id": "216c91ee-a425-476e-8d3a-dd1e086da3cf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5b1ba45a-51f8-40f3-a878-c5721822d60a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f81dc2-bd19-4c97-ad70-0d2ba6309dba",
        "cursor": {
          "ref": "b5c7c384-25eb-4452-8121-32afb21ccb57",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "570e1210-2cfb-4718-8610-9d352da8ccf5"
        },
        "item": {
          "id": "49f81dc2-bd19-4c97-ad70-0d2ba6309dba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c8b5a122-0aac-4c37-a00f-eff6ff6c4901",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f32a0b-5a3b-42bc-9c2e-8d90296f9582",
        "cursor": {
          "ref": "07741895-5658-40de-a5b6-cd003c683063",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49f866b3-66bc-4cf0-946b-fb8ef94adb76"
        },
        "item": {
          "id": "a4f32a0b-5a3b-42bc-9c2e-8d90296f9582",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ebdb595a-de13-4b43-9890-87b0dd376f8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8acaf4-1566-4481-ac7a-6eabb2e1b8cb",
        "cursor": {
          "ref": "d6591612-df71-400a-9625-82241836da72",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "74f72651-4260-42a9-9cd3-2f999101d2a4"
        },
        "item": {
          "id": "ad8acaf4-1566-4481-ac7a-6eabb2e1b8cb",
          "name": "identifiers"
        },
        "response": {
          "id": "5c7b305b-7a2e-44b9-b90f-66d83246f5d1",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be60503-8f90-47b1-a5fa-b02865953651",
        "cursor": {
          "ref": "9eb461d7-9a59-4943-a7d6-cd671f87a486",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f937c182-1400-479f-9703-7d8719f6980a"
        },
        "item": {
          "id": "4be60503-8f90-47b1-a5fa-b02865953651",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc63ebff-5d02-4a2b-86c5-9fa0d608856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbfc4bb-06f3-4ee7-9cf9-7d6de54ed359",
        "cursor": {
          "ref": "d3cc3ab6-5815-4b55-bc8a-8ebf4f17d879",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bbc8ec1d-c4a1-43d7-ae8b-10fa1bd5b9a9"
        },
        "item": {
          "id": "3cbfc4bb-06f3-4ee7-9cf9-7d6de54ed359",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03178527-c7d7-4a95-8f57-6cdfa17c2344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1481f986-57ce-4ea8-bfd0-4c50398a9c9c",
        "cursor": {
          "ref": "a4f8dfdd-eb75-4800-b23e-acd356ad38b4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9aada5f1-4133-45ae-90ff-7a46f643870f"
        },
        "item": {
          "id": "1481f986-57ce-4ea8-bfd0-4c50398a9c9c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dd59d986-056e-4828-92ef-008d7757151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d77be43-99c3-491c-bcef-264860a58848",
        "cursor": {
          "ref": "0d040b07-a241-4933-8271-a9c3bbfb17b4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cc4f756c-3f0f-48eb-bb96-d0231fc0e42f"
        },
        "item": {
          "id": "4d77be43-99c3-491c-bcef-264860a58848",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a6addf29-8fc7-4d5f-b5e6-1fecc3ce87fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792b758b-9c69-416c-9592-6c0d624cb8a9",
        "cursor": {
          "ref": "69855d44-70a3-4c78-9ebf-1cede6a92330",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aad03702-f3cf-4fdd-9e98-16d31cef2bce"
        },
        "item": {
          "id": "792b758b-9c69-416c-9592-6c0d624cb8a9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8e4c9d06-cf63-42c5-b03a-f78c3208d505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdf00a7-6380-42bb-9f26-8736577d2fd9",
        "cursor": {
          "ref": "5cd65643-9beb-4f06-a573-83ee96428bd4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e9cae911-db07-4e73-ae0d-2b76991edde5"
        },
        "item": {
          "id": "bfdf00a7-6380-42bb-9f26-8736577d2fd9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8e8a2f37-43ca-47ba-aea2-0c5f179c0ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f7a865-3400-4e36-b63f-899613bcd5bf",
        "cursor": {
          "ref": "3132cc22-cab2-4278-b849-2804314a8800",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88703c98-3201-4cea-8518-438e402abefa"
        },
        "item": {
          "id": "f7f7a865-3400-4e36-b63f-899613bcd5bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "695f3cd3-2665-4a26-8a29-3f1eec7b8de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833392fe-ea1c-4ac0-9e2d-0c638f9547e3",
        "cursor": {
          "ref": "b4e614aa-fc56-440d-9217-c5596b84bd4f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4252494f-7b31-4ce1-9cf9-23e7dd518178"
        },
        "item": {
          "id": "833392fe-ea1c-4ac0-9e2d-0c638f9547e3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6fd8a347-3f04-4887-a126-8899fadb07ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9be12bb-30ec-497e-a328-d266d170751b",
        "cursor": {
          "ref": "76d14196-bf4c-4101-bdac-b5dad4466cb3",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "76c2eaaa-3bae-49aa-95ee-1a5f6fa1e31d"
        },
        "item": {
          "id": "c9be12bb-30ec-497e-a328-d266d170751b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f13c7625-73da-4176-b2fa-fb0c23fced2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2e5f16-44a0-43ea-9df3-d85fcc87f168",
        "cursor": {
          "ref": "d965a039-7a53-4c1f-bc0a-fe3162fb8d05",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "90f182bf-1f0e-4855-8d61-6a7214b27d55"
        },
        "item": {
          "id": "ab2e5f16-44a0-43ea-9df3-d85fcc87f168",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8f80cdd3-56a2-41d0-a87a-29af9cb1c6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224b3609-e9bf-4f97-be54-2f87762014d9",
        "cursor": {
          "ref": "1535128e-917a-4cf2-9915-3fddaf3f4fd8",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f90c93fb-e58c-4641-90ef-5bb7b6ffd471"
        },
        "item": {
          "id": "224b3609-e9bf-4f97-be54-2f87762014d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d96619e7-ffd3-49cc-8ddc-86caca3274a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d4a743-24c5-4f84-9eab-ca45cf913e89",
        "cursor": {
          "ref": "9b764cd0-b4af-4542-811f-fc7450007c49",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ef013090-ae96-4e51-961d-1eb5f4393fb8"
        },
        "item": {
          "id": "25d4a743-24c5-4f84-9eab-ca45cf913e89",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "adbaee3b-90b8-4198-805b-44a78c84e7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f29616b-6c36-4eaf-9ee6-90e8caef7f2f",
        "cursor": {
          "ref": "e0c9ec6c-23f2-4015-96e6-c4cbb9d9e782",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "51d75d14-17c8-4d93-ac1d-c03207a64a5a"
        },
        "item": {
          "id": "3f29616b-6c36-4eaf-9ee6-90e8caef7f2f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c012df47-d210-4537-adb6-e59e177b7067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f2bfcf-fe55-4e74-9cfa-891e63da8b0d",
        "cursor": {
          "ref": "4ea22fe8-ba8c-419d-b5a8-7984cfba6ef8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8db625e2-b3ac-487e-80bd-21c47b85b559"
        },
        "item": {
          "id": "63f2bfcf-fe55-4e74-9cfa-891e63da8b0d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "96cfa5be-b1a4-4765-aaaf-560d39f532c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf965010-751c-43dc-84d7-49d0194d1a1b",
        "cursor": {
          "ref": "462002c6-ccc8-4aec-8f7a-d2502ac14df1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99da75c6-4d61-4446-8f2c-26e14b4e773e"
        },
        "item": {
          "id": "bf965010-751c-43dc-84d7-49d0194d1a1b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ded83d5a-b2c4-4d90-a1bb-7acf7b75c901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4233f6e-91aa-4668-88c1-09026ca0c5e4",
        "cursor": {
          "ref": "9ca84c69-1e60-49fd-8f96-e1f4fab42894",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4b04753a-ad21-4123-882d-04eaa90a87d5"
        },
        "item": {
          "id": "e4233f6e-91aa-4668-88c1-09026ca0c5e4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5ff63d94-bc72-4fd7-90c4-e8abfffc6d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dc3d39-5f65-43a6-8ea8-9b8111ad4050",
        "cursor": {
          "ref": "4dbbae54-7280-4430-ae05-a4347cc314d1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4275a19-8f23-4456-8961-54b61913a81a"
        },
        "item": {
          "id": "d6dc3d39-5f65-43a6-8ea8-9b8111ad4050",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d22f57bd-cd82-4ae0-9236-332c6a33b6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cd8d8f-2bc7-4729-812a-d3af5704c38c",
        "cursor": {
          "ref": "e1a2548a-6c13-4c70-84d8-e8206b33462b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "72ae6d63-cad5-4aec-bcd1-db054f0115b3"
        },
        "item": {
          "id": "c5cd8d8f-2bc7-4729-812a-d3af5704c38c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "09b59233-0698-42e5-80a7-47326b425e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38bb8df-65fa-4b55-b0dc-3ca0c6ce0c35",
        "cursor": {
          "ref": "417023e2-d162-4203-a7f7-00830167b7e0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8ca51cc8-9121-49f3-8e69-af7b36575b0f"
        },
        "item": {
          "id": "e38bb8df-65fa-4b55-b0dc-3ca0c6ce0c35",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6bdc6a8-ca11-455a-a89f-61d26ad059f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cfd0a7-24df-4901-b1d3-6e00b4802143",
        "cursor": {
          "ref": "2826db9e-d500-4e10-b2f5-bfdcdbb0d497",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6f9177c7-0f26-42c2-a476-b19ce798b5f9"
        },
        "item": {
          "id": "44cfd0a7-24df-4901-b1d3-6e00b4802143",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6c229e78-0b01-499a-93d5-d1767d749b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9cfa3d-4b90-4e3f-aeb3-af87b89b13d1",
        "cursor": {
          "ref": "c1fa16db-34e1-4899-9012-2ad08eca2be3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a93770f5-627d-4948-b2e3-39ac65c05237"
        },
        "item": {
          "id": "1b9cfa3d-4b90-4e3f-aeb3-af87b89b13d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "db32c268-4a1f-45bf-95f3-645a40337a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3f6a65-4fdd-4022-b535-b38dbd9ebc15",
        "cursor": {
          "ref": "71aa9637-3730-465a-a67f-5ee5e38ccd5a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "98649869-f50f-46f5-b11a-a2c2dc27e0dc"
        },
        "item": {
          "id": "2e3f6a65-4fdd-4022-b535-b38dbd9ebc15",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e8b7dab4-c33b-425d-9bfe-b0ea92c74d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84fa6c0-7b45-4cbc-938f-e49dd1db8672",
        "cursor": {
          "ref": "ab1a8b0a-ef5c-42b2-8621-0d85d907813e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dc78eb23-5cda-4cf4-86e0-9abe6e338f0d"
        },
        "item": {
          "id": "f84fa6c0-7b45-4cbc-938f-e49dd1db8672",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "178d6a39-8efa-47f6-ad37-ae62e4277eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b87c5ff-1495-474c-927f-0b7bb76fc248",
        "cursor": {
          "ref": "8bdcb3a8-9e4c-433c-b6b3-128144e77a93",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "423b865d-75d7-414c-8b2b-7179da24c46d"
        },
        "item": {
          "id": "4b87c5ff-1495-474c-927f-0b7bb76fc248",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d7c4996f-f5b8-471b-93d1-6b7e80f97372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753a74e1-7700-4d04-925d-226099ebe284",
        "cursor": {
          "ref": "da194c47-f992-4552-bf6d-0671da4ef913",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0e678956-d126-46da-adac-26a457e44d04"
        },
        "item": {
          "id": "753a74e1-7700-4d04-925d-226099ebe284",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78a9f3ee-3770-4524-b614-7cf879dc8b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1e2002-a96d-4372-b52b-5ffbf1a58cce",
        "cursor": {
          "ref": "f22304a0-08fd-48b3-9795-5edb76ce6ff0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08a8b6c5-f284-4f6e-81cf-1e57ced5c185"
        },
        "item": {
          "id": "db1e2002-a96d-4372-b52b-5ffbf1a58cce",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a8a0f63f-9e74-47bf-988d-985755211481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f36bf-5259-48dc-b2ab-9c1f0c04c066",
        "cursor": {
          "ref": "c4f8b1cb-0a34-4ce6-b1b2-964871cd070e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d112eb68-539f-4bc2-addd-05ab51814f64"
        },
        "item": {
          "id": "735f36bf-5259-48dc-b2ab-9c1f0c04c066",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cb4b7016-01f8-47ab-b378-c2bf239748e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e64255-fd7a-4b7e-a2ab-f315ee560e65",
        "cursor": {
          "ref": "567ffc83-bd7e-401e-925b-4fedc773309a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "57660f28-9ff8-4956-9e96-1d0044487507"
        },
        "item": {
          "id": "86e64255-fd7a-4b7e-a2ab-f315ee560e65",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f63b6d11-9120-4b0f-bfe9-f0db516af411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d098c5d4-bfd6-46c0-950a-685cb9c175a9",
        "cursor": {
          "ref": "d566dadd-4f77-489d-8e9c-be361bcc16ed",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a359ae20-f4a0-4c18-b263-9ca8d4ab98fb"
        },
        "item": {
          "id": "d098c5d4-bfd6-46c0-950a-685cb9c175a9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3d325947-e40d-49bb-8e8a-ef60799285c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1943f6-093e-47fd-9bde-b55d6093336a",
        "cursor": {
          "ref": "7f01e959-c7a5-456e-9151-26aabaadc8f2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "247af543-1f17-49bc-8b48-00346113e0b6"
        },
        "item": {
          "id": "9d1943f6-093e-47fd-9bde-b55d6093336a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "608cfcca-5a9c-497a-8d46-54629c915c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0cea83-6893-42b5-8d3f-395d35cdcdc5",
        "cursor": {
          "ref": "3e660321-b78e-4faf-b20e-f96d31b4628e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "120c369c-8198-44ca-9282-447617e58c44"
        },
        "item": {
          "id": "0c0cea83-6893-42b5-8d3f-395d35cdcdc5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d46476ad-958f-42b1-bc43-8d34ec92a8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3be09b0-5a39-469e-8944-6e109750c796",
        "cursor": {
          "ref": "f85f408a-1f78-42f2-9d29-5570e127130d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1dba8652-daed-46fb-ac46-e8a7f7b84ccc"
        },
        "item": {
          "id": "d3be09b0-5a39-469e-8944-6e109750c796",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3047272b-4dec-43cd-89a2-a8e58281cac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaf1d3e-19a7-4b1a-8223-b7b43d8c208a",
        "cursor": {
          "ref": "7fbbcfcf-5e8b-4f26-95ee-c252c2f61f0f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a9772929-262a-464a-ba38-e92f89d71aed"
        },
        "item": {
          "id": "3eaf1d3e-19a7-4b1a-8223-b7b43d8c208a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8cc3e58f-4884-414c-980f-edca6624aad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a97f424-17c1-4a70-ad42-01ff2a24387a",
        "cursor": {
          "ref": "072a6314-f27a-4b41-a700-3c0a3f46f138",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dc0d92ce-741d-46ff-9cac-b956618c7c71"
        },
        "item": {
          "id": "7a97f424-17c1-4a70-ad42-01ff2a24387a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c63c8c75-af43-4cd3-930b-529befa4bd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b3450b-3922-4084-9850-09c6f47d77b1",
        "cursor": {
          "ref": "01d8c9e1-af7c-437c-aa8f-7868ab22065a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "18bbe101-cd96-43ca-9ffe-8e12f6e43573"
        },
        "item": {
          "id": "55b3450b-3922-4084-9850-09c6f47d77b1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c280e2f2-87c3-402a-b31b-bee5029df9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a30d0ad-b276-4333-b4f6-5c8407dd0810",
        "cursor": {
          "ref": "56ec9fba-9180-4502-b8b3-7f02746af9cf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2104a877-77bd-438b-b0a8-81d0b14daf20"
        },
        "item": {
          "id": "0a30d0ad-b276-4333-b4f6-5c8407dd0810",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c5938500-d652-4223-bb3f-b430339e06ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829a63e0-2c5c-42cd-b2c5-3940788682e8",
        "cursor": {
          "ref": "db693613-ca6d-4dea-a368-3d9187603c89",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7a76d577-8651-4308-bac8-c7cfdcad4859"
        },
        "item": {
          "id": "829a63e0-2c5c-42cd-b2c5-3940788682e8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1fd0c321-5dca-4e6d-bf96-9795d03a4547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f6252e-8ff6-4dcb-84a6-834d480d568b",
        "cursor": {
          "ref": "88722144-9158-4709-8759-86b095ff258f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc972dce-ab16-4658-8bb7-7d49f65bd836"
        },
        "item": {
          "id": "36f6252e-8ff6-4dcb-84a6-834d480d568b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c6ce53a0-ee5f-4e89-ad00-2aed710f9834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef7fb07-541f-4190-a370-7e33b1a93d51",
        "cursor": {
          "ref": "b185098b-be10-4f31-93b6-569996f5f140",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9969ec33-e516-4d2c-a104-fdc5ff242505"
        },
        "item": {
          "id": "6ef7fb07-541f-4190-a370-7e33b1a93d51",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "655bf01e-18f3-41ae-b92c-47eb3fa911d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55462ab-0694-4dfd-89aa-bf3b3e1346e6",
        "cursor": {
          "ref": "d1d32da4-e21e-4b11-a696-1adc36b35377",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "05c5f697-f03a-451e-b3cb-9bc22fd12588"
        },
        "item": {
          "id": "c55462ab-0694-4dfd-89aa-bf3b3e1346e6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dc20e8d7-baaf-4103-bfb4-9a7ffc5ea0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ac921a-0f77-4732-b741-81368eacccf8",
        "cursor": {
          "ref": "afdf3b71-f13a-47ee-81d9-5dff8fa4abf6",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1fd91070-c05d-4290-a420-abd9d6a6b124"
        },
        "item": {
          "id": "b6ac921a-0f77-4732-b741-81368eacccf8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1b5b4d29-cef5-4513-a430-267c53287ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055dbbdd-ccf0-4a7f-8c62-c55db14913fa",
        "cursor": {
          "ref": "13f16bfd-4071-4bb1-ab08-20799f021957",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "078bcd06-c386-4187-a407-5fe6f047bc97"
        },
        "item": {
          "id": "055dbbdd-ccf0-4a7f-8c62-c55db14913fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4aa8eb6c-19d8-49ac-aea5-56d3548d5470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e02ab5-f8d1-460d-a2b9-701a87351193",
        "cursor": {
          "ref": "50d6d86f-adcb-41f3-b4f1-045fa0eb3211",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "27cb0372-666e-4d73-9b27-826755873512"
        },
        "item": {
          "id": "10e02ab5-f8d1-460d-a2b9-701a87351193",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fb9baecb-ff90-4a53-8ad1-fac26adb0c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce6599a-763c-411e-9076-a35f3263708f",
        "cursor": {
          "ref": "46044d74-08d4-41fa-b889-274300abc4cf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7bce2b19-93f9-4ab5-a2de-561bc50f66c9"
        },
        "item": {
          "id": "6ce6599a-763c-411e-9076-a35f3263708f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3909be77-9eb4-4b5f-bd2a-183bda7b94d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dec5e4-d6aa-4bb7-a88d-d66492a09655",
        "cursor": {
          "ref": "164c9716-7865-4881-8e94-6ad2d48483cd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8ec143bb-bb39-4685-bf34-6b42b3202686"
        },
        "item": {
          "id": "39dec5e4-d6aa-4bb7-a88d-d66492a09655",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e440948c-a82c-4f44-8fdb-47e76f48e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb14444-ae72-4a67-9d82-43f32531fac2",
        "cursor": {
          "ref": "1904a5f1-1101-4d25-ab43-25a30f1fb322",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fa4e27c9-769b-40e9-a883-52489423e579"
        },
        "item": {
          "id": "2bb14444-ae72-4a67-9d82-43f32531fac2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "860426d5-f929-4361-a7ba-fa2b4441ec16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee2c5cb-7ce3-4fba-b682-26f83e4c2075",
        "cursor": {
          "ref": "d44e39d2-1b90-483d-9a09-71bde66b1bc7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dce8f64e-caf0-424e-9d7b-0fa9591a10e8"
        },
        "item": {
          "id": "7ee2c5cb-7ce3-4fba-b682-26f83e4c2075",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "08630ed3-d6fc-46ab-aaec-735ec088eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bbad3-7617-4782-bb85-ccab3e72aed2",
        "cursor": {
          "ref": "00f1b5b2-956f-4afd-bad4-b41733344c7c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "501c8408-89e2-4da1-92c3-ac16557da9a8"
        },
        "item": {
          "id": "f45bbad3-7617-4782-bb85-ccab3e72aed2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1f9032a8-a26d-46b6-af76-3b3952ac342f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adab42b7-6db7-4684-aaba-54a742f10b99",
        "cursor": {
          "ref": "a3cfb978-b52d-40db-b0ef-563e529d31bd",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f4007ecc-ecee-4f14-8d8f-a4bcbb5a8361"
        },
        "item": {
          "id": "adab42b7-6db7-4684-aaba-54a742f10b99",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1f8d993f-fbb8-4db0-8e45-c042b93f9aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299518b1-a7b0-4de5-9b70-731f42001644",
        "cursor": {
          "ref": "bca171a8-fe7e-44c7-9551-98f3cfad7240",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2e999e4b-56ff-4094-ab01-f27f86d21565"
        },
        "item": {
          "id": "299518b1-a7b0-4de5-9b70-731f42001644",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0707c940-a091-4426-94e4-87cebf19b342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d227d-9b7c-4849-b173-c95c0e3daef5",
        "cursor": {
          "ref": "dd885fd3-ecb3-4660-a085-d89f9474799d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9bc3e1f6-b7c0-44b0-86ba-220e10105147"
        },
        "item": {
          "id": "8c3d227d-9b7c-4849-b173-c95c0e3daef5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4b5277e5-666c-43d8-8149-90cef2ccb6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b59374-675c-4238-bc53-30fd530583a0",
        "cursor": {
          "ref": "d1d95100-e409-4f7b-be75-b05c21c78e14",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ec2eaade-4d57-4c0c-83e4-b096603ad8fe"
        },
        "item": {
          "id": "c5b59374-675c-4238-bc53-30fd530583a0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "166840a4-96c0-4db6-b37e-cc71ddef466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ad6611-b065-4300-a5bc-18811f394d8c",
        "cursor": {
          "ref": "36c6533c-215a-49b0-bc3e-b53e57628e5c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "097c9033-102a-4e4f-ab1e-3be64c528390"
        },
        "item": {
          "id": "83ad6611-b065-4300-a5bc-18811f394d8c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f46252bd-c64a-4d6d-84bd-d3a27b4056eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdcbd4e-6124-4637-832e-7cc6222b71df",
        "cursor": {
          "ref": "b6f55911-e6dd-4eab-882c-687687b4cc13",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2a8ec902-06fc-4148-98bf-21c146a81bcf"
        },
        "item": {
          "id": "cfdcbd4e-6124-4637-832e-7cc6222b71df",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dbd158cb-2b31-4fd7-a432-c8d8aa42c2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4713f6af-4acb-41f2-830b-178aae25d016",
        "cursor": {
          "ref": "9419e89d-7042-4895-935b-8c0fdd9099f0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9b582778-a5ce-4dd5-9809-2c832d54e5b2"
        },
        "item": {
          "id": "4713f6af-4acb-41f2-830b-178aae25d016",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "60f94fcf-7470-4b95-888e-782d3a056582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa9a3f4-1532-487c-ae31-9c56fa14ddbe",
        "cursor": {
          "ref": "d6d2ca30-b3ad-4e45-ab63-25fba8c6521f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "86689c5c-3c5c-47be-832e-7d73cf370742"
        },
        "item": {
          "id": "bfa9a3f4-1532-487c-ae31-9c56fa14ddbe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "eea0efcb-d380-40d6-af5b-95eeddd1fbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38f87e2-cd4b-4593-86dd-96c393a6f384",
        "cursor": {
          "ref": "7998dd3b-bd6f-4e40-8162-418663ccf805",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b5be29bf-c85e-4c12-839e-dab66a0d385f"
        },
        "item": {
          "id": "e38f87e2-cd4b-4593-86dd-96c393a6f384",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f37a3c15-a3bb-4faa-9c56-9ede79b74993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d07773-2797-45de-ad46-ed254fa404e5",
        "cursor": {
          "ref": "3089c886-8b7a-4fc1-af57-aec2d835cc7f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad3a5a0c-dbe9-40a2-9bb7-6e630bbacb1a"
        },
        "item": {
          "id": "99d07773-2797-45de-ad46-ed254fa404e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b174de56-7204-4e0a-ac27-3b4c45720de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8ce982-8418-45a9-8250-983af8cdd61e",
        "cursor": {
          "ref": "7328a443-9305-4456-ab15-3f0da42c3288",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3009fbc6-1acb-4091-a372-3cba62521403"
        },
        "item": {
          "id": "7e8ce982-8418-45a9-8250-983af8cdd61e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8d5b0bcc-3de7-4a7b-aed9-23eede544683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a98212-4647-4ca0-81ea-82c391c4a5e7",
        "cursor": {
          "ref": "2a0d8a04-b502-46a7-b734-97a0f98b8e9f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "caf45aee-8060-4a0c-a5f2-05573aa17ec4"
        },
        "item": {
          "id": "f4a98212-4647-4ca0-81ea-82c391c4a5e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a8505ca3-88c2-4197-9476-4fda392f2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b8264-98ba-418f-a571-91d90692be33",
        "cursor": {
          "ref": "937c40f3-03e0-4ded-a354-2fbb8d3008d1",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4abea091-fe2a-4b5d-af2c-a7d739e5ae51"
        },
        "item": {
          "id": "1e7b8264-98ba-418f-a571-91d90692be33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "566cd9e0-034e-464c-88cc-6832625eb64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c13b6e0-031a-41a2-bbec-4829633d57f0",
        "cursor": {
          "ref": "6eff3fc1-67c6-4b49-9213-b9558c58d628",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c9b18945-795f-47ff-89b1-a6428cf9c420"
        },
        "item": {
          "id": "6c13b6e0-031a-41a2-bbec-4829633d57f0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "61071ae0-e01a-4736-bf39-7089ac2b394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1762b1e-0049-4087-ab14-99af0a407676",
        "cursor": {
          "ref": "d4befdfa-8494-4b0d-8ae0-69789f77cf09",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7eb415a3-ddf1-47ae-a829-6b2524f39cb6"
        },
        "item": {
          "id": "f1762b1e-0049-4087-ab14-99af0a407676",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "40c43539-8b2a-42ee-813d-fca5a9b20a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03623312-ecff-4128-bb19-482f86d32f84",
        "cursor": {
          "ref": "e2caacea-eb4a-4db5-b645-793cd0bb15d7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "315ced43-7462-47d6-b2e4-b44b9c3efdd2"
        },
        "item": {
          "id": "03623312-ecff-4128-bb19-482f86d32f84",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8259dae8-f4cf-46a0-87e8-0ba4789d6208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a3691a-a534-4a66-b555-42e20967bde6",
        "cursor": {
          "ref": "08d815e8-9ca1-49a2-ac17-37ca8e9f503c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "193c51ec-fd04-4455-86f3-9355586aaa65"
        },
        "item": {
          "id": "37a3691a-a534-4a66-b555-42e20967bde6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "845efb01-0436-47ba-a32f-75edd453acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5acbeb-8387-4c52-be34-d6a2899fc929",
        "cursor": {
          "ref": "cfb1bf5e-3eff-4159-a124-95a82cd2102c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4ecd6645-b4e2-40ca-9c3c-56460c0312ec"
        },
        "item": {
          "id": "3e5acbeb-8387-4c52-be34-d6a2899fc929",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f27975dc-741b-47db-9ba7-d5cdbf250ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b19d5fe-bf14-4e64-bfdd-93c890b611e8",
        "cursor": {
          "ref": "bfafe6ab-ce31-4ef2-b229-0b6dad3b0887",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "45632cd2-c6a0-4515-80a4-3caea336082c"
        },
        "item": {
          "id": "2b19d5fe-bf14-4e64-bfdd-93c890b611e8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "addb889a-b384-4490-82a6-c9684147bfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb51367-de11-4ac0-a4a2-9fe0349ba0aa",
        "cursor": {
          "ref": "0796a72b-6dc4-4eba-90eb-f0304292dbd0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e8c70157-07df-4678-b5a4-9e6d8c7d1ff6"
        },
        "item": {
          "id": "aeb51367-de11-4ac0-a4a2-9fe0349ba0aa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bf2edecf-3109-4a46-a388-1c5abe69e109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221a251a-54ea-45bf-8490-32abec667b62",
        "cursor": {
          "ref": "44f8688e-edd9-447b-93c9-4181f80c7f6e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8186cad4-89d8-414b-a64a-8dee4ba9348d"
        },
        "item": {
          "id": "221a251a-54ea-45bf-8490-32abec667b62",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a9a6330e-8688-4cdc-b717-744138e39d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba0e1ce-f3c0-428e-a23e-e0cd133b5039",
        "cursor": {
          "ref": "3073c317-cff4-40af-9b99-5416d8e5bc95",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "df6e86ae-672b-4975-9d0a-077c1776795c"
        },
        "item": {
          "id": "1ba0e1ce-f3c0-428e-a23e-e0cd133b5039",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "96de46d0-1a71-4cc2-a376-be853b06aad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d348193a-415f-4e81-9694-7cb098808eaf",
        "cursor": {
          "ref": "7061d339-3db9-4220-80c3-e00cd1bdf975",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b0b2f576-f2c4-4115-b39c-415a89852558"
        },
        "item": {
          "id": "d348193a-415f-4e81-9694-7cb098808eaf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dd9cb03a-73d1-4d72-8d9f-d912a33ac657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6359ff-e281-4944-aa54-129020a2a4d8",
        "cursor": {
          "ref": "5ebab48a-7057-4c41-947c-b299d7b6260e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0781930e-64f0-4256-90d3-49475ddb908a"
        },
        "item": {
          "id": "3e6359ff-e281-4944-aa54-129020a2a4d8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ecfcd0fe-5f94-49a2-9a80-e43d7473a719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4640edf-a91e-49b7-bc0d-0e81b916a337",
        "cursor": {
          "ref": "97f93b30-d3dc-46e8-8309-e8ee2cb69efd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7737f9df-54c9-4f6b-bb3f-ab7de62009bf"
        },
        "item": {
          "id": "b4640edf-a91e-49b7-bc0d-0e81b916a337",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "88e89d63-301c-4322-a458-20aaeafcf40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a02ff2-c6f2-4fb3-8a11-ff02b32adfde",
        "cursor": {
          "ref": "f2b67f55-9b3f-437b-b256-2a267dd6745b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0096b9af-8ba6-4538-94e0-e7f652b51cc8"
        },
        "item": {
          "id": "44a02ff2-c6f2-4fb3-8a11-ff02b32adfde",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9ad3b767-6f72-448f-9078-7c86815a3d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405c2abc-dad1-430b-945a-762eef11b950",
        "cursor": {
          "ref": "3b1dfe6c-060b-4544-9344-d31cf0f76bba",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "da08b8b9-8c18-4271-bf08-895c6f1b6cf3"
        },
        "item": {
          "id": "405c2abc-dad1-430b-945a-762eef11b950",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f0da3f6f-3f2f-4419-92de-187408ff9e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9770f538-295c-4da3-b73f-1186181dc696",
        "cursor": {
          "ref": "8cd2bc9b-23c4-4409-886e-1a33e01c54e6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "893c49d8-ced6-4dad-beaa-db5d4c058359"
        },
        "item": {
          "id": "9770f538-295c-4da3-b73f-1186181dc696",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c4d3bd8f-2fa0-4ae6-8150-4c8665430ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294a7abd-de16-4bba-a0aa-b70c6c130c71",
        "cursor": {
          "ref": "7016ffc4-c430-43e3-8fe6-dd1a3fffab67",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "db1fb3eb-b77c-4bf2-917b-8a9312a09108"
        },
        "item": {
          "id": "294a7abd-de16-4bba-a0aa-b70c6c130c71",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "51e34654-853d-4a44-aaa2-90be9b56f26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e329b768-0b99-42cc-89be-d631255c6b2a",
        "cursor": {
          "ref": "aeac6648-b815-4dac-bdcb-6b20ecdb2200",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a53782cb-8fa2-4d24-9c9c-a0ba2de475a6"
        },
        "item": {
          "id": "e329b768-0b99-42cc-89be-d631255c6b2a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d3f39f87-ce3d-410d-b301-531028d4d848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a594bfc3-7bb4-4cc5-9690-9b0961827920",
        "cursor": {
          "ref": "caf51820-4237-4295-9e01-141fdd6cb593",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8f9e4c56-d2ed-486c-9ebd-24b83660b63d"
        },
        "item": {
          "id": "a594bfc3-7bb4-4cc5-9690-9b0961827920",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d0b27073-133c-4f5d-a909-9aa5a4d0575e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499d894e-a3b0-415a-86f9-e951b3a49320",
        "cursor": {
          "ref": "bef32a2d-8ff6-4442-81ba-8bb1a843266b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "491acb78-fe5e-459a-97cd-1a72f117597f"
        },
        "item": {
          "id": "499d894e-a3b0-415a-86f9-e951b3a49320",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "21107d07-d14c-4858-927b-7576ffbd8e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5c41fb-e648-40ce-97c2-309cf117773e",
        "cursor": {
          "ref": "78e1293b-5d28-453f-bc6b-44d5d518a1d0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f0676859-47ad-4019-be80-777d4daaf48f"
        },
        "item": {
          "id": "bb5c41fb-e648-40ce-97c2-309cf117773e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "580ec06b-5032-4f6f-a24a-364ea39a55d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101ef1e9-7baf-4ab2-84ab-9360eaa9728b",
        "cursor": {
          "ref": "c1432013-39a8-4c90-bdec-41f858ae9e90",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "30d33a53-4212-4bf5-852f-1262c050062e"
        },
        "item": {
          "id": "101ef1e9-7baf-4ab2-84ab-9360eaa9728b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "32b59627-1d32-4d84-bc03-5e3f6a932140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b023983-9f0b-427a-806a-6acd0e69a1c6",
        "cursor": {
          "ref": "8f0e28a5-1e22-4c53-bc04-a9c926f9d216",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6cbecf09-1a53-4131-8706-e3e7f9a3ae32"
        },
        "item": {
          "id": "8b023983-9f0b-427a-806a-6acd0e69a1c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "66157969-fd09-44fe-940e-cdd512b9262b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3a85dc-3bec-4dfe-a3a5-cc0e5e891434",
        "cursor": {
          "ref": "77133fd3-5785-4553-aee0-bd29140ad2f3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "76a80c42-4b87-4a0e-b714-f952845aa70f"
        },
        "item": {
          "id": "7c3a85dc-3bec-4dfe-a3a5-cc0e5e891434",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5931092b-37ce-42b5-975f-5788ab12c40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6377b1-cf7e-4cbb-ad31-420b8e5b18a1",
        "cursor": {
          "ref": "7c4540d8-92f4-4657-866d-45154cc21e89",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5bbce632-084b-4a5c-bcad-e3672a0a012f"
        },
        "item": {
          "id": "9e6377b1-cf7e-4cbb-ad31-420b8e5b18a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "649a480b-6b52-40f5-a5da-3bab0fee8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a131b84-32bc-4cbd-8a6f-55689d5c970a",
        "cursor": {
          "ref": "91141066-8d80-4a30-8764-c96cd200f48d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "229109ba-9ec3-4c75-82c1-26744d1f1333"
        },
        "item": {
          "id": "0a131b84-32bc-4cbd-8a6f-55689d5c970a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "87f45c73-e9a8-4933-90d3-13d0eadf406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a971dd-7b13-4cf2-a9bb-ac09f4560234",
        "cursor": {
          "ref": "0145c092-9dea-4ede-821f-35088f4f1731",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cd1634f7-bc39-48cd-8f67-4ef577dfee8d"
        },
        "item": {
          "id": "43a971dd-7b13-4cf2-a9bb-ac09f4560234",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6fc84bbd-fc74-416b-b104-63b5840931e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac23ca4-772f-4ad0-ab05-99b396b7788e",
        "cursor": {
          "ref": "dda7dbcc-dbc2-4c46-be26-0e218e1ba220",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4176c982-7f41-4054-ab38-920339de62fa"
        },
        "item": {
          "id": "cac23ca4-772f-4ad0-ab05-99b396b7788e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "76945bfe-e9e9-4944-83fb-3a1d9d290b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78533df8-4b51-4d8f-bf32-5bfea6877dd2",
        "cursor": {
          "ref": "2ccc590a-295c-47cb-acb5-86b7fc0f8586",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f1ae09c8-c43b-40be-a692-07f2d8296d59"
        },
        "item": {
          "id": "78533df8-4b51-4d8f-bf32-5bfea6877dd2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bec71737-1f5e-483e-9524-ce3809790e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3eb833-8450-4fce-b718-543bd8fcda06",
        "cursor": {
          "ref": "855a59c5-3b9a-48fd-929c-9de6c03fda8f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "28c5b3fe-5733-4d52-b32e-878a5784077a"
        },
        "item": {
          "id": "0c3eb833-8450-4fce-b718-543bd8fcda06",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0e43d738-7e14-4e4d-9723-f987a2140759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b3cb7b-03f5-47f8-b593-ca34f7d5ae0e",
        "cursor": {
          "ref": "980538ef-ed20-45a2-a19a-00eb3ba031d9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "799ed828-c3fd-485c-b8b9-542d4d8a4c03"
        },
        "item": {
          "id": "f4b3cb7b-03f5-47f8-b593-ca34f7d5ae0e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "89a75c1b-6815-4ba9-8ee9-1f6abe1344e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70895746-9555-4f18-b002-0d2594cc617f",
        "cursor": {
          "ref": "ed397ed3-b9d2-4adc-86ec-5ec675a804b0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a95e82ec-4826-4524-a2b6-bc81a634331d"
        },
        "item": {
          "id": "70895746-9555-4f18-b002-0d2594cc617f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "380e60be-458e-4b9d-b5b2-c9177755febd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2849b617-8d58-4709-aa02-e74904982944",
        "cursor": {
          "ref": "e19e7a86-94a0-47eb-b9af-39455690a8d8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ebbe7f5f-49ef-4d61-a6bb-a709aaa5abf6"
        },
        "item": {
          "id": "2849b617-8d58-4709-aa02-e74904982944",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9a11eff1-8708-4376-b369-5fde6228bc7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4198c350-6060-4ecd-8d79-98407218ffe2",
        "cursor": {
          "ref": "07de2eaf-4111-44e1-bbfa-f29de8cd8093",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "79dea52c-97c4-45d0-a59f-9a1edd4e9f9d"
        },
        "item": {
          "id": "4198c350-6060-4ecd-8d79-98407218ffe2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ffb1a4d9-28ab-48b2-8c36-ec6ce81c5804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bc4f585a-2af8-4b17-ab2d-be1b3be1731f",
        "cursor": {
          "ref": "740fc464-74d8-4fa7-b9cc-5abad587aa30",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9aac0757-0b98-4290-bfd9-6e3352afcdaa"
        },
        "item": {
          "id": "bc4f585a-2af8-4b17-ab2d-be1b3be1731f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d272d222-0676-4478-aa67-f216344a576d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "77d1c418-fbd0-4754-9d80-69ebba0c8931",
        "cursor": {
          "ref": "c40b9a94-58e0-42e2-a277-4d28ac86ce35",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "61452921-81e5-49b9-8926-5a5cd99758d8"
        },
        "item": {
          "id": "77d1c418-fbd0-4754-9d80-69ebba0c8931",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e405e86f-77ac-4c6a-87fa-3471b185f278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "756c5970-4cdc-4410-957c-e9154615b915",
        "cursor": {
          "ref": "22fc88f2-d111-44d3-9b4c-e2869031322c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5fca83f8-163f-4951-8bc9-d80a86ce1a2a"
        },
        "item": {
          "id": "756c5970-4cdc-4410-957c-e9154615b915",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d1b3a265-b6aa-4a24-8468-4591e0f4988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0c391e67-0cf0-4a60-a8a9-cd479c71ee2c",
        "cursor": {
          "ref": "7cca9d7d-751f-455b-b2d6-80b690179a89",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2c0a59df-9036-47cd-a367-3ea72ad048ba"
        },
        "item": {
          "id": "0c391e67-0cf0-4a60-a8a9-cd479c71ee2c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "492e055b-7107-4514-bb55-28ae272b7f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1ada138e-e163-4ae4-9889-299e7a8affe2",
        "cursor": {
          "ref": "e7344731-c632-4e49-9ef4-2e685cd8afac",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b9036689-2dbf-48e4-9972-239ccdf69907"
        },
        "item": {
          "id": "1ada138e-e163-4ae4-9889-299e7a8affe2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e3fc09a3-36d7-4360-9563-f4ba73f09e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9b14eeb8-d7b3-492e-a80d-7b46b3ed781c",
        "cursor": {
          "ref": "dddeb2e3-7c63-4aa6-a427-4cbc9994e8b9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63ab2ec6-dc44-4afc-a450-790e107c4ae7"
        },
        "item": {
          "id": "9b14eeb8-d7b3-492e-a80d-7b46b3ed781c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5ca39357-e30f-466f-9151-178171ef2ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2025c87c-3a6b-469f-acd0-be1227320d3b",
        "cursor": {
          "ref": "c6536281-7902-41fc-aec1-3bcea961d654",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2d6e8b55-ccd2-4523-86f9-f343ce720142"
        },
        "item": {
          "id": "2025c87c-3a6b-469f-acd0-be1227320d3b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "706d8c3e-057c-4108-b911-6ce571c8915a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fe7a7f-2b85-46ad-bc5f-e1d9d7d83b6b",
        "cursor": {
          "ref": "68e1d933-d917-4a5b-8c01-3e5a889b6b83",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c2a5c343-07d0-4bee-8b8c-16aa7474f4bb"
        },
        "item": {
          "id": "11fe7a7f-2b85-46ad-bc5f-e1d9d7d83b6b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c4e241bb-be60-4fd7-81c0-6f0890be594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4312b39-6f9a-4f8f-8a7a-2d24b11042f9",
        "cursor": {
          "ref": "1929d4cb-2274-489b-bb7a-13bbf93a12de",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ca7be44b-0ea7-4498-9bb2-c7e4779825b4"
        },
        "item": {
          "id": "d4312b39-6f9a-4f8f-8a7a-2d24b11042f9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "48e09299-d5e1-481d-8c82-e60dd6208083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851a1210-94cd-4de9-a885-af37c4a69c9e",
        "cursor": {
          "ref": "d394445c-c69c-4607-b971-6aa593556847",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e79d778e-e10a-4c76-a7fe-db10e529cea6"
        },
        "item": {
          "id": "851a1210-94cd-4de9-a885-af37c4a69c9e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2d4e172e-526a-4dac-b9ac-ec2f2384a564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9a2aaf-c191-4c1e-b744-71f24bff59ec",
        "cursor": {
          "ref": "30a3546d-0116-482e-9914-85c85d8afa6e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d12c12a7-3ccb-4e7c-9589-847a67603425"
        },
        "item": {
          "id": "9e9a2aaf-c191-4c1e-b744-71f24bff59ec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cfa0a4ee-25ca-474b-b34f-823e45bcc323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26e988-600a-4ec7-828c-4fdfe94826bc",
        "cursor": {
          "ref": "9ea4975d-6d63-4e24-8182-53616b76a318",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8814b54c-7d3d-4a2b-aaf5-901cc8018106"
        },
        "item": {
          "id": "da26e988-600a-4ec7-828c-4fdfe94826bc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0c687236-847d-4dbe-90fb-6ddbd88b08ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5051670-dc77-4e15-9916-c829726553b2",
        "cursor": {
          "ref": "1d94744a-6419-4dea-be4c-04ce75a5ded8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "692df361-6758-4df9-87cf-d1fb2786934e"
        },
        "item": {
          "id": "c5051670-dc77-4e15-9916-c829726553b2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e8a9f0d-e6de-4796-bf0c-49e77fa7fd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee3dc41-bee6-400e-bff3-2d3cf6f2f2d5",
        "cursor": {
          "ref": "f1439b97-9458-4795-8ad6-75008d262282",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "91a8f6b9-6fa1-4324-bf0e-ab09bb29da57"
        },
        "item": {
          "id": "1ee3dc41-bee6-400e-bff3-2d3cf6f2f2d5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12813339-aed0-4e0a-a9f2-0b3d58870880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63c9c00-f30e-46b9-bcf2-e3476fd0d45d",
        "cursor": {
          "ref": "e6dfb647-29c5-41d5-b9d1-bb3fe34e175f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a07153e6-3474-42b2-b16b-9190ed5814ab"
        },
        "item": {
          "id": "c63c9c00-f30e-46b9-bcf2-e3476fd0d45d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af33331d-cd37-445b-a5b8-04ea64d1daa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70125c5d-4063-4801-9ab6-f0432a455d45",
        "cursor": {
          "ref": "f4f65ead-92bf-4003-b558-d39523ff8228",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "030458af-bb9b-483f-ba4f-0ea8cb8e0e1c"
        },
        "item": {
          "id": "70125c5d-4063-4801-9ab6-f0432a455d45",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ea11ee61-8c14-4d25-bfc9-fb942ed431d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2632d3-ef9b-4141-8ad5-8055ffbddbf7",
        "cursor": {
          "ref": "bc3b20e9-4454-4262-9646-8ecc50b46d09",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73105a81-3f6a-4829-8e6f-84ba454e342c"
        },
        "item": {
          "id": "dc2632d3-ef9b-4141-8ad5-8055ffbddbf7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acb8fb13-5e14-46c3-9d44-551c9612ef1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4cee56-0967-4194-81f3-39d707b2d563",
        "cursor": {
          "ref": "49c2bca5-5b49-4fac-8364-5b66c8a2bff0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b6a82f77-0b31-4dd1-8bb3-21539b126502"
        },
        "item": {
          "id": "3a4cee56-0967-4194-81f3-39d707b2d563",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8498a784-4842-4765-b34e-4358196cc8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98b1625-140e-49d0-b174-92abcfd84a43",
        "cursor": {
          "ref": "cb637cd9-9128-4d12-b9d7-f94f3bf416b9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "23023463-b8e6-429f-8b16-7cdc3ae7e459"
        },
        "item": {
          "id": "f98b1625-140e-49d0-b174-92abcfd84a43",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a21b5a03-7295-47da-811d-009f6ac82d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a058aa-8707-4618-9932-a3c48975c0ae",
        "cursor": {
          "ref": "11adf19d-4389-4c8c-8460-f24a0e2959b1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "672f089c-6879-49eb-af62-03ca56219b9e"
        },
        "item": {
          "id": "a3a058aa-8707-4618-9932-a3c48975c0ae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa9beb2a-5b0c-4d3b-bf03-b8c858f7f799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7a598d-9609-4049-8db5-11874c25a989",
        "cursor": {
          "ref": "3c983043-ad10-4383-aed8-5974fbe62ec3",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5c77a64c-a8d2-4bce-bcb4-73053033b1b4"
        },
        "item": {
          "id": "8e7a598d-9609-4049-8db5-11874c25a989",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a11a7cfb-6061-4cb4-8faf-b026078bee05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d8c991-f78b-48d0-b5a8-397eccce4fcf",
        "cursor": {
          "ref": "6a738c7f-5866-45eb-bded-f70a6a75a2d4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6ee4ca29-6faf-4f18-9cb2-6b701c0842e6"
        },
        "item": {
          "id": "07d8c991-f78b-48d0-b5a8-397eccce4fcf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7c659d5e-a2db-4c24-a882-aa34732ec350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f4114-f043-4bdb-a238-23ce48a4064f",
        "cursor": {
          "ref": "34d0bc85-e270-4f48-adcf-ea31626cf0cc",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "64a3abb5-07bd-4c1e-9e52-ff953e1ee38d"
        },
        "item": {
          "id": "650f4114-f043-4bdb-a238-23ce48a4064f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "72c6f225-94e0-413e-b221-9f0ab4b60886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba0b87c-74c6-4fa3-b1d5-99ba9e0185ac",
        "cursor": {
          "ref": "e20731b6-8134-4987-8a0b-2188222bbbfe",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "589c891f-2e2e-4ed2-b956-df7818b808a0"
        },
        "item": {
          "id": "1ba0b87c-74c6-4fa3-b1d5-99ba9e0185ac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "75d82ec1-922e-476d-ac95-9575349d907f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e66a00-679f-4db6-88dd-5479c10d3977",
        "cursor": {
          "ref": "2a65d6c8-f4c9-4a2d-9219-b1b48e748adc",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2dd8d97c-50fd-47a4-a3b1-73c1f7b9e8b1"
        },
        "item": {
          "id": "66e66a00-679f-4db6-88dd-5479c10d3977",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83601c37-80a2-4667-980f-526e16e89b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa97fdfb-cfa8-4582-96fd-3b789895e1d1",
        "cursor": {
          "ref": "2be5fc62-6a88-4d26-a44f-d449a5e2ce63",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c9105991-c71c-48ef-a261-7a5e68ea4308"
        },
        "item": {
          "id": "fa97fdfb-cfa8-4582-96fd-3b789895e1d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8617a4e7-6cb6-4efe-92d3-7ab392e709f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49859c9b-5c59-46e7-a862-1f2f482b2f88",
        "cursor": {
          "ref": "94b2c38f-0068-4920-860a-5d7f97cfdce4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f461bcbd-3043-46f6-826c-0d516bf6184a"
        },
        "item": {
          "id": "49859c9b-5c59-46e7-a862-1f2f482b2f88",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c3c2aac-2eef-4753-aebf-0d3507b5d237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d23ad34-11a4-4535-a116-b6a9b6a5a5a6",
        "cursor": {
          "ref": "ee2a3486-ef71-4f8a-9453-a6b15b483079",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c2d2931e-17a7-48b4-817d-40b104d899fd"
        },
        "item": {
          "id": "5d23ad34-11a4-4535-a116-b6a9b6a5a5a6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "988d3b34-0ef2-452d-9976-60f07331cee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0963a53e-c04f-45aa-a04b-c176966802f6",
        "cursor": {
          "ref": "237c80a6-bfbb-4934-aba2-6c2dfbc97e9f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cf627ec8-032d-4a68-978b-64b4d5f57a5c"
        },
        "item": {
          "id": "0963a53e-c04f-45aa-a04b-c176966802f6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cdae4963-507c-4cd1-a123-61bc7d6aba34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deb5c4d-0498-4efe-86d8-5281005eb858",
        "cursor": {
          "ref": "3c93d487-4eff-4c92-97b2-28f0ad99d1af",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f9b9d65c-aaec-4c08-aa6b-e185429fa87f"
        },
        "item": {
          "id": "1deb5c4d-0498-4efe-86d8-5281005eb858",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "36171c50-8263-4795-9a41-aaf6ea732741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73a901a-6769-4da6-a0de-1055f5b7e654",
        "cursor": {
          "ref": "2aaad0c9-357f-45e5-b962-34cee55f9eba",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "82f8f3c4-09de-42f9-8744-b5d75b73a26b"
        },
        "item": {
          "id": "c73a901a-6769-4da6-a0de-1055f5b7e654",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "21511025-79b0-4f97-a3b5-e43e473b471d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb4d606-c623-4810-94f9-ec25918801ee",
        "cursor": {
          "ref": "fc30502c-ea53-424d-ac09-0bb4fc31f5b6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d6806e27-9d11-42a1-a4d3-4c4443463967"
        },
        "item": {
          "id": "3fb4d606-c623-4810-94f9-ec25918801ee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8eeab09b-5969-48e2-bc33-b057ca8145c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8124251b-f66e-4dcc-b91e-d3ce466db220",
        "cursor": {
          "ref": "00bf8cd3-765f-4ad2-ab82-c600d6bbc0c2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2bed241d-e8ba-4e26-b4e6-0f0131c86e69"
        },
        "item": {
          "id": "8124251b-f66e-4dcc-b91e-d3ce466db220",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3398462-c862-4152-b297-4888c32e107a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28edd7c3-315c-4883-9f25-2a1b4cd461e7",
        "cursor": {
          "ref": "b27a1d6f-2611-40cb-b7a3-7d7d6ab365dc",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee58c25e-b8cf-4d57-9611-7d548278babc"
        },
        "item": {
          "id": "28edd7c3-315c-4883-9f25-2a1b4cd461e7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3cb5d31-ef0f-4976-9990-1e6eb3818aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfccdeb-f769-476d-98d1-12b27425fe91",
        "cursor": {
          "ref": "35253b56-4f1a-409e-be15-0bb3bec03de5",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "be9a6db3-0183-4972-be8c-2bd30d746a0b"
        },
        "item": {
          "id": "dcfccdeb-f769-476d-98d1-12b27425fe91",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "228ea72e-fa86-4560-bf0c-f3516ad91d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c5054a-7bf1-4dab-bfa2-aff0f374872a",
        "cursor": {
          "ref": "60f45bb2-3af0-4fc9-8bd3-a382abb00d18",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0ee5f5e-249f-40eb-a95b-7ec0e522353f"
        },
        "item": {
          "id": "b2c5054a-7bf1-4dab-bfa2-aff0f374872a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dca6b768-3ecc-4022-98f2-3c796b349dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61f87d8-84f4-4eaf-83a0-e55068013bed",
        "cursor": {
          "ref": "efb3465e-18e3-46f6-9a36-92b892da29f7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "71cdb14f-4d23-4c93-afc6-a0380266c15f"
        },
        "item": {
          "id": "a61f87d8-84f4-4eaf-83a0-e55068013bed",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a542830f-ec2c-4dba-838c-7eaec08627a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd7926e-36ce-4850-aff6-66ce5acb5043",
        "cursor": {
          "ref": "42228856-3dc2-4517-8a34-d6bdece48ca5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e85f67cb-a24e-4aaa-acba-a9c5c55244cd"
        },
        "item": {
          "id": "6fd7926e-36ce-4850-aff6-66ce5acb5043",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3b4093c4-291a-4c78-a01e-e556469b0875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5c6d5-2392-416a-9a66-bda99e849599",
        "cursor": {
          "ref": "7a46d397-f582-4552-9eb8-2eb4536aa2aa",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "99bd9dc6-a1d2-444f-995c-a7be2f76bc58"
        },
        "item": {
          "id": "ebc5c6d5-2392-416a-9a66-bda99e849599",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "149f0215-1447-45b3-9ea7-1d7aeafb1c21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e49d27a-3654-4c8a-93be-44474bb22e5b",
        "cursor": {
          "ref": "0f3e0aef-ad21-4c6c-bd2f-9c96702f5e07",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "66ccb41b-7b71-4b80-b8fc-6266e4f76103"
        },
        "item": {
          "id": "1e49d27a-3654-4c8a-93be-44474bb22e5b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "08cc2146-0af5-48c7-97c9-c0b4dfe66ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360233fd-6085-4f90-a0da-7ad2a978dd21",
        "cursor": {
          "ref": "b57b9824-2be0-492f-aaa5-1bde3c92c983",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "74f423af-e349-41f2-beed-48d95b50748c"
        },
        "item": {
          "id": "360233fd-6085-4f90-a0da-7ad2a978dd21",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d87917f-c7a0-43fa-af00-f82a2e65fa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aeab5e-30f5-4b8c-b09b-0d27eaa8f5cd",
        "cursor": {
          "ref": "6cf35d14-87c8-4b29-b0f7-d4c5b3dc064f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "11e29c39-e884-4a6d-bc33-aa6ef9767b34"
        },
        "item": {
          "id": "90aeab5e-30f5-4b8c-b09b-0d27eaa8f5cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "001e5385-52d6-40c0-8c52-c96fa4bdc1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9ccbd1-5b6c-46a4-882b-0b9ad70175ab",
        "cursor": {
          "ref": "144c33b8-5db6-4354-ab2f-19c72bf36972",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "94128d1b-acc9-484b-aa6c-ee139c64f069"
        },
        "item": {
          "id": "2d9ccbd1-5b6c-46a4-882b-0b9ad70175ab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "607bf2ce-2a16-48a6-a7cc-15e0b60e7684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473244d2-2aa3-4bf0-b02d-29a690efe92f",
        "cursor": {
          "ref": "da4e52b0-f3b4-4c4e-846b-fad5cba28487",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "52791254-d290-4595-9bb0-d633c484509a"
        },
        "item": {
          "id": "473244d2-2aa3-4bf0-b02d-29a690efe92f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ce0343d2-7791-4449-9e7d-78c2efae2daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962b0018-d34c-44d8-a59c-ae59d6b5ea0f",
        "cursor": {
          "ref": "40d66a21-a3f0-4285-b140-d3a0087b17fe",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "68f23bd3-78b9-4f18-ad34-f41429ee3826"
        },
        "item": {
          "id": "962b0018-d34c-44d8-a59c-ae59d6b5ea0f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8084c745-c18d-4e9e-8a99-c0778989ebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf8bb3d-61e2-4644-8be5-3ad39998cc61",
        "cursor": {
          "ref": "9fb30c93-8842-436b-a34b-23a673b28304",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f6bd707e-386f-447b-8772-33623b71e204"
        },
        "item": {
          "id": "6bf8bb3d-61e2-4644-8be5-3ad39998cc61",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9155219e-5b05-4943-94bc-cd3e65158f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fcd3b3-996d-40f8-8cd5-0bf2e3636c8d",
        "cursor": {
          "ref": "adf4d2f9-1685-4d3e-8b0a-fa41150459d9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d1e235cd-7799-4d58-880a-3bc1b863d815"
        },
        "item": {
          "id": "a8fcd3b3-996d-40f8-8cd5-0bf2e3636c8d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2feb8c20-d7ee-4be6-8ca2-c380d26bf6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a5dae0-e91c-46c8-b4d7-c22eeaabfa9b",
        "cursor": {
          "ref": "a3b71efd-44a9-47e5-b578-21ad710ba048",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "86ce97f5-73f2-42b2-a6a1-97e6df738268"
        },
        "item": {
          "id": "38a5dae0-e91c-46c8-b4d7-c22eeaabfa9b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "225a9a9c-1b94-4481-967b-b0b5f0c7f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de2b33-fca0-446e-bdbf-836c531474aa",
        "cursor": {
          "ref": "8675eae6-223d-4bb1-b73d-c5384b344bd5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "542f727c-7a9e-4ad5-8b50-53e8c18e1b73"
        },
        "item": {
          "id": "46de2b33-fca0-446e-bdbf-836c531474aa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f5d030c2-fce1-4d14-be22-d975ee429dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06be1bc5-cab3-4263-b5ce-5273a6f0cd55",
        "cursor": {
          "ref": "499d9360-eed3-40a6-b4a0-2b68b1c1739d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "42c2ed6c-0ad8-4308-9db0-3ca22bdcdf01"
        },
        "item": {
          "id": "06be1bc5-cab3-4263-b5ce-5273a6f0cd55",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "767ee282-8cef-4e13-bd2b-edcb2eadad62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3042d7f-ba6f-4644-bda2-a69451ddaac3",
        "cursor": {
          "ref": "3a2c5ceb-6c36-4e5d-90c9-5574a8efd57a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "720d7d70-f81a-419e-b57f-fb6a93c50ded"
        },
        "item": {
          "id": "f3042d7f-ba6f-4644-bda2-a69451ddaac3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ecd7884e-10d0-4ab2-8491-16811994c1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa0634-d688-4a4b-8272-92667f485d23",
        "cursor": {
          "ref": "cd83ba92-be18-4e23-8176-d3f917de0548",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2a82159a-4c14-4ef0-9061-c4d26207fe70"
        },
        "item": {
          "id": "60fa0634-d688-4a4b-8272-92667f485d23",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b0fbb85-2556-4c59-9461-13776bc8b10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315fb3d7-fc29-4136-815a-ef1557cc4817",
        "cursor": {
          "ref": "b53f6e2b-8c8e-492e-b23a-f44dd98d5282",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "17fdac42-a9c9-4556-a285-c0bc2d238cd1"
        },
        "item": {
          "id": "315fb3d7-fc29-4136-815a-ef1557cc4817",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a09302ad-b546-4235-8cf0-5c17dc1da375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52abe837-de44-4d74-83bd-b9188c5a47ac",
        "cursor": {
          "ref": "54790ad0-e325-43e6-8ccf-96ba7c2f0325",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2cecb802-394d-4b70-9a00-5b49ec8fab59"
        },
        "item": {
          "id": "52abe837-de44-4d74-83bd-b9188c5a47ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e17324b2-e1ce-4a63-a98b-333d82be7acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce02db1-1ff8-48b3-87f4-207a124766c0",
        "cursor": {
          "ref": "53635870-dc03-4f18-9076-373a19d9b89a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0e559a7d-b3de-4670-b0a7-b2e8ae54ff58"
        },
        "item": {
          "id": "4ce02db1-1ff8-48b3-87f4-207a124766c0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6054b333-3738-485d-b0ba-d9023f8ac1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021161c1-0f66-4f8d-9ae6-be265ee4ea2d",
        "cursor": {
          "ref": "c3bd99d9-45f9-4e53-806b-7cac72f757ea",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0f81f9bf-817f-4bd2-b500-a7cdba628902"
        },
        "item": {
          "id": "021161c1-0f66-4f8d-9ae6-be265ee4ea2d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2cc254f7-88f5-4153-9731-33f9249ca500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cddbec-6b8b-4213-bb65-a1042e8cc072",
        "cursor": {
          "ref": "755f23ab-4862-4d8e-8596-87c054b313fd",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8664f62b-db2d-4b68-9b16-1d843c4cfcef"
        },
        "item": {
          "id": "91cddbec-6b8b-4213-bb65-a1042e8cc072",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ad90c86-9ac7-45b2-8bee-1ecc6b3c9059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e9400b-29b6-4c77-97de-887233c2349d",
        "cursor": {
          "ref": "bbd1ef10-83f9-4112-aa10-e819fe18b978",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bd750193-d19e-4788-98f6-c3fceb0268e3"
        },
        "item": {
          "id": "55e9400b-29b6-4c77-97de-887233c2349d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2937f7b6-2799-413c-881e-527d00e0141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4b8fb-1d34-447e-88cc-bc87218ab745",
        "cursor": {
          "ref": "1da0e496-852a-4754-a17e-e3c363e11243",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "34168d49-c773-4267-8b2e-a4c97f6287df"
        },
        "item": {
          "id": "75f4b8fb-1d34-447e-88cc-bc87218ab745",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5527082e-c158-4636-bcd0-323ff3a23c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2802efc-734a-4a7f-894c-e2e670932dc3",
        "cursor": {
          "ref": "b9ac9241-6373-4d11-ad88-8f9adad0e0d5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6c34992d-e38c-4ac2-8973-d702df3a78f9"
        },
        "item": {
          "id": "e2802efc-734a-4a7f-894c-e2e670932dc3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6637f59-8ca2-4650-9fc0-cfb344590a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adcc203-bda9-4add-b88f-10715c8984e4",
        "cursor": {
          "ref": "4165eb06-2882-49ec-a696-cc597efe2f53",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "75d96352-c49f-4c5d-8a0c-7f779f6f791f"
        },
        "item": {
          "id": "1adcc203-bda9-4add-b88f-10715c8984e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aa7f7d82-1bbe-498e-bff3-8abd10274e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2585fc8a-f623-4b19-ae26-fd67aa4dabcc",
        "cursor": {
          "ref": "02032b7e-6bc8-4f00-8136-3b744a6258f6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a124fff1-4366-429a-b5b3-4f6ca552afaf"
        },
        "item": {
          "id": "2585fc8a-f623-4b19-ae26-fd67aa4dabcc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6abbfea9-b5d0-42f8-968e-bcc7112ffba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ab957-5b1c-4197-aac1-7be17d2cdf5e",
        "cursor": {
          "ref": "dd9f7d60-113e-4829-ae66-2664f00a7b83",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a0eef03d-ba1b-4371-b3f9-18ec78fe4e06"
        },
        "item": {
          "id": "6e6ab957-5b1c-4197-aac1-7be17d2cdf5e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7cb22b5-4528-409f-b677-a18bbad84b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159392cf-600a-4921-8ca0-7b9710bcbc49",
        "cursor": {
          "ref": "3344776a-8ed3-4b95-b81b-332075dbbd63",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b29bc914-02af-4200-865e-f452fdc0ac37"
        },
        "item": {
          "id": "159392cf-600a-4921-8ca0-7b9710bcbc49",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "caf2dd07-7451-4305-9673-7ea63cd148cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586bb4f0-1a63-41af-8936-4e08580c53cb",
        "cursor": {
          "ref": "9d0a5a2f-81d2-4620-b929-bea544dea74f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79a6e5b6-4038-4c84-8fab-5e459436d5e8"
        },
        "item": {
          "id": "586bb4f0-1a63-41af-8936-4e08580c53cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "44db134d-7572-4c40-95d1-d8fb04d06c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c98f253-8e16-44a9-9413-5ad40f220466",
        "cursor": {
          "ref": "4fd492e7-2def-4890-914e-ff9200a9d2c0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0bd198e-448d-4f5e-b67c-6af5359bebe0"
        },
        "item": {
          "id": "7c98f253-8e16-44a9-9413-5ad40f220466",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4a68899a-7256-4374-a05a-2a9f97f629c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6abcbcf-65d2-44fd-918a-079884cd4686",
        "cursor": {
          "ref": "3d8eaaab-1efe-477e-abaa-74a59f83b46d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "270bd07e-ae93-4b64-95e3-6b350420a486"
        },
        "item": {
          "id": "a6abcbcf-65d2-44fd-918a-079884cd4686",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2f2e7bfc-8fb3-46f8-8fec-e7bcc1d1d5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e6e0d-6842-4b01-a80a-0c9827a96bfc",
        "cursor": {
          "ref": "b216436e-2c2b-4129-8e3f-73bf82eb5e59",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e258cc83-aa8b-4a81-ae3f-3f47b3bc8629"
        },
        "item": {
          "id": "1b5e6e0d-6842-4b01-a80a-0c9827a96bfc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d7ea180d-9c92-409c-806f-e161a078d601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba8dc74-183e-494a-990c-8a5e1be203be",
        "cursor": {
          "ref": "b2affc1e-1ab5-410d-8e98-5a7b1fa53deb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fbd3de23-55aa-4ef4-bdb8-2c97349084c6"
        },
        "item": {
          "id": "cba8dc74-183e-494a-990c-8a5e1be203be",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d2f837d-bcf2-4fca-9d6b-27868dc7156b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bee5714-6ca7-4cdc-9d0f-c71d1cdc60cc",
        "cursor": {
          "ref": "12e5f6fb-9ec7-4ac3-9200-fb080776a64d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "43c8ee83-9bd5-4d07-b8a6-b1c9657bcf2d"
        },
        "item": {
          "id": "5bee5714-6ca7-4cdc-9d0f-c71d1cdc60cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b0c33dda-0830-4ee5-95e7-e3b846d71f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95c0c21-9c95-4a26-b269-b6c855998c66",
        "cursor": {
          "ref": "dab20db8-56eb-4f62-909b-51e57566eec5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "66e9cc2f-c251-4030-90b0-215a192b1519"
        },
        "item": {
          "id": "b95c0c21-9c95-4a26-b269-b6c855998c66",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "02fc5d14-4ef1-4833-b13a-2f5101d4685d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026886f7-aad5-45d9-a0d7-831bfbef7748",
        "cursor": {
          "ref": "8c572982-7929-4334-8f36-b20bc917b216",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "395fa53f-0289-48d3-81c4-333a293e3e1c"
        },
        "item": {
          "id": "026886f7-aad5-45d9-a0d7-831bfbef7748",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "13189824-03f1-49fd-857d-79ec96e2dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9928c7e6-55c6-46be-9b61-a9377142a0bb",
        "cursor": {
          "ref": "5172a612-7005-41a7-921e-3efbef25eec9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ce8d517f-1f9c-4aa4-a44c-53331788ac8b"
        },
        "item": {
          "id": "9928c7e6-55c6-46be-9b61-a9377142a0bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c0e33b2f-ee6a-4254-be89-3606685aff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655011fd-ad0d-4c46-9a10-e3ec885960a1",
        "cursor": {
          "ref": "77d5629f-efee-49dd-a35a-135492082be5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9941159b-762f-4480-a0b2-f8caad8e0033"
        },
        "item": {
          "id": "655011fd-ad0d-4c46-9a10-e3ec885960a1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e4d5d3e8-fd75-4116-9c53-0bcc44ef6ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c59f3-4f76-495f-a610-e267e6b862cd",
        "cursor": {
          "ref": "3596b661-5ca8-43c4-8690-fce45a7e4874",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9b4e082f-e07f-45ff-9156-f6a5d6963706"
        },
        "item": {
          "id": "971c59f3-4f76-495f-a610-e267e6b862cd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "723ef16d-a564-4f52-97e3-1cc141973be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f162026-fba9-431e-91d8-b0fc91c53f43",
        "cursor": {
          "ref": "eabf99e6-020a-47b8-a08e-d1342b86f056",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "17c0a3f4-a43f-4622-b904-37c32887db3e"
        },
        "item": {
          "id": "9f162026-fba9-431e-91d8-b0fc91c53f43",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e3f247bd-107a-4a54-b580-fee96eaa72f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d934d576-8938-4e07-96e1-5adbff892000",
        "cursor": {
          "ref": "d056dbd5-3810-4208-b17e-b0e66e99df1a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "49ba335b-4ea4-42af-8697-f546624854ba"
        },
        "item": {
          "id": "d934d576-8938-4e07-96e1-5adbff892000",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bcedac25-0840-4e94-9136-522bb81c90d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cc04d-46a3-4bdc-b06c-8337ae652021",
        "cursor": {
          "ref": "c6507a47-db1b-48b5-9f04-5f43a8fb47bf",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ee542eaa-3678-4fea-916f-79da5f224a54"
        },
        "item": {
          "id": "1a2cc04d-46a3-4bdc-b06c-8337ae652021",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e509d58f-f84b-4b07-9c7e-450b04e63e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b14279-ec26-482c-abbd-a532b08b934d",
        "cursor": {
          "ref": "6e7b2cef-de67-4dea-838e-4d80176e2fb5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7546d788-0724-46ff-b3fb-ecf954a30da6"
        },
        "item": {
          "id": "25b14279-ec26-482c-abbd-a532b08b934d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41d8ec1b-d7e3-4c8c-afa3-c9b93c24191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd01027-7ab5-42f3-9cac-eb98a373a57d",
        "cursor": {
          "ref": "b6d5326b-2054-489f-83d1-9e0a4f417714",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a728f8d0-fdef-4d3a-8d0a-f050e7da5b53"
        },
        "item": {
          "id": "ebd01027-7ab5-42f3-9cac-eb98a373a57d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5633c96d-9af6-4c62-af7c-84802fb573ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a94653b-b8bd-4210-b299-9c484e9209e2",
        "cursor": {
          "ref": "078f1c1c-6a64-4282-a162-086e9633c032",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c03b4c6b-e8ec-4e21-8ec4-829f1a76c39c"
        },
        "item": {
          "id": "3a94653b-b8bd-4210-b299-9c484e9209e2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1fdcaa6e-3806-4409-b0f9-3cf1b328e7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fe334f-cdc8-4df8-b625-6bddb360640f",
        "cursor": {
          "ref": "af4b271e-3d99-4c45-bb06-a482ea0506e6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dabada3a-53ad-4603-ac47-ac1ef53e322b"
        },
        "item": {
          "id": "03fe334f-cdc8-4df8-b625-6bddb360640f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "19b0d23a-f7e1-41fd-bafb-1925c3a521ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff9b707-7839-4df5-a214-7cfeb4672e23",
        "cursor": {
          "ref": "73ee3d17-9e59-491e-8a8c-c7069d57c03b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b92b7367-adb0-4a79-bf83-f6c41be26476"
        },
        "item": {
          "id": "2ff9b707-7839-4df5-a214-7cfeb4672e23",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "499e4931-0c98-45d7-bf70-6a9d0d46520f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb12949-64c6-446c-a0da-3390799ac5f0",
        "cursor": {
          "ref": "78acee19-5e58-47e2-bb23-5cd7b382434c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d0d5d63b-d8a8-42a5-911e-f85a9fc8c03e"
        },
        "item": {
          "id": "3cb12949-64c6-446c-a0da-3390799ac5f0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "45f7eb65-c7a8-461f-ab02-46e1289a8730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505a8553-1192-4465-9395-13669326310b",
        "cursor": {
          "ref": "6e057d24-bb99-4b7b-983c-9dfbc0fad2aa",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1c8d8668-4744-4289-9d77-ccdfb7036aa8"
        },
        "item": {
          "id": "505a8553-1192-4465-9395-13669326310b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a986f948-12eb-400b-aa36-3ac1963446b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5191cf-5c54-4adc-8ad2-a79354822df3",
        "cursor": {
          "ref": "cc9e3f95-9276-4778-8944-d7337abd8456",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4fab9e21-3ae3-4929-802e-6750274216a1"
        },
        "item": {
          "id": "3e5191cf-5c54-4adc-8ad2-a79354822df3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4d4b924b-bff9-471b-9ca7-82a0d250e82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8daed7-251f-4c65-a95b-fe5d3321e058",
        "cursor": {
          "ref": "0002eae7-2938-4a7a-b6e0-3b07a2ae3680",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "92f699a8-cb06-4b97-a9d7-558e0d157139"
        },
        "item": {
          "id": "dd8daed7-251f-4c65-a95b-fe5d3321e058",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a02571f8-137a-49e2-8611-3a11245289ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a22137-5c57-49b0-8354-5af26725b915",
        "cursor": {
          "ref": "a204e45f-3e71-4154-a6dc-32223b85ea76",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d9891239-c36a-4160-95de-a1945375891a"
        },
        "item": {
          "id": "b3a22137-5c57-49b0-8354-5af26725b915",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e39fa4f-9bc3-4c11-8e86-e97d4567e9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cc025a-2fcf-4345-84d1-d1d968f79b1c",
        "cursor": {
          "ref": "f2a144ca-dffa-468a-a031-1cbc775329eb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "340ac513-5abd-463b-ab6b-7506cd3eae3d"
        },
        "item": {
          "id": "88cc025a-2fcf-4345-84d1-d1d968f79b1c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b9f1e633-c7df-4365-be5c-86851fb97a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e497c27-f7be-4420-8b3e-460de1bff8eb",
        "cursor": {
          "ref": "159f76fc-acb2-427c-be5e-dbcf8b955cda",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "208fb5fc-4eb2-4041-bb8d-a323acfdd76c"
        },
        "item": {
          "id": "8e497c27-f7be-4420-8b3e-460de1bff8eb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "66ae97cb-2922-49a5-9f40-f6333c2bc02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344e9df3-736c-4436-91c1-1d30b1ac82de",
        "cursor": {
          "ref": "93242dba-e4da-422d-8fc1-7130109bd03f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8a56af35-3bd8-4427-b45e-f89e50ffc046"
        },
        "item": {
          "id": "344e9df3-736c-4436-91c1-1d30b1ac82de",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f699c5dd-2740-4ba7-ac37-a0d7e0bf2883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfa6a61-56fe-4e58-8ff5-0d4b24344564",
        "cursor": {
          "ref": "67f986df-3bf7-4c8f-97be-f99547b69a1e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1ccda300-b691-4c10-bcd6-bf4b44cea5cc"
        },
        "item": {
          "id": "ccfa6a61-56fe-4e58-8ff5-0d4b24344564",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "38458fe3-d700-4acf-8394-abdd89c954d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7974e37-1574-4a09-b5cc-d15e79f38744",
        "cursor": {
          "ref": "35957ca9-cf0a-4db8-8b9f-c07135e0a4c6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "80aa3791-bd1a-462a-b28e-7c82931c3c30"
        },
        "item": {
          "id": "a7974e37-1574-4a09-b5cc-d15e79f38744",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5601cd04-6b4e-45f5-93f6-9b1777995f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0662bb-1e0e-4358-bd33-ed8eb81ca2ff",
        "cursor": {
          "ref": "47ae40e2-d2fd-4a62-8796-48f732f63d51",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "168a5ebe-fa16-4980-8217-791b1f0d3d83"
        },
        "item": {
          "id": "ca0662bb-1e0e-4358-bd33-ed8eb81ca2ff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8b7c7d58-8ab7-4ea6-8302-2cc380b92961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa7427e-676c-4bf0-adca-e1516af4054b",
        "cursor": {
          "ref": "600522fa-afe9-4b0e-9f84-a8c2a39d0d9f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6f8b731f-49ce-401a-a3e0-58f21a9c24d2"
        },
        "item": {
          "id": "bfa7427e-676c-4bf0-adca-e1516af4054b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d6edb964-fd38-401a-80be-6c04fec6c951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf655f1-1648-41f7-8184-b38c90d91b8c",
        "cursor": {
          "ref": "09982445-6696-4662-9283-8cb6e13f6566",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1a197496-4a3b-46d1-85dd-0f98c0583304"
        },
        "item": {
          "id": "9bf655f1-1648-41f7-8184-b38c90d91b8c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "16e1a8ef-09d8-4dce-8ed6-8ba6444c22ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d8f950-4be8-4b69-aa50-e006750cbcd2",
        "cursor": {
          "ref": "98c5c596-1fa6-438e-861b-be72a55ba388",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "19741e34-0293-48c8-8a05-f8f028742486"
        },
        "item": {
          "id": "11d8f950-4be8-4b69-aa50-e006750cbcd2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "584ca86c-440e-4f58-9482-f3438262a5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbfeda2-6c0e-4b5e-8189-b08c15d97f09",
        "cursor": {
          "ref": "c2942c08-7be9-4f18-93eb-d703a5d2e757",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ed7df802-f6f0-451f-8862-588025450b26"
        },
        "item": {
          "id": "ebbfeda2-6c0e-4b5e-8189-b08c15d97f09",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17bfc594-3c46-4b9e-bb39-d026fd8d32f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc08189d-3241-4cce-bb9a-6989864d51a9",
        "cursor": {
          "ref": "8427dc1d-fb57-4d6a-beaf-21953b56c1fa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d9bbb1dc-1ebd-46ed-8779-c71df2a4a745"
        },
        "item": {
          "id": "dc08189d-3241-4cce-bb9a-6989864d51a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "55471bc8-4610-4dd7-9ace-008e103e823a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a811ea3-2b6c-447e-b461-8e28dd785815",
        "cursor": {
          "ref": "503d3f22-f4f2-4776-b268-2cd2250f5a7a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cdebdd95-904f-4d0a-985d-1ee4b00f9970"
        },
        "item": {
          "id": "3a811ea3-2b6c-447e-b461-8e28dd785815",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "01d0b461-43b5-496b-9a16-d312b2f78af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b062d8-e255-4183-a7a9-9c518e1588b3",
        "cursor": {
          "ref": "7f71b36c-4c2e-4294-a113-b81b8943fe40",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b931b5c8-979d-4091-93ba-5b1834b99471"
        },
        "item": {
          "id": "21b062d8-e255-4183-a7a9-9c518e1588b3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0a439577-62cc-4fb1-9523-c037a307201e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459d04f5-2b8a-45aa-a65f-68b501be40a1",
        "cursor": {
          "ref": "74f27203-b38d-49a5-9c9d-a47e669cac31",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2bea9a7c-be59-4ac4-a0ba-950cffa6c7cb"
        },
        "item": {
          "id": "459d04f5-2b8a-45aa-a65f-68b501be40a1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bfc95c8a-cedb-4998-b570-2dbfd7eda29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a88b94-66d9-42f8-bf5f-e592e4b7d67f",
        "cursor": {
          "ref": "52fb93bd-b0db-4424-adb1-3e0d50720dd5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2ceacd7-828a-4ce4-9be1-4ce124dece89"
        },
        "item": {
          "id": "50a88b94-66d9-42f8-bf5f-e592e4b7d67f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "73d97965-38cc-4c12-b896-435f72cc6008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1769a54-c55e-4822-ada7-5fd705ca6bb6",
        "cursor": {
          "ref": "35930456-455a-429f-ba67-4de6c598402e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "95c78ecb-a01e-4b45-9643-c259a196bf2b"
        },
        "item": {
          "id": "f1769a54-c55e-4822-ada7-5fd705ca6bb6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "92c200bd-8637-42da-8e2d-59dcde0161a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fb4828-449f-402c-b8e2-3beaa056c5d7",
        "cursor": {
          "ref": "d75f9e9a-63d9-4adf-af23-416f8640a70a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1d367426-54f6-4a3b-aa48-48fc4809c411"
        },
        "item": {
          "id": "66fb4828-449f-402c-b8e2-3beaa056c5d7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6415f9ac-9754-48f1-8167-8d009516570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2698d70-00fc-4fe1-b26e-1b2608ed8692",
        "cursor": {
          "ref": "91465099-379a-41ba-98c1-0debe1b12b49",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "91516a3c-5ab9-4100-b4de-8d13e45cea35"
        },
        "item": {
          "id": "c2698d70-00fc-4fe1-b26e-1b2608ed8692",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f465d26c-b850-4919-b3ed-affe24cb9870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0224a1-a0b0-4028-a50f-75ceb4208b36",
        "cursor": {
          "ref": "24eb8a4d-8f3f-46db-b347-9028c33a0d32",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c8063493-8dc4-4262-8b46-5f69fef5b6e5"
        },
        "item": {
          "id": "9f0224a1-a0b0-4028-a50f-75ceb4208b36",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9fe1c2ff-5b93-434c-8a20-c85438e425e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5027e415-a19b-433c-b727-7e8ac1434c61",
        "cursor": {
          "ref": "5dbe565f-a00f-45fa-bee7-23b7b5993fd6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f68b0473-2b70-48de-a7e2-3c0875242e90"
        },
        "item": {
          "id": "5027e415-a19b-433c-b727-7e8ac1434c61",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b3cf664d-80e0-45d1-912d-51f6cc56c20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468fdbf1-7a37-48fa-be1c-ea1c67bc4282",
        "cursor": {
          "ref": "5e6a128b-3b7b-40e5-8b48-8c42be2558d7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "21970dc2-26b3-4e8d-aceb-6900b4e39de6"
        },
        "item": {
          "id": "468fdbf1-7a37-48fa-be1c-ea1c67bc4282",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e97a03a6-af0d-4c3f-a5ff-3ba6ea30147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d60a634-8bfe-4072-9891-c88642ad988c",
        "cursor": {
          "ref": "abca2d70-2fb6-42c8-ad07-c15963710c2e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1702ab61-4a9b-4ee2-8a73-10fa17ed3bab"
        },
        "item": {
          "id": "4d60a634-8bfe-4072-9891-c88642ad988c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "93c0be29-2917-4784-bc8a-790cf19c42c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f842d2-2533-4625-bedd-f347ae22a0f3",
        "cursor": {
          "ref": "91e4cc2f-9142-41dd-8244-61136e6ca422",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0f78a8d1-5e3f-4a2e-9e4a-c71d4303202d"
        },
        "item": {
          "id": "f9f842d2-2533-4625-bedd-f347ae22a0f3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d3062170-9d89-4abd-85b6-23f35706eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c18201-d034-45fb-906c-86b29ca9bd62",
        "cursor": {
          "ref": "5fa9340a-3658-4d48-9aeb-a69a6dcc95db",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "024d6bf0-afa7-4ee7-9d2f-8ce2cf87b5ea"
        },
        "item": {
          "id": "54c18201-d034-45fb-906c-86b29ca9bd62",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "05403327-9222-4db4-8f61-1491ed368dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50964f0c-1450-4a79-b4c9-af6cf6b38e61",
        "cursor": {
          "ref": "905a3ad3-4691-4356-b575-c54193e62f1e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b1f4453b-090f-415b-9111-01f5167cddd3"
        },
        "item": {
          "id": "50964f0c-1450-4a79-b4c9-af6cf6b38e61",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6b74cba3-a50d-4591-a835-9fba5e50fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc84f84d-01bc-481b-9352-8ecb961a2837",
        "cursor": {
          "ref": "78af69a3-2926-4246-b5da-9892da09847c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2e456115-05de-4790-99f4-eb56e8aca41a"
        },
        "item": {
          "id": "dc84f84d-01bc-481b-9352-8ecb961a2837",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae52aa26-b33d-4459-a52d-0e220e227364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22939c4f-8d01-4019-9a1e-a96a25300889",
        "cursor": {
          "ref": "8e63d238-1b3e-4f23-98a4-26b4a905dd9d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "113517c2-55aa-4589-8f02-ca7ae58a61e6"
        },
        "item": {
          "id": "22939c4f-8d01-4019-9a1e-a96a25300889",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "25791738-7897-4e4e-9cfb-d47be0cc1895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1fb131-deee-4a3a-9d9e-bd064403f0f6",
        "cursor": {
          "ref": "709972c8-233f-4615-b2d0-84b802e06d97",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b035cc80-f657-450d-8adb-e3f22004a874"
        },
        "item": {
          "id": "be1fb131-deee-4a3a-9d9e-bd064403f0f6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6979a70b-9a68-457a-9d15-aadc2a828057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4701c9-91f7-4da4-8705-05c7691f9505",
        "cursor": {
          "ref": "5815834a-cff2-4263-ae95-ea5f9564aac6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "97ec265e-4bbc-42b0-9f3f-7911b968abdd"
        },
        "item": {
          "id": "ca4701c9-91f7-4da4-8705-05c7691f9505",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9b730c3d-ce49-41a6-8448-5b3917ff4b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daf1387-5cd8-4846-b5ef-dbca0baa63bd",
        "cursor": {
          "ref": "f279c866-fc7c-4a27-bc4a-c4a612aaee81",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "509bcb9a-284c-4fe3-8be3-4ba3ea590a31"
        },
        "item": {
          "id": "3daf1387-5cd8-4846-b5ef-dbca0baa63bd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc0db359-e3aa-400c-bfcf-b740e369f6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18fff8-bfe5-494d-88e9-a5dc6f758f81",
        "cursor": {
          "ref": "afdc3c53-b740-47b2-969d-82bdf4ad4385",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ef82fff4-a189-4541-ac07-9eaa5f198f1c"
        },
        "item": {
          "id": "2f18fff8-bfe5-494d-88e9-a5dc6f758f81",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6d258403-d3f6-4899-9fa2-2694c7b818c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd43ed0e-c8e0-4e64-a4e5-c320a8f66241",
        "cursor": {
          "ref": "8322fe17-22d8-4305-80eb-e26f5b61de5c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8bac546e-baa8-455c-8ef7-5e0d0ad40c90"
        },
        "item": {
          "id": "bd43ed0e-c8e0-4e64-a4e5-c320a8f66241",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "10aeba8e-6c44-4f0d-8937-b8b66d3e631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005a28a1-a819-4ca2-8814-ea3b3007a4af",
        "cursor": {
          "ref": "b6131d01-8dca-47e2-bdb4-4c6c6f129bc3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d01546c4-6aa6-4b6a-ba75-57d2b03b13c8"
        },
        "item": {
          "id": "005a28a1-a819-4ca2-8814-ea3b3007a4af",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "27ff1d18-7ade-4420-b82a-5df8a5fb5ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a21e9d8-8d89-4d9d-80b5-6e09a6d07045",
        "cursor": {
          "ref": "488fde3d-f3d6-4e62-a5ba-1d62e7901a78",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e1912310-43bd-4830-b2da-58a627e78c69"
        },
        "item": {
          "id": "8a21e9d8-8d89-4d9d-80b5-6e09a6d07045",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a197c70-adf8-4358-b4d2-a67d5d487d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275db6f7-d270-44d3-aa1d-e50dbfada022",
        "cursor": {
          "ref": "88123eff-15d2-4bbc-941d-8aedf3dc1b57",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b7ff8fad-5613-4f34-88d9-1a636f957757"
        },
        "item": {
          "id": "275db6f7-d270-44d3-aa1d-e50dbfada022",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "eb1966d4-3265-43a6-9cb9-c0a77f4dd810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2532e20e-4321-4b1c-a2e9-338e8cd2f5b6",
        "cursor": {
          "ref": "9260feb5-4417-45cb-ae5d-34874f8da13e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "954f456d-591f-44e1-9e72-2230025d5b9f"
        },
        "item": {
          "id": "2532e20e-4321-4b1c-a2e9-338e8cd2f5b6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "751f0f6c-0632-4e8c-af6e-13b2ffcbce59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a54bff-c9b7-481d-b6f1-ac86b150f865",
        "cursor": {
          "ref": "a55c881d-7eee-4ff0-844c-b1c8719166d4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4222116d-c6fc-40eb-9271-52cdfc75adef"
        },
        "item": {
          "id": "08a54bff-c9b7-481d-b6f1-ac86b150f865",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "41310e84-1429-421d-84a5-10f259c8cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c74cd44-6280-4ae7-892b-63adb802d957",
        "cursor": {
          "ref": "c43164ce-59e6-4353-ada9-6d7066a554a4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "25b7698a-354d-4a76-b702-725a2d919654"
        },
        "item": {
          "id": "4c74cd44-6280-4ae7-892b-63adb802d957",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "530f4cb4-e0e1-4f08-81f4-694bca0bfa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa47e09-855e-42d6-a0c8-34e0ba3001d7",
        "cursor": {
          "ref": "5e325ea6-a7d1-4f47-bfc3-c7405be1752e",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f08cd1bb-c80d-40c9-bbe4-c93b042685be"
        },
        "item": {
          "id": "1fa47e09-855e-42d6-a0c8-34e0ba3001d7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8cfa368e-690f-49b8-a69d-f89ecc629ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7c5b1f-b493-4d02-a67d-a4fbe218a4b4",
        "cursor": {
          "ref": "cd8b432b-5866-4f85-be34-8af853218989",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "563ce72e-04d3-4f1b-aca9-7372d956e46a"
        },
        "item": {
          "id": "1a7c5b1f-b493-4d02-a67d-a4fbe218a4b4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9efd592d-0868-459e-8505-ece7daa67401",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "9dd2b32a-549c-4336-81a2-1f4c38c886f4",
        "cursor": {
          "ref": "e86d776d-4123-4e8b-9860-33f3b487bec8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3c872f02-88fe-4157-afb6-289c8d831d75"
        },
        "item": {
          "id": "9dd2b32a-549c-4336-81a2-1f4c38c886f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5aae65a8-335a-4ae6-a6a8-12d7ca2abdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024a83d5-0cfb-4ffb-bebf-6abddb010004",
        "cursor": {
          "ref": "3ecae5a0-c99c-49c6-981c-345db3bf5d3b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "865b94ca-590b-4c36-9af3-0edec8b95028"
        },
        "item": {
          "id": "024a83d5-0cfb-4ffb-bebf-6abddb010004",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9189a122-c078-450c-b4b4-0fadfd1f1ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e69f01-e26b-4c23-9e32-429c1acba3d5",
        "cursor": {
          "ref": "27978faa-a8f0-483c-b46f-9e63389c49a8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ee651138-ffff-427a-963b-f42028d7b5a2"
        },
        "item": {
          "id": "62e69f01-e26b-4c23-9e32-429c1acba3d5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87f242d6-2211-4646-91f0-7224461d0072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197d44c-3cad-4923-ae4c-beabbb88fcf1",
        "cursor": {
          "ref": "d80c2f7b-437e-489f-a63e-4764c664e37e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1e149b75-1f95-4fdb-bd62-e23bd3d4cb14"
        },
        "item": {
          "id": "6197d44c-3cad-4923-ae4c-beabbb88fcf1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aae5a1f2-ca5b-4f83-a193-c6c53614baa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c3d9a4-207c-44f3-aaf6-d64539040fcd",
        "cursor": {
          "ref": "c442bf3c-5c05-4745-9b10-4d506ef558cb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8d351ab9-8fea-4c17-b9ae-542985419b53"
        },
        "item": {
          "id": "d1c3d9a4-207c-44f3-aaf6-d64539040fcd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3664efbf-b5ec-4ca7-a01e-6989b0a47d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a813aff-29c1-4396-8ed3-371d3fd06086",
        "cursor": {
          "ref": "6afac12c-21f8-472d-96ce-b73ff8f7bd1b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9aae0fb0-34de-4fee-a240-d02553f5c127"
        },
        "item": {
          "id": "4a813aff-29c1-4396-8ed3-371d3fd06086",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6f8ef5cb-8b62-45e3-958d-2a4df279b632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39034347-9f40-4ce9-bc01-992b32d64389",
        "cursor": {
          "ref": "245e49c5-6a72-4230-9483-53b349999451",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "05b26dec-c863-444b-836d-9c7fa1cf853f"
        },
        "item": {
          "id": "39034347-9f40-4ce9-bc01-992b32d64389",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9d3b92d3-b078-4fc8-945d-9b1045fd7851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10f4f46-8515-4e58-9fb4-78e0b9dc69c3",
        "cursor": {
          "ref": "cd861232-4785-4537-b2bc-0fab0adcd783",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9e6ad5c9-3244-400a-920e-875a1673e6ec"
        },
        "item": {
          "id": "e10f4f46-8515-4e58-9fb4-78e0b9dc69c3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "de9e114d-7334-443b-b401-d85dc48998fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3647c24b-805b-489d-a576-e7f972415f34",
        "cursor": {
          "ref": "2773b89b-bfde-4a1b-b57c-4f630fe1e36b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cbef1223-b6dc-4eed-afb3-f00a16780741"
        },
        "item": {
          "id": "3647c24b-805b-489d-a576-e7f972415f34",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "12761ec6-caff-45ea-8c75-807f92c52eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3192eee-a796-400d-ada9-39e6b629fd9b",
        "cursor": {
          "ref": "8ab57f9c-8e8d-48b0-9488-70ac9490f295",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "34328564-faa9-4f30-a17c-dd2bc2de2d6b"
        },
        "item": {
          "id": "b3192eee-a796-400d-ada9-39e6b629fd9b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "73f252c9-df3b-41bb-b73b-1de9df6437f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dc2345-a830-4dc4-87bc-1dcdea11e280",
        "cursor": {
          "ref": "1d344b42-ce75-4711-b383-09762d5f00b7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cca47d07-1b8e-45ee-99f8-a2f639747687"
        },
        "item": {
          "id": "e8dc2345-a830-4dc4-87bc-1dcdea11e280",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b6fcbdea-fef6-4450-ab68-48ed4267f489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367fb1d-33de-47e9-82f2-23010df951c5",
        "cursor": {
          "ref": "180ee0b6-8a07-4f58-a96d-6e6734685c64",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3dfed724-5f57-45a4-9ce6-b4d40807b1c4"
        },
        "item": {
          "id": "e367fb1d-33de-47e9-82f2-23010df951c5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cf956944-cb96-4ffe-a462-8837d88c9421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c626ac-a115-45eb-a3a7-23b64f915231",
        "cursor": {
          "ref": "0714818e-e358-4696-8429-09190adfcbec",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "88a9098d-20a9-46f1-ac57-5f8a2e198953"
        },
        "item": {
          "id": "70c626ac-a115-45eb-a3a7-23b64f915231",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "007282a0-521f-4bda-9697-483c3b409330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fee818-bf13-4e28-ab47-7aca568f5989",
        "cursor": {
          "ref": "30bfb33c-6f9e-418e-96a6-fa40c4cf4b13",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e7df3a47-725b-485f-b8d5-27abe0f07be3"
        },
        "item": {
          "id": "28fee818-bf13-4e28-ab47-7aca568f5989",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aa15dde0-3a6b-4714-a2a1-5dc70095246d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cac016a-17dc-49c9-bd4b-de142474a12a",
        "cursor": {
          "ref": "a99e6669-3595-4927-9bc7-27668e78d596",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "352f2a0f-bfdb-4d33-b5f7-f8f4d3315035"
        },
        "item": {
          "id": "8cac016a-17dc-49c9-bd4b-de142474a12a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9851f37f-0a9e-4df7-ba8a-5d96abb32ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a595a90-afcc-4df6-b2de-f42fcfdac18c",
        "cursor": {
          "ref": "83d41161-51fb-41fa-a8bf-427f9a372bb2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "16c98e2a-2335-41b5-b021-164586283ae4"
        },
        "item": {
          "id": "5a595a90-afcc-4df6-b2de-f42fcfdac18c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "32def388-7100-4cdf-a19c-571f6532a7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50340f3-33be-41c7-b7d1-76bdbcef8c68",
        "cursor": {
          "ref": "e89f300b-e126-48bf-9c56-66dd44ca2d5e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "29bb82a0-e185-4ceb-a23e-25e9d7961b92"
        },
        "item": {
          "id": "b50340f3-33be-41c7-b7d1-76bdbcef8c68",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0dd5bd7d-136d-41c4-96b2-7c8e93b3f74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595666d-3a84-4c79-967d-cc14c925f025",
        "cursor": {
          "ref": "afdddb1c-03da-4633-a45e-9db3e2a99447",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "06a39d1d-c40b-41d1-8ae9-b867f61c08ef"
        },
        "item": {
          "id": "d595666d-3a84-4c79-967d-cc14c925f025",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f063274b-34b1-4479-9a7a-b5692a49d5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ac67b1-262d-4793-bb8e-28d13f3db3cf",
        "cursor": {
          "ref": "2befdf1a-3ecf-4b21-a73f-e4b33ef428aa",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bcf42021-d6f9-49d2-a265-3c1da0548c99"
        },
        "item": {
          "id": "a7ac67b1-262d-4793-bb8e-28d13f3db3cf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cde90475-c5d5-4fc7-92dc-7119f05d6401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505943cb-9105-4f7f-81a6-d84f7d54a056",
        "cursor": {
          "ref": "9c60d75d-0725-4cdb-91cf-8089e917bd46",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "81957aaa-8a09-47d1-8be3-085b553338db"
        },
        "item": {
          "id": "505943cb-9105-4f7f-81a6-d84f7d54a056",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "04fc473e-dd60-4b7a-a16c-01c702a1b32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93570221-d38d-459e-ab67-4559da585cbf",
        "cursor": {
          "ref": "9ee006e1-2545-4c94-938e-ecb10b19664c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ff9c85a1-8cef-43a8-9ec6-3ee1d55287ef"
        },
        "item": {
          "id": "93570221-d38d-459e-ab67-4559da585cbf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8a8776ea-7105-4cbb-a6e7-dd6726479f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a0568f-facd-4f95-8fee-d38f8658fa9f",
        "cursor": {
          "ref": "41760121-b70c-4717-a558-c1be14887edc",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a0727cf8-9c2d-42fd-84e3-2262b710800e"
        },
        "item": {
          "id": "a2a0568f-facd-4f95-8fee-d38f8658fa9f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "06ab10f1-fece-4aa7-a1a8-ae421c666001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818ff58f-6894-4ce3-819a-0031023c8730",
        "cursor": {
          "ref": "48eeebd3-f5af-424a-b216-8a3f4174009c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0728e79a-d787-4fc5-81e1-5cf22f67553d"
        },
        "item": {
          "id": "818ff58f-6894-4ce3-819a-0031023c8730",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e4b86489-4372-41c1-8c9a-96de1f8cde83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636d23f-fbde-44b1-81e1-334acdd47c09",
        "cursor": {
          "ref": "8d2c8b8e-c895-4eb3-8992-0450226eddc8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "07cd20a3-cd4b-4222-b3af-3ad08fd1851f"
        },
        "item": {
          "id": "e636d23f-fbde-44b1-81e1-334acdd47c09",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b24780bc-4d6a-4052-a10f-48ae89de4304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d47cdf-b6f7-4d65-8c99-74e53473d2bd",
        "cursor": {
          "ref": "c07143dc-2643-4549-95a0-3bee6f41b8b4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "81ba440a-8f4f-4ac3-b483-94c0273a29f4"
        },
        "item": {
          "id": "15d47cdf-b6f7-4d65-8c99-74e53473d2bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "68a5406c-8f4e-447f-b8cb-30ed84fcb609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e088d125-98aa-4346-9e14-11982925f099",
        "cursor": {
          "ref": "3d78f35b-8689-4545-8556-1a3962450000",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "76b91ebd-ef17-41e8-accb-4fcf61e454f5"
        },
        "item": {
          "id": "e088d125-98aa-4346-9e14-11982925f099",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "55a9db43-24be-4cc1-8274-9bc06d2a1153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a458ce-a411-42fa-bcbc-ae1c75cd9c3c",
        "cursor": {
          "ref": "a13144c1-c9f0-4bf2-a1e2-247eeaff64f1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d2651f86-5ece-4a27-9812-37a5d66f1cde"
        },
        "item": {
          "id": "d0a458ce-a411-42fa-bcbc-ae1c75cd9c3c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "58e11152-9ee1-4da5-b1d3-5a13760ad8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e260c6-1b6d-4d4c-b5e5-1bd9801b708c",
        "cursor": {
          "ref": "f3a3745e-6766-4be2-9d7f-8e5ce2ceb5d7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "53595b70-8349-448b-9254-a46c2af38731"
        },
        "item": {
          "id": "b7e260c6-1b6d-4d4c-b5e5-1bd9801b708c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "424fb39e-e3c6-4644-8e2d-14813fdbe10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c697e78-52e0-4cf0-9775-a6fa539ed41e",
        "cursor": {
          "ref": "a6a921c3-f7da-4117-8e7a-c2b715edff6f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a6eb2a78-0ca3-467f-8d8b-751894739e4f"
        },
        "item": {
          "id": "3c697e78-52e0-4cf0-9775-a6fa539ed41e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b7b60473-8863-4757-b833-fc76b3e8d9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307960ea-6acf-4b97-a187-b429c12e3d1d",
        "cursor": {
          "ref": "17276fee-07ef-48e4-8cb9-6eecc3fe2898",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5b7e5f8c-5179-47c3-bc46-2755182b2d3a"
        },
        "item": {
          "id": "307960ea-6acf-4b97-a187-b429c12e3d1d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "679834af-ff30-446f-9a6d-fd6560fd3d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff4f39-fd52-44d2-a5d9-7b5389500cfe",
        "cursor": {
          "ref": "6bf3b07d-9201-4387-bfe0-05316cda49a1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "66e2bfde-7628-494c-b93e-84e3a563ddef"
        },
        "item": {
          "id": "5eff4f39-fd52-44d2-a5d9-7b5389500cfe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2837bc53-4f93-4851-8f02-1e952ba3087b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c3d73b-5247-4bd0-b17e-cd1388c80cc0",
        "cursor": {
          "ref": "f637f7af-0a56-41d7-9d43-dce3e53f7f66",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "94a8df5d-59a6-4641-853d-ad16aaad65a9"
        },
        "item": {
          "id": "d7c3d73b-5247-4bd0-b17e-cd1388c80cc0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bc1292d0-0bd0-4fbc-84b9-04835855c21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d662423-8b87-47a8-9d8c-c18475bdad13",
        "cursor": {
          "ref": "8c2e9835-6178-4c62-b2d8-80fb87d1bf1b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0e80d734-bbfd-4f7f-b844-1fd53980872f"
        },
        "item": {
          "id": "8d662423-8b87-47a8-9d8c-c18475bdad13",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be7274e2-e5f8-4527-a1d4-6f7d22aca3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1695c806-1481-48cf-91dd-807c9e8d82ca",
        "cursor": {
          "ref": "6e2adc52-8cba-4e06-9f78-59a2dbd4bedc",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e4e612a1-c7fe-4006-b987-8a43bae9b869"
        },
        "item": {
          "id": "1695c806-1481-48cf-91dd-807c9e8d82ca",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2329c5d5-3ca5-4d15-b8db-5b6d89fe1349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8517e9df-bafd-4c2e-bc9b-d34a07d21f86",
        "cursor": {
          "ref": "8979a185-9c19-4fc2-8b67-d2df966862c7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bc119f2b-68b8-4a02-91c5-53d8a91f36cc"
        },
        "item": {
          "id": "8517e9df-bafd-4c2e-bc9b-d34a07d21f86",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1f4ed3e0-47b4-4d7f-92d5-ef81f83acd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de326bc-19c3-4ff2-8e1e-83476f02c3c9",
        "cursor": {
          "ref": "e20d130c-07b1-4402-abdb-a80a512b1e0c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "09fa16b7-3326-47d8-814f-37d7259f707f"
        },
        "item": {
          "id": "2de326bc-19c3-4ff2-8e1e-83476f02c3c9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "27f987e6-988e-4ca9-998a-36a47a778eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c78f47-ddfe-4fe5-8744-ca25e8019c10",
        "cursor": {
          "ref": "52aa6649-aaf8-4cd4-bcfe-3047870b521f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0687ebfd-07a9-4f46-97f6-ec7847e48a19"
        },
        "item": {
          "id": "71c78f47-ddfe-4fe5-8744-ca25e8019c10",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "27cb9349-3375-40fc-80c5-a421cb249e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2aea57-4682-4d22-aeeb-85fb1cec18ca",
        "cursor": {
          "ref": "3bd63cd8-3ebf-4ebf-85f8-900cefe07110",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7c68bae2-8115-4cc6-b430-4d4dae23c78c"
        },
        "item": {
          "id": "0d2aea57-4682-4d22-aeeb-85fb1cec18ca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "74f0a6f1-79ee-444f-8a66-4e5cad6a9d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c7a7da-9143-4ecd-a79e-f10afd6e9231",
        "cursor": {
          "ref": "e2180a23-d6be-49a8-b1ba-f4002453b064",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5b5706f0-0896-4817-8add-1d9cf25dd988"
        },
        "item": {
          "id": "63c7a7da-9143-4ecd-a79e-f10afd6e9231",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0cc7d08e-41a4-4658-a23f-94fd0b2e4bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3104f6-0fa6-44fd-a6a2-246ffa59618a",
        "cursor": {
          "ref": "9616857f-31a8-45f9-afa1-3db73a928641",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c2275bbe-c2ca-4996-a7eb-d1960724764b"
        },
        "item": {
          "id": "3b3104f6-0fa6-44fd-a6a2-246ffa59618a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "588f0b0a-178a-4ffa-a023-2518a54f8a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a129047b-d2f7-44ce-8b55-303eab242ae4",
        "cursor": {
          "ref": "9c821b92-7787-4a3a-9b8c-dfefe1971bf5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ab5adbf0-76e0-4657-97b1-62f2954c4d66"
        },
        "item": {
          "id": "a129047b-d2f7-44ce-8b55-303eab242ae4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9fbc6c1c-6590-41ac-9676-866c4cbaa590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9518fac-39c2-4e06-81ba-b1f698216954",
        "cursor": {
          "ref": "29d292bd-3407-453f-94a3-6e290e38a46b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "64f196fc-28fe-4aad-9d29-523cd4404df0"
        },
        "item": {
          "id": "a9518fac-39c2-4e06-81ba-b1f698216954",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e379b75e-45dd-4dfa-8cb3-a3f48a56fc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348fc75a-6abd-431d-bc29-601c52e18ea3",
        "cursor": {
          "ref": "f51f59d8-96e8-4bb4-b6d9-622c53fee844",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "07cbeea0-00cd-43ad-9fa9-db46e469235b"
        },
        "item": {
          "id": "348fc75a-6abd-431d-bc29-601c52e18ea3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a3f114b2-9008-4bf9-a5df-9c51145cbb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bca000b-0b1d-4909-91cb-3a2733369eea",
        "cursor": {
          "ref": "1f109458-4f02-4df7-9efc-3c03bd77c38f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d576418e-f719-43da-849b-4b055cce8f7f"
        },
        "item": {
          "id": "5bca000b-0b1d-4909-91cb-3a2733369eea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "62d71858-7703-4bf5-844d-2f6a7533b291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4a03f9-866e-43c0-989d-ceecd6322dca",
        "cursor": {
          "ref": "98189c24-175e-40e8-b23c-d59bc2ac53f8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1db83cb0-a2e1-48e7-8fb8-6af0db69f255"
        },
        "item": {
          "id": "9c4a03f9-866e-43c0-989d-ceecd6322dca",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "51a8dcc4-2f15-4563-8fc1-96e12b896871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78ca934-f63d-4375-ab66-072409a65f48",
        "cursor": {
          "ref": "52c70f1d-fb07-4954-b290-012389f43a50",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1bb5eadc-08e0-481e-a9fa-c3ab608d4392"
        },
        "item": {
          "id": "d78ca934-f63d-4375-ab66-072409a65f48",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9b45bd0a-28c8-4ebf-82e7-d55ad3a4b996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791ea76e-4577-49f6-b429-37621ed3d447",
        "cursor": {
          "ref": "c4e6a380-3957-4b81-a793-7dfbc8a59810",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7f09c8d7-f1a6-4d21-b2c1-abe85be3a68b"
        },
        "item": {
          "id": "791ea76e-4577-49f6-b429-37621ed3d447",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c3f022b4-072d-44aa-ab19-f1edd076da31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37691111-ade7-4e2b-8fe7-1596a7cead0a",
        "cursor": {
          "ref": "c676b38c-c33c-48bf-83d7-3f20ced06752",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d4393b0e-d079-4c14-8592-c8ea6f5fcaff"
        },
        "item": {
          "id": "37691111-ade7-4e2b-8fe7-1596a7cead0a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63612454-3a6a-4342-a750-3dcf16f80157",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e067a7-8a31-460f-aa62-41a0fb75409c",
        "cursor": {
          "ref": "866edc96-fdf0-456a-a670-463fe11719bf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ebb23435-f012-45ff-be92-82d7f5f5b5fe"
        },
        "item": {
          "id": "d0e067a7-8a31-460f-aa62-41a0fb75409c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "998a497f-fb33-47ac-bfa6-ee704ba90105",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ea9bc8-dc4d-45f8-b277-9456ffc1901a",
        "cursor": {
          "ref": "7d32e4b0-4d09-4abf-af04-9a7e81508281",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "43656801-f5b5-458e-b43d-a1269dc15bae"
        },
        "item": {
          "id": "b7ea9bc8-dc4d-45f8-b277-9456ffc1901a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dfa04424-cde3-44cd-9809-9f28387cba71",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b29430-8029-4df2-bca1-f20fd4dc17be",
        "cursor": {
          "ref": "20297847-783b-43e5-ae12-050290fc6fb4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1047f0ef-0c3d-4470-a0c5-574db5801697"
        },
        "item": {
          "id": "f2b29430-8029-4df2-bca1-f20fd4dc17be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae3cf10a-f299-4d32-8aac-eac2160267a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b29430-8029-4df2-bca1-f20fd4dc17be",
        "cursor": {
          "ref": "20297847-783b-43e5-ae12-050290fc6fb4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1047f0ef-0c3d-4470-a0c5-574db5801697"
        },
        "item": {
          "id": "f2b29430-8029-4df2-bca1-f20fd4dc17be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae3cf10a-f299-4d32-8aac-eac2160267a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e464331-8539-4867-83b6-df0bad6f39d7",
        "cursor": {
          "ref": "5ae5ac45-c14a-44b3-af0b-44004d633184",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "25555390-a9c8-473e-826e-c28ceb92748e"
        },
        "item": {
          "id": "4e464331-8539-4867-83b6-df0bad6f39d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e6b11a82-34e4-48db-bbba-07436322799a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3422a7-1b4d-4d69-abef-20a22d7f6eeb",
        "cursor": {
          "ref": "c6aef6f6-4724-4881-b0ab-a0dfa81053af",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c47c2256-dd03-47fc-8a53-5173cd8139e7"
        },
        "item": {
          "id": "6e3422a7-1b4d-4d69-abef-20a22d7f6eeb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "59155f5e-262c-47f7-91b0-e81d2c23f5c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}